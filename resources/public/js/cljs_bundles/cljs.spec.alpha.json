{"cljs/tools/reader.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$parseInt\",[\"^ \"],\"~$isNaN\",[\"^ \"],\"~$Error\",[\"^ \"],\"~$String\",[\"^ \",\"~$fromCharCode\",[\"^ \"]],\"~$Object\",[\"^ \"],\"~$Number\",[\"^ \",\"~$NaN\",[\"^ \"],\"~$NEGATIVE_INFINITY\",[\"^ \"],\"~$POSITIVE_INFINITY\",[\"^ \"]],\"~$Boolean\",[\"^ \"],\"~$RegExp\",[\"^ \"]],\"~:use-macros\",[\"^ \",\"~$log-source\",\"~$cljs.tools.reader.reader-types\"],\"~:excludes\",[\"~#set\",[\"~$char\",\"~$*suppress-read*\",\"~$*default-data-reader-fn*\",\"~$read\",\"~$default-data-readers\",\"~$*data-readers*\",\"~$read-line\",\"~$read-string\"]],\"~:name\",\"~$cljs.tools.reader\",\"~:imports\",[\"^ \",\"~$StringBuffer\",\"~$goog.string.StringBuffer\"],\"~:requires\",[\"^ \",\"~$cljs.tools.reader.impl.commons\",\"^R\",\"~$gstring\",\"~$goog.string\",\"^T\",\"^T\",\"~$garray\",\"~$goog.array\",\"^A\",\"^A\",\"^O\",\"^P\",\"~$cljs.tools.reader.impl.utils\",\"^W\",\"~$string\",\"~$clojure.string\",\"^Y\",\"^Y\",\"^V\",\"^V\"],\"~:uses\",[\"^ \",\"~$match-number\",\"^R\",\"~$reader-conditional\",\"^W\",\"~$whitespace?\",\"^W\",\"~$read-comment\",\"^R\",\"^D\",\"^W\",\"~$numeric?\",\"^W\",\"~$reader-error\",\"^A\",\"~$ReaderConditional\",\"^W\",\"~$unread\",\"^A\",\"~$peek-char\",\"^A\",\"~$parse-symbol\",\"^R\",\"~$second'\",\"^W\",\"~$desugar-meta\",\"^W\",\"~$next-id\",\"^W\",\"~$number-literal?\",\"^R\",\"~$read-past\",\"^R\",\"~$indexing-reader?\",\"^A\",\"~$read-char\",\"^A\",\"~$get-column-number\",\"^A\",\"~$ex-info?\",\"^W\",\"~$get-file-name\",\"^A\",\"~$reader-conditional?\",\"^W\",\"~$throwing-reader\",\"^R\",\"~$string-push-back-reader\",\"^A\",\"~$namespace-keys\",\"^W\",\"~$get-line-number\",\"^A\"],\"~:defs\",[\"^ \",\"~$NO_MATCH\",[\"^ \",\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"~:line\",493,\"~:column\",20,\"~:end-line\",493,\"~:end-column\",28,\"~:private\",true],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/NO_MATCH\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",28,\"^1M\",1,\"^1L\",493,\"^1N\",493,\"~:tag\",\"~$object\"],\"~$READ_EOF\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",202,\"^1M\",20,\"^1N\",202,\"^1O\",28,\"^1P\",true],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/READ_EOF\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",28,\"^1M\",1,\"^1L\",202,\"^1N\",202,\"^1R\",\"^1S\"],\"~$unquote-splicing?\",[\"^ \",\"~:protocol-inline\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",642,\"^1M\",8,\"^1N\",642,\"^1O\",25,\"^1P\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^1Y\",[[\"~$form\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/unquote-splicing?\",\"~:variadic\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",25,\"~:method-params\",[\"^1Y\",[[\"^1[\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",642,\"^1N\",642,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\"]]]]]],\"~$duplicate-keys-error\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",260,\"^1M\",8,\"^1N\",260,\"^1O\",28,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$msg\",\"~$coll\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/duplicate-keys-error\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",28,\"^22\",[\"^1Y\",[[\"^28\",\"^29\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",260,\"^1N\",260,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^28\",\"^29\"]]]]]],\"~$read-tagged\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",826,\"^1M\",8,\"^1N\",826,\"^1O\",19,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$rdr\",\"~$initch\",\"~$opts\",\"~$pending-forms\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-tagged\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",19,\"^22\",[\"^1Y\",[[\"^2<\",\"^2=\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",826,\"^1N\",826,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^2=\",\"^2>\",\"^2?\"]]]]]],\"~$starting-line-col-info\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",194,\"^1M\",8,\"^1N\",194,\"^1O\",30,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/starting-line-col-info\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",30,\"^22\",[\"^1Y\",[[\"^2<\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",194,\"^1N\",194,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\"]]]]]],\"~$wrapping-reader\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",406,\"^1M\",8,\"^1N\",406,\"^1O\",23,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$sym\"]]]]],\"~:doc\",\"Returns a function which wraps a reader in a call to sym\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/wrapping-reader\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",23,\"^22\",[\"^1Y\",[[\"^2D\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",406,\"^1N\",406,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2D\"]]]]],\"^2E\",\"Returns a function which wraps a reader in a call to sym\"],\"~$read-meta\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",412,\"^1M\",8,\"^1N\",412,\"^1O\",17,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read metadata and return the following object with the metadata applied\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-meta\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",17,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",412,\"^1N\",412,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read metadata and return the following object with the metadata applied\"],\"~$read-unicode-char\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",108,\"^1M\",8,\"^1N\",108,\"^1O\",25,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$token\",\"~$offset\",\"~$length\",\"~$base\"],[\"^2<\",\"^2=\",\"^2M\",\"^2L\",\"~$exact?\"]]]]],\"~:top-fn\",[\"^ \",\"^21\",false,\"^25\",5,\"^22\",[\"^1Y\",[[\"^2J\",\"^2K\",\"^2L\",\"^2M\"],[\"^2<\",\"^2=\",\"^2M\",\"^2L\",\"^2N\"]]],\"^1X\",[\"^1Y\",[[\"^2J\",\"^2K\",\"^2L\",\"^2M\"],[\"^2<\",\"^2=\",\"^2M\",\"^2L\",\"^2N\"]]],\"^24\",[\"^1Y\",[null,null]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-unicode-char\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",25,\"^2O\",[\"^ \",\"^21\",false,\"^25\",5,\"^22\",[\"^1Y\",[[\"^2J\",\"^2K\",\"^2L\",\"^2M\"],[\"^2<\",\"^2=\",\"^2M\",\"^2L\",\"^2N\"]]],\"^1X\",[\"^1Y\",[[\"^2J\",\"^2K\",\"^2L\",\"^2M\"],[\"^2<\",\"^2=\",\"^2M\",\"^2L\",\"^2N\"]]],\"^24\",[\"^1Y\",[null,null]]],\"^22\",[\"^1Y\",[[\"^2J\",\"^2K\",\"^2L\",\"^2M\"],[\"^2<\",\"^2=\",\"^2M\",\"^2L\",\"^2N\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",108,\"^1N\",108,\"^25\",5,\"^26\",true,\"^1X\",[\"^1Y\",[[\"^2J\",\"^2K\",\"^2L\",\"^2M\"],[\"^2<\",\"^2=\",\"^2M\",\"^2L\",\"^2N\"]]]],\"~$char-code\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",102,\"^1M\",8,\"^1N\",102,\"^1O\",17,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$ch\",\"^2M\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/char-code\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",17,\"^22\",[\"^1Y\",[[\"^2R\",\"^2M\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",102,\"^1N\",102,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2R\",\"^2M\"]]]]]],\"~$read-unmatched-delimiter\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",77,\"^1M\",8,\"^1N\",77,\"^1O\",32,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^2R\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-unmatched-delimiter\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",32,\"^22\",[\"^1Y\",[[\"^2<\",\"^2R\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",77,\"^1N\",77,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^2R\",\"^2>\",\"^2?\"]]]]]],\"~$read-fn\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",574,\"^1M\",8,\"^1N\",574,\"^1O\",15,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-fn\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",15,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",574,\"^1N\",574,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"~$syntax-quote*\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",717,\"^1M\",8,\"^1N\",717,\"^1O\",21,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/syntax-quote*\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",21,\"^22\",[\"^1Y\",[[\"^1[\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",717,\"^1N\",717,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\"]]]]]],\"~$bool?\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",707,\"^1M\",7,\"^1N\",707,\"^1O\",12,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$x\"]]]]]],\"^L\",\"~$cljs.tools.reader/bool?\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",12,\"^22\",[\"^1Y\",[[\"~$x\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",707,\"^1N\",707,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$x\"]]]]]],\"~$arg-env\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",566,\"^1M\",26,\"^1N\",566,\"^1O\",33,\"~:dynamic\",true,\"^1P\",true],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/arg-env\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",33,\"^1M\",1,\"^31\",true,\"^1L\",566,\"^1N\",566,\"^1R\",\"~$clj-nil\"],\"~$read-suppress\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",484,\"^1M\",8,\"^1N\",484,\"^1O\",21,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$first-line\",\"^2<\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read next form and suppress. Return nil or READ_FINISHED.\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-suppress\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",21,\"^22\",[\"^1Y\",[[\"^35\",\"^2<\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",484,\"^1N\",484,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^35\",\"^2<\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read next form and suppress. Return nil or READ_FINISHED.\"],\"^E\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",857,\"^1M\",16,\"^1N\",857,\"^1O\",31,\"^31\",true],\"^L\",\"~$cljs.tools.reader/*suppress-read*\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",31,\"^1M\",1,\"^31\",true,\"^1L\",857,\"^1N\",857,\"^1R\",\"~$boolean\"],\"~$flatten-map\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",664,\"^1M\",8,\"^1N\",664,\"^1O\",19,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\"]]]]],\"^2E\",\"Flatten a map into a seq of alternate keys and values\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/flatten-map\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",19,\"^22\",[\"^1Y\",[[\"^1[\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",664,\"^1N\",664,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\"]]]]],\"^2E\",\"Flatten a map into a seq of alternate keys and values\"],\"^F\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",850,\"^1M\",16,\"^1N\",850,\"^1O\",40,\"^31\",true],\"^L\",\"~$cljs.tools.reader/*default-data-reader-fn*\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",40,\"^1M\",1,\"^31\",true,\"^1L\",850,\"^1N\",850,\"^1R\",\"^33\",\"^2E\",\"When no data reader is found for a tag and *default-data-reader-fn*\\n  is non-nil, it will be called with two arguments, the tag and the value.\\n  If *default-data-reader-fn* is nil (the default value), an exception\\n  will be thrown for the unknown tag.\"],\"^G\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",913,\"^1M\",7,\"^1N\",913,\"^1O\",11,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[],[\"~$reader\"],[\"^2>\",\"^3<\"],[\"^3<\",\"~$eof-error?\",\"~$eof-value\"]]]]],\"^2E\",\"Reads the first object from an IPushbackReader or a java.io.PushbackReader.\\n   Returns the object read. If EOF, throws if eof-error? is true.\\n   Otherwise returns sentinel. If no stream is providen, *in* will be used.\\n\\n   Opts is a persistent map with valid keys:\\n    :read-cond - :allow to process reader conditionals, or\\n                 :preserve to keep all branches\\n    :features - persistent set of feature keywords for reader conditionals\\n    :eof - on eof, return value unless :eofthrow, then throw.\\n           if not specified, will throw\\n\\n   To read data structures only, use clojure.tools.reader.edn/read\\n\\n   Note that the function signature of clojure.tools.reader/read and\\n   clojure.tools.reader.edn/read is not the same for eof-handling\",\"^2O\",[\"^ \",\"^21\",false,\"^25\",3,\"^22\",[\"^1Y\",[[\"^3<\"],[[\"^ \",\"~$eof\",\"~:eof\",\"~:as\",\"^2>\",\"~:or\",[\"^ \",\"^3?\",\"~:eofthrow\"]],\"^3<\"],[\"^3<\",\"^3=\",\"~$sentinel\"]]],\"^1X\",[\"^1Y\",[[\"^3<\"],[[\"^ \",\"^3?\",\"^3@\",\"^3A\",\"^2>\",\"^3B\",[\"^ \",\"^3?\",\"^3C\"]],\"^3<\"],[\"^3<\",\"^3=\",\"^3D\"]]],\"^24\",[\"^1Y\",[null,null,null]]]],\"^L\",\"~$cljs.tools.reader/read\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",11,\"^2O\",[\"^ \",\"^21\",false,\"^25\",3,\"^22\",[\"^1Y\",[[\"^3<\"],[[\"^ \",\"^3?\",\"^3@\",\"^3A\",\"^2>\",\"^3B\",[\"^ \",\"^3?\",\"^3C\"]],\"^3<\"],[\"^3<\",\"^3=\",\"^3D\"]]],\"^1X\",[\"^1Y\",[[\"^3<\"],[[\"^ \",\"^3?\",\"^3@\",\"^3A\",\"^2>\",\"^3B\",[\"^ \",\"^3?\",\"^3C\"]],\"^3<\"],[\"^3<\",\"^3=\",\"^3D\"]]],\"^24\",[\"^1Y\",[null,null,null]]],\"^22\",[\"^1Y\",[[\"^3<\"],[[\"^ \",\"^3?\",\"^3@\",\"^3A\",\"^2>\",\"^3B\",[\"^ \",\"^3?\",\"^3C\"]],\"^3<\"],[\"^3<\",\"^3=\",\"^3D\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null,null]],\"^1M\",1,\"^1L\",913,\"^1N\",913,\"^25\",3,\"^26\",true,\"^1X\",[\"^1Y\",[[\"^3<\"],[[\"^ \",\"^3?\",\"^3@\",\"^3A\",\"^2>\",\"^3B\",[\"^ \",\"^3?\",\"^3C\"]],\"^3<\"],[\"^3<\",\"^3=\",\"^3D\"]]],\"^2E\",\"Reads the first object from an IPushbackReader or a java.io.PushbackReader.\\n   Returns the object read. If EOF, throws if eof-error? is true.\\n   Otherwise returns sentinel. If no stream is providen, *in* will be used.\\n\\n   Opts is a persistent map with valid keys:\\n    :read-cond - :allow to process reader conditionals, or\\n                 :preserve to keep all branches\\n    :features - persistent set of feature keywords for reader conditionals\\n    :eof - on eof, return value unless :eofthrow, then throw.\\n           if not specified, will throw\\n\\n   To read data structures only, use clojure.tools.reader.edn/read\\n\\n   Note that the function signature of clojure.tools.reader/read and\\n   clojure.tools.reader.edn/read is not the same for eof-handling\"],\"~$read-set\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",430,\"^1M\",8,\"^1N\",430,\"^1O\",16,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-set\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",16,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",430,\"^1N\",430,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"~$read-symbol\",[\"^ \",\"^L\",\"~$cljs.tools.reader/read-symbol\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1L\",607,\"^1M\",1,\"^1N\",607,\"^1O\",21,\"~:declared\",true,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",607,\"^1M\",10,\"^1N\",607,\"^1O\",21,\"^3J\",true]],\"~$read-unquote\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",633,\"^1M\",8,\"^1N\",633,\"^1O\",20,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$comma\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-unquote\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",20,\"^22\",[\"^1Y\",[[\"^2<\",\"^3L\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",633,\"^1N\",633,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^3L\",\"^2>\",\"^2?\"]]]]]],\"~$read-map\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",270,\"^1M\",8,\"^1N\",270,\"^1O\",16,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read in a map, including its location if the reader is an indexing reader\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-map\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",16,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",270,\"^1N\",270,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read in a map, including its location if the reader is an indexing reader\"],\"~$read*-internal\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",864,\"^1M\",8,\"^1N\",864,\"^1O\",22,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"~$return-on\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read*-internal\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",22,\"^22\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"^3Q\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",864,\"^1N\",864,\"^25\",6,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"^3Q\",\"^2>\",\"^2?\"]]]]]],\"~$unquote?\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",646,\"^1M\",8,\"^1N\",646,\"^1O\",16,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/unquote?\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",16,\"^22\",[\"^1Y\",[[\"^1[\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",646,\"^1N\",646,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\"]]]]]],\"^H\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",859,\"^1M\",6,\"^1N\",859,\"^1O\",26],\"^L\",\"~$cljs.tools.reader/default-data-readers\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",26,\"^1M\",1,\"^1L\",859,\"^1N\",859,\"^1R\",\"~$cljs.core/IMap\",\"^2E\",\"Default map of data reader functions provided by Clojure.\\n  May be overridden by binding *data-readers*\"],\"~$macros\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",790,\"^1M\",8,\"^1N\",790,\"^1O\",14,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2R\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/macros\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",14,\"^22\",[\"^1Y\",[[\"^2R\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",790,\"^1N\",790,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2R\"]]]]]],\"~$read-arg\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",609,\"^1M\",8,\"^1N\",609,\"^1O\",16,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$pct\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-arg\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",16,\"^22\",[\"^1Y\",[[\"^2<\",\"^3Z\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",609,\"^1N\",609,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^3Z\",\"^2>\",\"^2?\"]]]]]],\"~$match-feature\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",495,\"^1M\",8,\"^1N\",495,\"^1O\",21,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^35\",\"^2<\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read next feature. If matched, read next form and return.\\n   Otherwise, read and skip next form, returning READ_FINISHED or nil.\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/match-feature\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",21,\"^22\",[\"^1Y\",[[\"^35\",\"^2<\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",495,\"^1N\",495,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^35\",\"^2<\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read next feature. If matched, read next form and return.\\n   Otherwise, read and skip next form, returning READ_FINISHED or nil.\"],\"~$read-namespaced-map\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",766,\"^1M\",8,\"^1N\",766,\"^1O\",27,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-namespaced-map\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",27,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",766,\"^1N\",766,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"~$read-syntax-quote\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",760,\"^1M\",8,\"^1N\",760,\"^1O\",25,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$backquote\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-syntax-quote\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",25,\"^22\",[\"^1Y\",[[\"^2<\",\"^45\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",760,\"^1N\",760,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^45\",\"^2>\",\"^2?\"]]]]]],\"~$READ_FINISHED\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",203,\"^1M\",20,\"^1N\",203,\"^1O\",33,\"^1P\",true],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/READ_FINISHED\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",33,\"^1M\",1,\"^1L\",203,\"^1N\",203,\"^1R\",\"^1S\"],\"~$read-list\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",226,\"^1M\",8,\"^1N\",226,\"^1O\",17,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read in a list, including its location if the reader is an indexing reader\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-list\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",17,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",226,\"^1N\",226,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read in a list, including its location if the reader is an indexing reader\"],\"~$read-cond-delimited\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",514,\"^1M\",8,\"^1N\",514,\"^1O\",27,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$splicing\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-cond-delimited\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",27,\"^22\",[\"^1Y\",[[\"^2<\",\"^4<\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",514,\"^1N\",514,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^4<\",\"^2>\",\"^2?\"]]]]]],\"~$RESERVED_FEATURES\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",457,\"^1M\",16,\"^1N\",457,\"^1O\",33,\"^1P\",true],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/RESERVED_FEATURES\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",33,\"^1M\",1,\"^1L\",457,\"^1N\",457,\"^1R\",\"~$cljs.core/ISet\"],\"~$dispatch-macros\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",811,\"^1M\",8,\"^1N\",811,\"^1O\",23,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2R\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/dispatch-macros\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",23,\"^22\",[\"^1Y\",[[\"^2R\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",811,\"^1N\",811,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2R\"]]]]]],\"~$read*\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",886,\"^1M\",8,\"^1N\",886,\"^1O\",13,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"^2>\",\"^2?\"],[\"^3<\",\"^3=\",\"^3D\",\"^3Q\",\"^2>\",\"^2?\"]]]]],\"^2O\",[\"^ \",\"^21\",false,\"^25\",6,\"^22\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"^2>\",\"^2?\"],[\"^3<\",\"^3=\",\"^3D\",\"^3Q\",\"^2>\",\"^2?\"]]],\"^1X\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"^2>\",\"^2?\"],[\"^3<\",\"^3=\",\"^3D\",\"^3Q\",\"^2>\",\"^2?\"]]],\"^24\",[\"^1Y\",[null,null]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read*\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",13,\"^2O\",[\"^ \",\"^21\",false,\"^25\",6,\"^22\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"^2>\",\"^2?\"],[\"^3<\",\"^3=\",\"^3D\",\"^3Q\",\"^2>\",\"^2?\"]]],\"^1X\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"^2>\",\"^2?\"],[\"^3<\",\"^3=\",\"^3D\",\"^3Q\",\"^2>\",\"^2?\"]]],\"^24\",[\"^1Y\",[null,null]]],\"^22\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"^2>\",\"^2?\"],[\"^3<\",\"^3=\",\"^3D\",\"^3Q\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",886,\"^1N\",886,\"^25\",6,\"^26\",true,\"^1X\",[\"^1Y\",[[\"^3<\",\"^3=\",\"^3D\",\"^2>\",\"^2?\"],[\"^3<\",\"^3=\",\"^3D\",\"^3Q\",\"^2>\",\"^2?\"]]]],\"^I\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",843,\"^1M\",16,\"^1N\",843,\"^1O\",30,\"^31\",true],\"^L\",\"~$cljs.tools.reader/*data-readers*\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",30,\"^1M\",1,\"^31\",true,\"^1L\",843,\"^1N\",843,\"^1R\",\"^3V\",\"^2E\",\"Map from reader tag symbols to data reader Vars.\\n  Reader tags without namespace qualifiers are reserved for Clojure.\\n  This light version of tools.reader has no implementation for default\\n  reader tags such as #inst and #uuid.\"],\"~$syntax-quote-coll\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",692,\"^1M\",8,\"^1N\",692,\"^1O\",25,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$type\",\"^29\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/syntax-quote-coll\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",25,\"^22\",[\"^1Y\",[[\"^4G\",\"^29\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",692,\"^1N\",692,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^4G\",\"^29\"]]]]]],\"~$*read-delim*\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",205,\"^1M\",16,\"^1N\",205,\"^1O\",28,\"^31\",true],\"^L\",\"~$cljs.tools.reader/*read-delim*\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",28,\"^1M\",1,\"^31\",true,\"^1L\",205,\"^1N\",205,\"^1R\",\"^38\"],\"~$resolve-symbol\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",712,\"^1M\",17,\"^1N\",712,\"^1O\",31,\"^31\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$s\"]]]]],\"^2E\",\"Resolve a symbol s into its fully qualified namespace version\"],\"^L\",\"~$cljs.tools.reader/resolve-symbol\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",31,\"^22\",[\"^1Y\",[[\"~$s\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^31\",true,\"^1L\",712,\"^1N\",712,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$s\"]]]]],\"^2E\",\"Resolve a symbol s into its fully qualified namespace version\"],\"~$read-delimited\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",220,\"^1M\",8,\"^1N\",220,\"^1O\",22,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$delim\",\"^2<\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Reads and returns a collection ended with delim\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-delimited\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",22,\"^22\",[\"^1Y\",[[\"^4N\",\"^2<\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",220,\"^1N\",220,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^4N\",\"^2<\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Reads and returns a collection ended with delim\"],\"~$read-token\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",48,\"^1M\",8,\"^1N\",48,\"^1O\",18,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^2=\"]]]]],\"^2E\",\"Read in a single logical token from the reader\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-token\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",18,\"^22\",[\"^1Y\",[[\"^2<\",\"^2=\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",48,\"^1N\",48,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^2=\"]]]]],\"^2E\",\"Read in a single logical token from the reader\"],\"~$read-cond\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",544,\"^1M\",8,\"^1N\",544,\"^1O\",17,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-cond\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",17,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",544,\"^1N\",544,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"~$upper-limit\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",145,\"^1M\",24,\"^1N\",145,\"^1O\",35,\"~:const\",true,\"^1P\",true],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/upper-limit\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",35,\"^1M\",1,\"^4U\",true,\"^1L\",145,\"^1N\",145,\"^1R\",\"~$any\"],\"~$loc-info\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",341,\"^1M\",8,\"^1N\",341,\"^1O\",16,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$line\",\"~$column\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/loc-info\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",16,\"^22\",[\"^1Y\",[[\"^2<\",\"^4Y\",\"^4Z\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",341,\"^1N\",341,\"^25\",3,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^4Y\",\"^4Z\"]]]]]],\"~$gensym-env\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",631,\"^1M\",26,\"^1N\",631,\"^1O\",36,\"^31\",true,\"^1P\",true],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/gensym-env\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",36,\"^1M\",1,\"^31\",true,\"^1L\",631,\"^1N\",631,\"^1R\",\"^33\"],\"~$*alias-map*\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",374,\"^1M\",16,\"^1N\",374,\"^1O\",27,\"^31\",true],\"^L\",\"~$cljs.tools.reader/*alias-map*\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",27,\"^1M\",1,\"^31\",true,\"^1L\",374,\"^1N\",374,\"^1R\",\"^33\",\"^2E\",\"Map from ns alias to ns, if non-nil, it will be used to resolve read-time\\n   ns aliases.\\n\\n   Defaults to nil\"],\"~$read-regex\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",85,\"^1M\",7,\"^1N\",85,\"^1O\",17,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^2R\",\"^2>\",\"^2?\"]]]]]],\"^L\",\"~$cljs.tools.reader/read-regex\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",17,\"^22\",[\"^1Y\",[[\"^2<\",\"^2R\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",85,\"^1N\",85,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^2R\",\"^2>\",\"^2?\"]]]]]],\"~$sb\",[\"^ \",\"^L\",\"~$cljs.tools.reader/sb\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1L\",46,\"^1M\",1,\"^1N\",46,\"^1O\",8,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",46,\"^1M\",6,\"^1N\",46,\"^1O\",8],\"^1R\",\"~$goog/string.StringBuffer\"],\"~$read-dispatch\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",69,\"^1M\",8,\"^1N\",69,\"^1O\",21,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-dispatch\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",21,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",69,\"^1N\",69,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"~$check-eof-error\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",465,\"^1M\",8,\"^1N\",465,\"^1O\",23,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\",\"^2<\",\"^35\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/check-eof-error\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",23,\"^22\",[\"^1Y\",[[\"^1[\",\"^2<\",\"^35\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",465,\"^1N\",465,\"^25\",3,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\",\"^2<\",\"^35\"]]]]]],\"~$check-invalid-read-cond\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",477,\"^1M\",8,\"^1N\",477,\"^1O\",31,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\",\"^2<\",\"^35\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/check-invalid-read-cond\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",31,\"^22\",[\"^1Y\",[[\"^1[\",\"^2<\",\"^35\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",477,\"^1N\",477,\"^25\",3,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\",\"^2<\",\"^35\"]]]]]],\"^K\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",934,\"^1M\",7,\"^1N\",934,\"^1O\",18,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$s\"],[\"^2>\",\"~$s\"]]]]],\"^2E\",\"Reads one object from the string s.\\n   Returns nil when s is nil or empty.\\n\\n   To read data structures only, use clojure.tools.reader.edn/read-string\\n\\n   Note that the function signature of clojure.tools.reader/read-string and\\n   clojure.tools.reader.edn/read-string is not the same for eof-handling\",\"^2O\",[\"^ \",\"^21\",false,\"^25\",2,\"^22\",[\"^1Y\",[[\"~$s\"],[\"^2>\",\"~$s\"]]],\"^1X\",[\"^1Y\",[[\"~$s\"],[\"^2>\",\"~$s\"]]],\"^24\",[\"^1Y\",[null,null]]]],\"^L\",\"~$cljs.tools.reader/read-string\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",18,\"^2O\",[\"^ \",\"^21\",false,\"^25\",2,\"^22\",[\"^1Y\",[[\"~$s\"],[\"^2>\",\"~$s\"]]],\"^1X\",[\"^1Y\",[[\"~$s\"],[\"^2>\",\"~$s\"]]],\"^24\",[\"^1Y\",[null,null]]],\"^22\",[\"^1Y\",[[\"~$s\"],[\"^2>\",\"~$s\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",934,\"^1N\",934,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[[\"~$s\"],[\"^2>\",\"~$s\"]]],\"^2E\",\"Reads one object from the string s.\\n   Returns nil when s is nil or empty.\\n\\n   To read data structures only, use clojure.tools.reader.edn/read-string\\n\\n   Note that the function signature of clojure.tools.reader/read-string and\\n   clojure.tools.reader.edn/read-string is not the same for eof-handling\"],\"~$check-reserved-features\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",472,\"^1M\",8,\"^1N\",472,\"^1O\",31,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^1[\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/check-reserved-features\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",31,\"^22\",[\"^1Y\",[[\"^2<\",\"^1[\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",472,\"^1N\",472,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^1[\"]]]]]],\"~$has-feature?\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",459,\"^1M\",8,\"^1N\",459,\"^1O\",20,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$feature\",\"^2>\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/has-feature?\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",20,\"^22\",[\"^1Y\",[[\"^2<\",\"^5C\",\"^2>\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",459,\"^1N\",459,\"^25\",3,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^5C\",\"^2>\"]]]]]],\"~$valid-octal?\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",148,\"^1M\",8,\"^1N\",148,\"^1O\",20,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2J\",\"^2M\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/valid-octal?\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",20,\"^22\",[\"^1Y\",[[\"^2J\",\"^2M\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",148,\"^1N\",148,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2J\",\"^2M\"]]]]]],\"~$escape-char\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",308,\"^1M\",8,\"^1N\",308,\"^1O\",19,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^56\",\"^2<\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/escape-char\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",19,\"^22\",[\"^1Y\",[[\"^56\",\"^2<\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",308,\"^1N\",308,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^56\",\"^2<\"]]]]]],\"~$read-char*\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",151,\"^1M\",8,\"^1N\",151,\"^1O\",18,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$backslash\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read in a character literal\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-char*\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",18,\"^22\",[\"^1Y\",[[\"^2<\",\"^5J\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",151,\"^1N\",151,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^5J\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read in a character literal\"],\"~$resolve-ns\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",381,\"^1M\",8,\"^1N\",381,\"^1O\",18,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2D\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/resolve-ns\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",18,\"^22\",[\"^1Y\",[[\"^2D\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",381,\"^1N\",381,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2D\"]]]]]],\"~$read-delimited-internal\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",207,\"^1M\",8,\"^1N\",207,\"^1O\",31,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^4N\",\"^2<\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-delimited-internal\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",31,\"^22\",[\"^1Y\",[[\"^4N\",\"^2<\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",207,\"^1N\",207,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^4N\",\"^2<\",\"^2>\",\"^2?\"]]]]]],\"~$read-string*\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",329,\"^1M\",8,\"^1N\",329,\"^1O\",20,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^3<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-string*\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",20,\"^22\",[\"^1Y\",[[\"^3<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",329,\"^1N\",329,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^3<\",\"~$_\",\"^2>\",\"^2?\"]]]]]],\"~$macro-terminating?\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",41,\"^1M\",17,\"^1N\",41,\"^1O\",35,\"^1R\",\"^38\",\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2R\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/macro-terminating?\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",35,\"^22\",[\"^1Y\",[[\"^2R\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",41,\"~:ret-tag\",\"^38\",\"^1N\",41,\"^25\",1,\"^1R\",\"^38\",\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2R\"]]]]]],\"~$map-func\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",700,\"^1M\",7,\"^1N\",700,\"^1O\",15,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^29\"]]]]],\"^2E\",\"Decide which map type to use, array-map if less than 16 elements\"],\"^L\",\"~$cljs.tools.reader/map-func\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",15,\"^22\",[\"^1Y\",[[\"^29\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",700,\"^1N\",700,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^29\"]]]]],\"^2E\",\"Decide which map type to use, array-map if less than 16 elements\"],\"~$lower-limit\",[\"^ \",\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",146,\"^1M\",24,\"^1N\",146,\"^1O\",35,\"^4U\",true,\"^1P\",true],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/lower-limit\",\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",35,\"^1M\",1,\"^4U\",true,\"^1L\",146,\"^1N\",146,\"^1R\",\"^4W\"],\"~$ending-line-col-info\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",198,\"^1M\",8,\"^1N\",198,\"^1O\",28,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/ending-line-col-info\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",28,\"^22\",[\"^1Y\",[[\"^2<\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",198,\"^1N\",198,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\"]]]]]],\"~$register-arg\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",595,\"^1M\",8,\"^1N\",595,\"^1O\",20,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$n\"]]]]],\"^2E\",\"Registers an argument to the arg-env\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/register-arg\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",20,\"^22\",[\"^1Y\",[[\"~$n\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",595,\"^1N\",595,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$n\"]]]]],\"^2E\",\"Registers an argument to the arg-env\"],\"~$read-keyword\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",386,\"^1M\",8,\"^1N\",386,\"^1O\",20,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^3<\",\"^2=\",\"^2>\",\"^2?\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-keyword\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",20,\"^22\",[\"^1Y\",[[\"^3<\",\"^2=\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",386,\"^1N\",386,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^3<\",\"^2=\",\"^2>\",\"^2?\"]]]]]],\"~$read-discard\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",451,\"^1M\",8,\"^1N\",451,\"^1O\",20,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read and discard the first object from rdr\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-discard\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",20,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",451,\"^1N\",451,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read and discard the first object from rdr\"],\"~$garg\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",568,\"^1M\",8,\"^1N\",568,\"^1O\",12,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$n\"]]]]],\"^2E\",\"Get a symbol for an anonymous ?argument?\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/garg\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",12,\"^22\",[\"^1Y\",[[\"~$n\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",568,\"^1N\",568,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$n\"]]]]],\"^2E\",\"Get a symbol for an anonymous ?argument?\"],\"~$read-vector\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",244,\"^1M\",8,\"^1N\",244,\"^1O\",19,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read in a vector, including its location if the reader is an indexing reader\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-vector\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",19,\"^22\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",244,\"^1N\",244,\"^25\",4,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"~$_\",\"^2>\",\"^2?\"]]]]],\"^2E\",\"Read in a vector, including its location if the reader is an indexing reader\"],\"~$read-number\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",297,\"^1M\",8,\"^1N\",297,\"^1O\",19,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^2=\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/read-number\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",19,\"^22\",[\"^1Y\",[[\"^2<\",\"^2=\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",297,\"^1N\",297,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2<\",\"^2=\"]]]]]],\"~$add-meta\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",686,\"^1M\",8,\"^1N\",686,\"^1O\",16,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\",\"~$ret\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/add-meta\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",16,\"^22\",[\"^1Y\",[[\"^1[\",\"^6<\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",686,\"^1N\",686,\"^25\",2,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^1[\",\"^6<\"]]]]]],\"~$register-gensym\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",675,\"^1M\",8,\"^1N\",675,\"^1O\",23,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2D\"]]]]]],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/register-gensym\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",23,\"^22\",[\"^1Y\",[[\"^2D\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",675,\"^1N\",675,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"^2D\"]]]]]],\"~$expand-list\",[\"^ \",\"^1W\",null,\"^1J\",[\"^ \",\"^1K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader.cljs\",\"^1L\",650,\"^1M\",8,\"^1N\",650,\"^1O\",19,\"^1P\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$s\"]]]]],\"^2E\",\"Expand a list by resolving its syntax quotes and unquotes\"],\"^1P\",true,\"^L\",\"~$cljs.tools.reader/expand-list\",\"^21\",false,\"^1K\",\"out/cljs/tools/reader.cljs\",\"^1O\",19,\"^22\",[\"^1Y\",[[\"~$s\"]]],\"^23\",null,\"^24\",[\"^1Y\",[null,null]],\"^1M\",1,\"^1L\",650,\"^1N\",650,\"^25\",1,\"^26\",true,\"^1X\",[\"^1Y\",[\"^1Z\",[\"^1Y\",[[\"~$s\"]]]]],\"^2E\",\"Expand a list by resolving its syntax quotes and unquotes\"]],\"~:require-macros\",[\"^ \",\"^A\",\"^A\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^C\",[\"~$&\",\"~:features\",\"~$clojure.core/list\",\"~$cljs.core/array-map\",\"~:reader-exception\",\"~:else\",\"~$cljs.core/hash-map\",\"~$cljs.core/apply\",\"~:default\",\"^1K\",\"~$cljs.core/concat\",\"^1O\",\"~:read-cond\",\"~:type\",\"~:preserve\",\"~:source\",\"~:illegal-argument\",\"~$cljs.core/with-meta\",\"~:allow\",\"~:sym\",\"^1M\",\"~:illegal-state\",\"~$clojure.core/unquote-splicing\",\"^1L\",\"~$fn*\",\"~$clojure.core/deref\",\"~$/\",\"~$clojure.core/unquote\",\"^1N\",\"~$cljs.core/vec\",\"~$cljs.core/sequence\",\"~:unsupported-operation\",\"~$var\",\"^1Z\",\"^3@\",\"~$cljs.core/hash-set\",\"~$cljs.core/list\",\"^3C\",\"~:runtime-exception\",\"~:none\"]],\"~:order\",[\"^6O\",\"^6R\",\"^6I\",\"^1K\",\"^1L\",\"^1M\",\"^1N\",\"^1O\",\"~$/\",\"^76\",\"^6L\",\"^6E\",\"^6P\",\"^6T\",\"^6N\",\"^75\",\"^6V\",\"~$&\",\"^6X\",\"^6W\",\"^6Z\",\"^6F\",\"^6Q\",\"^6S\",\"^70\",\"^6M\",\"^6K\",\"^6J\",\"^6G\",\"^6U\",\"^1Z\",\"^6[\",\"^73\",\"^74\",\"^71\",\"^6Y\",\"^72\",\"^6H\",\"^3@\",\"^3C\"]],\"^2E\",\"A clojure reader in clojure\"]","cljs/reader.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"],\"~$parseInt\",[\"^ \"],\"~$parseFloat\",[\"^ \"],\"~$String\",[\"^ \",\"~$fromCharCode\",[\"^ \"]],\"~$isNaN\",[\"^ \"],\"~$Date\",[\"^ \",\"~$UTC\",[\"^ \"]]],\"~:use-macros\",[\"^ \",\"~$add-data-readers\",\"~$cljs.reader\"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"^=\",\"~:imports\",[\"^ \",\"~$StringBuffer\",\"~$goog.string.StringBuffer\"],\"~:requires\",[\"^ \",\"~$gstring\",\"~$goog.string\",\"^F\",\"^F\",\"^B\",\"^C\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$read-uuid\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"~:line\",591,\"~:column\",17,\"~:end-line\",591,\"~:end-column\",26,\"~:private\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^S\",[[\"~$uuid\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/read-uuid\",\"~:variadic\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",26,\"~:method-params\",[\"^S\",[[\"^U\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^S\",[null,null]],\"^N\",1,\"^M\",591,\"^O\",591,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^U\"]]]]]],\"~$->StringPushbackReader\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"~:protocols\",[\"^?\",[\"~$cljs.reader/PushbackReader\"]],\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^P\",30,\"^N\",10,\"~:factory\",\"~:positional\",\"^M\",19,\"^O\",19,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\",\"~$buffer\",\"~$idx\"]]]]],\"~:skip-protocol-flag\",null],\"^12\",[\"^?\",[\"^13\"]],\"^@\",\"~$cljs.reader/->StringPushbackReader\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",30,\"^X\",[\"^S\",[[\"~$s\",\"^16\",\"^17\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^14\",\"^15\",\"^M\",19,\"^O\",19,\"^[\",3,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\",\"^16\",\"^17\"]]]]],\"^18\",null],\"~$match-number\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",146,\"^N\",8,\"^O\",146,\"^P\",20,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/match-number\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",20,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",146,\"^O\",146,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"~$validate-unicode-escape\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",185,\"^N\",7,\"^O\",185,\"^P\",30,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$unicode-pattern\",\"~$reader\",\"~$escape-char\",\"~$unicode-str\"]]]]]],\"^@\",\"~$cljs.reader/validate-unicode-escape\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",30,\"^X\",[\"^S\",[[\"^1=\",\"^1>\",\"^1?\",\"^1@\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",185,\"^O\",185,\"^[\",4,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1=\",\"^1>\",\"^1?\",\"^1@\"]]]]]],\"~$not-implemented\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",249,\"^N\",7,\"^O\",249,\"^P\",22,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$rdr\",\"~$ch\"]]]]]],\"^@\",\"~$cljs.reader/not-implemented\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",22,\"^X\",[\"^S\",[[\"^1C\",\"^1D\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",249,\"^O\",249,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^1D\"]]]]]],\"~$whitespace?\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^Q\",true,\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^P\",28,\"^N\",17,\"^M\",38,\"^O\",38,\"~:tag\",\"~$boolean\",\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1D\"]]]]],\"~:doc\",\"Checks whether a given character is whitespace\"],\"^Q\",true,\"^@\",\"~$cljs.reader/whitespace?\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",28,\"^X\",[\"^S\",[[\"^1D\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",38,\"~:ret-tag\",\"^1H\",\"^O\",38,\"^[\",1,\"^1G\",\"^1H\",\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1D\"]]]]],\"^1I\",\"Checks whether a given character is whitespace\"],\"~$skip-line\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",90,\"^N\",7,\"^O\",90,\"^P\",16,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"~$_\"]]]]],\"^1I\",\"Advances the reader to the end of a line. Returns the reader\"],\"^@\",\"~$cljs.reader/skip-line\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",16,\"^X\",[\"^S\",[[\"^1>\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",90,\"^O\",90,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"~$_\"]]]]],\"^1I\",\"Advances the reader to the end of a line. Returns the reader\"],\"~$int-pattern\",[\"^ \",\"^@\",\"~$cljs.reader/int-pattern\",\"^L\",\"out/cljs/reader.cljs\",\"^M\",99,\"^N\",1,\"^O\",99,\"^P\",17,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",99,\"^N\",6,\"^O\",99,\"^P\",17],\"^1G\",\"~$any\"],\"~$read-comment\",[\"^ \",\"^@\",\"~$cljs.reader/read-comment\",\"^L\",\"out/cljs/reader.cljs\",\"^M\",277,\"^N\",1,\"^O\",277,\"^P\",18,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",277,\"^N\",6,\"^O\",277,\"^P\",18]],\"~$match-ratio\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",135,\"^N\",8,\"^O\",135,\"^P\",19,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/match-ratio\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",135,\"^O\",135,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"~$PushbackReader\",[\"^ \",\"^K\",[\"^ \",\"~:protocol-symbol\",true,\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^P\",28,\"^N\",14,\"^M\",14,\"~:protocol-info\",[\"^ \",\"~:methods\",[\"^ \",\"~$read-char\",[[\"^1>\"]],\"~$unread\",[[\"^1>\",\"^1D\"]]]],\"^O\",14,\"^1I\",null,\"~:jsdoc\",[\"^S\",[\"@interface\"]]],\"^1V\",true,\"^@\",\"^13\",\"^L\",\"out/cljs/reader.cljs\",\"^P\",28,\"^N\",1,\"^M\",14,\"^1W\",[\"^ \",\"^1X\",[\"^ \",\"^1Y\",[[\"^1>\"]],\"^1Z\",[[\"^1>\",\"^1D\"]]]],\"~:info\",null,\"^O\",14,\"^1G\",\"^1P\",\"~:impls\",[\"^?\",[\"~$cljs.reader/StringPushbackReader\"]],\"^1I\",null,\"^1[\",[\"^S\",[\"@interface\"]]],\"~$wrapping-reader\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",388,\"^N\",7,\"^O\",388,\"^P\",22,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$sym\"]]]]]],\"^@\",\"~$cljs.reader/wrapping-reader\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",22,\"^X\",[\"^S\",[[\"^24\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",388,\"^O\",388,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^24\"]]]]]],\"~$match-int\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",113,\"^N\",8,\"^O\",113,\"^P\",17,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/match-int\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",17,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",113,\"^O\",113,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"~$read-meta\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",398,\"^N\",7,\"^O\",398,\"^P\",16,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"^@\",\"~$cljs.reader/read-meta\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",16,\"^X\",[\"^S\",[[\"^1C\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",398,\"^O\",398,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"~$numeric?\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^Q\",true,\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^P\",25,\"^N\",17,\"^M\",43,\"^O\",43,\"^1G\",\"^1H\",\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1D\"]]]]],\"^1I\",\"Checks whether a given character is numeric\"],\"^Q\",true,\"^@\",\"~$cljs.reader/numeric?\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",25,\"^X\",[\"^S\",[[\"^1D\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",43,\"^1K\",\"^1H\",\"^O\",43,\"^[\",1,\"^1G\",\"^1H\",\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1D\"]]]]],\"^1I\",\"Checks whether a given character is numeric\"],\"~$read-unmatched-delimiter\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",265,\"^N\",7,\"^O\",265,\"^P\",31,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^1D\"]]]]]],\"^@\",\"~$cljs.reader/read-unmatched-delimiter\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",31,\"^X\",[\"^S\",[[\"^1C\",\"^1D\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",265,\"^O\",265,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^1D\"]]]]]],\"~$StringPushbackReader\",[\"^ \",\"~:num-fields\",3,\"^12\",[\"^?\",[\"^13\"]],\"^@\",\"^22\",\"^L\",\"out/cljs/reader.cljs\",\"^P\",30,\"~:type\",true,\"^N\",10,\"^M\",19,\"~:record\",false,\"^O\",19,\"^18\",null],\"~$leap-year?\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",498,\"^N\",17,\"^O\",498,\"^P\",27,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$year\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/leap-year?\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",27,\"^X\",[\"^S\",[[\"^2C\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",498,\"^O\",498,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^2C\"]]]]]],\"~$reader-error\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",70,\"^N\",7,\"^O\",70,\"^P\",19,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$&\",\"~$msg\"]]]]],\"~:top-fn\",[\"^ \",\"^W\",true,\"^[\",1,\"^X\",[[\"^S\",[\"^1C\",\"^2F\"]]],\"^R\",[\"^S\",[[\"^1C\",\"~$&\",\"^2F\"]]],\"^Z\",[\"^S\",[null]]]],\"^@\",\"~$cljs.reader/reader-error\",\"^W\",true,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^2G\",[\"^ \",\"^W\",true,\"^[\",1,\"^X\",[[\"^S\",[\"^1C\",\"^2F\"]]],\"^R\",[\"^S\",[[\"^1C\",\"~$&\",\"^2F\"]]],\"^Z\",[\"^S\",[null]]],\"^X\",[[\"^S\",[\"^1C\",\"^2F\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null]],\"^N\",1,\"^M\",70,\"^O\",70,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[[\"^1C\",\"~$&\",\"^2F\"]]]],\"~$unicode-4-pattern\",[\"^ \",\"^@\",\"~$cljs.reader/unicode-4-pattern\",\"^L\",\"out/cljs/reader.cljs\",\"^M\",183,\"^N\",1,\"^O\",183,\"^P\",23,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",183,\"^N\",6,\"^O\",183,\"^P\",23],\"^1G\",\"^1P\"],\"~$read-raw-string*\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",316,\"^N\",7,\"^O\",316,\"^P\",23,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"~$_\"]]]]]],\"^@\",\"~$cljs.reader/read-raw-string*\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",23,\"^X\",[\"^S\",[[\"^1>\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",316,\"^O\",316,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"~$_\"]]]]]],\"^1Z\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",17,\"^N\",4,\"^O\",17,\"^P\",10,\"~:protocol\",\"^13\",\"^1I\",\"Push back a single character on to the stream\",\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^1D\"]]]]]],\"^2M\",\"^13\",\"^@\",\"~$cljs.reader/unread\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",10,\"^X\",[\"^S\",[[\"^1>\",\"^1D\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",14,\"^O\",17,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^1D\"]]]]],\"^1I\",\"Push back a single character on to the stream\"],\"~$*default-data-reader-fn*\",[\"^ \",\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",604,\"^N\",16,\"^O\",604,\"^P\",40,\"~:dynamic\",true],\"^@\",\"~$cljs.reader/*default-data-reader-fn*\",\"^L\",\"out/cljs/reader.cljs\",\"^P\",40,\"^N\",1,\"^2P\",true,\"^M\",604,\"^O\",604,\"^1G\",\"^1P\"],\"~$read\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",451,\"^N\",7,\"^O\",451,\"^P\",11,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"~$eof-is-error\",\"~$sentinel\",\"~$is-recursive\"]]]]],\"^1I\",\"Reads the first object from a PushbackReader. Returns the object read.\\n   If EOF, throws if eof-is-error is true. Otherwise returns sentinel.\\n\\n   Only supports edn (similar to clojure.edn/read)\"],\"^@\",\"~$cljs.reader/read\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",11,\"^X\",[\"^S\",[[\"^1>\",\"^2S\",\"^2T\",\"^2U\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",451,\"^O\",451,\"^[\",4,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^2S\",\"^2T\",\"^2U\"]]]]],\"^1I\",\"Reads the first object from a PushbackReader. Returns the object read.\\n   If EOF, throws if eof-is-error is true. Otherwise returns sentinel.\\n\\n   Only supports edn (similar to clojure.edn/read)\"],\"~$read-set\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",408,\"^N\",7,\"^O\",408,\"^P\",15,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"^@\",\"~$cljs.reader/read-set\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",15,\"^X\",[\"^S\",[[\"^1C\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",408,\"^O\",408,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"~$read-symbol\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",339,\"^N\",7,\"^O\",339,\"^P\",18,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"~$initch\"]]]]]],\"^@\",\"~$cljs.reader/read-symbol\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",18,\"^X\",[\"^S\",[[\"^1>\",\"^2Z\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",339,\"^O\",339,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^2Z\"]]]]]],\"~$*tag-table*\",[\"^ \",\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",597,\"^N\",16,\"^O\",597,\"^P\",27,\"^2P\",true],\"^@\",\"~$cljs.reader/*tag-table*\",\"^L\",\"out/cljs/reader.cljs\",\"^P\",27,\"^N\",1,\"^2P\",true,\"^M\",597,\"^O\",597,\"^1G\",\"^1P\"],\"~$desugar-meta\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",380,\"^N\",7,\"^O\",380,\"^P\",19,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$f\"]]]]]],\"^@\",\"~$cljs.reader/desugar-meta\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"~$f\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",380,\"^O\",380,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$f\"]]]]]],\"~$unicode-2-pattern\",[\"^ \",\"^@\",\"~$cljs.reader/unicode-2-pattern\",\"^L\",\"out/cljs/reader.cljs\",\"^M\",182,\"^N\",1,\"^O\",182,\"^P\",23,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",182,\"^N\",6,\"^O\",182,\"^P\",23],\"^1G\",\"^1P\"],\"~$days-in-month\",[\"^ \",\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",504,\"^N\",16,\"^O\",504,\"^P\",29,\"^Q\",true],\"^Q\",true,\"^@\",\"~$cljs.reader/days-in-month\",\"^L\",\"out/cljs/reader.cljs\",\"^P\",29,\"^N\",1,\"^M\",504,\"^O\",504,\"^1G\",\"~$function\"],\"~$parse-and-validate-timestamp\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",522,\"^N\",7,\"^O\",522,\"^P\",35,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"^@\",\"~$cljs.reader/parse-and-validate-timestamp\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",35,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",522,\"^O\",522,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"~$read-map\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",283,\"^N\",7,\"^O\",283,\"^P\",15,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"^@\",\"~$cljs.reader/read-map\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",15,\"^X\",[\"^S\",[[\"^1C\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",283,\"^O\",283,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"~$special-symbols\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",331,\"^N\",7,\"^O\",331,\"^P\",22,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$t\",\"~$not-found\"]]]]]],\"^@\",\"~$cljs.reader/special-symbols\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",22,\"^X\",[\"^S\",[[\"~$t\",\"^3>\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",331,\"^O\",331,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$t\",\"^3>\"]]]]]],\"~$push-back-reader\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",30,\"^N\",7,\"^O\",30,\"^P\",23,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"^@\",\"~$cljs.reader/push-back-reader\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",23,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",30,\"^O\",30,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"~$register-tag-parser!\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",619,\"^N\",7,\"^O\",619,\"^P\",27,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$tag\",\"~$f\"]]]]]],\"^@\",\"~$cljs.reader/register-tag-parser!\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",27,\"^X\",[\"^S\",[[\"^3C\",\"~$f\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",619,\"^O\",619,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^3C\",\"~$f\"]]]]]],\"~$macros\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",421,\"^N\",7,\"^O\",421,\"^P\",13,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$c\"]]]]]],\"^@\",\"~$cljs.reader/macros\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",13,\"^X\",[\"^S\",[[\"~$c\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",421,\"^O\",421,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$c\"]]]]]],\"~$number-literal?\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^Q\",true,\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^P\",32,\"^N\",17,\"^M\",53,\"^O\",53,\"^1G\",\"^1H\",\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^2Z\"]]]]],\"^1I\",\"Checks whether the reader is at the start of a number literal\"],\"^Q\",true,\"^@\",\"~$cljs.reader/number-literal?\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",32,\"^X\",[\"^S\",[[\"^1>\",\"^2Z\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",53,\"^1K\",\"^1H\",\"^O\",53,\"^[\",2,\"^1G\",\"^1H\",\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^2Z\"]]]]],\"^1I\",\"Checks whether the reader is at the start of a number literal\"],\"~$escape-char-map\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",153,\"^N\",7,\"^O\",153,\"^P\",22,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$c\"]]]]]],\"^@\",\"~$cljs.reader/escape-char-map\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",22,\"^X\",[\"^S\",[[\"~$c\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",153,\"^O\",153,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$c\"]]]]]],\"~$check\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",517,\"^N\",17,\"^O\",517,\"^P\",22,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$low\",\"~$n\",\"~$high\",\"^2F\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/check\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",22,\"^X\",[\"^S\",[[\"^3L\",\"~$n\",\"^3M\",\"^2F\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",517,\"^O\",517,\"^[\",4,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^3L\",\"~$n\",\"^3M\",\"^2F\"]]]]]],\"~$read-list\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",269,\"^N\",7,\"^O\",269,\"^P\",16,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"^@\",\"~$cljs.reader/read-list\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",16,\"^X\",[\"^S\",[[\"^1C\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",269,\"^O\",269,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"~$read-past\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",217,\"^N\",7,\"^O\",217,\"^P\",16,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$pred\",\"^1C\"]]]]],\"^1I\",\"Read until first character that doesn't match pred, returning\\n   char.\"],\"^@\",\"~$cljs.reader/read-past\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",16,\"^X\",[\"^S\",[[\"^3R\",\"^1C\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",217,\"^O\",217,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^3R\",\"^1C\"]]]]],\"^1I\",\"Read until first character that doesn't match pred, returning\\n   char.\"],\"~$timestamp-regex\",[\"^ \",\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",510,\"^N\",16,\"^O\",510,\"^P\",31,\"^Q\",true],\"^Q\",true,\"^@\",\"~$cljs.reader/timestamp-regex\",\"^L\",\"out/cljs/reader.cljs\",\"^P\",31,\"^N\",1,\"^M\",510,\"^O\",510,\"^1G\",\"^1P\"],\"~$dispatch-macros\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",442,\"^N\",7,\"^O\",442,\"^P\",22,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"^@\",\"~$cljs.reader/dispatch-macros\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",22,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",442,\"^O\",442,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"~$float-pattern\",[\"^ \",\"^@\",\"~$cljs.reader/float-pattern\",\"^L\",\"out/cljs/reader.cljs\",\"^M\",101,\"^N\",1,\"^O\",101,\"^P\",19,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",101,\"^N\",6,\"^O\",101,\"^P\",19],\"^1G\",\"^1P\"],\"~$register-default-tag-parser!\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",633,\"^N\",7,\"^O\",633,\"^P\",35,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$f\"]]]]]],\"^@\",\"~$cljs.reader/register-default-tag-parser!\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",35,\"^X\",[\"^S\",[[\"~$f\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",633,\"^O\",633,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$f\"]]]]]],\"~$re-matches*\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",104,\"^N\",8,\"^O\",104,\"^P\",19,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$re\",\"~$s\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/re-matches*\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"^41\",\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",104,\"^O\",104,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^41\",\"~$s\"]]]]]],\"~$divisible?\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",490,\"^N\",17,\"^O\",490,\"^P\",27,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$num\",\"~$div\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/divisible?\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",27,\"^X\",[\"^S\",[[\"^44\",\"^45\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",490,\"^O\",490,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^44\",\"^45\"]]]]]],\"^1Y\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",15,\"^N\",4,\"^O\",15,\"^P\",13,\"^2M\",\"^13\",\"^1I\",\"Returns the next char from the Reader,\\nnil if the end of stream has been reached\",\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\"]]]]]],\"^2M\",\"^13\",\"^@\",\"~$cljs.reader/read-char\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",13,\"^X\",[\"^S\",[[\"^1>\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",14,\"^O\",15,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\"]]]]],\"^1I\",\"Returns the next char from the Reader,\\nnil if the end of stream has been reached\"],\"~$read-token\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",80,\"^N\",7,\"^O\",80,\"^P\",17,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^2Z\"]]]]]],\"^@\",\"~$cljs.reader/read-token\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",17,\"^X\",[\"^S\",[[\"^1C\",\"^2Z\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",80,\"^O\",80,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^2Z\"]]]]]],\"~$zero-fill-right-and-truncate\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",482,\"^N\",17,\"^O\",482,\"^P\",45,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\",\"~$width\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/zero-fill-right-and-truncate\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",45,\"^X\",[\"^S\",[[\"~$s\",\"^4;\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",482,\"^O\",482,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\",\"^4;\"]]]]]],\"~$read-date\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",556,\"^N\",17,\"^O\",556,\"^P\",26,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/read-date\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",26,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",556,\"^O\",556,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"~$symbol-pattern\",[\"^ \",\"^@\",\"~$cljs.reader/symbol-pattern\",\"^L\",\"out/cljs/reader.cljs\",\"^M\",102,\"^N\",1,\"^O\",102,\"^P\",20,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",102,\"^N\",6,\"^O\",102,\"^P\",20],\"^1G\",\"^1P\"],\"~$deregister-default-tag-parser!\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",639,\"^N\",7,\"^O\",639,\"^P\",37,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[]]]]]],\"^@\",\"~$cljs.reader/deregister-default-tag-parser!\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",37,\"^X\",[\"^S\",[[]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",639,\"^O\",639,\"^[\",0,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[]]]]]],\"~$read-regex\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",412,\"^N\",7,\"^O\",412,\"^P\",17,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^1D\"]]]]]],\"^@\",\"~$cljs.reader/read-regex\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",17,\"^X\",[\"^S\",[[\"^1C\",\"^1D\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",412,\"^O\",412,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^1D\"]]]]]],\"~$indivisible?\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",494,\"^N\",17,\"^O\",494,\"^P\",29,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^44\",\"^45\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/indivisible?\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",29,\"^X\",[\"^S\",[[\"^44\",\"^45\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",494,\"^O\",494,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^44\",\"^45\"]]]]]],\"~$throwing-reader\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",393,\"^N\",7,\"^O\",393,\"^P\",22,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^2F\"]]]]]],\"^@\",\"~$cljs.reader/throwing-reader\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",22,\"^X\",[\"^S\",[[\"^2F\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",393,\"^O\",393,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^2F\"]]]]]],\"~$read-dispatch\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",255,\"^N\",7,\"^O\",255,\"^P\",20,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"^@\",\"~$cljs.reader/read-dispatch\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",20,\"^X\",[\"^S\",[[\"^1C\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",255,\"^O\",255,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"~$make-unicode-char\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",190,\"^N\",7,\"^O\",190,\"^P\",24,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$code-str\"]]]]]],\"^@\",\"~$cljs.reader/make-unicode-char\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",24,\"^X\",[\"^S\",[[\"^4L\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",190,\"^O\",190,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^4L\"]]]]]],\"~$read-queue\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",563,\"^N\",17,\"^O\",563,\"^P\",27,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$elems\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/read-queue\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",27,\"^X\",[\"^S\",[[\"^4O\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",563,\"^O\",563,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^4O\"]]]]]],\"~$match-float\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",142,\"^N\",8,\"^O\",142,\"^P\",19,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/match-float\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",142,\"^O\",142,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"~$maybe-read-tagged-type\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",607,\"^N\",7,\"^O\",607,\"^P\",29,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^2Z\"]]]]]],\"^@\",\"~$cljs.reader/maybe-read-tagged-type\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",29,\"^X\",[\"^S\",[[\"^1C\",\"^2Z\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",607,\"^O\",607,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^2Z\"]]]]]],\"~$read-string\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",472,\"^N\",7,\"^O\",472,\"^P\",18,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]],\"^1I\",\"Reads one object from the string s\"],\"^@\",\"~$cljs.reader/read-string\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",18,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",472,\"^O\",472,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]],\"^1I\",\"Reads one object from the string s\"],\"~$read-delimited-list\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",226,\"^N\",7,\"^O\",226,\"^P\",26,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$delim\",\"^1C\",\"~$recursive?\"]]]]]],\"^@\",\"~$cljs.reader/read-delimited-list\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",26,\"^X\",[\"^S\",[[\"^4X\",\"^1C\",\"^4Y\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",226,\"^O\",226,\"^[\",3,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^4X\",\"^1C\",\"^4Y\"]]]]]],\"~$comment-prefix?\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^Q\",true,\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^P\",32,\"^N\",17,\"^M\",48,\"^O\",48,\"^1G\",\"^1H\",\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1D\"]]]]],\"^1I\",\"Checks whether the character begins a comment.\"],\"^Q\",true,\"^@\",\"~$cljs.reader/comment-prefix?\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",32,\"^X\",[\"^S\",[[\"^1D\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",48,\"^1K\",\"^1H\",\"^O\",48,\"^[\",1,\"^1G\",\"^1H\",\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1D\"]]]]],\"^1I\",\"Checks whether the character begins a comment.\"],\"~$read-4-chars\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",174,\"^N\",7,\"^O\",174,\"^P\",19,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\"]]]]]],\"^@\",\"~$cljs.reader/read-4-chars\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"^1>\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",174,\"^O\",174,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\"]]]]]],\"^1?\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",194,\"^N\",7,\"^O\",194,\"^P\",18,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^16\",\"^1>\"]]]]]],\"^@\",\"~$cljs.reader/escape-char\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",18,\"^X\",[\"^S\",[[\"^16\",\"^1>\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",194,\"^O\",194,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^16\",\"^1>\"]]]]]],\"~$read-string*\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",305,\"^N\",7,\"^O\",305,\"^P\",19,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"~$_\"]]]]]],\"^@\",\"~$cljs.reader/read-string*\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"^1>\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",305,\"^O\",305,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"~$_\"]]]]]],\"~$parse-int\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",512,\"^N\",17,\"^O\",512,\"^P\",26,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/parse-int\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",26,\"^X\",[\"^S\",[[\"~$s\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",512,\"^O\",512,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$s\"]]]]]],\"~$macro-terminating?\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",74,\"^N\",16,\"^O\",74,\"^P\",34,\"^1G\",\"^1H\",\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1D\"]]]]]],\"^@\",\"~$cljs.reader/macro-terminating?\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",34,\"^X\",[\"^S\",[[\"^1D\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",74,\"^1K\",\"^1H\",\"^O\",74,\"^[\",1,\"^1G\",\"^1H\",\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1D\"]]]]]],\"~$read-keyword\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",364,\"^N\",7,\"^O\",364,\"^P\",19,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^2Z\"]]]]]],\"^@\",\"~$cljs.reader/read-keyword\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"^1>\",\"^2Z\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",364,\"^O\",364,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^2Z\"]]]]]],\"~$read-2-chars\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",168,\"^N\",7,\"^O\",168,\"^P\",19,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\"]]]]]],\"^@\",\"~$cljs.reader/read-2-chars\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"^1>\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",168,\"^O\",168,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\"]]]]]],\"~$read-discard\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",416,\"^N\",7,\"^O\",416,\"^P\",19,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"^@\",\"~$cljs.reader/read-discard\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"^1C\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",416,\"^O\",416,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"~$read-vector\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",279,\"^N\",7,\"^O\",279,\"^P\",18,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"^@\",\"~$cljs.reader/read-vector\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",18,\"^X\",[\"^S\",[[\"^1C\",\"~$_\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",279,\"^O\",279,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"~$_\"]]]]]],\"~$read-js\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",570,\"^N\",17,\"^O\",570,\"^P\",24,\"^Q\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$form\"]]]]]],\"^Q\",true,\"^@\",\"~$cljs.reader/read-js\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",24,\"^X\",[\"^S\",[[\"^5C\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",570,\"^O\",570,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^5C\"]]]]]],\"~$read-number\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",293,\"^N\",7,\"^O\",293,\"^P\",18,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^2Z\"]]]]]],\"^@\",\"~$cljs.reader/read-number\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",18,\"^X\",[\"^S\",[[\"^1>\",\"^2Z\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",293,\"^O\",293,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1>\",\"^2Z\"]]]]]],\"~$read-literal\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",349,\"^N\",7,\"^O\",349,\"^P\",19,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^1D\"]]]]]],\"^@\",\"~$cljs.reader/read-literal\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",19,\"^X\",[\"^S\",[[\"^1C\",\"^1D\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",349,\"^O\",349,\"^[\",2,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\",\"^1D\"]]]]]],\"~$deregister-tag-parser!\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",626,\"^N\",7,\"^O\",626,\"^P\",29,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^3C\"]]]]]],\"^@\",\"~$cljs.reader/deregister-tag-parser!\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",29,\"^X\",[\"^S\",[[\"^3C\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",626,\"^O\",626,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^3C\"]]]]]],\"~$parse-timestamp\",[\"^ \",\"^J\",null,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",547,\"^N\",7,\"^O\",547,\"^P\",22,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$ts\"]]]]]],\"^@\",\"~$cljs.reader/parse-timestamp\",\"^W\",false,\"^L\",\"out/cljs/reader.cljs\",\"^P\",22,\"^X\",[\"^S\",[[\"^5L\"]]],\"^Y\",null,\"^Z\",[\"^S\",[null,null]],\"^N\",1,\"^M\",547,\"^O\",547,\"^[\",1,\"^10\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^5L\"]]]]]],\"~$ratio-pattern\",[\"^ \",\"^@\",\"~$cljs.reader/ratio-pattern\",\"^L\",\"out/cljs/reader.cljs\",\"^M\",100,\"^N\",1,\"^O\",100,\"^P\",19,\"^K\",[\"^ \",\"^L\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/reader.cljs\",\"^M\",100,\"^N\",6,\"^O\",100,\"^P\",19],\"^1G\",\"^1P\"]],\"~:require-macros\",[\"^ \",\"^=\",\"^=\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^?\",[\"^17\",\"^16\",\"~:else\",\"~:default\",\"~$s\",\"~$/\",\"^1G\",\"~:mutable\",\"^T\",\"~$deref\"]],\"~:order\",[\"~$s\",\"^16\",\"^17\",\"^5U\",\"^5S\",\"^5T\",\"~$/\",\"^1G\",\"^T\",\"^5V\"]],\"^1I\",null]","cljs/pprint$macros.js":"goog.provide('cljs.pprint');\ngoog.require('cljs.core');\ngoog.require('clojure.walk');\ngoog.require('cljs.analyzer');\nvar ret__21071__auto___467 = (function (){\ncljs.pprint.with_pretty_writer = (function cljs$pprint$with_pretty_writer(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___468 = arguments.length;\nvar i__21021__auto___469 = (0);\nwhile(true){\nif((i__21021__auto___469 < len__21020__auto___468)){\nargs__21023__auto__.push((arguments[i__21021__auto___469]));\n\nvar G__470 = (i__21021__auto___469 + (1));\ni__21021__auto___469 = G__470;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.pprint.with_pretty_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.pprint.with_pretty_writer.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,base_writer,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"base-writer__42__auto__\",\"base-writer__42__auto__\",(-1104743196),null)),(function (){var x__20731__auto__ = base_writer;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"new-writer__43__auto__\",\"new-writer__43__auto__\",(-536285075),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"not\",\"cljs.core/not\",(100665144),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"pretty-writer?\",\"cljs.pprint/pretty-writer?\",(-2126032890),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"base-writer__42__auto__\",\"base-writer__42__auto__\",(-1104743196),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"*out*\",\"cljs.core/*out*\",(-1813565621),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"new-writer__43__auto__\",\"new-writer__43__auto__\",(-536285075),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"make-pretty-writer\",\"cljs.pprint/make-pretty-writer\",(90762412),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"base-writer__42__auto__\",\"base-writer__42__auto__\",(-1104743196),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"*print-right-margin*\",\"cljs.pprint/*print-right-margin*\",(-56183119),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"*print-miser-width*\",\"cljs.pprint/*print-miser-width*\",(1588913450),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"base-writer__42__auto__\",\"base-writer__42__auto__\",(-1104743196),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body,(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"-ppflush\",\"cljs.pprint/-ppflush\",(-1019520880),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"*out*\",\"cljs.core/*out*\",(-1813565621),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.pprint.with_pretty_writer.cljs$lang$maxFixedArity = (3);\n\ncljs.pprint.with_pretty_writer.cljs$lang$applyTo = (function (seq463){\nvar G__464 = cljs.core.first.call(null,seq463);\nvar seq463__$1 = cljs.core.next.call(null,seq463);\nvar G__465 = cljs.core.first.call(null,seq463__$1);\nvar seq463__$2 = cljs.core.next.call(null,seq463__$1);\nvar G__466 = cljs.core.first.call(null,seq463__$2);\nvar seq463__$3 = cljs.core.next.call(null,seq463__$2);\nreturn cljs.pprint.with_pretty_writer.cljs$core$IFn$_invoke$arity$variadic(G__464,G__465,G__466,seq463__$3);\n});\n\nreturn null;\n})()\n;\ncljs.pprint.with_pretty_writer.cljs$lang$macro = true;\n\nvar ret__21071__auto___471 = /**\n * Get the value of the field a named by the argument (which should be a keyword).\n */\ncljs.pprint.getf = (function cljs$pprint$getf(_AMPERSAND_form,_AMPERSAND_env,sym){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,(function (){var x__20731__auto__ = sym;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",(1901963335),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",(1901963335),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"this\",\"this\",(1028897902),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\ncljs.pprint.getf.cljs$lang$macro = true;\n\nvar ret__21071__auto___472 = /**\n * Set the value of the field SYM to NEW-VAL\n */\ncljs.pprint.setf = (function cljs$pprint$setf(_AMPERSAND_form,_AMPERSAND_env,sym,new_val){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"swap!\",\"cljs.core/swap!\",(-2144679919),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",(1901963335),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"this\",\"this\",(1028897902),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"assoc\",\"cljs.core/assoc\",(322326297),null)),(function (){var x__20731__auto__ = sym;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = new_val;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\ncljs.pprint.setf.cljs$lang$macro = true;\n\nvar ret__21071__auto___477 = (function (){\ncljs.pprint.deftype = (function cljs$pprint$deftype(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___478 = arguments.length;\nvar i__21021__auto___479 = (0);\nwhile(true){\nif((i__21021__auto___479 < len__21020__auto___478)){\nargs__21023__auto__.push((arguments[i__21021__auto___479]));\n\nvar G__480 = (i__21021__auto___479 + (1));\ni__21021__auto___479 = G__480;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.pprint.deftype.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.pprint.deftype.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,type_name,fields){\nvar name_str = cljs.core.name.call(null,type_name);\nvar fields__$1 = cljs.core.map.call(null,cljs.core.comp.call(null,cljs.core.symbol,cljs.core.name),fields);\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"defrecord\",\"cljs.core/defrecord\",(948295858),null)),(function (){var x__20731__auto__ = type_name;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"type-tag\",\"type-tag\",(-233331740),null)),fields__$1)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"defn-\",\"cljs.core/defn-\",(1764521227),null)),(function (){var x__20731__auto__ = cljs.core.symbol.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"make-\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name_str)].join(''));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.vec.call(null,fields__$1);\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,(function (){var x__20731__auto__ = cljs.core.symbol.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(type_name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\".\")].join(''));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.keyword.call(null,name_str);\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),fields__$1));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"defn-\",\"cljs.core/defn-\",(1764521227),null)),(function (){var x__20731__auto__ = cljs.core.symbol.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(name_str),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"?\")].join(''));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"x__44__auto__\",\"x__44__auto__\",(-234181536),null)))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",(-1891498332),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"type-tag\",\"type-tag\",(-1873863267))),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"x__44__auto__\",\"x__44__auto__\",(-234181536),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.keyword.call(null,name_str);\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.pprint.deftype.cljs$lang$maxFixedArity = (3);\n\ncljs.pprint.deftype.cljs$lang$applyTo = (function (seq473){\nvar G__474 = cljs.core.first.call(null,seq473);\nvar seq473__$1 = cljs.core.next.call(null,seq473);\nvar G__475 = cljs.core.first.call(null,seq473__$1);\nvar seq473__$2 = cljs.core.next.call(null,seq473__$1);\nvar G__476 = cljs.core.first.call(null,seq473__$2);\nvar seq473__$3 = cljs.core.next.call(null,seq473__$2);\nreturn cljs.pprint.deftype.cljs$core$IFn$_invoke$arity$variadic(G__474,G__475,G__476,seq473__$3);\n});\n\nreturn null;\n})()\n;\ncljs.pprint.deftype.cljs$lang$macro = true;\n\ncljs.pprint.parse_lb_options = (function cljs$pprint$parse_lb_options(opts,body){\nvar body__$1 = body;\nvar acc = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.truth_(opts.call(null,cljs.core.first.call(null,body__$1)))){\nvar G__481 = cljs.core.drop.call(null,(2),body__$1);\nvar G__482 = cljs.core.concat.call(null,acc,cljs.core.take.call(null,(2),body__$1));\nbody__$1 = G__481;\nacc = G__482;\ncontinue;\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null,cljs.core.hash_map,acc),body__$1], null);\n}\nbreak;\n}\n});\nvar ret__21071__auto___489 = (function (){\n/**\n * Execute the body as a pretty printing logical block with output to *out* which\n *   must be a pretty printing writer. When used from pprint or cl-format, this can be\n *   assumed.\n * \n *   This function is intended for use when writing custom dispatch functions.\n * \n *   Before the body, the caller can optionally specify options: :prefix, :per-line-prefix\n *   and :suffix.\n */\ncljs.pprint.pprint_logical_block = (function cljs$pprint$pprint_logical_block(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___490 = arguments.length;\nvar i__21021__auto___491 = (0);\nwhile(true){\nif((i__21021__auto___491 < len__21020__auto___490)){\nargs__21023__auto__.push((arguments[i__21021__auto___491]));\n\nvar G__492 = (i__21021__auto___491 + (1));\ni__21021__auto___491 = G__492;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.pprint.pprint_logical_block.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n});\n\ncljs.pprint.pprint_logical_block.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,args){\nvar vec__486 = cljs.pprint.parse_lb_options.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",(-265908465)),null,new cljs.core.Keyword(null,\"per-line-prefix\",\"per-line-prefix\",(846941813)),null,new cljs.core.Keyword(null,\"suffix\",\"suffix\",(367373057)),null], null), null),args);\nvar options = cljs.core.nth.call(null,vec__486,(0),null);\nvar body = cljs.core.nth.call(null,vec__486,(1),null);\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"level-exceeded\",\"cljs.pprint/level-exceeded\",(-1557018470),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"-write\",\"-write\",(1999625154),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"*out*\",\"cljs.core/*out*\",(-1813565621),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,\"#\")));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"*current-level*\",\"cljs.pprint/*current-level*\",(1299227592),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"inc\",\"cljs.core/inc\",(-879172610),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"*current-level*\",\"cljs.pprint/*current-level*\",(1299227592),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"*current-length*\",\"cljs.pprint/*current-length*\",(-732560897),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,(0)))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"start-block\",\"cljs.pprint/start-block\",(-270767114),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"*out*\",\"cljs.core/*out*\",(-1813565621),null)),(function (){var x__20731__auto__ = new cljs.core.Keyword(null,\"prefix\",\"prefix\",(-265908465)).cljs$core$IFn$_invoke$arity$1(options);\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = new cljs.core.Keyword(null,\"per-line-prefix\",\"per-line-prefix\",(846941813)).cljs$core$IFn$_invoke$arity$1(options);\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = new cljs.core.Keyword(null,\"suffix\",\"suffix\",(367373057)).cljs$core$IFn$_invoke$arity$1(options);\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body,(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"end-block\",\"cljs.pprint/end-block\",(-397543401),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"*out*\",\"cljs.core/*out*\",(-1813565621),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,null)));\n});\n\ncljs.pprint.pprint_logical_block.cljs$lang$maxFixedArity = (2);\n\ncljs.pprint.pprint_logical_block.cljs$lang$applyTo = (function (seq483){\nvar G__484 = cljs.core.first.call(null,seq483);\nvar seq483__$1 = cljs.core.next.call(null,seq483);\nvar G__485 = cljs.core.first.call(null,seq483__$1);\nvar seq483__$2 = cljs.core.next.call(null,seq483__$1);\nreturn cljs.pprint.pprint_logical_block.cljs$core$IFn$_invoke$arity$variadic(G__484,G__485,seq483__$2);\n});\n\nreturn null;\n})()\n;\ncljs.pprint.pprint_logical_block.cljs$lang$macro = true;\n\ncljs.pprint.macroexpand = (function cljs$pprint$macroexpand(env,form){\nvar form__$1 = form;\nvar form_SINGLEQUOTE_ = cljs.analyzer.macroexpand_1.call(null,env,form__$1);\nwhile(true){\nif(!((form__$1 === form_SINGLEQUOTE_))){\nvar G__493 = form_SINGLEQUOTE_;\nvar G__494 = cljs.analyzer.macroexpand_1.call(null,env,form_SINGLEQUOTE_);\nform__$1 = G__493;\nform_SINGLEQUOTE_ = G__494;\ncontinue;\n} else {\nreturn form_SINGLEQUOTE_;\n}\nbreak;\n}\n});\ncljs.pprint.pll_mod_body = (function cljs$pprint$pll_mod_body(env,var_sym,body){\nvar inner = (function cljs$pprint$pll_mod_body_$_inner(form){\nif(cljs.core.seq_QMARK_.call(null,form)){\nvar form__$1 = cljs.pprint.macroexpand.call(null,env,form);\nvar pred__516 = cljs.core._EQ_;\nvar expr__517 = cljs.core.first.call(null,form__$1);\nif(cljs.core.truth_(pred__516.call(null,new cljs.core.Symbol(null,\"loop*\",\"loop*\",(615029416),null),expr__517))){\nreturn form__$1;\n} else {\nif(cljs.core.truth_(pred__516.call(null,new cljs.core.Symbol(null,\"recur\",\"recur\",(1202958259),null),expr__517))){\nreturn cljs.core.concat.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"recur\",\"recur\",(1202958259),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"inc\",\"cljs.core/inc\",(-879172610),null)),(function (){var x__20731__auto__ = var_sym;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())),cljs.core.rest.call(null,form__$1));\n} else {\nreturn clojure.walk.walk.call(null,cljs$pprint$pll_mod_body_$_inner,cljs.core.identity,form__$1);\n}\n}\n} else {\nreturn form;\n}\n});\nreturn clojure.walk.walk.call(null,inner,cljs.core.identity,body);\n});\nvar ret__21071__auto___523 = (function (){\n/**\n * A version of loop that iterates at most *print-length* times. This is designed\n *   for use in pretty-printer dispatch functions.\n */\ncljs.pprint.print_length_loop = (function cljs$pprint$print_length_loop(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___524 = arguments.length;\nvar i__21021__auto___525 = (0);\nwhile(true){\nif((i__21021__auto___525 < len__21020__auto___524)){\nargs__21023__auto__.push((arguments[i__21021__auto___525]));\n\nvar G__526 = (i__21021__auto___525 + (1));\ni__21021__auto___525 = G__526;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.pprint.print_length_loop.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.pprint.print_length_loop.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,bindings,body){\nvar count_var = cljs.core.gensym.call(null,\"length-count\");\nvar mod_body = cljs.pprint.pll_mod_body.call(null,_AMPERSAND_env,count_var,body);\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"loop\",\"cljs.core/loop\",(-1829423021),null)),(function (){var x__20731__auto__ = cljs.core.apply.call(null,cljs.core.vector,count_var,(0),bindings);\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",(1201033885),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"not\",\"cljs.core/not\",(100665144),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"*print-length*\",\"cljs.core/*print-length*\",(-20766927),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",(1677496129),null)),(function (){var x__20731__auto__ = count_var;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"*print-length*\",\"cljs.core/*print-length*\",(-20766927),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),mod_body));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"-write\",\"-write\",(1999625154),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"*out*\",\"cljs.core/*out*\",(-1813565621),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,\"...\")));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.pprint.print_length_loop.cljs$lang$maxFixedArity = (3);\n\ncljs.pprint.print_length_loop.cljs$lang$applyTo = (function (seq519){\nvar G__520 = cljs.core.first.call(null,seq519);\nvar seq519__$1 = cljs.core.next.call(null,seq519);\nvar G__521 = cljs.core.first.call(null,seq519__$1);\nvar seq519__$2 = cljs.core.next.call(null,seq519__$1);\nvar G__522 = cljs.core.first.call(null,seq519__$2);\nvar seq519__$3 = cljs.core.next.call(null,seq519__$2);\nreturn cljs.pprint.print_length_loop.cljs$core$IFn$_invoke$arity$variadic(G__520,G__521,G__522,seq519__$3);\n});\n\nreturn null;\n})()\n;\ncljs.pprint.print_length_loop.cljs$lang$macro = true;\n\ncljs.pprint.process_directive_table_element = (function cljs$pprint$process_directive_table_element(p__527){\nvar vec__531 = p__527;\nvar seq__532 = cljs.core.seq.call(null,vec__531);\nvar first__533 = cljs.core.first.call(null,seq__532);\nvar seq__532__$1 = cljs.core.next.call(null,seq__532);\nvar char$ = first__533;\nvar first__533__$1 = cljs.core.first.call(null,seq__532__$1);\nvar seq__532__$2 = cljs.core.next.call(null,seq__532__$1);\nvar params = first__533__$1;\nvar first__533__$2 = cljs.core.first.call(null,seq__532__$2);\nvar seq__532__$3 = cljs.core.next.call(null,seq__532__$2);\nvar flags = first__533__$2;\nvar first__533__$3 = cljs.core.first.call(null,seq__532__$3);\nvar seq__532__$4 = cljs.core.next.call(null,seq__532__$3);\nvar bracket_info = first__533__$3;\nvar generator_fn = seq__532__$4;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [char$,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"directive\",\"directive\",(793559132)),char$,new cljs.core.Keyword(null,\"params\",\"params\",(710516235)),cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"array-map\",\"cljs.core/array-map\",(-1519210683),null)),params)),new cljs.core.Keyword(null,\"flags\",\"flags\",(1775418075)),flags,new cljs.core.Keyword(null,\"bracket-info\",\"bracket-info\",(-1600092774)),bracket_info,new cljs.core.Keyword(null,\"generator-fn\",\"generator-fn\",(811851656)),cljs.core.concat.call(null,cljs.core.list(new cljs.core.Symbol(null,\"fn\",\"fn\",(465265323),null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"params\",\"params\",(-1943919534),null),new cljs.core.Symbol(null,\"offset\",\"offset\",(1937029838),null)], null)),generator_fn)], null)], null);\n});\nvar ret__21071__auto___537 = (function (){\ncljs.pprint.defdirectives = (function cljs$pprint$defdirectives(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___538 = arguments.length;\nvar i__21021__auto___539 = (0);\nwhile(true){\nif((i__21021__auto___539 < len__21020__auto___538)){\nargs__21023__auto__.push((arguments[i__21021__auto___539]));\n\nvar G__540 = (i__21021__auto___539 + (1));\ni__21021__auto___539 = G__540;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.pprint.defdirectives.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n});\n\ncljs.pprint.defdirectives.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,directives){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"def\",\"def\",(597100991),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"directive-table\",\"directive-table\",(-1558673742),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"hash-map\",\"cljs.core/hash-map\",(303385767),null)),cljs.core.mapcat.call(null,cljs.pprint.process_directive_table_element,directives)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.pprint.defdirectives.cljs$lang$maxFixedArity = (2);\n\ncljs.pprint.defdirectives.cljs$lang$applyTo = (function (seq534){\nvar G__535 = cljs.core.first.call(null,seq534);\nvar seq534__$1 = cljs.core.next.call(null,seq534);\nvar G__536 = cljs.core.first.call(null,seq534__$1);\nvar seq534__$2 = cljs.core.next.call(null,seq534__$1);\nreturn cljs.pprint.defdirectives.cljs$core$IFn$_invoke$arity$variadic(G__535,G__536,seq534__$2);\n});\n\nreturn null;\n})()\n;\ncljs.pprint.defdirectives.cljs$lang$macro = true;\n\nvar ret__21071__auto___541 = /**\n * Makes a function which can directly run format-in. The function is\n * fn [stream & args] ... and returns nil unless the stream is nil (meaning\n * output to a string) in which case it returns the resulting string.\n * \n * format-in can be either a control string or a previously compiled format.\n */\ncljs.pprint.formatter = (function cljs$pprint$formatter(_AMPERSAND_form,_AMPERSAND_env,format_in){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"format-in__45__auto__\",\"format-in__45__auto__\",(-803973262),null)),(function (){var x__20731__auto__ = format_in;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"my-c-c__46__auto__\",\"my-c-c__46__auto__\",(2146489425),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"cached-compile\",\"cljs.pprint/cached-compile\",(194847165),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"my-e-f__47__auto__\",\"my-e-f__47__auto__\",(160780103),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"execute-format\",\"cljs.pprint/execute-format\",(1971623147),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"my-i-n__48__auto__\",\"my-i-n__48__auto__\",(412460737),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"init-navigator\",\"cljs.pprint/init-navigator\",(1904204595),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"cf__49__auto__\",\"cf__49__auto__\",(-556927195),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",(-2072921719),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"format-in__45__auto__\",\"format-in__45__auto__\",(-803973262),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"my-c-c__46__auto__\",\"my-c-c__46__auto__\",(2146489425),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"format-in__45__auto__\",\"format-in__45__auto__\",(-803973262),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"format-in__45__auto__\",\"format-in__45__auto__\",(-803973262),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"stream__50__auto__\",\"stream__50__auto__\",(625144281),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args__51__auto__\",\"args__51__auto__\",(1128623892),null)))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"navigator__52__auto__\",\"navigator__52__auto__\",(21309628),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"my-i-n__48__auto__\",\"my-i-n__48__auto__\",(412460737),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args__51__auto__\",\"args__51__auto__\",(1128623892),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"my-e-f__47__auto__\",\"my-e-f__47__auto__\",(160780103),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"stream__50__auto__\",\"stream__50__auto__\",(625144281),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"cf__49__auto__\",\"cf__49__auto__\",(-556927195),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"navigator__52__auto__\",\"navigator__52__auto__\",(21309628),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\ncljs.pprint.formatter.cljs$lang$macro = true;\n\nvar ret__21071__auto___542 = /**\n * Makes a function which can directly run format-in. The function is\n * fn [& args] ... and returns nil. This version of the formatter macro is\n * designed to be used with *out* set to an appropriate Writer. In particular,\n * this is meant to be used as part of a pretty printer dispatch method.\n * \n * format-in can be either a control string or a previously compiled format.\n */\ncljs.pprint.formatter_out = (function cljs$pprint$formatter_out(_AMPERSAND_form,_AMPERSAND_env,format_in){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"format-in__53__auto__\",\"format-in__53__auto__\",(-926657792),null)),(function (){var x__20731__auto__ = format_in;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"cf__54__auto__\",\"cf__54__auto__\",(-1633571406),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",(-2072921719),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"format-in__53__auto__\",\"format-in__53__auto__\",(-926657792),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"cached-compile\",\"cljs.pprint/cached-compile\",(194847165),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"format-in__53__auto__\",\"format-in__53__auto__\",(-926657792),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"format-in__53__auto__\",\"format-in__53__auto__\",(-926657792),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args__55__auto__\",\"args__55__auto__\",(-684435403),null)))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"navigator__56__auto__\",\"navigator__56__auto__\",(-710520634),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"init-navigator\",\"cljs.pprint/init-navigator\",(1904204595),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args__55__auto__\",\"args__55__auto__\",(-684435403),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"execute-format\",\"cljs.pprint/execute-format\",(1971623147),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"cf__54__auto__\",\"cf__54__auto__\",(-1633571406),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"navigator__56__auto__\",\"navigator__56__auto__\",(-710520634),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\ncljs.pprint.formatter_out.cljs$lang$macro = true;\n\nvar ret__21071__auto___547 = (function (){\n/**\n * Execute body with the pretty print dispatch function bound to function.\n */\ncljs.pprint.with_pprint_dispatch = (function cljs$pprint$with_pprint_dispatch(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___548 = arguments.length;\nvar i__21021__auto___549 = (0);\nwhile(true){\nif((i__21021__auto___549 < len__21020__auto___548)){\nargs__21023__auto__.push((arguments[i__21021__auto___549]));\n\nvar G__550 = (i__21021__auto___549 + (1));\ni__21021__auto___549 = G__550;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.pprint.with_pprint_dispatch.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.pprint.with_pprint_dispatch.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,function$,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"*print-pprint-dispatch*\",\"cljs.pprint/*print-pprint-dispatch*\",(-1820734013),null)),(function (){var x__20731__auto__ = function$;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\n});\n\ncljs.pprint.with_pprint_dispatch.cljs$lang$maxFixedArity = (3);\n\ncljs.pprint.with_pprint_dispatch.cljs$lang$applyTo = (function (seq543){\nvar G__544 = cljs.core.first.call(null,seq543);\nvar seq543__$1 = cljs.core.next.call(null,seq543);\nvar G__545 = cljs.core.first.call(null,seq543__$1);\nvar seq543__$2 = cljs.core.next.call(null,seq543__$1);\nvar G__546 = cljs.core.first.call(null,seq543__$2);\nvar seq543__$3 = cljs.core.next.call(null,seq543__$2);\nreturn cljs.pprint.with_pprint_dispatch.cljs$core$IFn$_invoke$arity$variadic(G__544,G__545,G__546,seq543__$3);\n});\n\nreturn null;\n})()\n;\ncljs.pprint.with_pprint_dispatch.cljs$lang$macro = true;\n\nvar ret__21071__auto___551 = /**\n * A convenience macro that pretty prints the last thing output. This is\n * exactly equivalent to (pprint *1).\n */\ncljs.pprint.pp = (function cljs$pprint$pp(_AMPERSAND_form,_AMPERSAND_env){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.pprint\",\"pprint\",\"cljs.pprint/pprint\",(-1547147237),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"*1\",\"cljs.core/*1\",(-1526381047),null))));\n});\ncljs.pprint.pp.cljs$lang$macro = true;\n\n","cljs/env/macros$macros.js":"goog.provide('cljs.env.macros');\ngoog.require('cljs.core');\nvar ret__21071__auto___641 = (function (){\n/**\n * Evaluates [body] with [env] bound as the value of the `*compiler*` var in\n *  this namespace.\n */\ncljs.env.macros.with_compiler_env = (function cljs$env$macros$with_compiler_env(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___642 = arguments.length;\nvar i__21021__auto___643 = (0);\nwhile(true){\nif((i__21021__auto___643 < len__21020__auto___642)){\nargs__21023__auto__.push((arguments[i__21021__auto___643]));\n\nvar G__644 = (i__21021__auto___643 + (1));\ni__21021__auto___643 = G__644;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.env.macros.with_compiler_env.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.env.macros.with_compiler_env.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,env,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__59__auto__\",\"env__59__auto__\",(-1763936521),null)),(function (){var x__20731__auto__ = env;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__59__auto__\",\"env__59__auto__\",(-1763936521),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"cond\",\"cljs.core/cond\",(2005388338),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",(-1390345523),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__59__auto__\",\"env__59__auto__\",(-1763936521),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"atom\",\"cljs.core/atom\",(1943839529),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__59__auto__\",\"env__59__auto__\",(-1763936521),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",(-6692549),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",(2044751870),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"Atom\",\"cljs.core/Atom\",(1320999481),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__59__auto__\",\"env__59__auto__\",(-1763936521),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",(-1390345523),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",(1901963335),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__59__auto__\",\"env__59__auto__\",(-1763936521),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__59__auto__\",\"env__59__auto__\",(-1763936521),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"default\",\"default\",(-1987822328))),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"throw\",\"throw\",(595905694),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"js\",\"Error.\",\"js/Error.\",(750655924),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",(-1971828991),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,\"Compiler environment must be a map or atom containing a map, not \"),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"type\",\"cljs.core/type\",(-821761154),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__59__auto__\",\"env__59__auto__\",(-1763936521),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.env\",\"*compiler*\",\"cljs.env/*compiler*\",(524302605),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__59__auto__\",\"env__59__auto__\",(-1763936521),null)))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.env.macros.with_compiler_env.cljs$lang$maxFixedArity = (3);\n\ncljs.env.macros.with_compiler_env.cljs$lang$applyTo = (function (seq637){\nvar G__638 = cljs.core.first.call(null,seq637);\nvar seq637__$1 = cljs.core.next.call(null,seq637);\nvar G__639 = cljs.core.first.call(null,seq637__$1);\nvar seq637__$2 = cljs.core.next.call(null,seq637__$1);\nvar G__640 = cljs.core.first.call(null,seq637__$2);\nvar seq637__$3 = cljs.core.next.call(null,seq637__$2);\nreturn cljs.env.macros.with_compiler_env.cljs$core$IFn$_invoke$arity$variadic(G__638,G__639,G__640,seq637__$3);\n});\n\nreturn null;\n})()\n;\ncljs.env.macros.with_compiler_env.cljs$lang$macro = true;\n\nvar ret__21071__auto___648 = (function (){\ncljs.env.macros.ensure = (function cljs$env$macros$ensure(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___649 = arguments.length;\nvar i__21021__auto___650 = (0);\nwhile(true){\nif((i__21021__auto___650 < len__21020__auto___649)){\nargs__21023__auto__.push((arguments[i__21021__auto___650]));\n\nvar G__651 = (i__21021__auto___650 + (1));\ni__21021__auto___650 = G__651;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.env.macros.ensure.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n});\n\ncljs.env.macros.ensure.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"val__60__auto__\",\"val__60__auto__\",(-172476838),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.env\",\"*compiler*\",\"cljs.env/*compiler*\",(524302605),null)))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",(120293186),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",(945071861),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"val__60__auto__\",\"val__60__auto__\",(-172476838),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"set!\",\"set!\",(250714521),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.env\",\"*compiler*\",\"cljs.env/*compiler*\",(524302605),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.env\",\"default-compiler-env\",\"cljs.env/default-compiler-env\",(254522022),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"try\",\"try\",(-1273693247),null)),body,(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"finally\",\"finally\",(-1065347064),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",(120293186),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",(945071861),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"val__60__auto__\",\"val__60__auto__\",(-172476838),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"set!\",\"set!\",(250714521),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.env\",\"*compiler*\",\"cljs.env/*compiler*\",(524302605),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,null)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.env.macros.ensure.cljs$lang$maxFixedArity = (2);\n\ncljs.env.macros.ensure.cljs$lang$applyTo = (function (seq645){\nvar G__646 = cljs.core.first.call(null,seq645);\nvar seq645__$1 = cljs.core.next.call(null,seq645);\nvar G__647 = cljs.core.first.call(null,seq645__$1);\nvar seq645__$2 = cljs.core.next.call(null,seq645__$1);\nreturn cljs.env.macros.ensure.cljs$core$IFn$_invoke$arity$variadic(G__646,G__647,seq645__$2);\n});\n\nreturn null;\n})()\n;\ncljs.env.macros.ensure.cljs$lang$macro = true;\n\n","clojure/test/check/properties.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$clojure.test.check.properties\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$gen\",\"~$clojure.test.check.generators\",\"^<\",\"^<\",\"~$results\",\"~$clojure.test.check.results\",\"^>\",\"^>\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$exception?\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"^8\",\"~:line\",22,\"~:column\",17,\"~:end-line\",22,\"~:end-column\",27,\"~:private\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^K\",[[\"~$x\"]]]]]],\"^I\",true,\"^7\",\"~$clojure.test.check.properties/exception?\",\"~:variadic\",false,\"^D\",\"clojure/test/check/properties.cljc\",\"^H\",27,\"~:method-params\",[\"^K\",[[\"~$x\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^K\",[null,null]],\"^F\",1,\"^E\",22,\"^G\",22,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\"]]]]]],\"~$->ErrorResult\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^8\",\"^E\",14,\"^F\",12,\"^G\",14,\"^H\",23,\"~:internal-ctor\",true,\"~:factory\",\"~:positional\",\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$error\"]]]]]],\"^7\",\"~$clojure.test.check.properties/->ErrorResult\",\"^N\",false,\"^D\",\"clojure/test/check/properties.cljc\",\"^H\",23,\"^O\",[\"^K\",[[\"^X\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^F\",1,\"^U\",true,\"^V\",\"^W\",\"^E\",14,\"^G\",14,\"^R\",1,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"^X\"]]]]]],\"~$binding-gens\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^8\",\"^E\",63,\"^F\",8,\"^G\",63,\"^H\",20,\"^I\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$bindings\"]]]]]],\"^I\",true,\"^7\",\"~$clojure.test.check.properties/binding-gens\",\"^N\",false,\"^D\",\"clojure/test/check/properties.cljc\",\"^H\",20,\"^O\",[\"^K\",[[\"^[\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^F\",1,\"^E\",63,\"^G\",63,\"^R\",1,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"^[\"]]]]]],\"~$for-all\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^8\",\"^H\",18,\"~:top-fn\",[\"^ \",\"^N\",true,\"^R\",3,\"^O\",[[\"^K\",[\"~$&form\",\"~$&env\",\"^[\",\"~$body\"]]],\"^J\",[\"^K\",[[\"^13\",\"^14\",\"^[\",\"~$&\",\"^15\"]]],\"^Q\",[\"^K\",[null]]],\"^F\",11,\"^E\",67,\"~:macro\",true,\"^G\",67,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"^[\",\"~$&\",\"^15\"]]]]],\"~:doc\",\"Macro sugar for `for-all*`. `for-all` lets you name the parameter\\n  and use them in expression, without wrapping them in a lambda. Like\\n  `for-all*`, it returns a property.\\n\\n  Examples\\n\\n  (for-all [a gen/int\\n            b gen/int]\\n    (>= (+ a b) a))\\n  \"],\"^7\",\"~$clojure.test.check.properties/for-all\",\"^N\",true,\"^D\",\"clojure/test/check/properties.cljc\",\"^H\",18,\"^12\",[\"^ \",\"^N\",true,\"^R\",3,\"^O\",[[\"^K\",[\"^13\",\"^14\",\"^[\",\"^15\"]]],\"^J\",[\"^K\",[[\"^13\",\"^14\",\"^[\",\"~$&\",\"^15\"]]],\"^Q\",[\"^K\",[null]]],\"^O\",[[\"^K\",[\"^13\",\"^14\",\"^[\",\"^15\"]]],\"^P\",null,\"^Q\",[\"^K\",[null]],\"^F\",1,\"^E\",67,\"^16\",true,\"^G\",67,\"^R\",3,\"^S\",false,\"^J\",[\"^K\",[[\"^13\",\"^14\",\"^[\",\"~$&\",\"^15\"]]],\"^17\",\"Macro sugar for `for-all*`. `for-all` lets you name the parameter\\n  and use them in expression, without wrapping them in a lambda. Like\\n  `for-all*`, it returns a property.\\n\\n  Examples\\n\\n  (for-all [a gen/int\\n            b gen/int]\\n    (>= (+ a b) a))\\n  \"],\"~$apply-gen\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^8\",\"^E\",26,\"^F\",17,\"^G\",26,\"^H\",26,\"^I\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$function\"]]]]]],\"^I\",true,\"^7\",\"~$clojure.test.check.properties/apply-gen\",\"^N\",false,\"^D\",\"clojure/test/check/properties.cljc\",\"^H\",26,\"^O\",[\"^K\",[[\"^1:\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^F\",1,\"^E\",26,\"^G\",26,\"^R\",1,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"^1:\"]]]]]],\"~$for-all*\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^8\",\"^E\",44,\"^F\",7,\"^G\",44,\"^H\",15,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$args\",\"^1:\"]]]]],\"^17\",\"Creates a property (properties are also generators). A property\\n  is a generator that generates the result of applying the function\\n  under test with the realized arguments. Once realized, the arguments\\n  will be applied to `function` with `apply`.\\n\\n  Example:\\n\\n  (for-all* [gen/int gen/int] (fn [a b] (>= (+ a b) a)))\\n  \"],\"^7\",\"~$clojure.test.check.properties/for-all*\",\"^N\",false,\"^D\",\"clojure/test/check/properties.cljc\",\"^H\",15,\"^O\",[\"^K\",[[\"^1=\",\"^1:\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^F\",1,\"^E\",44,\"^G\",44,\"^R\",2,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"^1=\",\"^1:\"]]]]],\"^17\",\"Creates a property (properties are also generators). A property\\n  is a generator that generates the result of applying the function\\n  under test with the realized arguments. Once realized, the arguments\\n  will be applied to `function` with `apply`.\\n\\n  Example:\\n\\n  (for-all* [gen/int gen/int] (fn [a b] (>= (+ a b) a)))\\n  \"],\"~$map->ErrorResult\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^8\",\"^E\",14,\"^F\",12,\"^G\",14,\"^H\",23,\"^U\",true,\"^V\",\"~:map\",\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$G__445\"]]]]]],\"^7\",\"~$clojure.test.check.properties/map->ErrorResult\",\"^N\",false,\"^D\",\"clojure/test/check/properties.cljc\",\"^H\",23,\"^O\",[\"^K\",[[\"^1A\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^F\",1,\"^U\",true,\"^V\",\"^1@\",\"^E\",14,\"^G\",14,\"^R\",1,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"^1A\"]]]]]],\"~$binding-vars\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^8\",\"^E\",59,\"^F\",8,\"^G\",59,\"^H\",20,\"^I\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"^[\"]]]]]],\"^I\",true,\"^7\",\"~$clojure.test.check.properties/binding-vars\",\"^N\",false,\"^D\",\"clojure/test/check/properties.cljc\",\"^H\",20,\"^O\",[\"^K\",[[\"^[\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^F\",1,\"^E\",59,\"^G\",59,\"^R\",1,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"^[\"]]]]]],\"~$ErrorResult\",[\"^ \",\"~:num-fields\",1,\"~:protocols\",[\"^6\",[\"~$cljs.core/IRecord\",\"~$cljs.core/IEquiv\",\"~$cljs.core/IHash\",\"~$cljs.core/ICollection\",\"~$cljs.core/ICounted\",\"~$cljs.core/ISeqable\",\"~$cljs.core/IMeta\",\"~$clojure.test.check.results/Result\",\"~$cljs.core/ICloneable\",\"~$cljs.core/IPrintWithWriter\",\"~$cljs.core/IIterable\",\"~$cljs.core/IWithMeta\",\"~$cljs.core/IAssociative\",\"~$cljs.core/IMap\",\"~$cljs.core/ILookup\"]],\"^7\",\"~$clojure.test.check.properties/ErrorResult\",\"^D\",\"clojure/test/check/properties.cljc\",\"^H\",23,\"~:type\",true,\"^F\",12,\"^U\",true,\"^E\",14,\"~:record\",true,\"^G\",14,\"~:skip-protocol-flag\",[\"^6\",[\"^1H\",\"^1I\",\"^1J\",\"^1K\",\"^1L\",\"^1M\",\"^1N\",\"^1P\",\"^1Q\",\"^1S\",\"^1T\",\"^1U\",\"^1V\"]]]],\"~:require-macros\",[\"^ \"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^6\",[\"~:error\",\"~:clojure.test.check.properties/error\",\"^X\",\"~:result\",\"~:function\",\"~:args\",\"^1>\",\"~$cljs.core/fn\"]],\"~:order\",[\"^22\",\"^23\",\"^X\",\"^24\",\"^25\",\"^26\",\"^1>\",\"^27\"]],\"^17\",null]","cljs/reader$macros.js":"goog.provide('cljs.reader');\ngoog.require('cljs.core');\ngoog.require('cljs.env');\nvar ret__21071__auto___634 = cljs.reader.add_data_readers = (function cljs$reader$add_data_readers(_AMPERSAND_form,_AMPERSAND_env,default_readers){\nvar data_readers = cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,(function (p__630){\nvar vec__631 = p__630;\nvar k = cljs.core.nth.call(null,vec__631,(0),null);\nvar v = cljs.core.nth.call(null,vec__631,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)].join(''),cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"x__58__auto__\",\"x__58__auto__\",(1342664031),null)))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,(function (){var x__20731__auto__ = cljs.core.vary_meta.call(null,v,cljs.core.assoc,new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",(-1872351017)),true);\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"x__58__auto__\",\"x__58__auto__\",(1342664031),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()))], null);\n}),cljs.core.get.call(null,cljs.core.deref.call(null,cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"data-readers\",\"cljs.analyzer/data-readers\",(1778544933)))));\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"merge\",\"cljs.core/merge\",(-822184067),null)),(function (){var x__20731__auto__ = default_readers;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = data_readers;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\ncljs.reader.add_data_readers.cljs$lang$macro = true;\n\n","cljs/spec/gen/alpha$macros.js":"// Compiled by ClojureScript 1.9.542 {:static-fns true}\ngoog.provide(\"cljs.spec.gen.alpha$macros\");\nvar ret__21071__auto___390 = (function (){\ncljs.spec.gen.alpha$macros.dynaload = (function cljs$spec$gen$alpha$macros$dynaload(_AMPERSAND_form,_AMPERSAND_env,p__383){\nvar vec__387 = p__383;\nvar quote = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__387,(0),null);\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__387,(1),null);\nvar xs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(s),/\\./);\nvar cnt = cljs.core.count(xs);\nvar checks = cljs.core.map.cljs$core$IFn$_invoke$arity$3(((function (xs,cnt,vec__387,quote,s){\nreturn (function (n,xs__$1){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"exists?\",\"cljs.core/exists?\",(1852387968),null)),(function (){var x__20731__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,xs__$1)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});})(xs,cnt,vec__387,quote,s))\n,cljs.core.range.cljs$core$IFn$_invoke$arity$2((2),cnt),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(xs));\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"LazyVar.\",\"cljs.spec.gen.alpha/LazyVar.\",(-1422353692),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",(-6692549),null)),checks,cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"exists?\",\"cljs.core/exists?\",(1852387968),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(s,cljs.core.assoc,new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",(-1872351017)),true);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"throw\",\"throw\",(595905694),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"js\",\"Error.\",\"js/Error.\",(750655924),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"str\",\"cljs.core/str\",(-1971828991),null)),cljs.core._conj(cljs.core.List.EMPTY,\"Var \"),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,\" does not exist, \"),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"namespace\",\"cljs.core/namespace\",(1653264270),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,\" never required\")], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.gen.alpha$macros.dynaload;},new cljs.core.Symbol(\"cljs.spec.gen.alpha$macros\",\"dynaload\",\"cljs.spec.gen.alpha$macros/dynaload\",(-1763489587),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.gen.alpha$macros\",\"cljs.spec.gen.alpha$macros\",(-1225446160),null),new cljs.core.Symbol(null,\"dynaload\",\"dynaload\",(1762342571),null),\"cljs/spec/gen/alpha.cljc\",(19),(1),(14),true,(14),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null),new cljs.core.Symbol(null,\"s\",\"s\",(-948495851),null)], null)], null)),null,(cljs.core.truth_(cljs.spec.gen.alpha$macros.dynaload)?cljs.spec.gen.alpha$macros.dynaload.cljs$lang$test:null)])));})()\n;\ncljs.spec.gen.alpha$macros.dynaload.cljs$lang$macro = true;\n\nvar ret__21071__auto___394 = (function (){\n/**\n * given body that returns a generator, returns a\n *   generator that delegates to that, but delays\n *   creation until used.\n */\n(function (){\ncljs.spec.gen.alpha$macros.delay = (function cljs$spec$gen$alpha$macros$delay(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___395 = arguments.length;\nvar i__21021__auto___396 = (0);\nwhile(true){\nif((i__21021__auto___396 < len__21020__auto___395)){\nargs__21023__auto__.push((arguments[i__21021__auto___396]));\n\nvar G__397 = (i__21021__auto___396 + (1));\ni__21021__auto___396 = G__397;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.gen.alpha$macros.delay.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.gen.alpha$macros.delay;},new cljs.core.Symbol(\"cljs.spec.gen.alpha$macros\",\"delay\",\"cljs.spec.gen.alpha$macros/delay\",(-1145665374),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.gen.alpha$macros\",\"cljs.spec.gen.alpha$macros\",(-1225446160),null),new cljs.core.Symbol(null,\"delay\",\"delay\",(1066306308),null),\"cljs/spec/gen/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(32),true,(32),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null)], null)),\"given body that returns a generator, returns a\\n  generator that delegates to that, but delays\\n  creation until used.\",(cljs.core.truth_(cljs.spec.gen.alpha$macros.delay)?cljs.spec.gen.alpha$macros.delay.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.gen.alpha$macros.delay.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"delay-impl\",\"cljs.spec.gen.alpha/delay-impl\",(-1184837112),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"delay\",\"cljs.core/delay\",(-406049125),null)),body));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.spec.gen.alpha$macros.delay.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.gen.alpha$macros.delay.cljs$lang$applyTo = (function (seq391){\nvar G__392 = cljs.core.first(seq391);\nvar seq391__$1 = cljs.core.next(seq391);\nvar G__393 = cljs.core.first(seq391__$1);\nvar seq391__$2 = cljs.core.next(seq391__$1);\nreturn cljs.spec.gen.alpha$macros.delay.cljs$core$IFn$_invoke$arity$variadic(G__392,G__393,seq391__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.gen.alpha$macros.delay;},new cljs.core.Symbol(\"cljs.spec.gen.alpha$macros\",\"delay\",\"cljs.spec.gen.alpha$macros/delay\",(-1145665374),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.gen.alpha$macros\",\"cljs.spec.gen.alpha$macros\",(-1225446160),null),new cljs.core.Symbol(null,\"delay\",\"delay\",(1066306308),null),\"cljs/spec/gen/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(32),true,(32),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null)], null)),\"given body that returns a generator, returns a\\n  generator that delegates to that, but delays\\n  creation until used.\",(cljs.core.truth_(cljs.spec.gen.alpha$macros.delay)?cljs.spec.gen.alpha$macros.delay.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.gen.alpha$macros.delay.cljs$lang$macro = true;\n\nvar ret__21071__auto___398 = /**\n * Implementation macro, do not call directly.\n */\n(function (){\ncljs.spec.gen.alpha$macros.lazy_combinator = (function cljs$spec$gen$alpha$macros$lazy_combinator(_AMPERSAND_form,_AMPERSAND_env,s){\nvar fqn = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"clojure.test.check.generators\",cljs.core.name(s));\nvar doc = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Lazy loaded version of \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(fqn)].join('');\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"g__16__auto__\",\"g__16__auto__\",(476678898),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"dynaload\",\"cljs.spec.gen.alpha/dynaload\",(-1253128860),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = fqn;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"defn\",\"cljs.core/defn\",(-1606493717),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = doc;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args\",\"args\",(-1338879193),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"apply\",\"cljs.core/apply\",(1757277831),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",(1901963335),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"g__16__auto__\",\"g__16__auto__\",(476678898),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args\",\"args\",(-1338879193),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.gen.alpha$macros.lazy_combinator;},new cljs.core.Symbol(\"cljs.spec.gen.alpha$macros\",\"lazy-combinator\",\"cljs.spec.gen.alpha$macros/lazy-combinator\",(1835043997),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"skip-wiki\",\"skip-wiki\",(-2018833298)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.gen.alpha$macros\",\"cljs.spec.gen.alpha$macros\",(-1225446160),null),new cljs.core.Symbol(null,\"lazy-combinator\",\"lazy-combinator\",(-519533249),null),\"cljs/spec/gen/alpha.cljc\",(38),true,(1),(39),true,(39),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"s\",\"s\",(-948495851),null)], null)),\"Implementation macro, do not call directly.\",(cljs.core.truth_(cljs.spec.gen.alpha$macros.lazy_combinator)?cljs.spec.gen.alpha$macros.lazy_combinator.cljs$lang$test:null)])));})()\n;\ncljs.spec.gen.alpha$macros.lazy_combinator.cljs$lang$macro = true;\n\nvar ret__21071__auto___402 = (function (){\n/**\n * Implementation macro, do not call directly.\n */\n(function (){\ncljs.spec.gen.alpha$macros.lazy_combinators = (function cljs$spec$gen$alpha$macros$lazy_combinators(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___403 = arguments.length;\nvar i__21021__auto___404 = (0);\nwhile(true){\nif((i__21021__auto___404 < len__21020__auto___403)){\nargs__21023__auto__.push((arguments[i__21021__auto___404]));\n\nvar G__405 = (i__21021__auto___404 + (1));\ni__21021__auto___404 = G__405;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.gen.alpha$macros.lazy_combinators.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.gen.alpha$macros.lazy_combinators;},new cljs.core.Symbol(\"cljs.spec.gen.alpha$macros\",\"lazy-combinators\",\"cljs.spec.gen.alpha$macros/lazy-combinators\",(1172241041),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"skip-wiki\",\"skip-wiki\",(-2018833298)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.gen.alpha$macros\",\"cljs.spec.gen.alpha$macros\",(-1225446160),null),new cljs.core.Symbol(null,\"lazy-combinators\",\"lazy-combinators\",(-906562317),null),\"cljs/spec/gen/alpha.cljc\",(39),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),true,(1),(50),true,(50),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null)], null)),\"Implementation macro, do not call directly.\",(cljs.core.truth_(cljs.spec.gen.alpha$macros.lazy_combinators)?cljs.spec.gen.alpha$macros.lazy_combinators.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.gen.alpha$macros.lazy_combinators.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,syms){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (s){\nreturn cljs.core._conj((function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"lazy-combinator\",\"cljs.spec.gen.alpha/lazy-combinator\",(1305287268),null));\n}),syms)));\n});\n\ncljs.spec.gen.alpha$macros.lazy_combinators.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.gen.alpha$macros.lazy_combinators.cljs$lang$applyTo = (function (seq399){\nvar G__400 = cljs.core.first(seq399);\nvar seq399__$1 = cljs.core.next(seq399);\nvar G__401 = cljs.core.first(seq399__$1);\nvar seq399__$2 = cljs.core.next(seq399__$1);\nreturn cljs.spec.gen.alpha$macros.lazy_combinators.cljs$core$IFn$_invoke$arity$variadic(G__400,G__401,seq399__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.gen.alpha$macros.lazy_combinators;},new cljs.core.Symbol(\"cljs.spec.gen.alpha$macros\",\"lazy-combinators\",\"cljs.spec.gen.alpha$macros/lazy-combinators\",(1172241041),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"skip-wiki\",\"skip-wiki\",(-2018833298)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.gen.alpha$macros\",\"cljs.spec.gen.alpha$macros\",(-1225446160),null),new cljs.core.Symbol(null,\"lazy-combinators\",\"lazy-combinators\",(-906562317),null),\"cljs/spec/gen/alpha.cljc\",(39),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),true,(1),(50),true,(50),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null)], null)),\"Implementation macro, do not call directly.\",(cljs.core.truth_(cljs.spec.gen.alpha$macros.lazy_combinators)?cljs.spec.gen.alpha$macros.lazy_combinators.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.gen.alpha$macros.lazy_combinators.cljs$lang$macro = true;\n\nvar ret__21071__auto___406 = /**\n * Implementation macro, do not call directly.\n */\n(function (){\ncljs.spec.gen.alpha$macros.lazy_prim = (function cljs$spec$gen$alpha$macros$lazy_prim(_AMPERSAND_form,_AMPERSAND_env,s){\nvar fqn = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"clojure.test.check.generators\",cljs.core.name(s));\nvar doc = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Fn returning \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(fqn)].join('');\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"g__17__auto__\",\"g__17__auto__\",(206624690),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"dynaload\",\"cljs.spec.gen.alpha/dynaload\",(-1253128860),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = fqn;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"defn\",\"cljs.core/defn\",(-1606493717),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = doc;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args\",\"args\",(-1338879193),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",(1901963335),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"g__17__auto__\",\"g__17__auto__\",(206624690),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.gen.alpha$macros.lazy_prim;},new cljs.core.Symbol(\"cljs.spec.gen.alpha$macros\",\"lazy-prim\",\"cljs.spec.gen.alpha$macros/lazy-prim\",(-2059465726),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"skip-wiki\",\"skip-wiki\",(-2018833298)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.gen.alpha$macros\",\"cljs.spec.gen.alpha$macros\",(-1225446160),null),new cljs.core.Symbol(null,\"lazy-prim\",\"lazy-prim\",(-116980768),null),\"cljs/spec/gen/alpha.cljc\",(32),true,(1),(58),true,(58),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"s\",\"s\",(-948495851),null)], null)),\"Implementation macro, do not call directly.\",(cljs.core.truth_(cljs.spec.gen.alpha$macros.lazy_prim)?cljs.spec.gen.alpha$macros.lazy_prim.cljs$lang$test:null)])));})()\n;\ncljs.spec.gen.alpha$macros.lazy_prim.cljs$lang$macro = true;\n\nvar ret__21071__auto___410 = (function (){\n/**\n * Implementation macro, do not call directly.\n */\n(function (){\ncljs.spec.gen.alpha$macros.lazy_prims = (function cljs$spec$gen$alpha$macros$lazy_prims(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___411 = arguments.length;\nvar i__21021__auto___412 = (0);\nwhile(true){\nif((i__21021__auto___412 < len__21020__auto___411)){\nargs__21023__auto__.push((arguments[i__21021__auto___412]));\n\nvar G__413 = (i__21021__auto___412 + (1));\ni__21021__auto___412 = G__413;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.gen.alpha$macros.lazy_prims.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.gen.alpha$macros.lazy_prims;},new cljs.core.Symbol(\"cljs.spec.gen.alpha$macros\",\"lazy-prims\",\"cljs.spec.gen.alpha$macros/lazy-prims\",(1520835766),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"skip-wiki\",\"skip-wiki\",(-2018833298)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.gen.alpha$macros\",\"cljs.spec.gen.alpha$macros\",(-1225446160),null),new cljs.core.Symbol(null,\"lazy-prims\",\"lazy-prims\",(-681697752),null),\"cljs/spec/gen/alpha.cljc\",(33),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),true,(1),(69),true,(69),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null)], null)),\"Implementation macro, do not call directly.\",(cljs.core.truth_(cljs.spec.gen.alpha$macros.lazy_prims)?cljs.spec.gen.alpha$macros.lazy_prims.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.gen.alpha$macros.lazy_prims.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,syms){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (s){\nreturn cljs.core._conj((function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"lazy-prim\",\"cljs.spec.gen.alpha/lazy-prim\",(-1495559509),null));\n}),syms)));\n});\n\ncljs.spec.gen.alpha$macros.lazy_prims.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.gen.alpha$macros.lazy_prims.cljs$lang$applyTo = (function (seq407){\nvar G__408 = cljs.core.first(seq407);\nvar seq407__$1 = cljs.core.next(seq407);\nvar G__409 = cljs.core.first(seq407__$1);\nvar seq407__$2 = cljs.core.next(seq407__$1);\nreturn cljs.spec.gen.alpha$macros.lazy_prims.cljs$core$IFn$_invoke$arity$variadic(G__408,G__409,seq407__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.gen.alpha$macros.lazy_prims;},new cljs.core.Symbol(\"cljs.spec.gen.alpha$macros\",\"lazy-prims\",\"cljs.spec.gen.alpha$macros/lazy-prims\",(1520835766),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"skip-wiki\",\"skip-wiki\",(-2018833298)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.gen.alpha$macros\",\"cljs.spec.gen.alpha$macros\",(-1225446160),null),new cljs.core.Symbol(null,\"lazy-prims\",\"lazy-prims\",(-681697752),null),\"cljs/spec/gen/alpha.cljc\",(33),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),true,(1),(69),true,(69),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"syms\",\"syms\",(64639765),null)], null)),\"Implementation macro, do not call directly.\",(cljs.core.truth_(cljs.spec.gen.alpha$macros.lazy_prims)?cljs.spec.gen.alpha$macros.lazy_prims.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.gen.alpha$macros.lazy_prims.cljs$lang$macro = true;\n\n\n//# sourceURL=cljs/spec/gen/alpha$macros.js?rel=1494623922631\n//# sourceMappingURL=data:application/json;base64,","cljs/compiler.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"],\"~$RegExp\",[\"^ \"],\"~$goog\",[\"^ \",\"~$string\",[\"^ \",\"~$StringBuffer\",[\"^ \",\"~$prototype\",[\"^ \",\"~$append\",[\"^ \"]]]]],\"~$Number\",[\"^ \"],\"~$String\",[\"^ \"],\"~$Boolean\",[\"^ \"],\"~$Date\",[\"^ \"]],\"~:use-macros\",[\"^ \",\"~$ensure\",\"~$cljs.env.macros\",\"~$emit-wrap\",\"~$cljs.compiler.macros\"],\"~:excludes\",[\"~#set\",[\"^?\",\"~$munge\",\"~$js-reserved\",\"~$macroexpand-1\"]],\"~:name\",\"~$cljs.compiler\",\"~:imports\",[\"^ \",\"^7\",\"~$goog.string.StringBuffer\"],\"~:requires\",[\"^ \",\"~$gstring\",\"~$goog.string\",\"~$cljs.tools.reader\",\"^O\",\"^N\",\"^N\",\"~$cljs.env\",\"^P\",\"~$ana\",\"~$cljs.analyzer\",\"~$sm\",\"~$cljs.source-map\",\"^7\",\"^K\",\"~$env\",\"^P\",\"^6\",\"~$clojure.string\",\"^R\",\"^R\",\"^T\",\"^T\",\"^V\",\"^V\",\"~$reader\",\"^O\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$protocol-prefix\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"~:line\",922,\"~:column\",7,\"~:end-line\",922,\"~:end-column\",22,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^17\",[[\"~$psym\"]]]]]],\"^H\",\"~$cljs.compiler/protocol-prefix\",\"~:variadic\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",22,\"~:method-params\",[\"^17\",[[\"^19\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^17\",[null,null]],\"^13\",1,\"^12\",922,\"^14\",922,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^19\"]]]]]],\"~$emit-arguments-to-array\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",708,\"^13\",7,\"^14\",708,\"^15\",30,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$startslice\"]]]]],\"~:doc\",\"Emit code that copies function arguments into an array starting at an index.\\n  Returns name of var holding the array.\"],\"^H\",\"~$cljs.compiler/emit-arguments-to-array\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",30,\"^1<\",[\"^17\",[[\"^1B\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",708,\"^14\",708,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^1B\"]]]]],\"^1C\",\"Emit code that copies function arguments into an array starting at an index.\\n  Returns name of var holding the array.\"],\"~$distinct-keys?\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",351,\"^13\",7,\"^14\",351,\"^15\",21,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$keys\"]]]]]],\"^H\",\"~$cljs.compiler/distinct-keys?\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",21,\"^1<\",[\"^17\",[[\"^1F\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",351,\"^14\",351,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^1F\"]]]]]],\"^E\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",82,\"^13\",7,\"^14\",82,\"^15\",12,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$s\"],[\"~$s\",\"~$reserved\"]]]]],\"~:top-fn\",[\"^ \",\"^1;\",false,\"^1?\",2,\"^1<\",[\"^17\",[[\"~$s\"],[\"~$s\",\"^1H\"]]],\"^16\",[\"^17\",[[\"~$s\"],[\"~$s\",\"^1H\"]]],\"^1>\",[\"^17\",[null,null]]]],\"^H\",\"~$cljs.compiler/munge\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",12,\"^1I\",[\"^ \",\"^1;\",false,\"^1?\",2,\"^1<\",[\"^17\",[[\"~$s\"],[\"~$s\",\"^1H\"]]],\"^16\",[\"^17\",[[\"~$s\"],[\"~$s\",\"^1H\"]]],\"^1>\",[\"^17\",[null,null]]],\"^1<\",[\"^17\",[[\"~$s\"],[\"~$s\",\"^1H\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",82,\"^14\",82,\"^1?\",2,\"^1@\",true,\"^16\",[\"^17\",[[\"~$s\"],[\"~$s\",\"^1H\"]]]],\"~$get-define\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",603,\"^13\",7,\"^14\",603,\"^15\",17,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$mname\",\"~$jsdoc\"]]]]]],\"^H\",\"~$cljs.compiler/get-define\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",17,\"^1<\",[\"^17\",[[\"^1L\",\"^1M\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",603,\"^14\",603,\"^1?\",2,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^1L\",\"^1M\"]]]]]],\"~$comma-sep\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",118,\"^13\",8,\"^14\",118,\"^15\",17,\"~:private\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$xs\"]]]]]],\"^1P\",true,\"^H\",\"~$cljs.compiler/comma-sep\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",17,\"^1<\",[\"^17\",[[\"^1Q\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",118,\"^14\",118,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^1Q\"]]]]]],\"~$ns-first-segments\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",46,\"^13\",7,\"^14\",46,\"^15\",24,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[]]]]]],\"^H\",\"~$cljs.compiler/ns-first-segments\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",24,\"^1<\",[\"^17\",[[]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",46,\"^14\",46,\"^1?\",0,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[]]]]]],\"~$valid-define-value?\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",597,\"^13\",7,\"^14\",597,\"^15\",26,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$x\"]]]]]],\"^H\",\"~$cljs.compiler/valid-define-value?\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",26,\"^1<\",[\"^17\",[[\"~$x\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",597,\"^14\",597,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$x\"]]]]]],\"~$emits-keyword\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",253,\"^13\",7,\"^14\",253,\"^15\",20,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$kw\"]]]]]],\"^H\",\"~$cljs.compiler/emits-keyword\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",20,\"^1<\",[\"^17\",[[\"^1X\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",253,\"^14\",253,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^1X\"]]]]]],\"~$*lexical-renames*\",[\"^ \",\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",42,\"^13\",16,\"^14\",42,\"^15\",33,\"~:dynamic\",true],\"^H\",\"~$cljs.compiler/*lexical-renames*\",\"^11\",\"out/cljs/compiler.cljc\",\"^15\",33,\"^13\",1,\"^1[\",true,\"^12\",42,\"^14\",42,\"~:tag\",\"~$cljs.core/IMap\"],\"~$emit-let\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",873,\"^13\",7,\"^14\",873,\"^15\",15,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"~:keys\",[\"~$bindings\",\"~$expr\",\"^U\"]],\"~$is-loop\"]]]]]],\"^H\",\"~$cljs.compiler/emit-let\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",15,\"^1<\",[\"^17\",[[\"~$p__14507\",\"^27\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",873,\"^14\",873,\"^1?\",2,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^25\",\"^26\",\"^U\"]],\"^27\"]]]]]],\"~$cljs-reserved-file-names\",[\"^ \",\"^H\",\"~$cljs.compiler/cljs-reserved-file-names\",\"^11\",\"out/cljs/compiler.cljc\",\"^12\",44,\"^13\",1,\"^14\",44,\"^15\",30,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",44,\"^13\",6,\"^14\",44,\"^15\",30],\"^21\",\"~$cljs.core/ISet\"],\"~$base-types\",[\"^ \",\"^H\",\"~$cljs.compiler/base-types\",\"^11\",\"out/cljs/compiler.cljc\",\"^12\",493,\"^13\",1,\"^14\",493,\"^15\",16,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",493,\"^13\",6,\"^14\",493,\"^15\",16],\"^21\",\"^2<\"],\"~$resolve-type\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",506,\"^13\",7,\"^14\",506,\"^15\",19,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^U\",\"~$t\"]]]]]],\"^H\",\"~$cljs.compiler/resolve-type\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",19,\"^1<\",[\"^17\",[[\"^U\",\"~$t\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",506,\"^14\",506,\"^1?\",2,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^U\",\"~$t\"]]]]]],\"~$emit-variadic-fn-method\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",722,\"^13\",7,\"^14\",722,\"^15\",30,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"~$type\",\"~$name\",\"~$variadic\",\"~$params\",\"^26\",\"^U\",\"~$recurs\",\"~$max-fixed-arity\"],\"~:as\",\"~$f\"]]]]]]],\"^H\",\"~$cljs.compiler/emit-variadic-fn-method\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",30,\"^1<\",[\"^17\",[[\"~$p__14281\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",722,\"^14\",722,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^2B\",\"^2C\",\"^2D\",\"^2E\",\"^26\",\"^U\",\"^2F\",\"^2G\"],\"^2H\",\"~$f\"]]]]]]],\"^F\",[\"^ \",\"^H\",\"~$cljs.compiler/js-reserved\",\"^11\",\"out/cljs/compiler.cljc\",\"^12\",37,\"^13\",1,\"^14\",37,\"^15\",17,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",37,\"^13\",6,\"^14\",37,\"^15\",17],\"^21\",\"^2<\"],\"~$*recompiled*\",[\"^ \",\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",39,\"^13\",16,\"^14\",39,\"^15\",28,\"^1[\",true],\"^H\",\"~$cljs.compiler/*recompiled*\",\"^11\",\"out/cljs/compiler.cljc\",\"^15\",28,\"^13\",1,\"^1[\",true,\"^12\",39,\"^14\",39,\"^21\",\"~$clj-nil\"],\"~$emits\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",175,\"^13\",7,\"^14\",175,\"^15\",12,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$&\",\"^1Q\"]]]]],\"^1I\",[\"^ \",\"^1;\",true,\"^1?\",0,\"^1<\",[[\"^17\",[\"^1Q\"]]],\"^16\",[\"^17\",[[\"~$&\",\"^1Q\"]]],\"^1>\",[\"^17\",[null]]]],\"^H\",\"~$cljs.compiler/emits\",\"^1;\",true,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",12,\"^1I\",[\"^ \",\"^1;\",true,\"^1?\",0,\"^1<\",[[\"^17\",[\"^1Q\"]]],\"^16\",[\"^17\",[[\"~$&\",\"^1Q\"]]],\"^1>\",[\"^17\",[null]]],\"^1<\",[[\"^17\",[\"^1Q\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null]],\"^13\",1,\"^12\",175,\"^14\",175,\"^1?\",0,\"^1@\",true,\"^16\",[\"^17\",[[\"~$&\",\"^1Q\"]]]],\"~$emit-constant\",[\"^ \",\"^H\",\"~$cljs.compiler/emit-constant\",\"^11\",\"out/cljs/compiler.cljc\",\"^12\",206,\"^13\",4,\"^14\",206,\"^15\",27,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",206,\"^13\",14,\"^14\",206,\"^15\",27],\"^21\",\"~$cljs.core/MultiFn\"],\"~$emit-constants-table\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",1516,\"^13\",7,\"^14\",1516,\"^15\",27,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$table\"]]]]]],\"^H\",\"~$cljs.compiler/emit-constants-table\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",27,\"^1<\",[\"^17\",[[\"^2U\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",1516,\"^14\",1516,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^2U\"]]]]]],\"~$escape-string\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",141,\"^13\",8,\"^14\",141,\"^15\",21,\"^1P\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$s\"]]]]]],\"^1P\",true,\"^H\",\"~$cljs.compiler/escape-string\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",21,\"^1<\",[\"^17\",[[\"~$s\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",141,\"^14\",141,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$s\"]]]]]],\"~$emit-fn-params\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",686,\"^13\",7,\"^14\",686,\"^15\",21,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^2E\"]]]]]],\"^H\",\"~$cljs.compiler/emit-fn-params\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",21,\"^1<\",[\"^17\",[[\"^2E\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",686,\"^14\",686,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^2E\"]]]]]],\"~$munge-reserved\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",76,\"^13\",7,\"^14\",76,\"^15\",21,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^1H\"]]]]]],\"^H\",\"~$cljs.compiler/munge-reserved\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",21,\"^1<\",[\"^17\",[[\"^1H\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",76,\"^14\",76,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^1H\"]]]]]],\"~$fn-self-name\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",66,\"^13\",7,\"^14\",66,\"^15\",19,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^2C\",\"~$info\"],\"^2H\",\"~$name-var\"]]]]]]],\"^H\",\"~$cljs.compiler/fn-self-name\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",19,\"^1<\",[\"^17\",[[\"~$p__13717\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",66,\"^14\",66,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^2C\",\"^32\"],\"^2H\",\"^33\"]]]]]]],\"~$load-libs\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",1035,\"^13\",7,\"^14\",1035,\"^15\",16,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$libs\",\"~$seen\",\"~$reloads\",\"~$deps\"]]]]]],\"^H\",\"~$cljs.compiler/load-libs\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",16,\"^1<\",[\"^17\",[[\"^37\",\"^38\",\"^39\",\"^3:\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",1035,\"^14\",1035,\"^1?\",4,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^37\",\"^38\",\"^39\",\"^3:\"]]]]]],\"~$munge-param-return\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",545,\"^13\",7,\"^14\",545,\"^15\",25,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^U\",\"~$line\"]]]]]],\"^H\",\"~$cljs.compiler/munge-param-return\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",25,\"^1<\",[\"^17\",[[\"^U\",\"^3=\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",545,\"^14\",545,\"^1?\",2,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^U\",\"^3=\"]]]]]],\"~$emit*\",[\"^ \",\"^H\",\"~$cljs.compiler/emit*\",\"^11\",\"out/cljs/compiler.cljc\",\"^12\",151,\"^13\",1,\"^14\",151,\"^15\",16,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",151,\"^13\",11,\"^14\",151,\"^15\",16],\"^21\",\"^2S\"],\"~$array-map-threshold\",[\"^ \",\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",349,\"^13\",16,\"^14\",349,\"^15\",35,\"^1P\",true],\"^1P\",true,\"^H\",\"~$cljs.compiler/array-map-threshold\",\"^11\",\"out/cljs/compiler.cljc\",\"^15\",35,\"^13\",1,\"^12\",349,\"^14\",349,\"^21\",\"~$number\"],\"~$checking-types?\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",567,\"^13\",7,\"^14\",567,\"^15\",22,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[]]]]]],\"^H\",\"~$cljs.compiler/checking-types?\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",22,\"^1<\",[\"^17\",[[]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",567,\"^14\",567,\"^1?\",0,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[]]]]]],\"~$emit-fn-method\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",693,\"^13\",7,\"^14\",693,\"^15\",21,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^2B\",\"^2C\",\"^2D\",\"^2E\",\"^26\",\"^U\",\"^2F\",\"^2G\"]]]]]]]],\"^H\",\"~$cljs.compiler/emit-fn-method\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",21,\"^1<\",[\"^17\",[[\"~$p__14276\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",693,\"^14\",693,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^2B\",\"^2C\",\"^2D\",\"^2E\",\"^26\",\"^U\",\"^2F\",\"^2G\"]]]]]]]],\"~$emit-comment\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",572,\"^13\",7,\"^14\",572,\"^15\",19,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$doc\",\"^1M\"],[\"^U\",\"^3J\",\"^1M\"]]]]],\"^1C\",\"Emit a nicely formatted comment string.\",\"^1I\",[\"^ \",\"^1;\",false,\"^1?\",3,\"^1<\",[\"^17\",[[\"^3J\",\"^1M\"],[\"^U\",\"^3J\",\"^1M\"]]],\"^16\",[\"^17\",[[\"^3J\",\"^1M\"],[\"^U\",\"^3J\",\"^1M\"]]],\"^1>\",[\"^17\",[null,null]]]],\"^H\",\"~$cljs.compiler/emit-comment\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",19,\"^1I\",[\"^ \",\"^1;\",false,\"^1?\",3,\"^1<\",[\"^17\",[[\"^3J\",\"^1M\"],[\"^U\",\"^3J\",\"^1M\"]]],\"^16\",[\"^17\",[[\"^3J\",\"^1M\"],[\"^U\",\"^3J\",\"^1M\"]]],\"^1>\",[\"^17\",[null,null]]],\"^1<\",[\"^17\",[[\"^3J\",\"^1M\"],[\"^U\",\"^3J\",\"^1M\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",572,\"^14\",572,\"^1?\",3,\"^1@\",true,\"^16\",[\"^17\",[[\"^3J\",\"^1M\"],[\"^U\",\"^3J\",\"^1M\"]]],\"^1C\",\"Emit a nicely formatted comment string.\"],\"~$wrap-in-double-quotes\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",148,\"^13\",8,\"^14\",148,\"^15\",29,\"^1P\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$x\"]]]]]],\"^1P\",true,\"^H\",\"~$cljs.compiler/wrap-in-double-quotes\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",29,\"^1<\",[\"^17\",[[\"~$x\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",148,\"^14\",148,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$x\"]]]]]],\"~$hash-scope\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",59,\"^13\",7,\"^14\",59,\"^15\",17,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$s\"]]]]]],\"^H\",\"~$cljs.compiler/hash-scope\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",17,\"^1<\",[\"^17\",[[\"~$s\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",59,\"^14\",59,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$s\"]]]]]],\"~$emit-apply-to\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",651,\"^13\",7,\"^14\",651,\"^15\",20,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^2C\",\"^2E\",\"^U\"]]]]]]]],\"^H\",\"~$cljs.compiler/emit-apply-to\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",20,\"^1<\",[\"^17\",[[\"~$p__14148\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",651,\"^14\",651,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^2C\",\"^2E\",\"^U\"]]]]]]]],\"~$emits-symbol\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",268,\"^13\",7,\"^14\",268,\"^15\",19,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$sym\"]]]]]],\"^H\",\"~$cljs.compiler/emits-symbol\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",19,\"^1<\",[\"^17\",[[\"^3T\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",268,\"^14\",268,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^3T\"]]]]]],\"~$falsey-constant?\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",438,\"^13\",7,\"^14\",438,\"^15\",23,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"~$op\",\"~$form\"]]]]]]]],\"^H\",\"~$cljs.compiler/falsey-constant?\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",23,\"^1<\",[\"^17\",[[\"~$p__13941\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",438,\"^14\",438,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^3W\",\"^3X\"]]]]]]]],\"~$build-affecting-options\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",1184,\"^13\",8,\"^14\",1184,\"^15\",31,\"^1P\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$opts\"]]]]]],\"^1P\",true,\"^H\",\"~$cljs.compiler/build-affecting-options\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",31,\"^1<\",[\"^17\",[[\"^40\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",1184,\"^14\",1184,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^40\"]]]]]],\"~$*source-map-data*\",[\"^ \",\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",41,\"^13\",16,\"^14\",41,\"^15\",33,\"^1[\",true],\"^H\",\"~$cljs.compiler/*source-map-data*\",\"^11\",\"out/cljs/compiler.cljc\",\"^15\",33,\"^13\",1,\"^1[\",true,\"^12\",41,\"^14\",41,\"^21\",\"^2N\"],\"~$mapped-types\",[\"^ \",\"^H\",\"~$cljs.compiler/mapped-types\",\"^11\",\"out/cljs/compiler.cljc\",\"^12\",503,\"^13\",1,\"^14\",503,\"^15\",18,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",503,\"^13\",6,\"^14\",503,\"^15\",18],\"^21\",\"^22\"],\"~$resolve-types\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",540,\"^13\",7,\"^14\",540,\"^15\",20,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^U\",\"~$ts\"]]]]]],\"^H\",\"~$cljs.compiler/resolve-types\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",20,\"^1<\",[\"^17\",[[\"^U\",\"^47\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",540,\"^14\",540,\"^1?\",2,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^U\",\"^47\"]]]]]],\"~$*inputs*\",[\"^ \",\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",40,\"^13\",16,\"^14\",40,\"^15\",24,\"^1[\",true],\"^H\",\"~$cljs.compiler/*inputs*\",\"^11\",\"out/cljs/compiler.cljc\",\"^15\",24,\"^13\",1,\"^1[\",true,\"^12\",40,\"^14\",40,\"^21\",\"^2N\"],\"~$escape-char\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",121,\"^13\",8,\"^14\",121,\"^15\",19,\"^1P\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$c\"]]]]]],\"^1P\",true,\"^H\",\"~$cljs.compiler/escape-char\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",19,\"^1<\",[\"^17\",[[\"~$c\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",121,\"^14\",121,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$c\"]]]]]],\"~$emit-str\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",200,\"^13\",15,\"^14\",200,\"^15\",23,\"^21\",\"^;\",\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^26\"]]]]]],\"^H\",\"~$cljs.compiler/emit-str\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",23,\"^1<\",[\"^17\",[[\"^26\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",200,\"~:ret-tag\",\"^;\",\"^14\",200,\"^1?\",1,\"^21\",\"^;\",\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^26\"]]]]]],\"~$truthy-constant?\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",432,\"^13\",7,\"^14\",432,\"^15\",23,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^3W\",\"^3X\"]]]]]]]],\"^H\",\"~$cljs.compiler/truthy-constant?\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",23,\"^1<\",[\"^17\",[[\"~$p__13936\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",432,\"^14\",432,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[[\"^ \",\"^24\",[\"^3W\",\"^3X\"]]]]]]]],\"~$emitln\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",189,\"^13\",7,\"^14\",189,\"^15\",13,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$&\",\"^1Q\"]]]]],\"^1I\",[\"^ \",\"^1;\",true,\"^1?\",0,\"^1<\",[[\"^17\",[\"^1Q\"]]],\"^16\",[\"^17\",[[\"~$&\",\"^1Q\"]]],\"^1>\",[\"^17\",[null]]]],\"^H\",\"~$cljs.compiler/emitln\",\"^1;\",true,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",13,\"^1I\",[\"^ \",\"^1;\",true,\"^1?\",0,\"^1<\",[[\"^17\",[\"^1Q\"]]],\"^16\",[\"^17\",[[\"~$&\",\"^1Q\"]]],\"^1>\",[\"^17\",[null]]],\"^1<\",[[\"^17\",[\"^1Q\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null]],\"^13\",1,\"^12\",189,\"^14\",189,\"^1?\",0,\"^1@\",true,\"^16\",[\"^17\",[[\"~$&\",\"^1Q\"]]]],\"~$emit\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",153,\"^13\",7,\"^14\",153,\"^15\",11,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$ast\"]]]]]],\"^H\",\"~$cljs.compiler/emit\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",11,\"^1<\",[\"^17\",[[\"^4F\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",153,\"^14\",153,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^4F\"]]]]]],\"~$safe-test?\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",442,\"^13\",7,\"^14\",442,\"^15\",17,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^U\",\"~$e\"]]]]]],\"^H\",\"~$cljs.compiler/safe-test?\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",17,\"^1<\",[\"^17\",[[\"^U\",\"~$e\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",442,\"^14\",442,\"^1?\",2,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^U\",\"~$e\"]]]]]],\"~$emit-externs\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",1539,\"^13\",7,\"^14\",1539,\"^15\",19,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$externs\"],[\"~$prefix\",\"^4K\",\"~$top-level\",\"~$known-externs\"]]]]],\"^1I\",[\"^ \",\"^1;\",false,\"^1?\",4,\"^1<\",[\"^17\",[[\"^4K\"],[\"^4L\",\"^4K\",\"^4M\",\"^4N\"]]],\"^16\",[\"^17\",[[\"^4K\"],[\"^4L\",\"^4K\",\"^4M\",\"^4N\"]]],\"^1>\",[\"^17\",[null,null]]]],\"^H\",\"~$cljs.compiler/emit-externs\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",19,\"^1I\",[\"^ \",\"^1;\",false,\"^1?\",4,\"^1<\",[\"^17\",[[\"^4K\"],[\"^4L\",\"^4K\",\"^4M\",\"^4N\"]]],\"^16\",[\"^17\",[[\"^4K\"],[\"^4L\",\"^4K\",\"^4M\",\"^4N\"]]],\"^1>\",[\"^17\",[null,null]]],\"^1<\",[\"^17\",[[\"^4K\"],[\"^4L\",\"^4K\",\"^4M\",\"^4N\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",1539,\"^14\",1539,\"^1?\",4,\"^1@\",true,\"^16\",[\"^17\",[[\"^4K\"],[\"^4L\",\"^4K\",\"^4M\",\"^4N\"]]]],\"~$distinct-constants?\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",396,\"^13\",7,\"^14\",396,\"^15\",26,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$items\"]]]]]],\"^H\",\"~$cljs.compiler/distinct-constants?\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",26,\"^1<\",[\"^17\",[[\"^4Q\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",396,\"^14\",396,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"^4Q\"]]]]]],\"~$shadow-depth\",[\"^ \",\"^[\",null,\"^10\",[\"^ \",\"^11\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/compiler.cljc\",\"^12\",51,\"^13\",7,\"^14\",51,\"^15\",19,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$s\"]]]]]],\"^H\",\"~$cljs.compiler/shadow-depth\",\"^1;\",false,\"^11\",\"out/cljs/compiler.cljc\",\"^15\",19,\"^1<\",[\"^17\",[[\"~$s\"]]],\"^1=\",null,\"^1>\",[\"^17\",[null,null]],\"^13\",1,\"^12\",51,\"^14\",51,\"^1?\",1,\"^1@\",true,\"^16\",[\"^17\",[\"^18\",[\"^17\",[[\"~$s\"]]]]]]],\"~:require-macros\",[\"^ \",\"^B\",\"^B\",\"^@\",\"^@\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^D\",[\"~:args\",\"~$seq\",\"~:ns*\",\"~:cljs.analyzer/namespaces\",\"~:gline\",\"~:finally\",\"~:statement\",\"~:ret\",\"~:var-special\",\"~:ctor\",\"~:recurs\",\"~:js\",\"~$clj\",\"~$boolean\",\"~$cljs.core.*loaded-libs*\",\"~:closure-warnings\",\"~:let\",\"~:v\",\"^[\",\"~:fn\",\"~$object\",\"~:closure-defines\",\"^10\",\"~:static-fns\",\"~:frame\",\"~:fn-scope\",\"~:do\",\"~$var_args\",\"~:pmasks\",\"~:init\",\"~:exprs\",\"~:else\",\"~:optimize-constants\",\"~$any\",\"~:protocol\",\"~:cljs.analyzer/externs\",\"~:if\",\"~:tests\",\"~:return\",\"~:method\",\"~:use\",\"~:segs\",\"~:default\",\"~:new\",\"~:protocols\",\"~:ns\",\"~:bindings\",\"~:elide-asserts\",\"~:def-emits-var\",\"^H\",\"~:binding-form?\",\"^1;\",\"~:flag\",\"~:constant\",\"~:loop-lets\",\"~:unchecked\",\"~$cljs.core\",\"~:fields\",\"~$js\",\"~:optimizations\",\"~$__hash\",\"~:require\",\"~:params\",\"^5\",\"~:js-value\",\"~:js-module-index\",\"~:fn-self-name\",\"~:deftype*\",\"~:val\",\"~:recur\",\"~:field\",\"~:type\",\"~$__meta\",\"^1<\",\"^3C\",\"~:vals\",\"~:op\",\"~:env\",\"~:letfn\",\"~:vector\",\"~:export\",\"~:js-type\",\"~:cljs.analyzer/constant-table\",\"~:invalid-constant-type\",\"~:sym\",\"~:no-op\",\"^13\",\"~:loop\",\"~:check-types\",\"^L\",\"~:warning\",\"^24\",\"~:thens\",\"~:set!\",\"~:methods\",\"~$not-native\",\"^1[\",\"^12\",\"~:expr\",\"~:list\",\"~:var\",\"~$Math\",\"~$clj-or-nil\",\"^X\",\"~:catch\",\"~:recur-frames\",\"~$array\",\"^6\",\"~:info\",\"~:code\",\"~$function\",\"~:then\",\"~:source-map\",\"~:var-ast\",\"~:context\",\"~:invoke\",\"~:throw\",\"~:gcol\",\"~:reload\",\"~:f\",\"~:error\",\"~$cljs.core/not\",\"~:def\",\"~:reload-all\",\"^4U\",\"^1?\",\"~:t\",\"~:case*\",\"~:options\",\"~:form\",\"~:dot\",\"~:target\",\"~:reloads\",\"~:try\",\"~:set\",\"~:items\",\"^8\",\"^1@\",\"~:defrecord*\",\"~:hierarchy\",\"~:shadow\",\"~:body\",\"^1C\",\"~:jsdoc\",\"~:map\",\"~$__extmap\",\"~:gen-line\",\"~$js/-Infinity\",\"~:object\",\"~:test\",\"~:none\",\"~:emit-constants\",\"^2N\",\"~:deps\",\"~:gen-col\",\"~:statements\"]],\"~:order\",[\"^4[\",\"^H\",\"^71\",\"^7K\",\"^5H\",\"^5V\",\"^5B\",\"^6@\",\"^6<\",\"^7J\",\"^6D\",\"^5S\",\"^6E\",\"^12\",\"^13\",\"^7:\",\"^50\",\"^7W\",\"^7P\",\"^6W\",\"^75\",\"^60\",\"^6A\",\"^7U\",\"^7A\",\"^6J\",\"^6M\",\"^7B\",\"^6;\",\"^5Z\",\"^52\",\"^77\",\"^5O\",\"^7Q\",\"^6U\",\"^54\",\"^6L\",\"^10\",\"^7N\",\"^24\",\"^6C\",\"^6V\",\"^7H\",\"^6G\",\"^7G\",\"^6:\",\"^6I\",\"^7R\",\"^4Y\",\"^59\",\"^5M\",\"^7S\",\"^74\",\"^62\",\"^7@\",\"~:v\",\"^5N\",\"^6Q\",\"^79\",\"^6P\",\"^7<\",\"^5;\",\"^6O\",\"^66\",\"^7T\",\"^5?\",\"^7>\",\"^5F\",\"^1C\",\"^7M\",\"^6H\",\"^76\",\"^5Y\",\"^69\",\"^1;\",\"^56\",\"^1?\",\"^5D\",\"^5=\",\"^6S\",\"^6[\",\"^61\",\"^5[\",\"^5C\",\"^7X\",\"^53\",\"^7F\",\"^6Z\",\"^51\",\"^5W\",\"^5<\",\"^6N\",\"^6?\",\"^5A\",\"^5G\",\"^6F\",\"^78\",\"~:f\",\"^4X\",\"^1[\",\"^1@\",\"^5K\",\"^6T\",\"^[\",\"^58\",\"^5>\",\"^5J\",\"^65\",\"^3C\",\"^6Y\",\"^70\",\"^6\",\"^73\",\"^2N\",\"^5U\",\"^7=\",\"^6X\",\"^5\",\"^1<\",\"^5T\",\"^55\",\"^6R\",\"^7D\",\"^6>\",\"^5:\",\"^7?\",\"^7;\",\"^4Z\",\"^L\",\"^X\",\"^4U\",\"^7E\",\"^7V\",\"^68\",\"^5Q\",\"^63\",\"^6=\",\"~:t\",\"^64\",\"^5E\",\"^7L\",\"^7I\",\"^6B\",\"^7O\",\"^67\",\"^7C\",\"^5P\",\"^57\",\"^72\",\"^5R\",\"^5@\",\"^5I\",\"^5X\",\"^6K\",\"^5L\",\"^8\"]],\"^1C\",null]","cljs/spec/test/alpha$macros.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$cljs.spec.test.alpha$macros\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$cljs.analyzer.api\",\"^;\",\"~$gen\",\"~$cljs.spec.gen.alpha\",\"~$ana\",\"~$cljs.analyzer\",\"~$s\",\"~$cljs.spec.alpha\",\"~$string\",\"~$clojure.string\",\"^?\",\"^?\",\"^B\",\"^B\",\"^@\",\"^@\",\"^=\",\"^=\",\"~$ana-api\",\"^;\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$eval\",[\"^ \",\"^7\",\"~$cljs.spec.test.alpha$macros/eval\",\"~:meta\",[\"^ \",\"~:file\",null],\"^I\",null,\"~:line\",null,\"~:column\",null,\"~:tag\",\"~$any\"],\"~$collectionize\",[\"^ \",\"~:protocol-inline\",null,\"^H\",[\"^ \",\"^I\",\"~$cljs.spec.test.alpha\",\"^J\",19,\"^K\",8,\"~:end-line\",19,\"~:end-column\",21,\"~:private\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^U\",[[\"~$x\"]]]]]],\"^S\",true,\"^7\",\"~$cljs.spec.test.alpha$macros/collectionize\",\"~:variadic\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",21,\"~:method-params\",[\"^U\",[[\"~$x\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^U\",[null,null]],\"^K\",1,\"^J\",19,\"^Q\",19,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[\"~$x\"]]]]]],\"~$instrumented-vars\",[\"^ \",\"^H\",[\"^ \",\"^I\",\"^P\",\"^J\",17,\"^K\",20,\"^Q\",17,\"^R\",37,\"^S\",true],\"^S\",true,\"^7\",\"~$cljs.spec.test.alpha$macros/instrumented-vars\",\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",37,\"^K\",1,\"^J\",17,\"^Q\",17,\"^L\",\"^M\"],\"~$check-fn\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^R\",19,\"~:top-fn\",[\"^ \",\"^X\",false,\"^10\",5,\"^Y\",[\"^U\",[[\"~$&form\",\"~$&env\",\"~$f\",\"~$spec\"],[\"^16\",\"^17\",\"~$f\",\"^18\",\"~$opts\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\",\"~$f\",\"^18\"],[\"^16\",\"^17\",\"~$f\",\"^18\",\"^19\"]]],\"^[\",[\"^U\",[null,null]]],\"^K\",11,\"^J\",175,\"~:macro\",true,\"^Q\",175,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[\"~$f\",\"^18\"],[\"~$f\",\"^18\",\"^19\"]]]]],\"~:doc\",\"Runs generative tests for fn f using spec and opts. See\\n'check' for options and return.\"],\"^7\",\"~$cljs.spec.test.alpha$macros/check-fn\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",19,\"^15\",[\"^ \",\"^X\",false,\"^10\",5,\"^Y\",[\"^U\",[[\"^16\",\"^17\",\"~$f\",\"^18\"],[\"^16\",\"^17\",\"~$f\",\"^18\",\"^19\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\",\"~$f\",\"^18\"],[\"^16\",\"^17\",\"~$f\",\"^18\",\"^19\"]]],\"^[\",[\"^U\",[null,null]]],\"^Y\",[\"^U\",[[\"^16\",\"^17\",\"~$f\",\"^18\"],[\"^16\",\"^17\",\"~$f\",\"^18\",\"^19\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null]],\"^K\",1,\"^J\",175,\"^1:\",true,\"^Q\",175,\"^10\",5,\"^11\",false,\"^T\",[\"^U\",[[\"^16\",\"^17\",\"~$f\",\"^18\"],[\"^16\",\"^17\",\"~$f\",\"^18\",\"^19\"]]],\"^1;\",\"Runs generative tests for fn f using spec and opts. See\\n'check' for options and return.\"],\"~$instrument\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^R\",21,\"^15\",[\"^ \",\"^X\",false,\"^10\",4,\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"~$xs\"],[\"^16\",\"^17\",\"~$sym-or-syms\",\"^19\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1>\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^[\",[\"^U\",[null,null,null]]],\"^K\",11,\"^J\",67,\"^1:\",true,\"^Q\",67,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[],[\"^1>\"],[\"^1?\",\"^19\"]]]]],\"^1;\",\"Instruments the vars named by sym-or-syms, a symbol or collection\\nof symbols, or all instrumentable vars if sym-or-syms is not\\nspecified. If a symbol identifies a namespace then all symbols in that\\nnamespace will be enumerated.\\n\\nIf a var has an :args fn-spec, sets the var's root binding to a\\nfn that checks arg conformance (throwing an exception on failure)\\nbefore delegating to the original fn.\\n\\nThe opts map can be used to override registered specs, and/or to\\nreplace fn implementations entirely. Opts for symbols not included\\nin sym-or-syms are ignored. This facilitates sharing a common\\noptions map across many different calls to instrument.\\n\\nThe opts map may have the following keys:\\n\\n  :spec     a map from var-name symbols to override specs\\n  :stub     a set of var-name symbols to be replaced by stubs\\n  :gen      a map from spec names to generator overrides\\n  :replace  a map from var-name symbols to replacement fns\\n\\n:spec overrides registered fn-specs with specs your provide. Use\\n:spec overrides to provide specs for libraries that do not have\\nthem, or to constrain your own use of a fn to a subset of its\\nspec'ed contract.\\n\\n:stub replaces a fn with a stub that checks :args, then uses the\\n:ret spec to generate a return value.\\n\\n:gen overrides are used only for :stub generation.\\n\\n:replace replaces a fn with a fn that checks args conformance, then\\ninvokes the fn you provide, enabling arbitrary stubbing and mocking.\\n\\n:spec can be used in combination with :stub or :replace.\\n\\nReturns a collection of syms naming the vars instrumented.\"],\"^7\",\"~$cljs.spec.test.alpha$macros/instrument\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",21,\"^15\",[\"^ \",\"^X\",false,\"^10\",4,\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1>\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1>\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^[\",[\"^U\",[null,null,null]]],\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1>\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null,null]],\"^K\",1,\"^J\",67,\"^1:\",true,\"^Q\",67,\"^10\",4,\"^11\",false,\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1>\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^1;\",\"Instruments the vars named by sym-or-syms, a symbol or collection\\nof symbols, or all instrumentable vars if sym-or-syms is not\\nspecified. If a symbol identifies a namespace then all symbols in that\\nnamespace will be enumerated.\\n\\nIf a var has an :args fn-spec, sets the var's root binding to a\\nfn that checks arg conformance (throwing an exception on failure)\\nbefore delegating to the original fn.\\n\\nThe opts map can be used to override registered specs, and/or to\\nreplace fn implementations entirely. Opts for symbols not included\\nin sym-or-syms are ignored. This facilitates sharing a common\\noptions map across many different calls to instrument.\\n\\nThe opts map may have the following keys:\\n\\n  :spec     a map from var-name symbols to override specs\\n  :stub     a set of var-name symbols to be replaced by stubs\\n  :gen      a map from spec names to generator overrides\\n  :replace  a map from var-name symbols to replacement fns\\n\\n:spec overrides registered fn-specs with specs your provide. Use\\n:spec overrides to provide specs for libraries that do not have\\nthem, or to constrain your own use of a fn to a subset of its\\nspec'ed contract.\\n\\n:stub replaces a fn with a stub that checks :args, then uses the\\n:ret spec to generate a return value.\\n\\n:gen overrides are used only for :stub generation.\\n\\n:replace replaces a fn with a fn that checks args conformance, then\\ninvokes the fn you provide, enabling arbitrary stubbing and mocking.\\n\\n:spec can be used in combination with :stub or :replace.\\n\\nReturns a collection of syms naming the vars instrumented.\"],\"~$unstrument-1\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^J\",43,\"^K\",11,\"^Q\",43,\"^R\",23,\"^1:\",true,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[[\"^V\",\"~$s\"]]]]]]],\"^7\",\"~$cljs.spec.test.alpha$macros/unstrument-1\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",23,\"^Y\",[\"^U\",[[\"^16\",\"^17\",\"~$p__620\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null]],\"^K\",1,\"^J\",43,\"^1:\",true,\"^Q\",43,\"^10\",3,\"^11\",false,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[[\"^V\",\"~$s\"]]]]]]],\"~$unstrument\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^R\",21,\"^15\",[\"^ \",\"^X\",false,\"^10\",3,\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"]]],\"^[\",[\"^U\",[null,null]]],\"^K\",11,\"^J\",127,\"^1:\",true,\"^Q\",127,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[],[\"^1?\"]]]]],\"^1;\",\"Undoes instrument on the vars named by sym-or-syms, specified\\nas in instrument. With no args, unstruments all instrumented vars.\\nReturns a collection of syms naming the vars unstrumented.\"],\"^7\",\"~$cljs.spec.test.alpha$macros/unstrument\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",21,\"^15\",[\"^ \",\"^X\",false,\"^10\",3,\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"]]],\"^[\",[\"^U\",[null,null]]],\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null]],\"^K\",1,\"^J\",127,\"^1:\",true,\"^Q\",127,\"^10\",3,\"^11\",false,\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"]]],\"^1;\",\"Undoes instrument on the vars named by sym-or-syms, specified\\nas in instrument. With no args, unstruments all instrumented vars.\\nReturns a collection of syms naming the vars unstrumented.\"],\"~$fn-spec-name?\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^J\",25,\"^K\",8,\"^Q\",25,\"^R\",21,\"^S\",true,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[\"~$s\"]]]]]],\"^S\",true,\"^7\",\"~$cljs.spec.test.alpha$macros/fn-spec-name?\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",21,\"^Y\",[\"^U\",[[\"~$s\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null]],\"^K\",1,\"^J\",25,\"^Q\",25,\"^10\",1,\"^11\",true,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[\"~$s\"]]]]]],\"~$sym-or-syms->syms\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^J\",52,\"^K\",8,\"^Q\",52,\"^R\",25,\"^S\",true,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[\"^1?\"]]]]]],\"^S\",true,\"^7\",\"~$cljs.spec.test.alpha$macros/sym-or-syms->syms\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",25,\"^Y\",[\"^U\",[[\"^1?\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null]],\"^K\",1,\"^J\",52,\"^Q\",52,\"^10\",1,\"^11\",true,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[\"^1?\"]]]]]],\"~$check\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^R\",16,\"^15\",[\"^ \",\"^X\",false,\"^10\",4,\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^[\",[\"^U\",[null,null,null]]],\"^K\",11,\"^J\",205,\"^1:\",true,\"^Q\",205,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[],[\"^1?\"],[\"^1?\",\"^19\"]]]]],\"^1;\",\"Run generative tests for spec conformance on vars named by\\nsym-or-syms, a symbol or collection of symbols. If sym-or-syms\\nis not specified, check all checkable vars. If a symbol identifies a\\nnamespace then all symbols in that namespace will be enumerated.\\n\\nThe opts map includes the following optional keys, where stc\\naliases clojure.test.check:\\n\\n::stc/opts  opts to flow through test.check/quick-check\\n:gen        map from spec names to generator overrides\\n\\nThe ::stc/opts include :num-tests in addition to the keys\\ndocumented by test.check. Generator overrides are passed to\\nspec/gen when generating function args.\\n\\nReturns a lazy sequence of check result maps with the following\\nkeys\\n\\n:spec       the spec tested\\n:sym        optional symbol naming the var tested\\n:failure    optional test failure\\n::stc/ret   optional value returned by test.check/quick-check\\n\\nThe value for :failure can be any exception. Exceptions thrown by\\nspec itself will have an ::s/failure value in ex-data:\\n\\n:check-failed   at least one checked return did not conform\\n:no-args-spec   no :args spec provided\\n:no-fn          no fn provided\\n:no-fspec       no fspec provided\\n:no-gen         unable to generate :args\\n:instrument     invalid args detected by instrument\\n\"],\"^7\",\"~$cljs.spec.test.alpha$macros/check\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",16,\"^15\",[\"^ \",\"^X\",false,\"^10\",4,\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^[\",[\"^U\",[null,null,null]]],\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null,null]],\"^K\",1,\"^J\",205,\"^1:\",true,\"^Q\",205,\"^10\",4,\"^11\",false,\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^1?\"],[\"^16\",\"^17\",\"^1?\",\"^19\"]]],\"^1;\",\"Run generative tests for spec conformance on vars named by\\nsym-or-syms, a symbol or collection of symbols. If sym-or-syms\\nis not specified, check all checkable vars. If a symbol identifies a\\nnamespace then all symbols in that namespace will be enumerated.\\n\\nThe opts map includes the following optional keys, where stc\\naliases clojure.test.check:\\n\\n::stc/opts  opts to flow through test.check/quick-check\\n:gen        map from spec names to generator overrides\\n\\nThe ::stc/opts include :num-tests in addition to the keys\\ndocumented by test.check. Generator overrides are passed to\\nspec/gen when generating function args.\\n\\nReturns a lazy sequence of check result maps with the following\\nkeys\\n\\n:spec       the spec tested\\n:sym        optional symbol naming the var tested\\n:failure    optional test failure\\n::stc/ret   optional value returned by test.check/quick-check\\n\\nThe value for :failure can be any exception. Exceptions thrown by\\nspec itself will have an ::s/failure value in ex-data:\\n\\n:check-failed   at least one checked return did not conform\\n:no-args-spec   no :args spec provided\\n:no-fn          no fn provided\\n:no-fspec       no fspec provided\\n:no-gen         unable to generate :args\\n:instrument     invalid args detected by instrument\\n\"],\"~$with-instrument-disabled\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^R\",35,\"^15\",[\"^ \",\"^X\",true,\"^10\",2,\"^Y\",[[\"^U\",[\"^16\",\"^17\",\"~$body\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\",\"~$&\",\"^1M\"]]],\"^[\",[\"^U\",[null]]],\"^K\",11,\"^J\",29,\"^1:\",true,\"^Q\",29,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[\"~$&\",\"^1M\"]]]]],\"^1;\",\"Disables instrument's checking of calls, within a scope.\"],\"^7\",\"~$cljs.spec.test.alpha$macros/with-instrument-disabled\",\"^X\",true,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",35,\"^15\",[\"^ \",\"^X\",true,\"^10\",2,\"^Y\",[[\"^U\",[\"^16\",\"^17\",\"^1M\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\",\"~$&\",\"^1M\"]]],\"^[\",[\"^U\",[null]]],\"^Y\",[[\"^U\",[\"^16\",\"^17\",\"^1M\"]]],\"^Z\",null,\"^[\",[\"^U\",[null]],\"^K\",1,\"^J\",29,\"^1:\",true,\"^Q\",29,\"^10\",2,\"^11\",false,\"^T\",[\"^U\",[[\"^16\",\"^17\",\"~$&\",\"^1M\"]]],\"^1;\",\"Disables instrument's checking of calls, within a scope.\"],\"~$checkable-syms\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^R\",25,\"^15\",[\"^ \",\"^X\",false,\"^10\",3,\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^19\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^19\"]]],\"^[\",[\"^U\",[null,null]]],\"^K\",11,\"^J\",193,\"^1:\",true,\"^Q\",193,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[],[\"^19\"]]]]],\"^1;\",\"Given an opts map as per check, returns the set of syms that\\ncan be checked.\"],\"^7\",\"~$cljs.spec.test.alpha$macros/checkable-syms\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",25,\"^15\",[\"^ \",\"^X\",false,\"^10\",3,\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^19\"]]],\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^19\"]]],\"^[\",[\"^U\",[null,null]]],\"^Y\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^19\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null]],\"^K\",1,\"^J\",193,\"^1:\",true,\"^Q\",193,\"^10\",3,\"^11\",false,\"^T\",[\"^U\",[[\"^16\",\"^17\"],[\"^16\",\"^17\",\"^19\"]]],\"^1;\",\"Given an opts map as per check, returns the set of syms that\\ncan be checked.\"],\"~$instrument-1\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^J\",35,\"^K\",11,\"^Q\",35,\"^R\",23,\"^1:\",true,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[[\"^V\",\"~$s\"],\"^19\"]]]]]],\"^7\",\"~$cljs.spec.test.alpha$macros/instrument-1\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",23,\"^Y\",[\"^U\",[[\"^16\",\"^17\",\"~$p__612\",\"^19\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null]],\"^K\",1,\"^J\",35,\"^1:\",true,\"^Q\",35,\"^10\",4,\"^11\",false,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[[\"^V\",\"~$s\"],\"^19\"]]]]]],\"~$checkable-syms*\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^J\",185,\"^K\",7,\"^Q\",185,\"^R\",22,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[],[\"^19\"]]]]],\"^15\",[\"^ \",\"^X\",false,\"^10\",1,\"^Y\",[\"^U\",[[],[\"^19\"]]],\"^T\",[\"^U\",[[],[\"^19\"]]],\"^[\",[\"^U\",[null,null]]]],\"^7\",\"~$cljs.spec.test.alpha$macros/checkable-syms*\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",22,\"^15\",[\"^ \",\"^X\",false,\"^10\",1,\"^Y\",[\"^U\",[[],[\"^19\"]]],\"^T\",[\"^U\",[[],[\"^19\"]]],\"^[\",[\"^U\",[null,null]]],\"^Y\",[\"^U\",[[],[\"^19\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null]],\"^K\",1,\"^J\",185,\"^Q\",185,\"^10\",1,\"^11\",true,\"^T\",[\"^U\",[[],[\"^19\"]]]],\"~$check-1\",[\"^ \",\"^O\",null,\"^H\",[\"^ \",\"^I\",\"^P\",\"^J\",150,\"^K\",11,\"^Q\",150,\"^R\",18,\"^1:\",true,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[[\"^V\",\"~$s\",\"~:as\",\"~$qs\"],\"~$f\",\"^18\",\"^19\"]]]]]],\"^7\",\"~$cljs.spec.test.alpha$macros/check-1\",\"^X\",false,\"^I\",\"cljs/spec/test/alpha.cljc\",\"^R\",18,\"^Y\",[\"^U\",[[\"^16\",\"^17\",\"~$p__644\",\"~$f\",\"^18\",\"^19\"]]],\"^Z\",null,\"^[\",[\"^U\",[null,null]],\"^K\",1,\"^J\",150,\"^1:\",true,\"^Q\",150,\"^10\",6,\"^11\",false,\"^T\",[\"^U\",[\"^V\",[\"^U\",[[[\"^V\",\"~$s\",\"^1W\",\"^1X\"],\"~$f\",\"^18\",\"^19\"]]]]]]],\"~:require-macros\",[\"^ \",\"^<\",\"^=\",\"~$s\",\"^@\",\"^@\",\"^@\",\"^=\",\"^=\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^6\",[\"~:args\",\"~:cljs.spec.alpha/failure\",\"~$&\",\"~$cljs.spec.test.alpha/distinct-by\",\"~$cljs.spec.test.alpha/unstrument\",\"~$cljs.spec.test.alpha/make-check-result\",\"~$x\",\"~$cljs.spec.test.alpha/*instrument-enabled*\",\"~$f__56__auto__\",\"~$s__62__auto__\",\"~$try\",\"^1M\",\"~$opts__69__auto__\",\"~$cljs.core/when\",\"~$cljs.core/binding\",\"~$f__67__auto__\",\"~$ret__59__auto__\",\"~$cljs.core/filter\",\"^1R\",\"~$cljs.spec.test.alpha/check-1\",\"~$opts__63__auto__\",\"^S\",\"~$cljs.spec.test.alpha/quick-check\",\"^F\",\"~$cljs.spec.test.alpha/check\",\"~$checked__50__auto__\",\"~$cljs.spec.test.alpha/unstrument-1*\",\"~$cljs.core/deref\",\"~:failure\",\"^N\",\"~$cljs.core/reduce\",\"~$cljs.core/seq\",\"^12\",\"~$spec__65__auto__\",\"~$finally\",\"^14\",\"^8\",\"~:default\",\"~$v__64__auto__\",\"~:ns\",\"^1U\",\"^7\",\"^1W\",\"^16\",\"~:no-fn\",\"^X\",\"~$cljs.spec.test.alpha/instrument-1*\",\"^I\",\"~$cljs.spec.test.alpha/checkable-syms\",\"^R\",\"^1=\",\"~$sym__57__auto__\",\"^1A\",\"^15\",\"^1D\",\"~$f__60__auto__\",\"^1N\",\"^Y\",\"~$re-inst?__66__auto__\",\"^1P\",\"~$sym__61__auto__\",\"~$cljs.core/conj\",\"^1F\",\"~:no-args-spec\",\"~$tcret__68__auto__\",\"~$cljs.core/zipmap\",\"^1Y\",\"^[\",\"^1H\",\"~:sym\",\"^K\",\"~$opts__70__auto__\",\"^1J\",\"~$cljs.spec.test.alpha/instrumentable-syms\",\"~$cljs.core/let\",\"~$___55__auto__\",\"~:spec\",\"^1I\",\"~$cljs.spec.alpha/get-spec\",\"^1?\",\"~$cljs.core/cond\",\"~$ret__54__auto__\",\"^1L\",\"~$cljs.spec.test.alpha/instrument\",\"^1O\",\"^J\",\"~$fn*\",\"^1Q\",\"^G\",\"~$cljs.core/cond->\",\"^1:\",\"^1>\",\"~$cljs.spec.test.alpha/unstrument-1\",\"~$cljs.spec.test.alpha/validate-check-opts\",\"^13\",\"^W\",\"~$s\",\"~$cljs.core/nil?\",\"^17\",\"~$cljs.core/ex-info\",\"~$cljs.core/fn\",\"~$raw__51__auto__\",\"^Q\",\"~$p1__53__58__auto__\",\"~$cljs.spec.test.alpha/check-fn\",\"^18\",\"^10\",\"^1E\",\"~$set!\",\"^1@\",\"^1K\",\"~$var\",\"~$cljs.core/->>\",\"^V\",\"^T\",\"~$cljs.core/and\",\"^1T\",\"^1;\",\"^1X\",\"^1V\",\"~$cljs.spec.test.alpha/instrument-1\",\"^1G\",\"~$cljs.core/first\",\"^19\",\"^1B\",\"~$cljs.core/or\",\"~:test\",\"^1<\",\"~$f\"]],\"~:order\",[\"^13\",\"^S\",\"^2O\",\"^7\",\"^I\",\"^R\",\"^K\",\"^J\",\"^Q\",\"^T\",\"^1;\",\"^3J\",\"^8\",\"^12\",\"^W\",\"^N\",\"~$x\",\"^1G\",\"^1F\",\"~$s\",\"^1N\",\"^15\",\"^1:\",\"^1L\",\"^X\",\"^10\",\"^Y\",\"^[\",\"^16\",\"^17\",\"^1M\",\"~$&\",\"^2=\",\"^27\",\"^32\",\"^2E\",\"^2Q\",\"^3D\",\"^2<\",\"^3C\",\"^V\",\"^1R\",\"^1Q\",\"^19\",\"^3@\",\"^2F\",\"^1B\",\"^1A\",\"^1I\",\"^1H\",\"^1?\",\"^1@\",\"^1=\",\"^1>\",\"^38\",\"^2I\",\"^3?\",\"^37\",\"^33\",\"^28\",\"^2S\",\"^3:\",\"^2W\",\"^3E\",\"^2Z\",\"^3G\",\"^2@\",\"^39\",\"^3A\",\"^31\",\"^3H\",\"^24\",\"^1E\",\"^1D\",\"^25\",\"^2?\",\"^2T\",\"^2V\",\"^3;\",\"^29\",\"^2B\",\"^2N\",\"^2K\",\"^3I\",\"^35\",\"^2U\",\"^3F\",\"^2J\",\"^2>\",\"^2G\",\"^2:\",\"^36\",\"^3=\",\"^2H\",\"^3>\",\"^23\",\"^2P\",\"^2[\",\"^34\",\"^22\",\"^2Y\",\"^2C\",\"^26\",\"^2M\",\"^2X\",\"^2L\",\"^1Y\",\"^1V\",\"^1W\",\"^1X\",\"~$f\",\"^18\",\"^1<\",\"^14\",\"^3B\",\"^2;\",\"^3<\",\"^2A\",\"^1U\",\"^1T\",\"^1P\",\"^1O\",\"^2R\",\"^30\",\"^1K\",\"^1J\",\"^2D\",\"^G\",\"^F\"]],\"^1;\",null]","cljs/compiler/macros$macros.js":"goog.provide('cljs.compiler.macros');\ngoog.require('cljs.core');\nvar ret__21071__auto___668 = (function (){\ncljs.compiler.macros.emit_wrap = (function cljs$compiler$macros$emit_wrap(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___669 = arguments.length;\nvar i__21021__auto___670 = (0);\nwhile(true){\nif((i__21021__auto___670 < len__21020__auto___669)){\nargs__21023__auto__.push((arguments[i__21021__auto___670]));\n\nvar G__671 = (i__21021__auto___670 + (1));\ni__21021__auto___670 = G__671;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.compiler.macros.emit_wrap.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.compiler.macros.emit_wrap.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,env,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__61__auto__\",\"env__61__auto__\",(532744530),null)),(function (){var x__20731__auto__ = env;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",(120293186),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",(-1891498332),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"return\",\"return\",(-1891502105))),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"context\",\"context\",(-830191113))),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__61__auto__\",\"env__61__auto__\",(532744530),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.compiler\",\"emits\",\"cljs.compiler/emits\",(-1296164997),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,\"return \")));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body,(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when-not\",\"cljs.core/when-not\",(-556141047),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",(-1891498332),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"expr\",\"expr\",(745722291))),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"context\",\"context\",(-830191113))),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"env__61__auto__\",\"env__61__auto__\",(532744530),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.compiler\",\"emitln\",\"cljs.compiler/emitln\",(-1309380807),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,\";\")));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.compiler.macros.emit_wrap.cljs$lang$maxFixedArity = (3);\n\ncljs.compiler.macros.emit_wrap.cljs$lang$applyTo = (function (seq664){\nvar G__665 = cljs.core.first.call(null,seq664);\nvar seq664__$1 = cljs.core.next.call(null,seq664);\nvar G__666 = cljs.core.first.call(null,seq664__$1);\nvar seq664__$2 = cljs.core.next.call(null,seq664__$1);\nvar G__667 = cljs.core.first.call(null,seq664__$2);\nvar seq664__$3 = cljs.core.next.call(null,seq664__$2);\nreturn cljs.compiler.macros.emit_wrap.cljs$core$IFn$_invoke$arity$variadic(G__665,G__666,G__667,seq664__$3);\n});\n\nreturn null;\n})()\n;\ncljs.compiler.macros.emit_wrap.cljs$lang$macro = true;\n\n","cljs/source_map/base64.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$cljs.source-map.base64\",\"~:imports\",null,\"~:requires\",null,\"~:uses\",null,\"~:defs\",[\"^ \",\"~$chars64\",[\"^ \",\"^7\",\"~$cljs.source-map.base64/chars64\",\"~:file\",\"out/cljs/source_map/base64.cljs\",\"~:line\",11,\"~:column\",1,\"~:end-line\",11,\"~:end-column\",13,\"~:meta\",[\"^ \",\"^?\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64.cljs\",\"^@\",11,\"^A\",6,\"^B\",11,\"^C\",13],\"~:tag\",\"~$string\"],\"~$char->int\",[\"^ \",\"^7\",\"~$cljs.source-map.base64/char->int\",\"^?\",\"out/cljs/source_map/base64.cljs\",\"^@\",12,\"^A\",1,\"^B\",12,\"^C\",15,\"^D\",[\"^ \",\"^?\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64.cljs\",\"^@\",12,\"^A\",6,\"^B\",12,\"^C\",15],\"^E\",\"~$any\"],\"~$int->char\",[\"^ \",\"^7\",\"~$cljs.source-map.base64/int->char\",\"^?\",\"out/cljs/source_map/base64.cljs\",\"^@\",13,\"^A\",1,\"^B\",13,\"^C\",15,\"^D\",[\"^ \",\"^?\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64.cljs\",\"^@\",13,\"^A\",6,\"^B\",13,\"^C\",15],\"^E\",\"^I\"],\"~$encode\",[\"^ \",\"~:protocol-inline\",null,\"^D\",[\"^ \",\"^?\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64.cljs\",\"^@\",15,\"^A\",7,\"^B\",15,\"^C\",13,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^O\",[[\"~$n\"]]]]]],\"^7\",\"~$cljs.source-map.base64/encode\",\"~:variadic\",false,\"^?\",\"out/cljs/source_map/base64.cljs\",\"^C\",13,\"~:method-params\",[\"^O\",[[\"~$n\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^O\",[null,null]],\"^A\",1,\"^@\",15,\"^B\",15,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$n\"]]]]]],\"~$decode\",[\"^ \",\"^M\",null,\"^D\",[\"^ \",\"^?\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64.cljs\",\"^@\",21,\"^A\",7,\"^B\",21,\"^C\",13,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$c\"]]]]]],\"^7\",\"~$cljs.source-map.base64/decode\",\"^R\",false,\"^?\",\"out/cljs/source_map/base64.cljs\",\"^C\",13,\"^S\",[\"^O\",[[\"~$c\"]]],\"^T\",null,\"^U\",[\"^O\",[null,null]],\"^A\",1,\"^@\",21,\"^B\",21,\"^V\",1,\"^W\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$c\"]]]]]]],\"~:require-macros\",null,\"~:doc\",null]","clojure/test/check/random/longs.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$+\",\"~$*\",\"~$bit-xor\",\"~$bit-or\",\"~$bit-count\",\"~$unsigned-bit-shift-right\"]],\"~:name\",\"~$clojure.test.check.random.longs\",\"~:imports\",null,\"~:requires\",[\"^ \",\"^7\",\"~$clojure.test.check.random.longs.bit-count-impl\",\"^=\",\"^=\",\"~$long\",\"~$goog.math.Long\",\"^?\",\"^?\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$from-number\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"^:\",\"~:line\",42,\"~:column\",7,\"~:end-line\",42,\"~:end-column\",18,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^K\",[[\"~$x\"]]]]]],\"^9\",\"~$clojure.test.check.random.longs/from-number\",\"~:variadic\",false,\"^E\",\"clojure/test/check/random/longs.cljs\",\"^I\",18,\"~:method-params\",[\"^K\",[[\"~$x\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^K\",[null,null]],\"^G\",1,\"^F\",42,\"^H\",42,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\"]]]]]],\"^7\",[\"^ \",\"^9\",\"~$clojure.test.check.random.longs/bit-count\",\"^E\",\"clojure/test/check/random/longs.cljs\",\"^F\",57,\"^G\",1,\"^H\",57,\"^I\",15,\"^D\",[\"^ \",\"^E\",\"^:\",\"^F\",57,\"^G\",6,\"^H\",57,\"^I\",15]],\"^5\",[\"^ \",\"^C\",null,\"^D\",[\"^ \",\"^E\",\"^:\",\"^F\",30,\"^G\",7,\"^H\",30,\"^I\",14,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$y\"]]]]]],\"^9\",\"~$clojure.test.check.random.longs/bit-xor\",\"^N\",false,\"^E\",\"clojure/test/check/random/longs.cljs\",\"^I\",14,\"^O\",[\"^K\",[[\"~$x\",\"~$y\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^G\",1,\"^F\",30,\"^H\",30,\"^R\",2,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$y\"]]]]]],\"^8\",[\"^ \",\"^C\",null,\"^D\",[\"^ \",\"^E\",\"^:\",\"^F\",18,\"^G\",7,\"^H\",18,\"^I\",31,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$n\"]]]]]],\"^9\",\"~$clojure.test.check.random.longs/unsigned-bit-shift-right\",\"^N\",false,\"^E\",\"clojure/test/check/random/longs.cljs\",\"^I\",31,\"^O\",[\"^K\",[[\"~$x\",\"~$n\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^G\",1,\"^F\",18,\"^H\",18,\"^R\",2,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$n\"]]]]]],\"~$*\",[\"^ \",\"^C\",null,\"^D\",[\"^ \",\"^E\",\"^:\",\"^F\",26,\"^G\",7,\"^H\",26,\"^I\",8,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$y\"]]]]]],\"^9\",\"~$clojure.test.check.random.longs/*\",\"^N\",false,\"^E\",\"clojure/test/check/random/longs.cljs\",\"^I\",8,\"^O\",[\"^K\",[[\"~$x\",\"~$y\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^G\",1,\"^F\",26,\"^H\",26,\"^R\",2,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$y\"]]]]]],\"~$from-string\",[\"^ \",\"^C\",null,\"^D\",[\"^ \",\"^E\",\"^:\",\"^F\",38,\"^G\",7,\"^H\",38,\"^I\",18,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$s\",\"~$radix\"]]]]]],\"^9\",\"~$clojure.test.check.random.longs/from-string\",\"^N\",false,\"^E\",\"clojure/test/check/random/longs.cljs\",\"^I\",18,\"^O\",[\"^K\",[[\"~$s\",\"^Y\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^G\",1,\"^F\",38,\"^H\",38,\"^R\",2,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$s\",\"^Y\"]]]]]],\"~$->long\",[\"^ \",\"^C\",null,\"^D\",[\"^ \",\"^E\",\"^:\",\"^F\",46,\"^G\",7,\"^H\",46,\"^I\",13,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\"]]]]],\"~:doc\",\"Coerces to long, or returns nil if not possible.\"],\"^9\",\"~$clojure.test.check.random.longs/->long\",\"^N\",false,\"^E\",\"clojure/test/check/random/longs.cljs\",\"^I\",13,\"^O\",[\"^K\",[[\"~$x\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^G\",1,\"^F\",46,\"^H\",46,\"^R\",1,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\"]]]]],\"^10\",\"Coerces to long, or returns nil if not possible.\"],\"^6\",[\"^ \",\"^C\",null,\"^D\",[\"^ \",\"^E\",\"^:\",\"^F\",34,\"^G\",7,\"^H\",34,\"^I\",13,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$y\"]]]]]],\"^9\",\"~$clojure.test.check.random.longs/bit-or\",\"^N\",false,\"^E\",\"clojure/test/check/random/longs.cljs\",\"^I\",13,\"^O\",[\"^K\",[[\"~$x\",\"~$y\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^G\",1,\"^F\",34,\"^H\",34,\"^R\",2,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$y\"]]]]]],\"~$ONE\",[\"^ \",\"^9\",\"~$clojure.test.check.random.longs/ONE\",\"^E\",\"clojure/test/check/random/longs.cljs\",\"^F\",55,\"^G\",1,\"^H\",55,\"^I\",9,\"^D\",[\"^ \",\"^E\",\"^:\",\"^F\",55,\"^G\",6,\"^H\",55,\"^I\",9],\"~:tag\",\"~$any\"],\"~$+\",[\"^ \",\"^C\",null,\"^D\",[\"^ \",\"^E\",\"^:\",\"^F\",22,\"^G\",7,\"^H\",22,\"^I\",8,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$y\"]]]]]],\"^9\",\"~$clojure.test.check.random.longs/+\",\"^N\",false,\"^E\",\"clojure/test/check/random/longs.cljs\",\"^I\",8,\"^O\",[\"^K\",[[\"~$x\",\"~$y\"]]],\"^P\",null,\"^Q\",[\"^K\",[null,null]],\"^G\",1,\"^F\",22,\"^H\",22,\"^R\",2,\"^S\",true,\"^J\",[\"^K\",[\"^L\",[\"^K\",[[\"~$x\",\"~$y\"]]]]]]],\"~:require-macros\",[\"^ \"],\"^10\",\"Internal namespace, wrapping some goog.math.Long functionality.\"]","cljs/spec/gen/alpha.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"],\"~$Date\",[\"^ \"]],\"~:use-macros\",[\"^ \",\"~$lazy-prims\",\"~$cljs.spec.gen.alpha\",\"~$dynaload\",\"^7\",\"~$lazy-combinators\",\"^7\"],\"~:excludes\",[\"~#set\",[\"~$uuid\",\"~$set\",\"~$boolean\",\"~$map\",\"~$delay\",\"~$char\",\"~$cat\",\"~$double\",\"~$int\",\"~$symbol\",\"~$string\",\"~$vector\",\"~$not-empty\",\"~$list\",\"~$keyword\",\"~$hash-map\"]],\"~:name\",\"^7\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$c\",\"~$cljs.core\",\"^O\",\"^O\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"^<\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"~:line\",75,\"~:column\",60,\"~:end-line\",75,\"~:end-column\",64,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^Z\",[[\"~$&\",\"~$args\"]]]]],\"~:doc\",\"Fn returning clojure.test.check.generators/uuid\",\"~:top-fn\",[\"^ \",\"~:variadic\",true,\"~:max-fixed-arity\",0,\"~:method-params\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"~:arglists-meta\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/uuid\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",64,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"~:protocol-impl\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",75,\"^14\",0,\"~:fn-var\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/uuid\"],\"~$gen-for-pred\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",141,\"^V\",7,\"^W\",141,\"^X\",19,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$pred\"]]]]],\"^11\",\"Given a predicate, returns a built-in generator if one exists.\"],\"^L\",\"~$cljs.spec.gen.alpha/gen-for-pred\",\"^13\",false,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",19,\"^15\",[\"^Z\",[[\"^1;\"]]],\"^18\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",141,\"^W\",141,\"^14\",1,\"^19\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^1;\"]]]]],\"^11\",\"Given a predicate, returns a built-in generator if one exists.\"],\"^=\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",69,\"^V\",47,\"^W\",69,\"^X\",50,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/set\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/set\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",50,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",69,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/set\"],\"~$one-of\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",70,\"^V\",15,\"^W\",70,\"^X\",21,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/one-of\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/one-of\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",21,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",70,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/one-of\"],\"~$any-printable\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",73,\"^V\",17,\"^W\",73,\"^X\",30,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/any-printable\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/any-printable\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",30,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",73,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/any-printable\"],\"~$vector-distinct\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",69,\"^V\",58,\"^W\",69,\"^X\",73,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/vector-distinct\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/vector-distinct\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",73,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",69,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/vector-distinct\"],\"^>\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",73,\"^V\",31,\"^W\",73,\"^X\",38,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/boolean\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/boolean\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",38,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",73,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/boolean\"],\"~$string-alphanumeric\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",75,\"^V\",23,\"^W\",75,\"^X\",42,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/string-alphanumeric\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/string-alphanumeric\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",42,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",75,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/string-alphanumeric\"],\"~$qualified?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",84,\"^V\",17,\"^W\",84,\"^X\",27,\"~:tag\",\"^>\",\"~:private\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$ident\"]]]]]],\"^1I\",true,\"^L\",\"~$cljs.spec.gen.alpha/qualified?\",\"^13\",false,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",27,\"^15\",[\"^Z\",[[\"^1J\"]]],\"^18\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",84,\"~:ret-tag\",\"^>\",\"^W\",84,\"^14\",1,\"^1H\",\"^>\",\"^19\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^1J\"]]]]]],\"^?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",69,\"^V\",33,\"^W\",69,\"^X\",36,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/map\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/map\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",36,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",69,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/map\"],\"~$simple-type\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",74,\"^V\",46,\"^W\",74,\"^X\",57,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/simple-type\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/simple-type\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",57,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",74,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/simple-type\"],\"^A\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",73,\"^V\",39,\"^W\",73,\"^X\",43,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/char\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/char\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",43,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",73,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/char\"],\"~$bind\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",70,\"^V\",3,\"^W\",70,\"^X\",7,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/bind\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/bind\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",7,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",70,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/bind\"],\"~$symbol-ns\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",75,\"^V\",50,\"^W\",75,\"^X\",59,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/symbol-ns\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/symbol-ns\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",59,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",75,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/symbol-ns\"],\"~$any\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",73,\"^V\",13,\"^W\",73,\"^X\",16,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/any\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/any\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",16,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",73,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/any\"],\"^B\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",77,\"^V\",7,\"^W\",77,\"^X\",10,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"~$gens\"]]]]],\"^11\",\"Returns a generator of a sequence catenated from results of\\ngens, each of which should generate something sequential.\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^1W\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^1W\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/cat\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",10,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^1W\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^1W\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^1W\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",77,\"^W\",77,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^1W\"]]],\"^11\",\"Returns a generator of a sequence catenated from results of\\ngens, each of which should generate something sequential.\"],\"~$LazyVar\",[\"^ \",\"~:num-fields\",2,\"~:protocols\",[\"^;\",[\"~$cljs.core/IDeref\"]],\"^L\",\"~$cljs.spec.gen.alpha/LazyVar\",\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",17,\"~:type\",true,\"^V\",10,\"^U\",16,\"~:record\",false,\"^W\",16,\"~:skip-protocol-flag\",[\"^;\",[\"^20\"]]],\"^C\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",73,\"^V\",84,\"^W\",73,\"^X\",90,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/double\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/double\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",90,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",73,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/double\"],\"~$char-alpha\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",73,\"^V\",44,\"^W\",73,\"^X\",54,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/char-alpha\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/char-alpha\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",54,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",73,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/char-alpha\"],\"~$generator?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",44,\"^V\",10,\"^W\",44,\"^X\",20,\"^1I\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]]],\"^1I\",true,\"^L\",\"~$cljs.spec.gen.alpha/generator?\",\"^13\",false,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",20,\"^15\",[\"^Z\",[[\"~$x\"]]],\"^18\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",3,\"^U\",44,\"^W\",44,\"^14\",1,\"^19\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]]],\"^D\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",74,\"^V\",3,\"^W\",74,\"^X\",6,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/int\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/int\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",6,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",74,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/int\"],\"~$for-all*-ref\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",33,\"^V\",16,\"^W\",33,\"^X\",28,\"^1I\",true],\"^1I\",true,\"^L\",\"~$cljs.spec.gen.alpha/for-all*-ref\",\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",28,\"^V\",1,\"^U\",33,\"^W\",33,\"^1H\",\"^21\"],\"~$->LazyVar\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1[\",[\"^;\",[\"^20\"]],\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^X\",17,\"^V\",10,\"~:factory\",\"~:positional\",\"^U\",16,\"^W\",16,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$f\",\"~$cached\"]]]]],\"^24\",[\"^;\",[\"^20\"]]],\"^1[\",[\"^;\",[\"^20\"]],\"^L\",\"~$cljs.spec.gen.alpha/->LazyVar\",\"^13\",false,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",17,\"^15\",[\"^Z\",[[\"~$f\",\"^2@\"]]],\"^18\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^2>\",\"^2?\",\"^U\",16,\"^W\",16,\"^14\",2,\"^19\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$f\",\"^2@\"]]]]],\"^24\",[\"^;\",[\"^20\"]]],\"~$return\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",70,\"^V\",45,\"^W\",70,\"^X\",51,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/return\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/return\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",51,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",70,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/return\"],\"^E\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",75,\"^V\",43,\"^W\",75,\"^X\",49,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/symbol\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/symbol\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",49,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",75,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/symbol\"],\"~$quick-check\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",29,\"^V\",7,\"^W\",29,\"^X\",18,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/quick-check\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",18,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",29,\"^W\",29,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]]],\"~$char-alphanumeric\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",73,\"^V\",55,\"^W\",73,\"^X\",72,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/char-alphanumeric\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/char-alphanumeric\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",72,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",73,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/char-alphanumeric\"],\"~$choose\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",70,\"^V\",8,\"^W\",70,\"^X\",14,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/choose\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/choose\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",14,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",70,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/choose\"],\"~$for-all*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",36,\"^V\",7,\"^W\",36,\"^X\",15,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Dynamically loaded clojure.test.check.properties/for-all*.\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/for-all*\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",15,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",36,\"^W\",36,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Dynamically loaded clojure.test.check.properties/for-all*.\"],\"~$string-ascii\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",75,\"^V\",10,\"^W\",75,\"^X\",22,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/string-ascii\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/string-ascii\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",22,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",75,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/string-ascii\"],\"~$frequency\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",71,\"^V\",26,\"^W\",71,\"^X\",35,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/frequency\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/frequency\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",35,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",71,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/frequency\"],\"~$double*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",71,\"^V\",18,\"^W\",71,\"^X\",25,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/double*\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/double*\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",25,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",71,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/double*\"],\"~$generate\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",50,\"^V\",9,\"^W\",50,\"^X\",17,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$generator\"]]]]],\"^11\",\"Generate a single value using generator.\"],\"^L\",\"~$cljs.spec.gen.alpha/generate\",\"^13\",false,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",17,\"^15\",[\"^Z\",[[\"^2T\"]]],\"^18\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",3,\"^U\",50,\"^W\",50,\"^14\",1,\"^19\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2T\"]]]]],\"^11\",\"Generate a single value using generator.\"],\"~$delay-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",55,\"^V\",19,\"^W\",55,\"^X\",29,\"~:skip-wiki\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$gfnd\"]]]]]],\"^L\",\"~$cljs.spec.gen.alpha/delay-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",29,\"^15\",[\"^Z\",[[\"^2X\"]]],\"^18\",null,\"^2W\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",55,\"^W\",55,\"^14\",1,\"^19\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2X\"]]]]]],\"~$gen-builtins\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",87,\"^V\",1,\"^W\",87,\"^X\",13,\"^1I\",true],\"^1I\",true,\"^L\",\"~$cljs.spec.gen.alpha/gen-builtins\",\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",13,\"^V\",1,\"^U\",86,\"^W\",87,\"^1H\",\"~$cljs.core/Delay\"],\"~$tuple\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",70,\"^V\",32,\"^W\",70,\"^X\",37,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/tuple\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/tuple\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",37,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",70,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/tuple\"],\"^F\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",75,\"^V\",3,\"^W\",75,\"^X\",9,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/string\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/string\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",9,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",75,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/string\"],\"~$quick-check-ref\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",26,\"^V\",16,\"^W\",26,\"^X\",31,\"^1I\",true],\"^1I\",true,\"^L\",\"~$cljs.spec.gen.alpha/quick-check-ref\",\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",31,\"^V\",1,\"^U\",26,\"^W\",26,\"^1H\",\"^21\"],\"^G\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",69,\"^V\",51,\"^W\",69,\"^X\",57,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/vector\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/vector\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",57,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",69,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/vector\"],\"~$large-integer\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",74,\"^V\",26,\"^W\",74,\"^X\",39,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/large-integer\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/large-integer\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",39,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",74,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/large-integer\"],\"~$keyword-ns\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",74,\"^V\",15,\"^W\",74,\"^X\",25,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/keyword-ns\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/keyword-ns\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",25,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",74,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/keyword-ns\"],\"^H\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",69,\"^V\",37,\"^W\",69,\"^X\",46,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/not-empty\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/not-empty\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",46,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",69,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/not-empty\"],\"~$elements\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",69,\"^V\",79,\"^W\",69,\"^X\",87,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/elements\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/elements\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",87,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",69,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/elements\"],\"~$sample\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",70,\"^V\",38,\"^W\",70,\"^X\",44,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/sample\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/sample\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",44,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",70,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/sample\"],\"^I\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",69,\"^V\",28,\"^W\",69,\"^X\",32,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/list\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/list\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",32,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",69,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/list\"],\"~$large-integer*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",71,\"^V\",3,\"^W\",71,\"^X\",17,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/large-integer*\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/large-integer*\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",17,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",71,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/large-integer*\"],\"^J\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",74,\"^V\",7,\"^W\",74,\"^X\",14,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/keyword\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/keyword\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",14,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",74,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/keyword\"],\"^K\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",69,\"^V\",19,\"^W\",69,\"^X\",27,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/hash-map\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/hash-map\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",27,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",69,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/hash-map\"],\"~$ratio\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",74,\"^V\",40,\"^W\",74,\"^X\",45,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/ratio\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/ratio\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",45,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",74,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/ratio\"],\"~$such-that\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",70,\"^V\",22,\"^W\",70,\"^X\",31,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/such-that\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/such-that\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",31,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",70,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/such-that\"],\"~$fmap\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",69,\"^V\",74,\"^W\",69,\"^X\",78,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/fmap\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/fmap\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",78,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",69,\"^W\",69,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Lazy loaded version of clojure.test.check.generators/fmap\"],\"^2T\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",47,\"^V\",10,\"^W\",47,\"^X\",19,\"^1I\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$gfn\"]]]]]],\"^1I\",true,\"^L\",\"~$cljs.spec.gen.alpha/generator\",\"^13\",false,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",19,\"^15\",[\"^Z\",[[\"^3K\"]]],\"^18\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",3,\"^U\",47,\"^W\",47,\"^14\",1,\"^19\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^3K\"]]]]]],\"~$char-ascii\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",73,\"^V\",73,\"^W\",73,\"^X\",83,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/char-ascii\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/char-ascii\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",83,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",73,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/char-ascii\"],\"~$simple-type-printable\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/gen/alpha.cljs\",\"^U\",74,\"^V\",58,\"^W\",74,\"^X\",79,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^10\"]]]]],\"^11\",\"Fn returning clojure.test.check.generators/simple-type-printable\",\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]]],\"^L\",\"~$cljs.spec.gen.alpha/simple-type-printable\",\"^13\",true,\"^T\",\"out/cljs/spec/gen/alpha.cljs\",\"^X\",79,\"^12\",[\"^ \",\"^13\",true,\"^14\",0,\"^15\",[[\"^Z\",[\"^10\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^16\",[\"^Z\",[null]]],\"^15\",[[\"^Z\",[\"^10\"]]],\"^18\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",73,\"^W\",74,\"^14\",0,\"^19\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^10\"]]],\"^11\",\"Fn returning clojure.test.check.generators/simple-type-printable\"]],\"~:require-macros\",[\"^ \",\"~$c\",\"^O\",\"^O\",\"^O\",\"~$gen\",\"^7\",\"^7\",\"^7\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^;\",[\"~$clojure.test.check.generators/sample\",\"~:min\",\"~$clojure.test.check.generators/hash-map\",\"~$clojure.test.check.generators/keyword\",\"~$clojure.test.check.generators/ratio\",\"~$clojure.test.check.generators/char-alpha\",\"~$clojure.test.check.generators/generator?\",\"~$clojure.test.check.generators/fmap\",\"~$clojure.test.check/quick-check\",\"~$clojure.test.check.generators/char-ascii\",\"~:gen\",\"~$clojure.test.check.generators/char-alphanumeric\",\"^2@\",\"~$clojure.test.check.generators/choose\",\"~$clojure.test.check.generators/frequency\",\"~$clojure.test.check.generators/generate\",\"~$clojure.test.check.generators/set\",\"~$clojure.test.check.generators/one-of\",\"~$clojure.test.check.generators/vector-distinct\",\"~$clojure.test.check.generators/map\",\"~$clojure.test.check.properties/for-all*\",\"~$clojure.test.check.generators/bind\",\"~$clojure.test.check.generators/symbol-ns\",\"~$clojure.test.check.generators/double\",\"~$clojure.test.check.generators/list\",\"~$clojure.test.check.generators/large-integer*\",\"~:max\",\"~$clojure.test.check.generators/such-that\",\"~$clojure.test.check.generators/int\",\"~$clojure.test.check.generators/->Generator\",\"~$clojure.test.check.generators/return\",\"~$clojure.test.check.generators/simple-type-printable\",\"~$clojure.test.check.generators/symbol\",\"~$clojure.test.check.generators/uuid\",\"~$clojure.test.check.generators/string-ascii\",\"~$clojure.test.check.generators/any-printable\",\"~$clojure.test.check.generators/double*\",\"~:mutable\",\"~$clojure.test.check.generators/boolean\",\"~$clojure.test.check.generators/string-alphanumeric\",\"~$clojure.test.check.generators/tuple\",\"~$clojure.test.check.generators/simple-type\",\"~$clojure.test.check.generators/string\",\"~$clojure.test.check.generators/vector\",\"~$clojure.test.check.generators/char\",\"~$clojure.test.check.generators/any\",\"~$clojure.test.check.generators/elements\",\"~$clojure.test.check.generators/not-empty\",\"~$clojure.test.check.generators/large-integer\",\"~$clojure.test.check.generators/keyword-ns\",\"~$f\"]],\"~:order\",[\"~$f\",\"^2@\",\"^4M\",\"^41\",\"^4<\",\"^3[\",\"^47\",\"^4E\",\"^43\",\"^3W\",\"^4@\",\"^4;\",\"^4W\",\"^48\",\"^4S\",\"^4:\",\"^40\",\"^4V\",\"^4=\",\"^45\",\"^49\",\"^4C\",\"^4P\",\"^3U\",\"^4F\",\"^4A\",\"^4L\",\"^46\",\"^4U\",\"^4K\",\"^4N\",\"^4T\",\"^3Z\",\"^44\",\"^42\",\"^4?\",\"^4D\",\"^3X\",\"^4Y\",\"^4X\",\"^3Y\",\"^4Q\",\"^4G\",\"^4R\",\"^4J\",\"^4O\",\"^4H\",\"^4>\",\"^4I\",\"^4B\",\"^3V\"]],\"^11\",null]","cljs/tools/reader/reader_types.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$char\",\"~$read-line\"]],\"~:name\",\"~$cljs.tools.reader.reader-types\",\"~:imports\",[\"^ \",\"~$StringBuffer\",\"~$goog.string.StringBuffer\"],\"~:requires\",[\"^ \",\"~$cljs.tools.reader.impl.utils\",\"^?\",\"~$goog.string\",\"^@\",\"^<\",\"^=\"],\"~:uses\",[\"^ \",\"~$whitespace?\",\"^?\",\"^7\",\"^?\",\"~$newline?\",\"^?\"],\"~:defs\",[\"^ \",\"~$indexing-push-back-reader\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"~:line\",227,\"~:column\",7,\"~:end-line\",227,\"~:end-column\",32,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^N\",[[\"~$s-or-rdr\"],[\"^P\",\"~$buf-len\"],[\"^P\",\"^Q\",\"~$file-name\"]]]]],\"~:doc\",\"Creates an IndexingPushbackReader from a given string or PushbackReader\",\"~:top-fn\",[\"^ \",\"~:variadic\",false,\"~:max-fixed-arity\",3,\"~:method-params\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^M\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"~:arglists-meta\",[\"^N\",[null,null,null]]]],\"^9\",\"~$cljs.tools.reader.reader-types/indexing-push-back-reader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",32,\"^T\",[\"^ \",\"^U\",false,\"^V\",3,\"^W\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^M\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^X\",[\"^N\",[null,null,null]]],\"^W\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"~:protocol-impl\",null,\"^X\",[\"^N\",[null,null,null]],\"^J\",1,\"^I\",227,\"^K\",227,\"^V\",3,\"~:fn-var\",true,\"^M\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^S\",\"Creates an IndexingPushbackReader from a given string or PushbackReader\"],\"~$log-source*\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",285,\"^J\",7,\"^K\",285,\"^L\",18,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$reader\",\"~$f\"]]]]]],\"^9\",\"~$cljs.tools.reader.reader-types/log-source*\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",18,\"^W\",[\"^N\",[[\"^11\",\"~$f\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",285,\"^K\",285,\"^V\",2,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\",\"~$f\"]]]]]],\"~$merge-meta\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",139,\"^J\",7,\"^K\",139,\"^L\",17,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$obj\",\"~$m\"]]]]],\"^S\",\"Returns an object of the same type and value as `obj`, with its\\nmetadata merged over `m`.\"],\"^9\",\"~$cljs.tools.reader.reader-types/merge-meta\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",17,\"^W\",[\"^N\",[[\"^14\",\"~$m\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",139,\"^K\",139,\"^V\",2,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^14\",\"~$m\"]]]]],\"^S\",\"Returns an object of the same type and value as `obj`, with its\\nmetadata merged over `m`.\"],\"~$PushbackReader\",[\"^ \",\"~:num-fields\",4,\"~:protocols\",[\"^6\",[\"~$cljs.tools.reader.reader-types/Reader\",\"~$cljs.tools.reader.reader-types/IPushbackReader\"]],\"^9\",\"~$cljs.tools.reader.reader-types/PushbackReader\",\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",24,\"~:type\",true,\"^J\",10,\"^I\",71,\"~:record\",false,\"^K\",71,\"~:skip-protocol-flag\",null],\"~$->StringReader\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^18\",[\"^6\",[\"^19\"]],\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^L\",22,\"^J\",10,\"~:factory\",\"~:positional\",\"^I\",43,\"^K\",43,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$s\",\"~$s-len\",\"~$s-pos\"]]]]],\"^1>\",null],\"^18\",[\"^6\",[\"^19\"]],\"^9\",\"~$cljs.tools.reader.reader-types/->StringReader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",22,\"^W\",[\"^N\",[[\"~$s\",\"^1B\",\"^1C\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^1@\",\"^1A\",\"^I\",43,\"^K\",43,\"^V\",3,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$s\",\"^1B\",\"^1C\"]]]]],\"^1>\",null],\"~$normalize-newline\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",93,\"^J\",8,\"^K\",93,\"^L\",25,\"~:private\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$rdr\",\"~$ch\"]]]]]],\"^1F\",true,\"^9\",\"~$cljs.tools.reader.reader-types/normalize-newline\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",25,\"^W\",[\"^N\",[[\"^1G\",\"^1H\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",93,\"^K\",93,\"^V\",2,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\",\"^1H\"]]]]]],\"~$peek-source-log\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",146,\"^J\",8,\"^K\",146,\"^L\",23,\"^1F\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$frames\"]]]]],\"^S\",\"Returns a string containing the contents of the top most source\\nlogging frame.\"],\"^1F\",true,\"^9\",\"~$cljs.tools.reader.reader-types/peek-source-log\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",23,\"^W\",[\"^N\",[[\"^1K\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",146,\"^K\",146,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1K\"]]]]],\"^S\",\"Returns a string containing the contents of the top most source\\nlogging frame.\"],\"~$IndexingPushbackReader\",[\"^ \",\"^17\",7,\"^18\",[\"^6\",[\"~$cljs.tools.reader.reader-types/IndexingReader\",\"^19\",\"^1:\"]],\"^9\",\"~$cljs.tools.reader.reader-types/IndexingPushbackReader\",\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",32,\"^1<\",true,\"^J\",10,\"^I\",102,\"^1=\",false,\"^K\",102,\"^1>\",null],\"~$StringReader\",[\"^ \",\"^17\",3,\"^18\",[\"^6\",[\"^19\"]],\"^9\",\"~$cljs.tools.reader.reader-types/StringReader\",\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",22,\"^1<\",true,\"^J\",10,\"^I\",43,\"^1=\",false,\"^K\",43,\"^1>\",null],\"~$reader-error\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",262,\"^J\",7,\"^K\",262,\"^L\",19,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\",\"~$&\",\"~$msg\"]]]]],\"^S\",\"Throws an ExceptionInfo with the given message.\\n   If rdr is an IndexingReader, additional information about column and line number is provided\",\"^T\",[\"^ \",\"^U\",true,\"^V\",1,\"^W\",[[\"^N\",[\"^1G\",\"^1S\"]]],\"^M\",[\"^N\",[[\"^1G\",\"~$&\",\"^1S\"]]],\"^X\",[\"^N\",[null]]]],\"^9\",\"~$cljs.tools.reader.reader-types/reader-error\",\"^U\",true,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",19,\"^T\",[\"^ \",\"^U\",true,\"^V\",1,\"^W\",[[\"^N\",[\"^1G\",\"^1S\"]]],\"^M\",[\"^N\",[[\"^1G\",\"~$&\",\"^1S\"]]],\"^X\",[\"^N\",[null]]],\"^W\",[[\"^N\",[\"^1G\",\"^1S\"]]],\"^Z\",null,\"^X\",[\"^N\",[null]],\"^J\",1,\"^I\",262,\"^K\",262,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[[\"^1G\",\"~$&\",\"^1S\"]]],\"^S\",\"Throws an ExceptionInfo with the given message.\\n   If rdr is an IndexingReader, additional information about column and line number is provided\"],\"~$Reader\",[\"^ \",\"^G\",[\"^ \",\"~:protocol-symbol\",true,\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^L\",20,\"^J\",14,\"^I\",21,\"~:protocol-info\",[\"^ \",\"~:methods\",[\"^ \",\"~$read-char\",[[\"^11\"]],\"~$peek-char\",[[\"^11\"]]]],\"^K\",21,\"^S\",null,\"~:jsdoc\",[\"^N\",[\"@interface\"]]],\"^1V\",true,\"^9\",\"^19\",\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",20,\"^J\",1,\"^I\",21,\"^1W\",[\"^ \",\"^1X\",[\"^ \",\"^1Y\",[[\"^11\"]],\"^1Z\",[[\"^11\"]]]],\"~:info\",null,\"^K\",21,\"~:tag\",\"~$any\",\"~:impls\",[\"^6\",[\"~$cljs.tools.reader.reader-types/SourceLoggingPushbackReader\",\"^1O\",\"~$cljs.tools.reader.reader-types/NodeReadableReader\",\"^1Q\",\"^1;\"]],\"^S\",null,\"^1[\",[\"^N\",[\"@interface\"]]],\"~$source-logging-push-back-reader\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",237,\"^J\",7,\"^K\",237,\"^L\",38,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]]]],\"^S\",\"Creates a SourceLoggingPushbackReader from a given string or PushbackReader\",\"^T\",[\"^ \",\"^U\",false,\"^V\",3,\"^W\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^M\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^X\",[\"^N\",[null,null,null]]]],\"^9\",\"~$cljs.tools.reader.reader-types/source-logging-push-back-reader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",38,\"^T\",[\"^ \",\"^U\",false,\"^V\",3,\"^W\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^M\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^X\",[\"^N\",[null,null,null]]],\"^W\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null,null]],\"^J\",1,\"^I\",237,\"^K\",237,\"^V\",3,\"^[\",true,\"^M\",[\"^N\",[[\"^P\"],[\"^P\",\"^Q\"],[\"^P\",\"^Q\",\"^R\"]]],\"^S\",\"Creates a SourceLoggingPushbackReader from a given string or PushbackReader\"],\"~$unread\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",28,\"^J\",4,\"^K\",28,\"^L\",10,\"~:protocol\",\"^1:\",\"^S\",\"Pushes back a single character on to the stream\",\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\",\"^1H\"]]]]]],\"^29\",\"^1:\",\"^9\",\"~$cljs.tools.reader.reader-types/unread\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",10,\"^W\",[\"^N\",[[\"^11\",\"^1H\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",27,\"^K\",28,\"^V\",2,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\",\"^1H\"]]]]],\"^S\",\"Pushes back a single character on to the stream\"],\"^1Z\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",24,\"^J\",4,\"^K\",24,\"^L\",13,\"^29\",\"^19\",\"^S\",\"Returns the next char from the Reader without removing it from the reader stream\",\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]]],\"^29\",\"^19\",\"^9\",\"~$cljs.tools.reader.reader-types/peek-char\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",13,\"^W\",[\"^N\",[[\"^11\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",21,\"^K\",24,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]],\"^S\",\"Returns the next char from the Reader without removing it from the reader stream\"],\"~$IPushbackReader\",[\"^ \",\"^G\",[\"^ \",\"^1V\",true,\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^L\",29,\"^J\",14,\"^I\",27,\"^1W\",[\"^ \",\"^1X\",[\"^ \",\"^28\",[[\"^11\",\"^1H\"]]]],\"^K\",27,\"^S\",null,\"^1[\",[\"^N\",[\"@interface\"]]],\"^1V\",true,\"^9\",\"^1:\",\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",29,\"^J\",1,\"^I\",27,\"^1W\",[\"^ \",\"^1X\",[\"^ \",\"^28\",[[\"^11\",\"^1H\"]]]],\"^20\",null,\"^K\",27,\"^21\",\"^22\",\"^23\",[\"^6\",[\"^24\",\"^1O\",\"^1;\"]],\"^S\",null,\"^1[\",[\"^N\",[\"@interface\"]]],\"~$->NodeReadableReader\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^18\",[\"^6\",[\"^19\"]],\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^L\",28,\"^J\",10,\"^1@\",\"^1A\",\"^I\",55,\"^K\",55,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$readable\",\"~$buf\"]]]]],\"^1>\",null],\"^18\",[\"^6\",[\"^19\"]],\"^9\",\"~$cljs.tools.reader.reader-types/->NodeReadableReader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",28,\"^W\",[\"^N\",[[\"^2>\",\"^2?\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^1@\",\"^1A\",\"^I\",55,\"^K\",55,\"^V\",2,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^2>\",\"^2?\"]]]]],\"^1>\",null],\"~$indexing-reader?\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",207,\"^J\",7,\"^K\",207,\"^L\",23,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\"]]]]],\"^S\",\"Returns true if the reader satisfies IndexingReader\"],\"^9\",\"~$cljs.tools.reader.reader-types/indexing-reader?\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",23,\"^W\",[\"^N\",[[\"^1G\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",207,\"^K\",207,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\"]]]]],\"^S\",\"Returns true if the reader satisfies IndexingReader\"],\"~$string-reader\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",212,\"^J\",7,\"^K\",212,\"^L\",20,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$s\"]]]]],\"^S\",\"Creates a StringReader from a given string\"],\"^9\",\"~$cljs.tools.reader.reader-types/string-reader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",20,\"^W\",[\"^N\",[[\"~$s\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",212,\"^K\",212,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$s\"]]]]],\"^S\",\"Creates a StringReader from a given string\"],\"^1Y\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",22,\"^J\",4,\"^K\",22,\"^L\",13,\"^29\",\"^19\",\"^S\",\"Returns the next char from the Reader, nil if the end of stream has been reached\",\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]]],\"^29\",\"^19\",\"^9\",\"~$cljs.tools.reader.reader-types/read-char\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",13,\"^W\",[\"^N\",[[\"^11\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",21,\"^K\",22,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]],\"^S\",\"Returns the next char from the Reader, nil if the end of stream has been reached\"],\"~$get-column-number\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",34,\"^J\",4,\"^K\",34,\"^L\",21,\"^29\",\"^1N\",\"^S\",\"Returns the column number of the next character to be read from the stream\",\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]]],\"^29\",\"^1N\",\"^9\",\"~$cljs.tools.reader.reader-types/get-column-number\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",21,\"^W\",[\"^N\",[[\"^11\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",31,\"^K\",34,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]],\"^S\",\"Returns the column number of the next character to be read from the stream\"],\"~$get-file-name\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",36,\"^J\",4,\"^K\",36,\"^L\",17,\"^29\",\"^1N\",\"^S\",\"Returns the file name the reader is reading from, or nil\",\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]]],\"^29\",\"^1N\",\"^9\",\"~$cljs.tools.reader.reader-types/get-file-name\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",17,\"^W\",[\"^N\",[[\"^11\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",31,\"^K\",36,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]],\"^S\",\"Returns the file name the reader is reading from, or nil\"],\"^8\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",254,\"^J\",7,\"^K\",254,\"^L\",16,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\"]]]]],\"^S\",\"Reads a line from the reader or from *in* if no reader is specified\"],\"^9\",\"~$cljs.tools.reader.reader-types/read-line\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",16,\"^W\",[\"^N\",[[\"^1G\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",254,\"^K\",254,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\"]]]]],\"^S\",\"Reads a line from the reader or from *in* if no reader is specified\"],\"~$->PushbackReader\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^18\",[\"^6\",[\"^19\",\"^1:\"]],\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^L\",24,\"^J\",10,\"^1@\",\"^1A\",\"^I\",71,\"^K\",71,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\",\"^2?\",\"^Q\",\"~$buf-pos\"]]]]],\"^1>\",null],\"^18\",[\"^6\",[\"^19\",\"^1:\"]],\"^9\",\"~$cljs.tools.reader.reader-types/->PushbackReader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",24,\"^W\",[\"^N\",[[\"^1G\",\"^2?\",\"^Q\",\"^2L\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^1@\",\"^1A\",\"^I\",71,\"^K\",71,\"^V\",4,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\",\"^2?\",\"^Q\",\"^2L\"]]]]],\"^1>\",null],\"~$log-source-char\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",152,\"^J\",8,\"^K\",152,\"^L\",23,\"^1F\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1K\",\"^7\"]]]]],\"^S\",\"Logs `char` to all currently active source logging frames.\"],\"^1F\",true,\"^9\",\"~$cljs.tools.reader.reader-types/log-source-char\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",23,\"^W\",[\"^N\",[[\"^1K\",\"^7\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",152,\"^K\",152,\"^V\",2,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1K\",\"^7\"]]]]],\"^S\",\"Logs `char` to all currently active source logging frames.\"],\"~$string-push-back-reader\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",217,\"^J\",7,\"^K\",217,\"^L\",30,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"~$s\"],[\"~$s\",\"^Q\"]]]]],\"^S\",\"Creates a PushbackReader from a given string\",\"^T\",[\"^ \",\"^U\",false,\"^V\",2,\"^W\",[\"^N\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^M\",[\"^N\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^X\",[\"^N\",[null,null]]]],\"^9\",\"~$cljs.tools.reader.reader-types/string-push-back-reader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",30,\"^T\",[\"^ \",\"^U\",false,\"^V\",2,\"^W\",[\"^N\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^M\",[\"^N\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^X\",[\"^N\",[null,null]]],\"^W\",[\"^N\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",217,\"^K\",217,\"^V\",2,\"^[\",true,\"^M\",[\"^N\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^S\",\"Creates a PushbackReader from a given string\"],\"~$drop-last-logged-char\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",158,\"^J\",8,\"^K\",158,\"^L\",29,\"^1F\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1K\"]]]]],\"^S\",\"Removes the last logged character from all currently active source\\nlogging frames. Called when pushing a character back.\"],\"^1F\",true,\"^9\",\"~$cljs.tools.reader.reader-types/drop-last-logged-char\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",29,\"^W\",[\"^N\",[[\"^1K\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",158,\"^K\",158,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1K\"]]]]],\"^S\",\"Removes the last logged character from all currently active source\\nlogging frames. Called when pushing a character back.\"],\"~$->SourceLoggingPushbackReader\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^18\",[\"^6\",[\"^1N\",\"^19\",\"^1:\"]],\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^L\",37,\"^J\",10,\"^1@\",\"^1A\",\"^I\",165,\"^K\",165,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\",\"~$line\",\"~$column\",\"~$line-start?\",\"~$prev\",\"~$prev-column\",\"^R\",\"^1K\"]]]]],\"^1>\",null],\"^18\",[\"^6\",[\"^1N\",\"^19\",\"^1:\"]],\"^9\",\"~$cljs.tools.reader.reader-types/->SourceLoggingPushbackReader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",37,\"^W\",[\"^N\",[[\"^1G\",\"^2U\",\"^2V\",\"^2W\",\"^2X\",\"^2Y\",\"^R\",\"^1K\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^1@\",\"^1A\",\"^I\",165,\"^K\",165,\"^V\",8,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\",\"^2U\",\"^2V\",\"^2W\",\"^2X\",\"^2Y\",\"^R\",\"^1K\"]]]]],\"^1>\",null],\"^2W\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",279,\"^J\",16,\"^K\",279,\"^L\",27,\"^21\",\"~$boolean\",\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\"]]]]],\"^S\",\"Returns true if rdr is an IndexingReader and the current char starts a new line\"],\"^9\",\"~$cljs.tools.reader.reader-types/line-start?\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",27,\"^W\",[\"^N\",[[\"^1G\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",279,\"~:ret-tag\",\"^2[\",\"^K\",279,\"^V\",1,\"^21\",\"^2[\",\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\"]]]]],\"^S\",\"Returns true if rdr is an IndexingReader and the current char starts a new line\"],\"~$source-logging-reader?\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",275,\"^J\",16,\"^K\",275,\"^L\",38,\"^21\",\"^2[\",\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\"]]]]]],\"^9\",\"~$cljs.tools.reader.reader-types/source-logging-reader?\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",38,\"^W\",[\"^N\",[[\"^1G\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",275,\"^31\",\"^2[\",\"^K\",275,\"^V\",1,\"^21\",\"^2[\",\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\"]]]]]],\"~$IndexingReader\",[\"^ \",\"^G\",[\"^ \",\"^1V\",true,\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^L\",28,\"^J\",14,\"^I\",31,\"^1W\",[\"^ \",\"^1X\",[\"^ \",\"~$get-line-number\",[[\"^11\"]],\"^2F\",[[\"^11\"]],\"^2H\",[[\"^11\"]]]],\"^K\",31,\"^S\",null,\"^1[\",[\"^N\",[\"@interface\"]]],\"^1V\",true,\"^9\",\"^1N\",\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",28,\"^J\",1,\"^I\",31,\"^1W\",[\"^ \",\"^1X\",[\"^ \",\"^35\",[[\"^11\"]],\"^2F\",[[\"^11\"]],\"^2H\",[[\"^11\"]]]],\"^20\",null,\"^K\",31,\"^21\",\"^22\",\"^23\",[\"^6\",[\"^24\",\"^1O\"]],\"^S\",null,\"^1[\",[\"^N\",[\"@interface\"]]],\"~$node-readable-push-back-reader\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",224,\"^J\",7,\"^K\",224,\"^L\",37,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^2>\"]]]]]],\"^9\",\"~$cljs.tools.reader.reader-types/node-readable-push-back-reader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",37,\"^W\",[\"^N\",[[\"^2>\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",224,\"^K\",224,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^2>\"]]]]]],\"~$SourceLoggingPushbackReader\",[\"^ \",\"^17\",8,\"^18\",[\"^6\",[\"^1N\",\"^19\",\"^1:\"]],\"^9\",\"^24\",\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",37,\"^1<\",true,\"^J\",10,\"^I\",165,\"^1=\",false,\"^K\",165,\"^1>\",null],\"^35\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^I\",32,\"^J\",4,\"^K\",32,\"^L\",19,\"^29\",\"^1N\",\"^S\",\"Returns the line number of the next character to be read from the stream\",\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]]],\"^29\",\"^1N\",\"^9\",\"~$cljs.tools.reader.reader-types/get-line-number\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",19,\"^W\",[\"^N\",[[\"^11\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^I\",31,\"^K\",32,\"^V\",1,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^11\"]]]]],\"^S\",\"Returns the line number of the next character to be read from the stream\"],\"~$NodeReadableReader\",[\"^ \",\"^17\",2,\"^18\",[\"^6\",[\"^19\"]],\"^9\",\"^25\",\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",28,\"^1<\",true,\"^J\",10,\"^I\",55,\"^1=\",false,\"^K\",55,\"^1>\",null],\"~$->IndexingPushbackReader\",[\"^ \",\"^F\",null,\"^G\",[\"^ \",\"^18\",[\"^6\",[\"^1N\",\"^19\",\"^1:\"]],\"^H\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/reader_types.cljs\",\"^L\",32,\"^J\",10,\"^1@\",\"^1A\",\"^I\",102,\"^K\",102,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\",\"^2U\",\"^2V\",\"^2W\",\"^2X\",\"^2Y\",\"^R\"]]]]],\"^1>\",null],\"^18\",[\"^6\",[\"^1N\",\"^19\",\"^1:\"]],\"^9\",\"~$cljs.tools.reader.reader-types/->IndexingPushbackReader\",\"^U\",false,\"^H\",\"out/cljs/tools/reader/reader_types.cljs\",\"^L\",32,\"^W\",[\"^N\",[[\"^1G\",\"^2U\",\"^2V\",\"^2W\",\"^2X\",\"^2Y\",\"^R\"]]],\"^Z\",null,\"^X\",[\"^N\",[null,null]],\"^J\",1,\"^1@\",\"^1A\",\"^I\",102,\"^K\",102,\"^V\",7,\"^[\",true,\"^M\",[\"^N\",[\"^O\",[\"^N\",[[\"^1G\",\"^2U\",\"^2V\",\"^2W\",\"^2X\",\"^2Y\",\"^R\"]]]]],\"^1>\",null]],\"~:require-macros\",null,\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^6\",[\"^1C\",\"^2Y\",\"~:reader-exception\",\"~:offset\",\"^1G\",\"^H\",\"^2?\",\"^1<\",\"~:source\",\"^2>\",\"^J\",\"^1K\",\"~$not-native\",\"^I\",\"~$s\",\"^2V\",\"^2L\",\"^21\",\"~:mutable\",\"^2W\",\"^2U\",\"^1B\",\"^R\",\"^2X\",\"^Q\",\"~:buffer\"]],\"~:order\",[\"~$s\",\"^1B\",\"^1C\",\"^3D\",\"^2>\",\"^2?\",\"^1G\",\"^21\",\"^3C\",\"^Q\",\"^2L\",\"^2U\",\"^2V\",\"^2W\",\"^2X\",\"^2Y\",\"^R\",\"^3B\",\"^3E\",\"^3A\",\"^1K\",\"^1<\",\"^3@\",\"^I\",\"^J\",\"^H\"]],\"^S\",\"Protocols and default Reader types implementation\"]","clojure/test/check/random/longs/bit_count_impl.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$bit-count\"]],\"~:name\",\"~$clojure.test.check.random.longs.bit-count-impl\",\"~:imports\",null,\"~:requires\",null,\"~:uses\",null,\"~:defs\",[\"^ \",\"~$lookup\",[\"^ \",\"~:meta\",[\"^ \",\"~:file\",\"^7\",\"~:line\",18,\"~:column\",16,\"~:end-line\",18,\"~:end-column\",22,\"~:private\",true],\"^C\",true,\"^6\",\"~$clojure.test.check.random.longs.bit-count-impl/lookup\",\"^>\",\"clojure/test/check/random/longs/bit_count_impl.cljs\",\"^B\",22,\"^@\",1,\"^?\",18,\"^A\",18,\"~:tag\",\"~$array\"],\"^5\",[\"^ \",\"~:protocol-inline\",null,\"^=\",[\"^ \",\"^>\",\"^7\",\"^?\",26,\"^@\",7,\"^A\",26,\"^B\",16,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^I\",[[\"~$x\"]]]]],\"~:doc\",\"Returns a JS number (not a Long), the number of set bits in the\\n  given Long.\"],\"^6\",\"~$clojure.test.check.random.longs.bit-count-impl/bit-count\",\"~:variadic\",false,\"^>\",\"clojure/test/check/random/longs/bit_count_impl.cljs\",\"^B\",16,\"~:method-params\",[\"^I\",[[\"~$x\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^I\",[null,null]],\"^@\",1,\"^?\",26,\"^A\",26,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$x\"]]]]],\"^K\",\"Returns a JS number (not a Long), the number of set bits in the\\n  given Long.\"]],\"~:require-macros\",[\"^ \"],\"^K\",null]","cljs/spec/alpha$macros.js":"// Compiled by ClojureScript 1.9.542 {:static-fns true}\ngoog.provide(\"cljs.spec.alpha$macros\");\nif(typeof cljs.spec.alpha$macros.registry_ref !== 'undefined'){\n} else {\n(function (){\ncljs.spec.alpha$macros.registry_ref = (function (){var G__414 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__414) : cljs.core.atom.call(null,G__414));\n})(); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.registry_ref;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"registry-ref\",\"cljs.spec.alpha$macros/registry-ref\",(1641114185),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"registry-ref\",\"registry-ref\",(1975823941),null),\"cljs/spec/alpha.cljc\",(22),(1),(19),(19),cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.spec.alpha$macros.registry_ref)?cljs.spec.alpha$macros.registry_ref.cljs$lang$test:null)])));})()\n;\n}\n/**\n * Returns a symbol from a symbol or var\n */\n(function (){\ncljs.spec.alpha$macros.__GT_sym = (function cljs$spec$alpha$macros$__GT_sym(x){\nif(cljs.core.map_QMARK_(x)){\nreturn new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)).cljs$core$IFn$_invoke$arity$1(x);\n} else {\nreturn x;\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.__GT_sym;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"->sym\",\"cljs.spec.alpha$macros/->sym\",(496084210),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"->sym\",\"->sym\",(696606926),null),\"cljs/spec/alpha.cljc\",(13),(1),(21),(21),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",(-555367584),null)], null)),\"Returns a symbol from a symbol or var\",(cljs.core.truth_(cljs.spec.alpha$macros.__GT_sym)?cljs.spec.alpha$macros.__GT_sym.cljs$lang$test:null)])));})()\n;\n(function (){\ncljs.spec.alpha$macros.unfn = (function cljs$spec$alpha$macros$unfn(expr){\nif((cljs.core.seq_QMARK_(expr)) && ((cljs.core.first(expr) instanceof cljs.core.Symbol)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"fn*\",cljs.core.name(cljs.core.first(expr))))){\nvar vec__421 = cljs.core.rest(expr);\nvar seq__422 = cljs.core.seq(vec__421);\nvar first__423 = cljs.core.first(seq__422);\nvar seq__422__$1 = cljs.core.next(seq__422);\nvar vec__424 = first__423;\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__424,(0),null);\nvar form = seq__422__$1;\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(clojure.walk.postwalk_replace(cljs.core.PersistentArrayMap.createAsIfByAssoc([s,new cljs.core.Symbol(null,\"%\",\"%\",(-950237169),null)]),form),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",(-950237169),null)], null),cljs.core.array_seq([new cljs.core.Symbol(null,\"fn\",\"fn\",(465265323),null)], 0));\n} else {\nreturn expr;\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.unfn;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"unfn\",\"cljs.spec.alpha$macros/unfn\",(-262404766),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"unfn\",\"unfn\",(-464043674),null),\"cljs/spec/alpha.cljc\",(12),(1),(28),(28),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"expr\",\"expr\",(-1908713478),null)], null)),null,(cljs.core.truth_(cljs.spec.alpha$macros.unfn)?cljs.spec.alpha$macros.unfn.cljs$lang$test:null)])));})()\n;\n(function (){\ncljs.spec.alpha$macros.res = (function cljs$spec$alpha$macros$res(env,form){\nif((form instanceof cljs.core.Keyword)){\nreturn form;\n} else {\nif((form instanceof cljs.core.Symbol)){\nvar resolved = (function (){var or__19662__auto__ = cljs.spec.alpha$macros.__GT_sym(cljs.analyzer.api.resolve(env,form));\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn form;\n}\n})();\nvar ns_name = cljs.core.namespace(resolved);\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2((cljs.core.truth_((function (){var and__19647__auto__ = ns_name;\nif(cljs.core.truth_(and__19647__auto__)){\nreturn clojure.string.ends_with_QMARK_(ns_name,\"$macros\");\n} else {\nreturn and__19647__auto__;\n}\n})())?cljs.core.subs.cljs$core$IFn$_invoke$arity$3(ns_name,(0),(cljs.core.count(ns_name) - (7))):ns_name),cljs.core.name(resolved));\n} else {\nif(cljs.core.sequential_QMARK_(form)){\nreturn clojure.walk.postwalk((function (p1__18_SHARP_){\nif((p1__18_SHARP_ instanceof cljs.core.Symbol)){\nreturn (cljs.spec.alpha$macros.res.cljs$core$IFn$_invoke$arity$2 ? cljs.spec.alpha$macros.res.cljs$core$IFn$_invoke$arity$2(env,p1__18_SHARP_) : cljs.spec.alpha$macros.res.call(null,env,p1__18_SHARP_));\n} else {\nreturn p1__18_SHARP_;\n}\n}),cljs.spec.alpha$macros.unfn(form));\n} else {\nreturn form;\n\n}\n}\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.res;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"res\",\"cljs.spec.alpha$macros/res\",(985086172),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"res\",\"res\",(245523648),null),\"cljs/spec/alpha.cljc\",(11),(1),(36),(36),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"env\",\"env\",(-175281708),null),new cljs.core.Symbol(null,\"form\",\"form\",(16469056),null)], null)),null,(cljs.core.truth_(cljs.spec.alpha$macros.res)?cljs.spec.alpha$macros.res.cljs$lang$test:null)])));})()\n;\nvar ret__21071__auto___427 = /**\n * a compile time res, for use in cljs/spec/alpha.cljs\n */\n(function (){\ncljs.spec.alpha$macros.mres = (function cljs$spec$alpha$macros$mres(_AMPERSAND_form,_AMPERSAND_env,form){\nreturn cljs.spec.alpha$macros.res(_AMPERSAND_env,form);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.mres;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"mres\",\"cljs.spec.alpha$macros/mres\",(1592775224),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"mres\",\"mres\",(1779703300),null),\"cljs/spec/alpha.cljc\",(25),(1),(50),true,(50),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"form\",\"form\",(16469056),null)], null)),\"a compile time res, for use in cljs/spec/alpha.cljs\",(cljs.core.truth_(cljs.spec.alpha$macros.mres)?cljs.spec.alpha$macros.mres.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros.mres.cljs$lang$macro = true;\n\n/**\n * Qualify symbol s by resolving it or using the current *ns*.\n */\n(function (){\ncljs.spec.alpha$macros.ns_qualify = (function cljs$spec$alpha$macros$ns_qualify(env,s){\nif(cljs.core.truth_(cljs.core.namespace(s))){\nvar v = cljs.analyzer.api.resolve(env,s);\nif(cljs.core.truth_(v)){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Unable to resolve: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join('')),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"v\")].join('')));\n}\n\nreturn cljs.spec.alpha$macros.__GT_sym(v);\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_)].join(''),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join(''));\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.ns_qualify;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"ns-qualify\",\"cljs.spec.alpha$macros/ns-qualify\",(696035146),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"ns-qualify\",\"ns-qualify\",(1165093718),null),\"cljs/spec/alpha.cljc\",(18),(1),(55),(55),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"env\",\"env\",(-175281708),null),new cljs.core.Symbol(null,\"s\",\"s\",(-948495851),null)], null)),\"Qualify symbol s by resolving it or using the current *ns*.\",(cljs.core.truth_(cljs.spec.alpha$macros.ns_qualify)?cljs.spec.alpha$macros.ns_qualify.cljs$lang$test:null)])));})()\n;\nvar ret__21071__auto___428 = /**\n * Given a namespace-qualified keyword or resolveable symbol k, and a spec,\n * spec-name, predicate or regex-op makes an entry in the registry mapping k to\n * the spec\n */\n(function (){\ncljs.spec.alpha$macros.def = (function cljs$spec$alpha$macros$def(_AMPERSAND_form,_AMPERSAND_env,k,spec_form){\nvar k__$1 = (((k instanceof cljs.core.Symbol))?cljs.spec.alpha$macros.ns_qualify(_AMPERSAND_env,k):k);\nvar form = cljs.spec.alpha$macros.res(_AMPERSAND_env,spec_form);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.spec.alpha$macros.registry_ref,cljs.core.assoc,k__$1,form);\n\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"def-impl\",\"cljs.spec.alpha/def-impl\",(-940040760),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = k__$1;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = form;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = spec_form;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.def;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"def\",\"cljs.spec.alpha$macros/def\",(-865942085),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"def\",\"def\",(597100991),null),\"cljs/spec/alpha.cljc\",(14),(1),(64),true,(64),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"k\",\"k\",(-505765866),null),new cljs.core.Symbol(null,\"spec-form\",\"spec-form\",(-871386429),null)], null)),\"Given a namespace-qualified keyword or resolveable symbol k, and a spec,\\n   spec-name, predicate or regex-op makes an entry in the registry mapping k to\\n   the spec\",(cljs.core.truth_(cljs.spec.alpha$macros.def)?cljs.spec.alpha$macros.def.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros.def.cljs$lang$macro = true;\n\nvar ret__21071__auto___436 = (function (){\n/**\n * Takes a single predicate form, e.g. can be the name of a predicate,\n *   like even?, or a fn literal like #(< % 42). Note that it is not\n *   generally necessary to wrap predicates in spec when using the rest\n *   of the spec macros, only to attach a unique generator\n * \n *   Can also be passed the result of one of the regex ops -\n *   cat, alt, *, +, ?, in which case it will return a regex-conforming\n *   spec, useful when nesting an independent regex.\n *   ---\n * \n *   Optionally takes :gen generator-fn, which must be a fn of no args that\n *   returns a test.check generator.\n * \n *   Returns a spec.\n */\n(function (){\ncljs.spec.alpha$macros.spec = (function cljs$spec$alpha$macros$spec(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___437 = arguments.length;\nvar i__21021__auto___438 = (0);\nwhile(true){\nif((i__21021__auto___438 < len__21020__auto___437)){\nargs__21023__auto__.push((arguments[i__21021__auto___438]));\n\nvar G__439 = (i__21021__auto___438 + (1));\ni__21021__auto___438 = G__439;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.spec.alpha$macros.spec.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.spec;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"spec\",\"cljs.spec.alpha$macros/spec\",(1113753564),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),\"cljs/spec/alpha.cljc\",(15),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"form\",\"form\",(16469056),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"form\",\"form\",(16469056),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(74),true,(74),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"form\",\"form\",(16469056),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),\"Takes a single predicate form, e.g. can be the name of a predicate,\\n  like even?, or a fn literal like #(< % 42). Note that it is not\\n  generally necessary to wrap predicates in spec when using the rest\\n  of the spec macros, only to attach a unique generator\\n\\n  Can also be passed the result of one of the regex ops -\\n  cat, alt, *, +, ?, in which case it will return a regex-conforming\\n  spec, useful when nesting an independent regex.\\n  ---\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator.\\n\\n  Returns a spec.\",(cljs.core.truth_(cljs.spec.alpha$macros.spec)?cljs.spec.alpha$macros.spec.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.spec.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,form,p__433){\nvar map__434 = p__433;\nvar map__434__$1 = ((((!((map__434 == null)))?((((map__434.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__434.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__434):map__434);\nvar gen = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__434__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)));\nif(cljs.core.truth_(form)){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec-impl\",\"cljs.spec.alpha/spec-impl\",(69764672),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,form);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = form;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = gen;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n} else {\nreturn null;\n}\n});\n\ncljs.spec.alpha$macros.spec.cljs$lang$maxFixedArity = (3);\n\ncljs.spec.alpha$macros.spec.cljs$lang$applyTo = (function (seq429){\nvar G__430 = cljs.core.first(seq429);\nvar seq429__$1 = cljs.core.next(seq429);\nvar G__431 = cljs.core.first(seq429__$1);\nvar seq429__$2 = cljs.core.next(seq429__$1);\nvar G__432 = cljs.core.first(seq429__$2);\nvar seq429__$3 = cljs.core.next(seq429__$2);\nreturn cljs.spec.alpha$macros.spec.cljs$core$IFn$_invoke$arity$variadic(G__430,G__431,G__432,seq429__$3);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.spec;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"spec\",\"cljs.spec.alpha$macros/spec\",(1113753564),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),\"cljs/spec/alpha.cljc\",(15),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"form\",\"form\",(16469056),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"form\",\"form\",(16469056),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(74),true,(74),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"form\",\"form\",(16469056),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),\"Takes a single predicate form, e.g. can be the name of a predicate,\\n  like even?, or a fn literal like #(< % 42). Note that it is not\\n  generally necessary to wrap predicates in spec when using the rest\\n  of the spec macros, only to attach a unique generator\\n\\n  Can also be passed the result of one of the regex ops -\\n  cat, alt, *, +, ?, in which case it will return a regex-conforming\\n  spec, useful when nesting an independent regex.\\n  ---\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator.\\n\\n  Returns a spec.\",(cljs.core.truth_(cljs.spec.alpha$macros.spec)?cljs.spec.alpha$macros.spec.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.spec.cljs$lang$macro = true;\n\nvar ret__21071__auto___440 = /**\n * Takes the name of a spec/predicate-returning multimethod and a\n *   tag-restoring keyword or fn (retag).  Returns a spec that when\n *   conforming or explaining data will pass it to the multimethod to get\n *   an appropriate spec. You can e.g. use multi-spec to dynamically and\n *   extensibly associate specs with 'tagged' data (i.e. data where one\n *   of the fields indicates the shape of the rest of the structure).\n * \n *   (defmulti mspec :tag)\n * \n *   The methods should ignore their argument and return a predicate/spec:\n *   (defmethod mspec :int [_] (s/keys :req-un [::tag ::i]))\n * \n *   retag is used during generation to retag generated values with\n *   matching tags. retag can either be a keyword, at which key the\n *   dispatch-tag will be assoc'ed, or a fn of generated value and\n *   dispatch-tag that should return an appropriately retagged value.\n * \n *   Note that because the tags themselves comprise an open set,\n *   the tag key spec cannot enumerate the values, but can e.g.\n *   test for keyword?.\n * \n *   Note also that the dispatch values of the multimethod will be\n *   included in the path, i.e. in reporting and gen overrides, even\n *   though those values are not evident in the spec.\n */\n(function (){\ncljs.spec.alpha$macros.multi_spec = (function cljs$spec$alpha$macros$multi_spec(_AMPERSAND_form,_AMPERSAND_env,mm,retag){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"multi-spec-impl\",\"cljs.spec.alpha/multi-spec-impl\",(-1581100244),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,mm);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"var\",\"var\",(870848730),null)),(function (){var x__20731__auto__ = mm;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = retag;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.multi_spec;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"multi-spec\",\"cljs.spec.alpha$macros/multi-spec\",(-1848653769),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"multi-spec\",\"multi-spec\",(-1379716045),null),\"cljs/spec/alpha.cljc\",(21),(1),(93),true,(93),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"mm\",\"mm\",(-12319033),null),new cljs.core.Symbol(null,\"retag\",\"retag\",(528972725),null)], null)),\"Takes the name of a spec/predicate-returning multimethod and a\\n  tag-restoring keyword or fn (retag).  Returns a spec that when\\n  conforming or explaining data will pass it to the multimethod to get\\n  an appropriate spec. You can e.g. use multi-spec to dynamically and\\n  extensibly associate specs with 'tagged' data (i.e. data where one\\n  of the fields indicates the shape of the rest of the structure).\\n\\n  (defmulti mspec :tag)\\n\\n  The methods should ignore their argument and return a predicate/spec:\\n  (defmethod mspec :int [_] (s/keys :req-un [::tag ::i]))\\n\\n  retag is used during generation to retag generated values with\\n  matching tags. retag can either be a keyword, at which key the\\n  dispatch-tag will be assoc'ed, or a fn of generated value and\\n  dispatch-tag that should return an appropriately retagged value.\\n\\n  Note that because the tags themselves comprise an open set,\\n  the tag key spec cannot enumerate the values, but can e.g.\\n  test for keyword?.\\n\\n  Note also that the dispatch values of the multimethod will be\\n  included in the path, i.e. in reporting and gen overrides, even\\n  though those values are not evident in the spec.\\n\",(cljs.core.truth_(cljs.spec.alpha$macros.multi_spec)?cljs.spec.alpha$macros.multi_spec.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros.multi_spec.cljs$lang$macro = true;\n\nvar ret__21071__auto___447 = (function (){\n/**\n * Creates and returns a map validating spec. :req and :opt are both\n *   vectors of namespaced-qualified keywords. The validator will ensure\n *   the :req keys are present. The :opt keys serve as documentation and\n *   may be used by the generator.\n * \n *   The :req key vector supports 'and' and 'or' for key groups:\n * \n *   (s/keys :req [::x ::y (or ::secret (and ::user ::pwd))] :opt [::z])\n * \n *   There are also -un versions of :req and :opt. These allow\n *   you to connect unqualified keys to specs.  In each case, fully\n *   qualfied keywords are passed, which name the specs, but unqualified\n *   keys (with the same name component) are expected and checked at\n *   conform-time, and generated during gen:\n * \n *   (s/keys :req-un [:my.ns/x :my.ns/y])\n * \n *   The above says keys :x and :y are required, and will be validated\n *   and generated by specs (if they exist) named :my.ns/x :my.ns/y\n *   respectively.\n * \n *   In addition, the values of *all* namespace-qualified keys will be validated\n *   (and possibly destructured) by any registered specs. Note: there is\n *   no support for inline value specification, by design.\n * \n *   Optionally takes :gen generator-fn, which must be a fn of no args that\n *   returns a test.check generator.\n */\n(function (){\ncljs.spec.alpha$macros.keys = (function cljs$spec$alpha$macros$keys(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___448 = arguments.length;\nvar i__21021__auto___449 = (0);\nwhile(true){\nif((i__21021__auto___449 < len__21020__auto___448)){\nargs__21023__auto__.push((arguments[i__21021__auto___449]));\n\nvar G__450 = (i__21021__auto___449 + (1));\ni__21021__auto___449 = G__450;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.keys.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.keys;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"keys\",\"cljs.spec.alpha$macros/keys\",(-1131893667),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"keys\",\"keys\",(-1586012071),null),\"cljs/spec/alpha.cljc\",(15),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"req\",\"req\",(1314083224),null),new cljs.core.Symbol(null,\"req-un\",\"req-un\",(-1579864761),null),new cljs.core.Symbol(null,\"opt\",\"opt\",(845825158),null),new cljs.core.Symbol(null,\"opt-un\",\"opt-un\",(-1770993273),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"req\",\"req\",(1314083224),null),new cljs.core.Symbol(null,\"req-un\",\"req-un\",(-1579864761),null),new cljs.core.Symbol(null,\"opt\",\"opt\",(845825158),null),new cljs.core.Symbol(null,\"opt-un\",\"opt-un\",(-1770993273),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(122),true,(122),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"req\",\"req\",(1314083224),null),new cljs.core.Symbol(null,\"req-un\",\"req-un\",(-1579864761),null),new cljs.core.Symbol(null,\"opt\",\"opt\",(845825158),null),new cljs.core.Symbol(null,\"opt-un\",\"opt-un\",(-1770993273),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),\"Creates and returns a map validating spec. :req and :opt are both\\n  vectors of namespaced-qualified keywords. The validator will ensure\\n  the :req keys are present. The :opt keys serve as documentation and\\n  may be used by the generator.\\n\\n  The :req key vector supports 'and' and 'or' for key groups:\\n\\n  (s/keys :req [::x ::y (or ::secret (and ::user ::pwd))] :opt [::z])\\n\\n  There are also -un versions of :req and :opt. These allow\\n  you to connect unqualified keys to specs.  In each case, fully\\n  qualfied keywords are passed, which name the specs, but unqualified\\n  keys (with the same name component) are expected and checked at\\n  conform-time, and generated during gen:\\n\\n  (s/keys :req-un [:my.ns/x :my.ns/y])\\n\\n  The above says keys :x and :y are required, and will be validated\\n  and generated by specs (if they exist) named :my.ns/x :my.ns/y\\n  respectively.\\n\\n  In addition, the values of *all* namespace-qualified keys will be validated\\n  (and possibly destructured) by any registered specs. Note: there is\\n  no support for inline value specification, by design.\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator.\",(cljs.core.truth_(cljs.spec.alpha$macros.keys)?cljs.spec.alpha$macros.keys.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.keys.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,p__444){\nvar map__445 = p__444;\nvar map__445__$1 = ((((!((map__445 == null)))?((((map__445.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__445.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__445):map__445);\nvar req = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__445__$1,new cljs.core.Keyword(null,\"req\",\"req\",(-326448303)));\nvar req_un = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__445__$1,new cljs.core.Keyword(null,\"req-un\",\"req-un\",(1074571008)));\nvar opt = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__445__$1,new cljs.core.Keyword(null,\"opt\",\"opt\",(-794706369)));\nvar opt_un = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__445__$1,new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",(883442496)));\nvar gen = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__445__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)));\nvar unk = ((function (map__445,map__445__$1,req,req_un,opt,opt_un,gen){\nreturn (function (p1__19_SHARP_){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core.name(p1__19_SHARP_));\n});})(map__445,map__445__$1,req,req_un,opt,opt_un,gen))\n;\nvar req_keys = cljs.core.filterv(cljs.core.keyword_QMARK_,cljs.core.flatten(req));\nvar req_un_specs = cljs.core.filterv(cljs.core.keyword_QMARK_,cljs.core.flatten(req_un));\nvar _ = ((cljs.core.every_QMARK_(((function (unk,req_keys,req_un_specs,map__445,map__445__$1,req,req_un,opt,opt_un,gen){\nreturn (function (p1__20_SHARP_){\nvar and__19647__auto__ = (p1__20_SHARP_ instanceof cljs.core.Keyword);\nif(and__19647__auto__){\nreturn cljs.core.namespace(p1__20_SHARP_);\n} else {\nreturn and__19647__auto__;\n}\n});})(unk,req_keys,req_un_specs,map__445,map__445__$1,req,req_un,opt,opt_un,gen))\n,cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(req_keys,req_un_specs,cljs.core.array_seq([opt,opt_un], 0))))?null:(function(){throw (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"all keys must be namespace-qualified keywords\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(every? (fn* [p1__20#] (clojure.core/and (keyword? p1__20#) (namespace p1__20#))) (concat req-keys req-un-specs opt opt-un))\")].join('')))})());\nvar req_specs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(req_keys,req_un_specs);\nvar req_keys__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(req_keys,cljs.core.map.cljs$core$IFn$_invoke$arity$2(unk,req_un_specs));\nvar opt_keys = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(opt),cljs.core.map.cljs$core$IFn$_invoke$arity$2(unk,opt_un));\nvar opt_specs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(opt),opt_un);\nvar gx = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();\nvar parse_req = ((function (unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,map__445,map__445__$1,req,req_un,opt,opt_un,gen){\nreturn (function (rk,f){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,map__445,map__445__$1,req,req_un,opt,opt_un,gen){\nreturn (function (x){\nif((x instanceof cljs.core.Keyword)){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",(-976526835),null)),(function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n} else {\nreturn clojure.walk.postwalk(((function (unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,map__445,map__445__$1,req,req_un,opt,opt_un,gen){\nreturn (function (y){\nif((y instanceof cljs.core.Keyword)){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",(-976526835),null)),(function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(y) : f.call(null,y));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n} else {\nreturn y;\n}\n});})(unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,map__445,map__445__$1,req,req_un,opt,opt_un,gen))\n,x);\n}\n});})(unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,map__445,map__445__$1,req,req_un,opt,opt_un,gen))\n,rk);\n});})(unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,map__445,map__445__$1,req,req_un,opt,opt_un,gen))\n;\nvar pred_exprs = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",(-1390345523),null)),(function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()))], null);\nvar pred_exprs__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(pred_exprs,parse_req(req,cljs.core.identity));\nvar pred_exprs__$2 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(pred_exprs__$1,parse_req(req_un,unk));\nvar keys_pred = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",(-6692549),null)),pred_exprs__$2));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nvar pred_exprs__$3 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,parse_req,pred_exprs,pred_exprs__$1,pred_exprs__$2,keys_pred,map__445,map__445__$1,req,req_un,opt,opt_un,gen){\nreturn (function (e){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = e;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});})(unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,parse_req,pred_exprs,pred_exprs__$1,pred_exprs__$2,keys_pred,map__445,map__445__$1,req,req_un,opt,opt_un,gen))\n,pred_exprs__$2);\nvar pred_forms = clojure.walk.postwalk(((function (unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,parse_req,pred_exprs,pred_exprs__$1,pred_exprs__$2,keys_pred,pred_exprs__$3,map__445,map__445__$1,req,req_un,opt,opt_un,gen){\nreturn (function (p1__21_SHARP_){\nreturn cljs.spec.alpha$macros.res(_AMPERSAND_env,p1__21_SHARP_);\n});})(unk,req_keys,req_un_specs,_,req_specs,req_keys__$1,opt_keys,opt_specs,gx,parse_req,pred_exprs,pred_exprs__$1,pred_exprs__$2,keys_pred,pred_exprs__$3,map__445,map__445__$1,req,req_un,opt,opt_un,gen))\n,pred_exprs__$3);\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-spec-impl\",\"cljs.spec.alpha/map-spec-impl\",(1965627085),null)),(function (){var x__20731__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"req-un\",\"req-un\",(1074571008))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = req_un;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",(883442496))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = opt_un;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"gfn\",\"gfn\",(791517474))),(function (){var x__20731__auto__ = gen;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",(1792271395))),(function (){var x__20731__auto__ = pred_exprs__$3;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",(858984739))),(function (){var x__20731__auto__ = keys_pred;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",(1262688261))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = opt_keys;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",(553962313))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = req_specs;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"req\",\"req\",(-326448303))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = req;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",(514319221))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = req_keys__$1;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",(-384905450))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = opt_specs;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",(172611832))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = pred_forms;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"opt\",\"opt\",(-794706369))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = opt;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.spec.alpha$macros.keys.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.keys.cljs$lang$applyTo = (function (seq441){\nvar G__442 = cljs.core.first(seq441);\nvar seq441__$1 = cljs.core.next(seq441);\nvar G__443 = cljs.core.first(seq441__$1);\nvar seq441__$2 = cljs.core.next(seq441__$1);\nreturn cljs.spec.alpha$macros.keys.cljs$core$IFn$_invoke$arity$variadic(G__442,G__443,seq441__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.keys;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"keys\",\"cljs.spec.alpha$macros/keys\",(-1131893667),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"keys\",\"keys\",(-1586012071),null),\"cljs/spec/alpha.cljc\",(15),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"req\",\"req\",(1314083224),null),new cljs.core.Symbol(null,\"req-un\",\"req-un\",(-1579864761),null),new cljs.core.Symbol(null,\"opt\",\"opt\",(845825158),null),new cljs.core.Symbol(null,\"opt-un\",\"opt-un\",(-1770993273),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"req\",\"req\",(1314083224),null),new cljs.core.Symbol(null,\"req-un\",\"req-un\",(-1579864761),null),new cljs.core.Symbol(null,\"opt\",\"opt\",(845825158),null),new cljs.core.Symbol(null,\"opt-un\",\"opt-un\",(-1770993273),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(122),true,(122),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"req\",\"req\",(1314083224),null),new cljs.core.Symbol(null,\"req-un\",\"req-un\",(-1579864761),null),new cljs.core.Symbol(null,\"opt\",\"opt\",(845825158),null),new cljs.core.Symbol(null,\"opt-un\",\"opt-un\",(-1770993273),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),\"Creates and returns a map validating spec. :req and :opt are both\\n  vectors of namespaced-qualified keywords. The validator will ensure\\n  the :req keys are present. The :opt keys serve as documentation and\\n  may be used by the generator.\\n\\n  The :req key vector supports 'and' and 'or' for key groups:\\n\\n  (s/keys :req [::x ::y (or ::secret (and ::user ::pwd))] :opt [::z])\\n\\n  There are also -un versions of :req and :opt. These allow\\n  you to connect unqualified keys to specs.  In each case, fully\\n  qualfied keywords are passed, which name the specs, but unqualified\\n  keys (with the same name component) are expected and checked at\\n  conform-time, and generated during gen:\\n\\n  (s/keys :req-un [:my.ns/x :my.ns/y])\\n\\n  The above says keys :x and :y are required, and will be validated\\n  and generated by specs (if they exist) named :my.ns/x :my.ns/y\\n  respectively.\\n\\n  In addition, the values of *all* namespace-qualified keys will be validated\\n  (and possibly destructured) by any registered specs. Note: there is\\n  no support for inline value specification, by design.\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator.\",(cljs.core.truth_(cljs.spec.alpha$macros.keys)?cljs.spec.alpha$macros.keys.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.keys.cljs$lang$macro = true;\n\nvar ret__21071__auto___454 = (function (){\n/**\n * Takes key+pred pairs, e.g.\n * \n *   (s/or :even even? :small #(< % 42))\n * \n *   Returns a destructuring spec that returns a map entry containing the\n *   key of the first matching pred and the corresponding value. Thus the\n *   'key' and 'val' functions can be used to refer generically to the\n *   components of the tagged return.\n */\n(function (){\ncljs.spec.alpha$macros.or = (function cljs$spec$alpha$macros$or(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___455 = arguments.length;\nvar i__21021__auto___456 = (0);\nwhile(true){\nif((i__21021__auto___456 < len__21020__auto___455)){\nargs__21023__auto__.push((arguments[i__21021__auto___456]));\n\nvar G__457 = (i__21021__auto___456 + (1));\ni__21021__auto___456 = G__457;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.or.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.or;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"or\",\"cljs.spec.alpha$macros/or\",(1541443060),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"or\",\"or\",(1876275696),null),\"cljs/spec/alpha.cljc\",(13),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(184),true,(184),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),\"Takes key+pred pairs, e.g.\\n\\n  (s/or :even even? :small #(< % 42))\\n\\n  Returns a destructuring spec that returns a map entry containing the\\n  key of the first matching pred and the corresponding value. Thus the\\n  'key' and 'val' functions can be used to refer generically to the\\n  components of the tagged return.\",(cljs.core.truth_(cljs.spec.alpha$macros.or)?cljs.spec.alpha$macros.or.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.or.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,key_pred_forms){\nvar pairs = cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),key_pred_forms);\nvar keys = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.first,pairs);\nvar pred_forms = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.second,pairs);\nvar pf = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (pairs,keys,pred_forms){\nreturn (function (p1__22_SHARP_){\nreturn cljs.spec.alpha$macros.res(_AMPERSAND_env,p1__22_SHARP_);\n});})(pairs,keys,pred_forms))\n,pred_forms);\nif((cljs.core.even_QMARK_(cljs.core.count(key_pred_forms))) && (cljs.core.every_QMARK_(cljs.core.keyword_QMARK_,keys))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"spec/or expects k1 p1 k2 p2..., where ks are keywords\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(clojure.core/and (even? (count key-pred-forms)) (every? keyword? keys))\")].join('')));\n}\n\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"or-spec-impl\",\"cljs.spec.alpha/or-spec-impl\",(174083152),null)),(function (){var x__20731__auto__ = keys;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = pf;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = pred_forms;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n});\n\ncljs.spec.alpha$macros.or.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.or.cljs$lang$applyTo = (function (seq451){\nvar G__452 = cljs.core.first(seq451);\nvar seq451__$1 = cljs.core.next(seq451);\nvar G__453 = cljs.core.first(seq451__$1);\nvar seq451__$2 = cljs.core.next(seq451__$1);\nreturn cljs.spec.alpha$macros.or.cljs$core$IFn$_invoke$arity$variadic(G__452,G__453,seq451__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.or;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"or\",\"cljs.spec.alpha$macros/or\",(1541443060),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"or\",\"or\",(1876275696),null),\"cljs/spec/alpha.cljc\",(13),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(184),true,(184),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),\"Takes key+pred pairs, e.g.\\n\\n  (s/or :even even? :small #(< % 42))\\n\\n  Returns a destructuring spec that returns a map entry containing the\\n  key of the first matching pred and the corresponding value. Thus the\\n  'key' and 'val' functions can be used to refer generically to the\\n  components of the tagged return.\",(cljs.core.truth_(cljs.spec.alpha$macros.or)?cljs.spec.alpha$macros.or.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.or.cljs$lang$macro = true;\n\nvar ret__21071__auto___461 = (function (){\n/**\n * Takes predicate/spec-forms, e.g.\n * \n *   (s/and even? #(< % 42))\n * \n *   Returns a spec that returns the conformed value. Successive\n *   conformed values propagate through rest of predicates.\n */\n(function (){\ncljs.spec.alpha$macros.and = (function cljs$spec$alpha$macros$and(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___462 = arguments.length;\nvar i__21021__auto___463 = (0);\nwhile(true){\nif((i__21021__auto___463 < len__21020__auto___462)){\nargs__21023__auto__.push((arguments[i__21021__auto___463]));\n\nvar G__464 = (i__21021__auto___463 + (1));\ni__21021__auto___463 = G__464;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.and.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.and;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"and\",\"cljs.spec.alpha$macros/and\",(198168194),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"and\",\"and\",(668631710),null),\"cljs/spec/alpha.cljc\",(14),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(201),true,(201),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null)], null)),\"Takes predicate/spec-forms, e.g.\\n\\n  (s/and even? #(< % 42))\\n\\n  Returns a spec that returns the conformed value. Successive\\n  conformed values propagate through rest of predicates.\",(cljs.core.truth_(cljs.spec.alpha$macros.and)?cljs.spec.alpha$macros.and.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.and.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,pred_forms){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"and-spec-impl\",\"cljs.spec.alpha/and-spec-impl\",(-492178340),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__23_SHARP_){\nreturn cljs.spec.alpha$macros.res(_AMPERSAND_env,p1__23_SHARP_);\n}),pred_forms);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.vec(pred_forms);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n});\n\ncljs.spec.alpha$macros.and.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.and.cljs$lang$applyTo = (function (seq458){\nvar G__459 = cljs.core.first(seq458);\nvar seq458__$1 = cljs.core.next(seq458);\nvar G__460 = cljs.core.first(seq458__$1);\nvar seq458__$2 = cljs.core.next(seq458__$1);\nreturn cljs.spec.alpha$macros.and.cljs$core$IFn$_invoke$arity$variadic(G__459,G__460,seq458__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.and;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"and\",\"cljs.spec.alpha$macros/and\",(198168194),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"and\",\"and\",(668631710),null),\"cljs/spec/alpha.cljc\",(14),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(201),true,(201),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null)], null)),\"Takes predicate/spec-forms, e.g.\\n\\n  (s/and even? #(< % 42))\\n\\n  Returns a spec that returns the conformed value. Successive\\n  conformed values propagate through rest of predicates.\",(cljs.core.truth_(cljs.spec.alpha$macros.and)?cljs.spec.alpha$macros.and.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.and.cljs$lang$macro = true;\n\n(function (){\ncljs.spec.alpha$macros.res_kind = (function cljs$spec$alpha$macros$res_kind(env,opts){\nvar map__467 = opts;\nvar map__467__$1 = ((((!((map__467 == null)))?((((map__467.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__467.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__467):map__467);\nvar mopts = map__467__$1;\nvar kind = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__467__$1,new cljs.core.Keyword(null,\"kind\",\"kind\",(-717265803)));\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.identity,cljs.core.array_seq([(cljs.core.truth_(kind)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(mopts,new cljs.core.Keyword(null,\"kind\",\"kind\",(-717265803)),cljs.spec.alpha$macros.res(env,kind)):mopts)], 0));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.res_kind;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"res-kind\",\"cljs.spec.alpha$macros/res-kind\",(-1706730299),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"res-kind\",\"res-kind\",(-2040653631),null),\"cljs/spec/alpha.cljc\",(16),(1),(211),(211),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"env\",\"env\",(-175281708),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),null,(cljs.core.truth_(cljs.spec.alpha$macros.res_kind)?cljs.spec.alpha$macros.res_kind.cljs$lang$test:null)])));})()\n;\nvar ret__21071__auto___477 = (function (){\n/**\n * takes a pred and validates collection elements against that pred.\n * \n *   Note that 'every' does not do exhaustive checking, rather it samples\n *   *coll-check-limit* elements. Nor (as a result) does it do any\n *   conforming of elements. 'explain' will report at most *coll-error-limit*\n *   problems.  Thus 'every' should be suitable for potentially large\n *   collections.\n * \n *   Takes several kwargs options that further constrain the collection:\n * \n *   :kind - a pred/spec that the collection type must satisfy, e.g. vector?\n *        (default nil) Note that if :kind is specified and :into is\n *        not, this pred must generate in order for every to generate.\n *   :count - specifies coll has exactly this count (default nil)\n *   :min-count, :max-count - coll has count (<= min-count count max-count) (defaults nil)\n *   :distinct - all the elements are distinct (default nil)\n * \n *   And additional args that control gen\n * \n *   :gen-max - the maximum coll size to generate (default 20)\n *   :into - one of [], (), {}, #{} - the default collection to generate into\n *    (default same as :kind if supplied, else []\n * \n *   Optionally takes :gen generator-fn, which must be a fn of no args that\n *   returns a test.check generator\n * \n *   See also - coll-of, every-kv\n */\n(function (){\ncljs.spec.alpha$macros.every = (function cljs$spec$alpha$macros$every(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___478 = arguments.length;\nvar i__21021__auto___479 = (0);\nwhile(true){\nif((i__21021__auto___479 < len__21020__auto___478)){\nargs__21023__auto__.push((arguments[i__21021__auto___479]));\n\nvar G__480 = (i__21021__auto___479 + (1));\ni__21021__auto___479 = G__480;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.spec.alpha$macros.every.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.every;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"every\",\"cljs.spec.alpha$macros/every\",(-218813563),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"every\",\"every\",(-419764351),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"into\",\"into\",(1489695498),null),new cljs.core.Symbol(null,\"kind\",\"kind\",(923265724),null),new cljs.core.Symbol(null,\"count\",\"count\",(-514511684),null),new cljs.core.Symbol(null,\"max-count\",\"max-count\",(-1115250464),null),new cljs.core.Symbol(null,\"min-count\",\"min-count\",(-1059726756),null),new cljs.core.Symbol(null,\"distinct\",\"distinct\",(-148347594),null),new cljs.core.Symbol(null,\"gen-max\",\"gen-max\",(846851082),null),new cljs.core.Symbol(null,\"gen-into\",\"gen-into\",(592640985),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"into\",\"into\",(1489695498),null),new cljs.core.Symbol(null,\"kind\",\"kind\",(923265724),null),new cljs.core.Symbol(null,\"count\",\"count\",(-514511684),null),new cljs.core.Symbol(null,\"max-count\",\"max-count\",(-1115250464),null),new cljs.core.Symbol(null,\"min-count\",\"min-count\",(-1059726756),null),new cljs.core.Symbol(null,\"distinct\",\"distinct\",(-148347594),null),new cljs.core.Symbol(null,\"gen-max\",\"gen-max\",(846851082),null),new cljs.core.Symbol(null,\"gen-into\",\"gen-into\",(592640985),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(220),true,(220),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"into\",\"into\",(1489695498),null),new cljs.core.Symbol(null,\"kind\",\"kind\",(923265724),null),new cljs.core.Symbol(null,\"count\",\"count\",(-514511684),null),new cljs.core.Symbol(null,\"max-count\",\"max-count\",(-1115250464),null),new cljs.core.Symbol(null,\"min-count\",\"min-count\",(-1059726756),null),new cljs.core.Symbol(null,\"distinct\",\"distinct\",(-148347594),null),new cljs.core.Symbol(null,\"gen-max\",\"gen-max\",(846851082),null),new cljs.core.Symbol(null,\"gen-into\",\"gen-into\",(592640985),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)], null)),\"takes a pred and validates collection elements against that pred.\\n\\n  Note that 'every' does not do exhaustive checking, rather it samples\\n  *coll-check-limit* elements. Nor (as a result) does it do any\\n  conforming of elements. 'explain' will report at most *coll-error-limit*\\n  problems.  Thus 'every' should be suitable for potentially large\\n  collections.\\n\\n  Takes several kwargs options that further constrain the collection:\\n\\n  :kind - a pred/spec that the collection type must satisfy, e.g. vector?\\n          (default nil) Note that if :kind is specified and :into is\\n          not, this pred must generate in order for every to generate.\\n  :count - specifies coll has exactly this count (default nil)\\n  :min-count, :max-count - coll has count (<= min-count count max-count) (defaults nil)\\n  :distinct - all the elements are distinct (default nil)\\n\\n  And additional args that control gen\\n\\n  :gen-max - the maximum coll size to generate (default 20)\\n  :into - one of [], (), {}, #{} - the default collection to generate into\\n      (default same as :kind if supplied, else []\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator\\n\\n  See also - coll-of, every-kv\\n\",(cljs.core.truth_(cljs.spec.alpha$macros.every)?cljs.spec.alpha$macros.every.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.every.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,pred,p__473){\nvar map__474 = p__473;\nvar map__474__$1 = ((((!((map__474 == null)))?((((map__474.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__474.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__474):map__474);\nvar opts = map__474__$1;\nvar max_count = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__474__$1,new cljs.core.Keyword(null,\"max-count\",\"max-count\",(1539185305)));\nvar gen_max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__474__$1,new cljs.core.Keyword(null,\"gen-max\",\"gen-max\",(-793680445)));\nvar into = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__474__$1,new cljs.core.Keyword(null,\"into\",\"into\",(-150836029)));\nvar gen = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__474__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)));\nvar distinct = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__474__$1,new cljs.core.Keyword(null,\"distinct\",\"distinct\",(-1788879121)));\nvar gen_into = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__474__$1,new cljs.core.Keyword(null,\"gen-into\",\"gen-into\",(-1047890542)));\nvar count = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__474__$1,new cljs.core.Keyword(null,\"count\",\"count\",(2139924085)));\nvar min_count = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__474__$1,new cljs.core.Keyword(null,\"min-count\",\"min-count\",(1594709013)));\nvar kind = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__474__$1,new cljs.core.Keyword(null,\"kind\",\"kind\",(-717265803)));\nvar desc = new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",(1883026911)).cljs$core$IFn$_invoke$arity$1(opts);\nvar nopts = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(opts,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)),cljs.core.array_seq([new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",(1883026911))], 0)),new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",(-1047104697)),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,new cljs.core.Keyword(null,\"kind\",\"kind\",(-717265803)).cljs$core$IFn$_invoke$arity$1(opts));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())),cljs.core.array_seq([new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",(1883026911)),(function (){var or__19662__auto__ = desc;\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"every\",\"cljs.spec.alpha/every\",(123912744),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,pred);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.spec.alpha$macros.res_kind(_AMPERSAND_env,opts)], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n}\n})()], 0));\nvar gx = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();\nvar cpreds = (function (){var G__476 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var x__20731__auto__ = (function (){var or__19662__auto__ = kind;\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn new cljs.core.Symbol(\"cljs.core\",\"coll?\",\"cljs.core/coll?\",(1208130522),null);\n}\n})();\nreturn cljs.core._conj((function (){var x__20731__auto____$1 = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto____$1);\n})(),x__20731__auto__);\n})()], null);\nvar G__476__$1 = (cljs.core.truth_(count)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__476,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"=\",\"cljs.core/=\",(-1891498332),null)),(function (){var x__20731__auto__ = count;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"bounded-count\",\"cljs.core/bounded-count\",(355256728),null)),(function (){var x__20731__auto__ = count;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)))):G__476);\nvar G__476__$2 = (cljs.core.truth_((function (){var or__19662__auto__ = min_count;\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn max_count;\n}\n})())?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__476__$1,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"<=\",\"cljs.core/<=\",(1677001748),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",(1201033885),null)),(function (){var x__20731__auto__ = min_count;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,(0))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"bounded-count\",\"cljs.core/bounded-count\",(355256728),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),(function (){var x__20731__auto__ = max_count;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"inc\",\"cljs.core/inc\",(-879172610),null)),(function (){var x__20731__auto__ = max_count;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = min_count;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",(1201033885),null)),(function (){var x__20731__auto__ = max_count;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"MAX_INT\",\"cljs.spec.alpha/MAX_INT\",(1315428963),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)))):G__476__$1);\nvar G__476__$3 = (cljs.core.truth_(distinct)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__476__$2,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",(1201033885),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"empty?\",\"cljs.core/empty?\",(1866613644),null)),(function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"apply\",\"cljs.core/apply\",(1757277831),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"distinct?\",\"cljs.core/distinct?\",(-1285807788),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)))):G__476__$2);\nreturn G__476__$3;\n})();\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"every-impl\",\"cljs.spec.alpha/every-impl\",(30419907),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = pred;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = pred;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(nopts,new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",(-693471218)),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((function (){var x__20731__auto__ = gx;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",(-6692549),null)),cpreds));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = gen;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.every.cljs$lang$maxFixedArity = (3);\n\ncljs.spec.alpha$macros.every.cljs$lang$applyTo = (function (seq469){\nvar G__470 = cljs.core.first(seq469);\nvar seq469__$1 = cljs.core.next(seq469);\nvar G__471 = cljs.core.first(seq469__$1);\nvar seq469__$2 = cljs.core.next(seq469__$1);\nvar G__472 = cljs.core.first(seq469__$2);\nvar seq469__$3 = cljs.core.next(seq469__$2);\nreturn cljs.spec.alpha$macros.every.cljs$core$IFn$_invoke$arity$variadic(G__470,G__471,G__472,seq469__$3);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.every;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"every\",\"cljs.spec.alpha$macros/every\",(-218813563),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"every\",\"every\",(-419764351),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"into\",\"into\",(1489695498),null),new cljs.core.Symbol(null,\"kind\",\"kind\",(923265724),null),new cljs.core.Symbol(null,\"count\",\"count\",(-514511684),null),new cljs.core.Symbol(null,\"max-count\",\"max-count\",(-1115250464),null),new cljs.core.Symbol(null,\"min-count\",\"min-count\",(-1059726756),null),new cljs.core.Symbol(null,\"distinct\",\"distinct\",(-148347594),null),new cljs.core.Symbol(null,\"gen-max\",\"gen-max\",(846851082),null),new cljs.core.Symbol(null,\"gen-into\",\"gen-into\",(592640985),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"into\",\"into\",(1489695498),null),new cljs.core.Symbol(null,\"kind\",\"kind\",(923265724),null),new cljs.core.Symbol(null,\"count\",\"count\",(-514511684),null),new cljs.core.Symbol(null,\"max-count\",\"max-count\",(-1115250464),null),new cljs.core.Symbol(null,\"min-count\",\"min-count\",(-1059726756),null),new cljs.core.Symbol(null,\"distinct\",\"distinct\",(-148347594),null),new cljs.core.Symbol(null,\"gen-max\",\"gen-max\",(846851082),null),new cljs.core.Symbol(null,\"gen-into\",\"gen-into\",(592640985),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(220),true,(220),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"into\",\"into\",(1489695498),null),new cljs.core.Symbol(null,\"kind\",\"kind\",(923265724),null),new cljs.core.Symbol(null,\"count\",\"count\",(-514511684),null),new cljs.core.Symbol(null,\"max-count\",\"max-count\",(-1115250464),null),new cljs.core.Symbol(null,\"min-count\",\"min-count\",(-1059726756),null),new cljs.core.Symbol(null,\"distinct\",\"distinct\",(-148347594),null),new cljs.core.Symbol(null,\"gen-max\",\"gen-max\",(846851082),null),new cljs.core.Symbol(null,\"gen-into\",\"gen-into\",(592640985),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)], null)),\"takes a pred and validates collection elements against that pred.\\n\\n  Note that 'every' does not do exhaustive checking, rather it samples\\n  *coll-check-limit* elements. Nor (as a result) does it do any\\n  conforming of elements. 'explain' will report at most *coll-error-limit*\\n  problems.  Thus 'every' should be suitable for potentially large\\n  collections.\\n\\n  Takes several kwargs options that further constrain the collection:\\n\\n  :kind - a pred/spec that the collection type must satisfy, e.g. vector?\\n          (default nil) Note that if :kind is specified and :into is\\n          not, this pred must generate in order for every to generate.\\n  :count - specifies coll has exactly this count (default nil)\\n  :min-count, :max-count - coll has count (<= min-count count max-count) (defaults nil)\\n  :distinct - all the elements are distinct (default nil)\\n\\n  And additional args that control gen\\n\\n  :gen-max - the maximum coll size to generate (default 20)\\n  :into - one of [], (), {}, #{} - the default collection to generate into\\n      (default same as :kind if supplied, else []\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator\\n\\n  See also - coll-of, every-kv\\n\",(cljs.core.truth_(cljs.spec.alpha$macros.every)?cljs.spec.alpha$macros.every.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.every.cljs$lang$macro = true;\n\nvar ret__21071__auto___486 = (function (){\n/**\n * like 'every' but takes separate key and val preds and works on associative collections.\n * \n *   Same options as 'every', :into defaults to {}\n * \n *   See also - map-of\n */\n(function (){\ncljs.spec.alpha$macros.every_kv = (function cljs$spec$alpha$macros$every_kv(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___487 = arguments.length;\nvar i__21021__auto___488 = (0);\nwhile(true){\nif((i__21021__auto___488 < len__21020__auto___487)){\nargs__21023__auto__.push((arguments[i__21021__auto___488]));\n\nvar G__489 = (i__21021__auto___488 + (1));\ni__21021__auto___488 = G__489;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((4) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((4)),(0),null)):null);\nreturn cljs.spec.alpha$macros.every_kv.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.every_kv;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"every-kv\",\"cljs.spec.alpha$macros/every-kv\",(-1904142967),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"every-kv\",\"every-kv\",(-1701549683),null),\"cljs/spec/alpha.cljc\",(19),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(268),true,(268),cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"like 'every' but takes separate key and val preds and works on associative collections.\\n\\n  Same options as 'every', :into defaults to {}\\n\\n  See also - map-of\",(cljs.core.truth_(cljs.spec.alpha$macros.every_kv)?cljs.spec.alpha$macros.every_kv.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.every_kv.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,kpred,vpred,opts){\nvar desc = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"every-kv\",\"cljs.spec.alpha/every-kv\",(-133428374),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,kpred);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,vpred);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.spec.alpha$macros.res_kind(_AMPERSAND_env,opts)], 0)));\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"every\",\"cljs.spec.alpha/every\",(123912744),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple\",\"cljs.spec.alpha/tuple\",(-415901908),null)),(function (){var x__20731__auto__ = kpred;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = vpred;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kfn\",\"cljs.spec.alpha/kfn\",(672643897))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"i__24__auto__\",\"i__24__auto__\",(-695723335),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"v__25__auto__\",\"v__25__auto__\",(44761940),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"nth\",\"cljs.core/nth\",(1961052085),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"v__25__auto__\",\"v__25__auto__\",(44761940),null)),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,(0))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"into\",\"into\",(-150836029))),(function (){var x__20731__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",(1883026911))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = desc;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),opts], 0)));\n});\n\ncljs.spec.alpha$macros.every_kv.cljs$lang$maxFixedArity = (4);\n\ncljs.spec.alpha$macros.every_kv.cljs$lang$applyTo = (function (seq481){\nvar G__482 = cljs.core.first(seq481);\nvar seq481__$1 = cljs.core.next(seq481);\nvar G__483 = cljs.core.first(seq481__$1);\nvar seq481__$2 = cljs.core.next(seq481__$1);\nvar G__484 = cljs.core.first(seq481__$2);\nvar seq481__$3 = cljs.core.next(seq481__$2);\nvar G__485 = cljs.core.first(seq481__$3);\nvar seq481__$4 = cljs.core.next(seq481__$3);\nreturn cljs.spec.alpha$macros.every_kv.cljs$core$IFn$_invoke$arity$variadic(G__482,G__483,G__484,G__485,seq481__$4);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.every_kv;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"every-kv\",\"cljs.spec.alpha$macros/every-kv\",(-1904142967),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"every-kv\",\"every-kv\",(-1701549683),null),\"cljs/spec/alpha.cljc\",(19),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(268),true,(268),cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"like 'every' but takes separate key and val preds and works on associative collections.\\n\\n  Same options as 'every', :into defaults to {}\\n\\n  See also - map-of\",(cljs.core.truth_(cljs.spec.alpha$macros.every_kv)?cljs.spec.alpha$macros.every_kv.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.every_kv.cljs$lang$macro = true;\n\nvar ret__21071__auto___494 = (function (){\n/**\n * Returns a spec for a collection of items satisfying pred. Unlike\n *   generator will fill an empty init-coll.\n * \n *   Same options as 'every'. conform will produce a collection\n *   corresponding to :into if supplied, else will match the input collection,\n *   avoiding rebuilding when possible.\n * \n *   Same options as 'every'.\n * \n *   See also - every, map-of\n */\n(function (){\ncljs.spec.alpha$macros.coll_of = (function cljs$spec$alpha$macros$coll_of(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___495 = arguments.length;\nvar i__21021__auto___496 = (0);\nwhile(true){\nif((i__21021__auto___496 < len__21020__auto___495)){\nargs__21023__auto__.push((arguments[i__21021__auto___496]));\n\nvar G__497 = (i__21021__auto___496 + (1));\ni__21021__auto___496 = G__497;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.spec.alpha$macros.coll_of.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.coll_of;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"coll-of\",\"cljs.spec.alpha$macros/coll-of\",(-1504662300),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"coll-of\",\"coll-of\",(-1705285400),null),\"cljs/spec/alpha.cljc\",(18),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(279),true,(279),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Returns a spec for a collection of items satisfying pred. Unlike\\n  generator will fill an empty init-coll.\\n\\n  Same options as 'every'. conform will produce a collection\\n  corresponding to :into if supplied, else will match the input collection,\\n  avoiding rebuilding when possible.\\n\\n  Same options as 'every'.\\n\\n  See also - every, map-of\",(cljs.core.truth_(cljs.spec.alpha$macros.coll_of)?cljs.spec.alpha$macros.coll_of.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.coll_of.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,pred,opts){\nvar desc = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",(1019430407),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,pred);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.spec.alpha$macros.res_kind(_AMPERSAND_env,opts)], 0)));\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"every\",\"cljs.spec.alpha/every\",(123912744),null)),(function (){var x__20731__auto__ = pred;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",(45201917))),cljs.core._conj(cljs.core.List.EMPTY,true),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",(1883026911))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = desc;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),opts], 0)));\n});\n\ncljs.spec.alpha$macros.coll_of.cljs$lang$maxFixedArity = (3);\n\ncljs.spec.alpha$macros.coll_of.cljs$lang$applyTo = (function (seq490){\nvar G__491 = cljs.core.first(seq490);\nvar seq490__$1 = cljs.core.next(seq490);\nvar G__492 = cljs.core.first(seq490__$1);\nvar seq490__$2 = cljs.core.next(seq490__$1);\nvar G__493 = cljs.core.first(seq490__$2);\nvar seq490__$3 = cljs.core.next(seq490__$2);\nreturn cljs.spec.alpha$macros.coll_of.cljs$core$IFn$_invoke$arity$variadic(G__491,G__492,G__493,seq490__$3);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.coll_of;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"coll-of\",\"cljs.spec.alpha$macros/coll-of\",(-1504662300),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"coll-of\",\"coll-of\",(-1705285400),null),\"cljs/spec/alpha.cljc\",(18),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(279),true,(279),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Returns a spec for a collection of items satisfying pred. Unlike\\n  generator will fill an empty init-coll.\\n\\n  Same options as 'every'. conform will produce a collection\\n  corresponding to :into if supplied, else will match the input collection,\\n  avoiding rebuilding when possible.\\n\\n  Same options as 'every'.\\n\\n  See also - every, map-of\",(cljs.core.truth_(cljs.spec.alpha$macros.coll_of)?cljs.spec.alpha$macros.coll_of.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.coll_of.cljs$lang$macro = true;\n\nvar ret__21071__auto___503 = (function (){\n/**\n * Returns a spec for a map whose keys satisfy kpred and vals satisfy\n *   vpred. Unlike 'every-kv', map-of will exhaustively conform every\n *   value.\n * \n *   Same options as 'every', :kind defaults to map?, with the addition of:\n * \n *   :conform-keys - conform keys as well as values (default false)\n * \n *   See also - every-kv\n */\n(function (){\ncljs.spec.alpha$macros.map_of = (function cljs$spec$alpha$macros$map_of(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___504 = arguments.length;\nvar i__21021__auto___505 = (0);\nwhile(true){\nif((i__21021__auto___505 < len__21020__auto___504)){\nargs__21023__auto__.push((arguments[i__21021__auto___505]));\n\nvar G__506 = (i__21021__auto___505 + (1));\ni__21021__auto___505 = G__506;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((4) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((4)),(0),null)):null);\nreturn cljs.spec.alpha$macros.map_of.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.map_of;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"map-of\",\"cljs.spec.alpha$macros/map-of\",(-1130010890),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"map-of\",\"map-of\",(-1464753414),null),\"cljs/spec/alpha.cljc\",(17),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(294),true,(294),cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Returns a spec for a map whose keys satisfy kpred and vals satisfy\\n  vpred. Unlike 'every-kv', map-of will exhaustively conform every\\n  value.\\n\\n  Same options as 'every', :kind defaults to map?, with the addition of:\\n\\n  :conform-keys - conform keys as well as values (default false)\\n\\n  See also - every-kv\",(cljs.core.truth_(cljs.spec.alpha$macros.map_of)?cljs.spec.alpha$macros.map_of.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.map_of.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,kpred,vpred,opts){\nvar desc = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"map-of\",\"cljs.spec.alpha/map-of\",(153715093),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,kpred);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,vpred);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.spec.alpha$macros.res_kind(_AMPERSAND_env,opts)], 0)));\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"every-kv\",\"cljs.spec.alpha/every-kv\",(-133428374),null)),(function (){var x__20731__auto__ = kpred;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = vpred;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",(45201917))),cljs.core._conj(cljs.core.List.EMPTY,true),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"kind\",\"kind\",(-717265803))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",(-1390345523),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",(1883026911))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = desc;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),opts], 0)));\n});\n\ncljs.spec.alpha$macros.map_of.cljs$lang$maxFixedArity = (4);\n\ncljs.spec.alpha$macros.map_of.cljs$lang$applyTo = (function (seq498){\nvar G__499 = cljs.core.first(seq498);\nvar seq498__$1 = cljs.core.next(seq498);\nvar G__500 = cljs.core.first(seq498__$1);\nvar seq498__$2 = cljs.core.next(seq498__$1);\nvar G__501 = cljs.core.first(seq498__$2);\nvar seq498__$3 = cljs.core.next(seq498__$2);\nvar G__502 = cljs.core.first(seq498__$3);\nvar seq498__$4 = cljs.core.next(seq498__$3);\nreturn cljs.spec.alpha$macros.map_of.cljs$core$IFn$_invoke$arity$variadic(G__499,G__500,G__501,G__502,seq498__$4);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.map_of;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"map-of\",\"cljs.spec.alpha$macros/map-of\",(-1130010890),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"map-of\",\"map-of\",(-1464753414),null),\"cljs/spec/alpha.cljc\",(17),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(294),true,(294),cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kpred\",\"kpred\",(-1781125167),null),new cljs.core.Symbol(null,\"vpred\",\"vpred\",(1944119183),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Returns a spec for a map whose keys satisfy kpred and vals satisfy\\n  vpred. Unlike 'every-kv', map-of will exhaustively conform every\\n  value.\\n\\n  Same options as 'every', :kind defaults to map?, with the addition of:\\n\\n  :conform-keys - conform keys as well as values (default false)\\n\\n  See also - every-kv\",(cljs.core.truth_(cljs.spec.alpha$macros.map_of)?cljs.spec.alpha$macros.map_of.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.map_of.cljs$lang$macro = true;\n\nvar ret__21071__auto___507 = /**\n * Returns a regex op that matches zero or more values matching\n *   pred. Produces a vector of matches iff there is at least one match\n */\n(function (){\ncljs.spec.alpha$macros._STAR_ = (function cljs$spec$alpha$macros$_STAR_(_AMPERSAND_form,_AMPERSAND_env,pred_form){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"rep-impl\",\"cljs.spec.alpha/rep-impl\",(272857093),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,pred_form);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = pred_form;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros._STAR_;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"*\",\"cljs.spec.alpha$macros/*\",(545340973),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"*\",\"*\",(345799209),null),\"cljs/spec/alpha.cljc\",(12),(1),(308),true,(308),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"pred-form\",\"pred-form\",(1189696240),null)], null)),\"Returns a regex op that matches zero or more values matching\\n  pred. Produces a vector of matches iff there is at least one match\",(cljs.core.truth_(cljs.spec.alpha$macros._STAR_)?cljs.spec.alpha$macros._STAR_.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros._STAR_.cljs$lang$macro = true;\n\nvar ret__21071__auto___508 = /**\n * Returns a regex op that matches one or more values matching\n *   pred. Produces a vector of matches\n */\n(function (){\ncljs.spec.alpha$macros._PLUS_ = (function cljs$spec$alpha$macros$_PLUS_(_AMPERSAND_form,_AMPERSAND_env,pred_form){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"rep+impl\",\"cljs.spec.alpha/rep+impl\",(1883292654),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,pred_form);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = pred_form;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros._PLUS_;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"+\",\"cljs.spec.alpha$macros/+\",(-942940986),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"+\",\"+\",(-740910886),null),\"cljs/spec/alpha.cljc\",(12),(1),(314),true,(314),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"pred-form\",\"pred-form\",(1189696240),null)], null)),\"Returns a regex op that matches one or more values matching\\n  pred. Produces a vector of matches\",(cljs.core.truth_(cljs.spec.alpha$macros._PLUS_)?cljs.spec.alpha$macros._PLUS_.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros._PLUS_.cljs$lang$macro = true;\n\nvar ret__21071__auto___509 = /**\n * Returns a regex op that matches zero or one value matching\n *   pred. Produces a single value (not a collection) if matched.\n */\n(function (){\ncljs.spec.alpha$macros._QMARK_ = (function cljs$spec$alpha$macros$_QMARK_(_AMPERSAND_form,_AMPERSAND_env,pred_form){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"maybe-impl\",\"cljs.spec.alpha/maybe-impl\",(1618854020),null)),(function (){var x__20731__auto__ = pred_form;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = pred_form;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros._QMARK_;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"?\",\"cljs.spec.alpha$macros/?\",(-935394022),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"?\",\"?\",(-62633706),null),\"cljs/spec/alpha.cljc\",(12),(1),(320),true,(320),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"pred-form\",\"pred-form\",(1189696240),null)], null)),\"Returns a regex op that matches zero or one value matching\\n  pred. Produces a single value (not a collection) if matched.\",(cljs.core.truth_(cljs.spec.alpha$macros._QMARK_)?cljs.spec.alpha$macros._QMARK_.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros._QMARK_.cljs$lang$macro = true;\n\nvar ret__21071__auto___513 = (function (){\n/**\n * Takes key+pred pairs, e.g.\n * \n *   (s/alt :even even? :small #(< % 42))\n * \n *   Returns a regex op that returns a map entry containing the key of the\n *   first matching pred and the corresponding value. Thus the\n *   'key' and 'val' functions can be used to refer generically to the\n *   components of the tagged return.\n */\n(function (){\ncljs.spec.alpha$macros.alt = (function cljs$spec$alpha$macros$alt(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___514 = arguments.length;\nvar i__21021__auto___515 = (0);\nwhile(true){\nif((i__21021__auto___515 < len__21020__auto___514)){\nargs__21023__auto__.push((arguments[i__21021__auto___515]));\n\nvar G__516 = (i__21021__auto___515 + (1));\ni__21021__auto___515 = G__516;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.alt.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.alt;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"alt\",\"cljs.spec.alpha$macros/alt\",(495730145),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"alt\",\"alt\",(1637317101),null),\"cljs/spec/alpha.cljc\",(14),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(326),true,(326),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),\"Takes key+pred pairs, e.g.\\n\\n  (s/alt :even even? :small #(< % 42))\\n\\n  Returns a regex op that returns a map entry containing the key of the\\n  first matching pred and the corresponding value. Thus the\\n  'key' and 'val' functions can be used to refer generically to the\\n  components of the tagged return.\",(cljs.core.truth_(cljs.spec.alpha$macros.alt)?cljs.spec.alpha$macros.alt.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.alt.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,key_pred_forms){\nvar pairs = cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),key_pred_forms);\nvar keys = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.first,pairs);\nvar pred_forms = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.second,pairs);\nvar pf = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (pairs,keys,pred_forms){\nreturn (function (p1__26_SHARP_){\nreturn cljs.spec.alpha$macros.res(_AMPERSAND_env,p1__26_SHARP_);\n});})(pairs,keys,pred_forms))\n,pred_forms);\nif((cljs.core.even_QMARK_(cljs.core.count(key_pred_forms))) && (cljs.core.every_QMARK_(cljs.core.keyword_QMARK_,keys))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"alt expects k1 p1 k2 p2..., where ks are keywords\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(clojure.core/and (even? (count key-pred-forms)) (every? keyword? keys))\")].join('')));\n}\n\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"alt-impl\",\"cljs.spec.alpha/alt-impl\",(1852741609),null)),(function (){var x__20731__auto__ = keys;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = pred_forms;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = pf;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.alt.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.alt.cljs$lang$applyTo = (function (seq510){\nvar G__511 = cljs.core.first(seq510);\nvar seq510__$1 = cljs.core.next(seq510);\nvar G__512 = cljs.core.first(seq510__$1);\nvar seq510__$2 = cljs.core.next(seq510__$1);\nreturn cljs.spec.alpha$macros.alt.cljs$core$IFn$_invoke$arity$variadic(G__511,G__512,seq510__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.alt;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"alt\",\"cljs.spec.alpha$macros/alt\",(495730145),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"alt\",\"alt\",(1637317101),null),\"cljs/spec/alpha.cljc\",(14),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(326),true,(326),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),\"Takes key+pred pairs, e.g.\\n\\n  (s/alt :even even? :small #(< % 42))\\n\\n  Returns a regex op that returns a map entry containing the key of the\\n  first matching pred and the corresponding value. Thus the\\n  'key' and 'val' functions can be used to refer generically to the\\n  components of the tagged return.\",(cljs.core.truth_(cljs.spec.alpha$macros.alt)?cljs.spec.alpha$macros.alt.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.alt.cljs$lang$macro = true;\n\nvar ret__21071__auto___520 = (function (){\n/**\n * Takes key+pred pairs, e.g.\n * \n *   (s/cat :e even? :o odd?)\n * \n *   Returns a regex op that matches (all) values in sequence, returning a map\n *   containing the keys of each pred and the corresponding value.\n */\n(function (){\ncljs.spec.alpha$macros.cat = (function cljs$spec$alpha$macros$cat(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___521 = arguments.length;\nvar i__21021__auto___522 = (0);\nwhile(true){\nif((i__21021__auto___522 < len__21020__auto___521)){\nargs__21023__auto__.push((arguments[i__21021__auto___522]));\n\nvar G__523 = (i__21021__auto___522 + (1));\ni__21021__auto___522 = G__523;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.cat.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.cat;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"cat\",\"cljs.spec.alpha$macros/cat\",(653862692),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"cat\",\"cat\",(182721320),null),\"cljs/spec/alpha.cljc\",(14),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(343),true,(343),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),\"Takes key+pred pairs, e.g.\\n\\n  (s/cat :e even? :o odd?)\\n\\n  Returns a regex op that matches (all) values in sequence, returning a map\\n  containing the keys of each pred and the corresponding value.\",(cljs.core.truth_(cljs.spec.alpha$macros.cat)?cljs.spec.alpha$macros.cat.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.cat.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,key_pred_forms){\nvar pairs = cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),key_pred_forms);\nvar keys = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.first,pairs);\nvar pred_forms = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.second,pairs);\nvar pf = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (pairs,keys,pred_forms){\nreturn (function (p1__27_SHARP_){\nreturn cljs.spec.alpha$macros.res(_AMPERSAND_env,p1__27_SHARP_);\n});})(pairs,keys,pred_forms))\n,pred_forms);\nif((cljs.core.even_QMARK_(cljs.core.count(key_pred_forms))) && (cljs.core.every_QMARK_(cljs.core.keyword_QMARK_,keys))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"cat expects k1 p1 k2 p2..., where ks are keywords\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(clojure.core/and (even? (count key-pred-forms)) (every? keyword? keys))\")].join('')));\n}\n\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat-impl\",\"cljs.spec.alpha/cat-impl\",(1256350867),null)),(function (){var x__20731__auto__ = keys;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = pred_forms;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = pf;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.cat.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.cat.cljs$lang$applyTo = (function (seq517){\nvar G__518 = cljs.core.first(seq517);\nvar seq517__$1 = cljs.core.next(seq517);\nvar G__519 = cljs.core.first(seq517__$1);\nvar seq517__$2 = cljs.core.next(seq517__$1);\nreturn cljs.spec.alpha$macros.cat.cljs$core$IFn$_invoke$arity$variadic(G__518,G__519,seq517__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.cat;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"cat\",\"cljs.spec.alpha$macros/cat\",(653862692),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"cat\",\"cat\",(182721320),null),\"cljs/spec/alpha.cljc\",(14),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(343),true,(343),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"key-pred-forms\",\"key-pred-forms\",(2102716187),null)], null)),\"Takes key+pred pairs, e.g.\\n\\n  (s/cat :e even? :o odd?)\\n\\n  Returns a regex op that matches (all) values in sequence, returning a map\\n  containing the keys of each pred and the corresponding value.\",(cljs.core.truth_(cljs.spec.alpha$macros.cat)?cljs.spec.alpha$macros.cat.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.cat.cljs$lang$macro = true;\n\nvar ret__21071__auto___528 = (function (){\n/**\n * takes a regex op re, and predicates. Returns a regex-op that consumes\n *   input as per re but subjects the resulting value to the\n *   conjunction of the predicates, and any conforming they might perform.\n */\n(function (){\ncljs.spec.alpha$macros._AMPERSAND_ = (function cljs$spec$alpha$macros$_AMPERSAND_(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___529 = arguments.length;\nvar i__21021__auto___530 = (0);\nwhile(true){\nif((i__21021__auto___530 < len__21020__auto___529)){\nargs__21023__auto__.push((arguments[i__21021__auto___530]));\n\nvar G__531 = (i__21021__auto___530 + (1));\ni__21021__auto___530 = G__531;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.spec.alpha$macros._AMPERSAND_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros._AMPERSAND_;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"&\",\"cljs.spec.alpha$macros/&\",(-333619780),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),\"cljs/spec/alpha.cljc\",(12),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"re\",\"re\",(1869207729),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"re\",\"re\",(1869207729),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(359),true,(359),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"re\",\"re\",(1869207729),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null)], null)),\"takes a regex op re, and predicates. Returns a regex-op that consumes\\n  input as per re but subjects the resulting value to the\\n  conjunction of the predicates, and any conforming they might perform.\",(cljs.core.truth_(cljs.spec.alpha$macros._AMPERSAND_)?cljs.spec.alpha$macros._AMPERSAND_.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros._AMPERSAND_.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,re,preds){\nvar pv = cljs.core.vec(preds);\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"amp-impl\",\"cljs.spec.alpha/amp-impl\",(1419577313),null)),(function (){var x__20731__auto__ = re;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = pv;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (pv){\nreturn (function (p1__28_SHARP_){\nreturn cljs.spec.alpha$macros.res(_AMPERSAND_env,p1__28_SHARP_);\n});})(pv))\n,pv);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros._AMPERSAND_.cljs$lang$maxFixedArity = (3);\n\ncljs.spec.alpha$macros._AMPERSAND_.cljs$lang$applyTo = (function (seq524){\nvar G__525 = cljs.core.first(seq524);\nvar seq524__$1 = cljs.core.next(seq524);\nvar G__526 = cljs.core.first(seq524__$1);\nvar seq524__$2 = cljs.core.next(seq524__$1);\nvar G__527 = cljs.core.first(seq524__$2);\nvar seq524__$3 = cljs.core.next(seq524__$2);\nreturn cljs.spec.alpha$macros._AMPERSAND_.cljs$core$IFn$_invoke$arity$variadic(G__525,G__526,G__527,seq524__$3);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros._AMPERSAND_;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"&\",\"cljs.spec.alpha$macros/&\",(-333619780),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),\"cljs/spec/alpha.cljc\",(12),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"re\",\"re\",(1869207729),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"re\",\"re\",(1869207729),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(359),true,(359),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"re\",\"re\",(1869207729),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null)], null)),\"takes a regex op re, and predicates. Returns a regex-op that consumes\\n  input as per re but subjects the resulting value to the\\n  conjunction of the predicates, and any conforming they might perform.\",(cljs.core.truth_(cljs.spec.alpha$macros._AMPERSAND_)?cljs.spec.alpha$macros._AMPERSAND_.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros._AMPERSAND_.cljs$lang$macro = true;\n\nvar ret__21071__auto___535 = (function (){\n/**\n * takes a predicate function with the semantics of conform i.e. it should return either a\n *   (possibly converted) value or :cljs.spec.alpha/invalid, and returns a\n *   spec that uses it as a predicate/conformer. Optionally takes a\n *   second fn that does unform of result of first\n */\n(function (){\ncljs.spec.alpha$macros.conformer = (function cljs$spec$alpha$macros$conformer(var_args){\nvar args532 = [];\nvar len__21020__auto___536 = arguments.length;\nvar i__21021__auto___537 = (0);\nwhile(true){\nif((i__21021__auto___537 < len__21020__auto___536)){\nargs532.push((arguments[i__21021__auto___537]));\n\nvar G__538 = (i__21021__auto___537 + (1));\ni__21021__auto___537 = G__538;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__534 = args532.length;\nswitch (G__534) {\ncase (3):\nreturn cljs.spec.alpha$macros.conformer.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase (4):\nreturn cljs.spec.alpha$macros.conformer.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((args532.length - (2)))].join('')));\n\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.conformer;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"conformer\",\"cljs.spec.alpha$macros/conformer\",(-986053638),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"conformer\",\"conformer\",(-651689994),null),\"cljs/spec/alpha.cljc\",(20),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"unf\",\"unf\",(-1663126605),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"unf\",\"unf\",(-1663126605),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(367),true,(367),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"unf\",\"unf\",(-1663126605),null)], null)),\"takes a predicate function with the semantics of conform i.e. it should return either a\\n  (possibly converted) value or :cljs.spec.alpha/invalid, and returns a\\n  spec that uses it as a predicate/conformer. Optionally takes a\\n  second fn that does unform of result of first\",(cljs.core.truth_(cljs.spec.alpha$macros.conformer)?cljs.spec.alpha$macros.conformer.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.conformer.cljs$core$IFn$_invoke$arity$3 = (function (_AMPERSAND_form,_AMPERSAND_env,f){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec-impl\",\"cljs.spec.alpha/spec-impl\",(69764672),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"conformer\",\"cljs.spec.alpha/conformer\",(2140085535),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,f);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = f;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,null),cljs.core._conj(cljs.core.List.EMPTY,true)], 0)));\n});\n\ncljs.spec.alpha$macros.conformer.cljs$core$IFn$_invoke$arity$4 = (function (_AMPERSAND_form,_AMPERSAND_env,f,unf){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec-impl\",\"cljs.spec.alpha/spec-impl\",(69764672),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"conformer\",\"cljs.spec.alpha/conformer\",(2140085535),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,f);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(_AMPERSAND_env,unf);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = f;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,null),cljs.core._conj(cljs.core.List.EMPTY,true),(function (){var x__20731__auto__ = unf;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.conformer.cljs$lang$maxFixedArity = (4);\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.conformer;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"conformer\",\"cljs.spec.alpha$macros/conformer\",(-986053638),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"conformer\",\"conformer\",(-651689994),null),\"cljs/spec/alpha.cljc\",(20),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"unf\",\"unf\",(-1663126605),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"unf\",\"unf\",(-1663126605),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(367),true,(367),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"unf\",\"unf\",(-1663126605),null)], null)),\"takes a predicate function with the semantics of conform i.e. it should return either a\\n  (possibly converted) value or :cljs.spec.alpha/invalid, and returns a\\n  spec that uses it as a predicate/conformer. Optionally takes a\\n  second fn that does unform of result of first\",(cljs.core.truth_(cljs.spec.alpha$macros.conformer)?cljs.spec.alpha$macros.conformer.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.conformer.cljs$lang$macro = true;\n\nvar ret__21071__auto___546 = (function (){\n/**\n * takes :args :ret and (optional) :fn kwargs whose values are preds\n *   and returns a spec whose conform/explain take a fn and validates it\n *   using generative testing. The conformed value is always the fn itself.\n * \n *   See 'fdef' for a single operation that creates an fspec and\n *   registers it, as well as a full description of :args, :ret and :fn\n * \n *   fspecs can generate functions that validate the arguments and\n *   fabricate a return value compliant with the :ret spec, ignoring\n *   the :fn spec if present.\n * \n *   Optionally takes :gen generator-fn, which must be a fn of no args\n *   that returns a test.check generator.\n */\n(function (){\ncljs.spec.alpha$macros.fspec = (function cljs$spec$alpha$macros$fspec(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___547 = arguments.length;\nvar i__21021__auto___548 = (0);\nwhile(true){\nif((i__21021__auto___548 < len__21020__auto___547)){\nargs__21023__auto__.push((arguments[i__21021__auto___548]));\n\nvar G__549 = (i__21021__auto___548 + (1));\ni__21021__auto___548 = G__549;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.fspec.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.fspec;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"fspec\",\"cljs.spec.alpha$macros/fspec\",(1314545612),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"fspec\",\"fspec\",(1380883392),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"args\",\"args\",(-1338879193),null),new cljs.core.Symbol(null,\"ret\",\"ret\",(1172308713),null),new cljs.core.Symbol(null,\"fn\",\"fn\",(465265323),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"args\",\"args\",(-1338879193),null),new cljs.core.Symbol(null,\"ret\",\"ret\",(1172308713),null),new cljs.core.Symbol(null,\"fn\",\"fn\",(465265323),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(375),true,(375),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"args\",\"args\",(-1338879193),null),new cljs.core.Symbol(null,\"ret\",\"ret\",(1172308713),null),new cljs.core.Symbol(null,\"fn\",\"fn\",(465265323),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),\"takes :args :ret and (optional) :fn kwargs whose values are preds\\n  and returns a spec whose conform/explain take a fn and validates it\\n  using generative testing. The conformed value is always the fn itself.\\n\\n  See 'fdef' for a single operation that creates an fspec and\\n  registers it, as well as a full description of :args, :ret and :fn\\n\\n  fspecs can generate functions that validate the arguments and\\n  fabricate a return value compliant with the :ret spec, ignoring\\n  the :fn spec if present.\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args\\n  that returns a test.check generator.\",(cljs.core.truth_(cljs.spec.alpha$macros.fspec)?cljs.spec.alpha$macros.fspec.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.fspec.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,p__543){\nvar map__544 = p__543;\nvar map__544__$1 = ((((!((map__544 == null)))?((((map__544.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__544.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__544):map__544);\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__544__$1,new cljs.core.Keyword(null,\"args\",\"args\",(1315556576)));\nvar ret = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__544__$1,new cljs.core.Keyword(null,\"ret\",\"ret\",(-468222814)));\nvar fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__544__$1,new cljs.core.Keyword(null,\"fn\",\"fn\",(-1175266204)));\nvar gen = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__544__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)));\nvar env = _AMPERSAND_env;\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec-impl\",\"cljs.spec.alpha/fspec-impl\",(-1748020611),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",(-707298191),null)),(function (){var x__20731__auto__ = args;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(env,args);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",(-707298191),null)),(function (){var x__20731__auto__ = ret;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(env,ret);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",(-707298191),null)),(function (){var x__20731__auto__ = fn;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.spec.alpha$macros.res(env,fn);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = gen;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.fspec.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.fspec.cljs$lang$applyTo = (function (seq540){\nvar G__541 = cljs.core.first(seq540);\nvar seq540__$1 = cljs.core.next(seq540);\nvar G__542 = cljs.core.first(seq540__$1);\nvar seq540__$2 = cljs.core.next(seq540__$1);\nreturn cljs.spec.alpha$macros.fspec.cljs$core$IFn$_invoke$arity$variadic(G__541,G__542,seq540__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.fspec;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"fspec\",\"cljs.spec.alpha$macros/fspec\",(1314545612),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"fspec\",\"fspec\",(1380883392),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"args\",\"args\",(-1338879193),null),new cljs.core.Symbol(null,\"ret\",\"ret\",(1172308713),null),new cljs.core.Symbol(null,\"fn\",\"fn\",(465265323),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"args\",\"args\",(-1338879193),null),new cljs.core.Symbol(null,\"ret\",\"ret\",(1172308713),null),new cljs.core.Symbol(null,\"fn\",\"fn\",(465265323),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(375),true,(375),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"args\",\"args\",(-1338879193),null),new cljs.core.Symbol(null,\"ret\",\"ret\",(1172308713),null),new cljs.core.Symbol(null,\"fn\",\"fn\",(465265323),null),new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null)], null)], null)),\"takes :args :ret and (optional) :fn kwargs whose values are preds\\n  and returns a spec whose conform/explain take a fn and validates it\\n  using generative testing. The conformed value is always the fn itself.\\n\\n  See 'fdef' for a single operation that creates an fspec and\\n  registers it, as well as a full description of :args, :ret and :fn\\n\\n  fspecs can generate functions that validate the arguments and\\n  fabricate a return value compliant with the :ret spec, ignoring\\n  the :fn spec if present.\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args\\n  that returns a test.check generator.\",(cljs.core.truth_(cljs.spec.alpha$macros.fspec)?cljs.spec.alpha$macros.fspec.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.fspec.cljs$lang$macro = true;\n\nvar ret__21071__auto___553 = (function (){\n/**\n * takes one or more preds and returns a spec for a tuple, a vector\n *   where each element conforms to the corresponding pred. Each element\n *   will be referred to in paths using its ordinal.\n */\n(function (){\ncljs.spec.alpha$macros.tuple = (function cljs$spec$alpha$macros$tuple(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___554 = arguments.length;\nvar i__21021__auto___555 = (0);\nwhile(true){\nif((i__21021__auto___555 < len__21020__auto___554)){\nargs__21023__auto__.push((arguments[i__21021__auto___555]));\n\nvar G__556 = (i__21021__auto___555 + (1));\ni__21021__auto___555 = G__556;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.tuple.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.tuple;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"tuple\",\"cljs.spec.alpha$macros/tuple\",(1906372047),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"tuple\",\"tuple\",(1167864243),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(395),true,(395),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null)], null)),\"takes one or more preds and returns a spec for a tuple, a vector\\n  where each element conforms to the corresponding pred. Each element\\n  will be referred to in paths using its ordinal.\",(cljs.core.truth_(cljs.spec.alpha$macros.tuple)?cljs.spec.alpha$macros.tuple.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.tuple.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,preds){\nif(!(cljs.core.empty_QMARK_(preds))){\n} else {\nthrow (new Error(\"Assert failed: (not (empty? preds))\"));\n}\n\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"tuple-impl\",\"cljs.spec.alpha/tuple-impl\",(113790282),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29_SHARP_){\nreturn cljs.spec.alpha$macros.res(_AMPERSAND_env,p1__29_SHARP_);\n}),preds);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.vec(preds);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.tuple.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.tuple.cljs$lang$applyTo = (function (seq550){\nvar G__551 = cljs.core.first(seq550);\nvar seq550__$1 = cljs.core.next(seq550);\nvar G__552 = cljs.core.first(seq550__$1);\nvar seq550__$2 = cljs.core.next(seq550__$1);\nreturn cljs.spec.alpha$macros.tuple.cljs$core$IFn$_invoke$arity$variadic(G__551,G__552,seq550__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.tuple;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"tuple\",\"cljs.spec.alpha$macros/tuple\",(1906372047),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"tuple\",\"tuple\",(1167864243),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(395),true,(395),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"preds\",\"preds\",(150921777),null)], null)),\"takes one or more preds and returns a spec for a tuple, a vector\\n  where each element conforms to the corresponding pred. Each element\\n  will be referred to in paths using its ordinal.\",(cljs.core.truth_(cljs.spec.alpha$macros.tuple)?cljs.spec.alpha$macros.tuple.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.tuple.cljs$lang$macro = true;\n\n(function (){\ncljs.spec.alpha$macros._speced_vars = (function (){var G__557 = cljs.core.PersistentHashSet.EMPTY;\nreturn (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__557) : cljs.core.atom.call(null,G__557));\n})(); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros._speced_vars;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"_speced_vars\",\"cljs.spec.alpha$macros/_speced_vars\",(-1419468),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"_speced_vars\",\"_speced_vars\",(-1946182864),null),\"cljs/spec/alpha.cljc\",(28),(1),(403),(403),cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.spec.alpha$macros._speced_vars)?cljs.spec.alpha$macros._speced_vars.cljs$lang$test:null)])));})()\n;\n(function (){\ncljs.spec.alpha$macros.speced_vars = (function cljs$spec$alpha$macros$speced_vars(){\nreturn (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha$macros._speced_vars) : cljs.core.deref.call(null,cljs.spec.alpha$macros._speced_vars));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.speced_vars;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"speced-vars\",\"cljs.spec.alpha$macros/speced-vars\",(-1983041817),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"speced-vars\",\"speced-vars\",(-172594461),null),\"cljs/spec/alpha.cljc\",(18),(1),(405),(405),cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.spec.alpha$macros.speced_vars)?cljs.spec.alpha$macros.speced_vars.cljs$lang$test:null)])));})()\n;\nvar ret__21071__auto___562 = (function (){\n/**\n * Takes a symbol naming a function, and one or more of the following:\n * \n *   :args A regex spec for the function arguments as they were a list to be\n *  passed to apply - in this way, a single spec can handle functions with\n *  multiple arities\n *   :ret A spec for the function's return value\n *   :fn A spec of the relationship between args and ret - the\n *  value passed is {:args conformed-args :ret conformed-ret} and is\n *  expected to contain predicates that relate those values\n * \n *   Qualifies fn-sym with resolve, or using *ns* if no resolution found.\n *   Registers an fspec in the global registry, where it can be retrieved\n *   by calling get-spec with the var or full-qualified symbol.\n * \n *   Once registered, function specs are included in doc, checked by\n *   instrument, tested by the runner clojure.spec.test/run-tests, and (if\n *   a macro) used to explain errors during macroexpansion.\n * \n *   Note that :fn specs require the presence of :args and :ret specs to\n *   conform values, and so :fn specs will be ignored if :args or :ret\n *   are missing.\n * \n *   Returns the qualified fn-sym.\n * \n *   For example, to register function specs for the symbol function:\n * \n *   (s/fdef clojure.core/symbol\n *  :args (s/alt :separate (s/cat :ns string? :n string?)\n *               :str string?\n *               :sym symbol?)\n *  :ret symbol?)\n */\n(function (){\ncljs.spec.alpha$macros.fdef = (function cljs$spec$alpha$macros$fdef(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___563 = arguments.length;\nvar i__21021__auto___564 = (0);\nwhile(true){\nif((i__21021__auto___564 < len__21020__auto___563)){\nargs__21023__auto__.push((arguments[i__21021__auto___564]));\n\nvar G__565 = (i__21021__auto___564 + (1));\ni__21021__auto___564 = G__565;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.spec.alpha$macros.fdef.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.fdef;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"fdef\",\"cljs.spec.alpha$macros/fdef\",(661259963),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"fdef\",\"fdef\",(459719359),null),\"cljs/spec/alpha.cljc\",(15),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"fn-sym\",\"fn-sym\",(-1230447259),null),new cljs.core.Symbol(null,\"specs\",\"specs\",(-1227865028),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"fn-sym\",\"fn-sym\",(-1230447259),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"specs\",\"specs\",(-1227865028),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(408),true,(408),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"fn-sym\",\"fn-sym\",(-1230447259),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"specs\",\"specs\",(-1227865028),null)], null)),\"Takes a symbol naming a function, and one or more of the following:\\n\\n  :args A regex spec for the function arguments as they were a list to be\\n    passed to apply - in this way, a single spec can handle functions with\\n    multiple arities\\n  :ret A spec for the function's return value\\n  :fn A spec of the relationship between args and ret - the\\n    value passed is {:args conformed-args :ret conformed-ret} and is\\n    expected to contain predicates that relate those values\\n\\n  Qualifies fn-sym with resolve, or using *ns* if no resolution found.\\n  Registers an fspec in the global registry, where it can be retrieved\\n  by calling get-spec with the var or full-qualified symbol.\\n\\n  Once registered, function specs are included in doc, checked by\\n  instrument, tested by the runner clojure.spec.test/run-tests, and (if\\n  a macro) used to explain errors during macroexpansion.\\n\\n  Note that :fn specs require the presence of :args and :ret specs to\\n  conform values, and so :fn specs will be ignored if :args or :ret\\n  are missing.\\n\\n  Returns the qualified fn-sym.\\n\\n  For example, to register function specs for the symbol function:\\n\\n  (s/fdef clojure.core/symbol\\n    :args (s/alt :separate (s/cat :ns string? :n string?)\\n                 :str string?\\n                 :sym symbol?)\\n    :ret symbol?)\",(cljs.core.truth_(cljs.spec.alpha$macros.fdef)?cljs.spec.alpha$macros.fdef.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.fdef.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,fn_sym,specs){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.spec.alpha$macros._speced_vars,cljs.core.conj,cljs.spec.alpha$macros.ns_qualify(_AMPERSAND_env,fn_sym));\n\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"def\",\"cljs.spec.alpha/def\",(1122970404),null)),(function (){var x__20731__auto__ = fn_sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",(-1289128341),null)),specs));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.fdef.cljs$lang$maxFixedArity = (3);\n\ncljs.spec.alpha$macros.fdef.cljs$lang$applyTo = (function (seq558){\nvar G__559 = cljs.core.first(seq558);\nvar seq558__$1 = cljs.core.next(seq558);\nvar G__560 = cljs.core.first(seq558__$1);\nvar seq558__$2 = cljs.core.next(seq558__$1);\nvar G__561 = cljs.core.first(seq558__$2);\nvar seq558__$3 = cljs.core.next(seq558__$2);\nreturn cljs.spec.alpha$macros.fdef.cljs$core$IFn$_invoke$arity$variadic(G__559,G__560,G__561,seq558__$3);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.fdef;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"fdef\",\"cljs.spec.alpha$macros/fdef\",(661259963),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"fdef\",\"fdef\",(459719359),null),\"cljs/spec/alpha.cljc\",(15),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"fn-sym\",\"fn-sym\",(-1230447259),null),new cljs.core.Symbol(null,\"specs\",\"specs\",(-1227865028),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"fn-sym\",\"fn-sym\",(-1230447259),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"specs\",\"specs\",(-1227865028),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(408),true,(408),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"fn-sym\",\"fn-sym\",(-1230447259),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"specs\",\"specs\",(-1227865028),null)], null)),\"Takes a symbol naming a function, and one or more of the following:\\n\\n  :args A regex spec for the function arguments as they were a list to be\\n    passed to apply - in this way, a single spec can handle functions with\\n    multiple arities\\n  :ret A spec for the function's return value\\n  :fn A spec of the relationship between args and ret - the\\n    value passed is {:args conformed-args :ret conformed-ret} and is\\n    expected to contain predicates that relate those values\\n\\n  Qualifies fn-sym with resolve, or using *ns* if no resolution found.\\n  Registers an fspec in the global registry, where it can be retrieved\\n  by calling get-spec with the var or full-qualified symbol.\\n\\n  Once registered, function specs are included in doc, checked by\\n  instrument, tested by the runner clojure.spec.test/run-tests, and (if\\n  a macro) used to explain errors during macroexpansion.\\n\\n  Note that :fn specs require the presence of :args and :ret specs to\\n  conform values, and so :fn specs will be ignored if :args or :ret\\n  are missing.\\n\\n  Returns the qualified fn-sym.\\n\\n  For example, to register function specs for the symbol function:\\n\\n  (s/fdef clojure.core/symbol\\n    :args (s/alt :separate (s/cat :ns string? :n string?)\\n                 :str string?\\n                 :sym symbol?)\\n    :ret symbol?)\",(cljs.core.truth_(cljs.spec.alpha$macros.fdef)?cljs.spec.alpha$macros.fdef.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.fdef.cljs$lang$macro = true;\n\nvar ret__21071__auto___569 = (function (){\n/**\n * takes the same arguments as spec/keys and returns a regex op that matches sequences of key/values,\n *   converts them into a map, and conforms that map with a corresponding\n *   spec/keys call:\n * \n *   user=> (s/conform (s/keys :req-un [::a ::c]) {:a 1 :c 2})\n *   {:a 1, :c 2}\n *   user=> (s/conform (s/keys* :req-un [::a ::c]) [:a 1 :c 2])\n *   {:a 1, :c 2}\n * \n *   the resulting regex op can be composed into a larger regex:\n * \n *   user=> (s/conform (s/cat :i1 integer? :m (s/keys* :req-un [::a ::c]) :i2 integer?) [42 :a 1 :c 2 :d 4 99])\n *   {:i1 42, :m {:a 1, :c 2, :d 4}, :i2 99}\n */\n(function (){\ncljs.spec.alpha$macros.keys_STAR_ = (function cljs$spec$alpha$macros$keys_STAR_(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___570 = arguments.length;\nvar i__21021__auto___571 = (0);\nwhile(true){\nif((i__21021__auto___571 < len__21020__auto___570)){\nargs__21023__auto__.push((arguments[i__21021__auto___571]));\n\nvar G__572 = (i__21021__auto___571 + (1));\ni__21021__auto___571 = G__572;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.keys_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.keys_STAR_;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"keys*\",\"cljs.spec.alpha$macros/keys*\",(-615148410),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"keys*\",\"keys*\",(-816260990),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kspecs\",\"kspecs\",(564840629),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"kspecs\",\"kspecs\",(564840629),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(444),true,(444),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"kspecs\",\"kspecs\",(564840629),null)], null)),\"takes the same arguments as spec/keys and returns a regex op that matches sequences of key/values,\\n  converts them into a map, and conforms that map with a corresponding\\n  spec/keys call:\\n\\n  user=> (s/conform (s/keys :req-un [::a ::c]) {:a 1 :c 2})\\n  {:a 1, :c 2}\\n  user=> (s/conform (s/keys* :req-un [::a ::c]) [:a 1 :c 2])\\n  {:a 1, :c 2}\\n\\n  the resulting regex op can be composed into a larger regex:\\n\\n  user=> (s/conform (s/cat :i1 integer? :m (s/keys* :req-un [::a ::c]) :i2 integer?) [42 :a 1 :c 2 :d 4 99])\\n  {:i1 42, :m {:a 1, :c 2, :d 4}, :i2 99}\",(cljs.core.truth_(cljs.spec.alpha$macros.keys_STAR_)?cljs.spec.alpha$macros.keys_STAR_.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.keys_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,kspecs){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"mspec__30__auto__\",\"mspec__30__auto__\",(-1296006854),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",(1109346032),null)),kspecs));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"with-gen\",\"cljs.spec.alpha/with-gen\",(1999495028),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"&\",\"cljs.spec.alpha/&\",(1635809823),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"*\",\"cljs.spec.alpha/*\",(-1238084288),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",(-1471398329),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"k\",\"cljs.spec.alpha/k\",(-1602615178))),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",(713156450),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"v\",\"cljs.spec.alpha/v\",(552625740))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",(-2068111842),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"kvs->map\",\"cljs.spec.alpha/kvs->map\",(579713455))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"mspec__30__auto__\",\"mspec__30__auto__\",(-1296006854),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"fmap\",\"cljs.spec.gen.alpha/fmap\",(1863255061),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"m__31__auto__\",\"m__31__auto__\",(1605130010),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"apply\",\"cljs.core/apply\",(1757277831),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"concat\",\"cljs.core/concat\",(-1133584918),null)),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"m__31__auto__\",\"m__31__auto__\",(1605130010),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"gen\",\"cljs.spec.alpha/gen\",(147877780),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"mspec__30__auto__\",\"mspec__30__auto__\",(-1296006854),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.keys_STAR_.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.keys_STAR_.cljs$lang$applyTo = (function (seq566){\nvar G__567 = cljs.core.first(seq566);\nvar seq566__$1 = cljs.core.next(seq566);\nvar G__568 = cljs.core.first(seq566__$1);\nvar seq566__$2 = cljs.core.next(seq566__$1);\nreturn cljs.spec.alpha$macros.keys_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__567,G__568,seq566__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.keys_STAR_;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"keys*\",\"cljs.spec.alpha$macros/keys*\",(-615148410),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"keys*\",\"keys*\",(-816260990),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"kspecs\",\"kspecs\",(564840629),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"kspecs\",\"kspecs\",(564840629),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(444),true,(444),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"kspecs\",\"kspecs\",(564840629),null)], null)),\"takes the same arguments as spec/keys and returns a regex op that matches sequences of key/values,\\n  converts them into a map, and conforms that map with a corresponding\\n  spec/keys call:\\n\\n  user=> (s/conform (s/keys :req-un [::a ::c]) {:a 1 :c 2})\\n  {:a 1, :c 2}\\n  user=> (s/conform (s/keys* :req-un [::a ::c]) [:a 1 :c 2])\\n  {:a 1, :c 2}\\n\\n  the resulting regex op can be composed into a larger regex:\\n\\n  user=> (s/conform (s/cat :i1 integer? :m (s/keys* :req-un [::a ::c]) :i2 integer?) [42 :a 1 :c 2 :d 4 99])\\n  {:i1 42, :m {:a 1, :c 2, :d 4}, :i2 99}\",(cljs.core.truth_(cljs.spec.alpha$macros.keys_STAR_)?cljs.spec.alpha$macros.keys_STAR_.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.keys_STAR_.cljs$lang$macro = true;\n\nvar ret__21071__auto___573 = /**\n * returns a spec that accepts nil and values satisfiying pred\n */\n(function (){\ncljs.spec.alpha$macros.nilable = (function cljs$spec$alpha$macros$nilable(_AMPERSAND_form,_AMPERSAND_env,pred){\nvar pf = cljs.spec.alpha$macros.res(_AMPERSAND_env,pred);\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"nilable-impl\",\"cljs.spec.alpha/nilable-impl\",(1785777257),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = pf;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = pred;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.nilable;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"nilable\",\"cljs.spec.alpha$macros/nilable\",(-610590103),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"nilable\",\"nilable\",(-812128667),null),\"cljs/spec/alpha.cljc\",(18),(1),(463),true,(463),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"pred\",\"pred\",(-727012372),null)], null)),\"returns a spec that accepts nil and values satisfiying pred\",(cljs.core.truth_(cljs.spec.alpha$macros.nilable)?cljs.spec.alpha$macros.nilable.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros.nilable.cljs$lang$macro = true;\n\nvar ret__21071__auto___574 = /**\n * Returns a spec that validates insts in the range from start\n *   (inclusive) to end (exclusive).\n */\n(function (){\ncljs.spec.alpha$macros.inst_in = (function cljs$spec$alpha$macros$inst_in(_AMPERSAND_form,_AMPERSAND_env,start,end){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"st__33__auto__\",\"st__33__auto__\",(235486501),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"inst-ms\",\"cljs.core/inst-ms\",(-515575156),null)),(function (){var x__20731__auto__ = start;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"et__34__auto__\",\"et__34__auto__\",(-402043490),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"inst-ms\",\"cljs.core/inst-ms\",(-515575156),null)),(function (){var x__20731__auto__ = end;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"mkdate__35__auto__\",\"mkdate__35__auto__\",(983001607),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"d__36__auto__\",\"d__36__auto__\",(-1867877040),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"js\",\"Date.\",\"js/Date.\",(384205255),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"d__36__auto__\",\"d__36__auto__\",(-1867877040),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",(-707298191),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",(-2060279705),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"inst?\",\"cljs.core/inst?\",(1216133710),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__32__37__auto__\",\"p1__32__37__auto__\",(1677401967),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"inst-in-range?\",\"cljs.spec.alpha/inst-in-range?\",(-1154968958),null)),(function (){var x__20731__auto__ = start;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = end;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__32__37__auto__\",\"p1__32__37__auto__\",(1677401967),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"fmap\",\"cljs.spec.gen.alpha/fmap\",(1863255061),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"mkdate__35__auto__\",\"mkdate__35__auto__\",(983001607),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"large-integer*\",\"cljs.spec.gen.alpha/large-integer*\",(-227289663),null)),(function (){var x__20731__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"min\",\"min\",(444991522))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"st__33__auto__\",\"st__33__auto__\",(235486501),null)),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"max\",\"max\",(61366548))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"et__34__auto__\",\"et__34__auto__\",(-402043490),null))], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.inst_in;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"inst-in\",\"cljs.spec.alpha$macros/inst-in\",(1768755633),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"inst-in\",\"inst-in\",(1164979645),null),\"cljs/spec/alpha.cljc\",(18),(1),(469),true,(469),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"start\",\"start\",(1285322546),null),new cljs.core.Symbol(null,\"end\",\"end\",(1372345569),null)], null)),\"Returns a spec that validates insts in the range from start\\n  (inclusive) to end (exclusive).\",(cljs.core.truth_(cljs.spec.alpha$macros.inst_in)?cljs.spec.alpha$macros.inst_in.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros.inst_in.cljs$lang$macro = true;\n\nvar ret__21071__auto___575 = /**\n * Returns a spec that validates longs in the range from start\n *   (inclusive) to end (exclusive).\n */\n(function (){\ncljs.spec.alpha$macros.int_in = (function cljs$spec$alpha$macros$int_in(_AMPERSAND_form,_AMPERSAND_env,start,end){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",(-707298191),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",(-2060279705),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"int?\",\"cljs.core/int?\",(50730120),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__38__39__auto__\",\"p1__38__39__auto__\",(-984020294),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"int-in-range?\",\"cljs.spec.alpha/int-in-range?\",(92650900),null)),(function (){var x__20731__auto__ = start;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = end;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__38__39__auto__\",\"p1__38__39__auto__\",(-984020294),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"large-integer*\",\"cljs.spec.gen.alpha/large-integer*\",(-227289663),null)),(function (){var x__20731__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"min\",\"min\",(444991522))),(function (){var x__20731__auto__ = start;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"max\",\"max\",(61366548))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"dec\",\"cljs.core/dec\",(-443230268),null)),(function (){var x__20731__auto__ = end;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.int_in;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"int-in\",\"cljs.spec.alpha$macros/int-in\",(-877755991),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"int-in\",\"int-in\",(664882605),null),\"cljs/spec/alpha.cljc\",(17),(1),(481),true,(481),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"start\",\"start\",(1285322546),null),new cljs.core.Symbol(null,\"end\",\"end\",(1372345569),null)], null)),\"Returns a spec that validates longs in the range from start\\n  (inclusive) to end (exclusive).\",(cljs.core.truth_(cljs.spec.alpha$macros.int_in)?cljs.spec.alpha$macros.int_in.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros.int_in.cljs$lang$macro = true;\n\nvar ret__21071__auto___582 = (function (){\n/**\n * Specs a 64-bit floating point number. Options:\n * \n *  :infinite? - whether +/- infinity allowed (default true)\n *  :NaN?      - whether NaN allowed (default true)\n *  :min       - minimum value (inclusive, default none)\n *  :max       - maximum value (inclusive, default none)\n */\n(function (){\ncljs.spec.alpha$macros.double_in = (function cljs$spec$alpha$macros$double_in(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___583 = arguments.length;\nvar i__21021__auto___584 = (0);\nwhile(true){\nif((i__21021__auto___584 < len__21020__auto___583)){\nargs__21023__auto__.push((arguments[i__21021__auto___584]));\n\nvar G__585 = (i__21021__auto___584 + (1));\ni__21021__auto___584 = G__585;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.double_in.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.double_in;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"double-in\",\"cljs.spec.alpha$macros/double-in\",(-103389999),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"double-in\",\"double-in\",(-303226659),null),\"cljs/spec/alpha.cljc\",(20),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),new cljs.core.Symbol(null,\"min\",\"min\",(2085523049),null),new cljs.core.Symbol(null,\"max\",\"max\",(1701898075),null)], null),new cljs.core.Keyword(null,\"or\",\"or\",(235744169)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),true,new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),true], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"m\",\"m\",(-1021758608),null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),new cljs.core.Symbol(null,\"min\",\"min\",(2085523049),null),new cljs.core.Symbol(null,\"max\",\"max\",(1701898075),null)], null),new cljs.core.Keyword(null,\"or\",\"or\",(235744169)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),true,new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),true], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"m\",\"m\",(-1021758608),null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(488),true,(488),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),new cljs.core.Symbol(null,\"min\",\"min\",(2085523049),null),new cljs.core.Symbol(null,\"max\",\"max\",(1701898075),null)], null),new cljs.core.Keyword(null,\"or\",\"or\",(235744169)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),true,new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),true], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"m\",\"m\",(-1021758608),null)], null)], null)),\"Specs a 64-bit floating point number. Options:\\n\\n    :infinite? - whether +/- infinity allowed (default true)\\n    :NaN?      - whether NaN allowed (default true)\\n    :min       - minimum value (inclusive, default none)\\n    :max       - maximum value (inclusive, default none)\",(cljs.core.truth_(cljs.spec.alpha$macros.double_in)?cljs.spec.alpha$macros.double_in.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.double_in.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,p__579){\nvar map__580 = p__579;\nvar map__580__$1 = ((((!((map__580 == null)))?((((map__580.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__580.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__580):map__580);\nvar m = map__580__$1;\nvar infinite_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__580__$1,new cljs.core.Keyword(null,\"infinite?\",\"infinite?\",(-2017886608)),true);\nvar NaN_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__580__$1,new cljs.core.Keyword(null,\"NaN?\",\"NaN?\",(-1917767651)),true);\nvar min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__580__$1,new cljs.core.Keyword(null,\"min\",\"min\",(444991522)));\nvar max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__580__$1,new cljs.core.Keyword(null,\"max\",\"max\",(61366548)));\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"spec\",\"cljs.spec.alpha/spec\",(-707298191),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",(-2060279705),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"double?\",\"cljs.core/double?\",(1757455529),null)),cljs.core.array_seq([(cljs.core.truth_(infinite_QMARK_)?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__40#\",\"p1__40#\",(-1231763022),null)], null),cljs.core.list(new cljs.core.Symbol(null,\"not\",\"not\",(1044554643),null),cljs.core.list(new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),new cljs.core.Symbol(null,\"p1__40#\",\"p1__40#\",(-1231763022),null))))], null)),(cljs.core.truth_(NaN_QMARK_)?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__41#\",\"p1__41#\",(-514877793),null)], null),cljs.core.list(new cljs.core.Symbol(null,\"not\",\"not\",(1044554643),null),cljs.core.list(new cljs.core.Symbol(\"js\",\"isNaN\",\"js/isNaN\",(74901299),null),new cljs.core.Symbol(null,\"p1__41#\",\"p1__41#\",(-514877793),null))))], null)),(cljs.core.truth_(max)?cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__42__43__auto__\",\"p1__42__43__auto__\",(-1818084394),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"<=\",\"cljs.core/<=\",(1677001748),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__42__43__auto__\",\"p1__42__43__auto__\",(-1818084394),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = max;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()))):null),(cljs.core.truth_(min)?cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__44__45__auto__\",\"p1__44__45__auto__\",(-83299793),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"<=\",\"cljs.core/<=\",(1677001748),null)),(function (){var x__20731__auto__ = min;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__44__45__auto__\",\"p1__44__45__auto__\",(-83299793),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()))):null)], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"double*\",\"cljs.spec.gen.alpha/double*\",(416548942),null)),(function (){var x__20731__auto__ = m;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.double_in.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.double_in.cljs$lang$applyTo = (function (seq576){\nvar G__577 = cljs.core.first(seq576);\nvar seq576__$1 = cljs.core.next(seq576);\nvar G__578 = cljs.core.first(seq576__$1);\nvar seq576__$2 = cljs.core.next(seq576__$1);\nreturn cljs.spec.alpha$macros.double_in.cljs$core$IFn$_invoke$arity$variadic(G__577,G__578,seq576__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.double_in;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"double-in\",\"cljs.spec.alpha$macros/double-in\",(-103389999),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"double-in\",\"double-in\",(-303226659),null),\"cljs/spec/alpha.cljc\",(20),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),new cljs.core.Symbol(null,\"min\",\"min\",(2085523049),null),new cljs.core.Symbol(null,\"max\",\"max\",(1701898075),null)], null),new cljs.core.Keyword(null,\"or\",\"or\",(235744169)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),true,new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),true], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"m\",\"m\",(-1021758608),null)], null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),new cljs.core.Symbol(null,\"min\",\"min\",(2085523049),null),new cljs.core.Symbol(null,\"max\",\"max\",(1701898075),null)], null),new cljs.core.Keyword(null,\"or\",\"or\",(235744169)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),true,new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),true], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"m\",\"m\",(-1021758608),null)], null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(488),true,(488),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"keys\",\"keys\",(1068423698)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),new cljs.core.Symbol(null,\"min\",\"min\",(2085523049),null),new cljs.core.Symbol(null,\"max\",\"max\",(1701898075),null)], null),new cljs.core.Keyword(null,\"or\",\"or\",(235744169)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"infinite?\",\"infinite?\",(-377355081),null),true,new cljs.core.Symbol(null,\"NaN?\",\"NaN?\",(-277236124),null),true], null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"m\",\"m\",(-1021758608),null)], null)], null)),\"Specs a 64-bit floating point number. Options:\\n\\n    :infinite? - whether +/- infinity allowed (default true)\\n    :NaN?      - whether NaN allowed (default true)\\n    :min       - minimum value (inclusive, default none)\\n    :max       - maximum value (inclusive, default none)\",(cljs.core.truth_(cljs.spec.alpha$macros.double_in)?cljs.spec.alpha$macros.double_in.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.double_in.cljs$lang$macro = true;\n\nvar ret__21071__auto___589 = (function (){\n/**\n * Takes map-validating specs (e.g. 'keys' specs) and\n *   returns a spec that returns a conformed map satisfying all of the\n *   specs.  Successive conformed values propagate through rest of\n *   predicates. Unlike 'and', merge can generate maps satisfying the\n *   union of the predicates.\n */\n(function (){\ncljs.spec.alpha$macros.merge = (function cljs$spec$alpha$macros$merge(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___590 = arguments.length;\nvar i__21021__auto___591 = (0);\nwhile(true){\nif((i__21021__auto___591 < len__21020__auto___590)){\nargs__21023__auto__.push((arguments[i__21021__auto___591]));\n\nvar G__592 = (i__21021__auto___591 + (1));\ni__21021__auto___591 = G__592;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.alpha$macros.merge.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.merge;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"merge\",\"cljs.spec.alpha$macros/merge\",(-633892974),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"merge\",\"merge\",(-163787882),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(505),true,(505),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null)], null)),\"Takes map-validating specs (e.g. 'keys' specs) and\\n  returns a spec that returns a conformed map satisfying all of the\\n  specs.  Successive conformed values propagate through rest of\\n  predicates. Unlike 'and', merge can generate maps satisfying the\\n  union of the predicates.\",(cljs.core.truth_(cljs.spec.alpha$macros.merge)?cljs.spec.alpha$macros.merge.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.merge.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,pred_forms){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"merge-spec-impl\",\"cljs.spec.alpha/merge-spec-impl\",(-1254890813),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__46_SHARP_){\nreturn cljs.spec.alpha$macros.res(_AMPERSAND_env,p1__46_SHARP_);\n}),pred_forms);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.vec(pred_forms);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n});\n\ncljs.spec.alpha$macros.merge.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.alpha$macros.merge.cljs$lang$applyTo = (function (seq586){\nvar G__587 = cljs.core.first(seq586);\nvar seq586__$1 = cljs.core.next(seq586);\nvar G__588 = cljs.core.first(seq586__$1);\nvar seq586__$2 = cljs.core.next(seq586__$1);\nreturn cljs.spec.alpha$macros.merge.cljs$core$IFn$_invoke$arity$variadic(G__587,G__588,seq586__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.merge;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"merge\",\"cljs.spec.alpha$macros/merge\",(-633892974),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"merge\",\"merge\",(-163787882),null),\"cljs/spec/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(505),true,(505),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"pred-forms\",\"pred-forms\",(1813143359),null)], null)),\"Takes map-validating specs (e.g. 'keys' specs) and\\n  returns a spec that returns a conformed map satisfying all of the\\n  specs.  Successive conformed values propagate through rest of\\n  predicates. Unlike 'and', merge can generate maps satisfying the\\n  union of the predicates.\",(cljs.core.truth_(cljs.spec.alpha$macros.merge)?cljs.spec.alpha$macros.merge.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.merge.cljs$lang$macro = true;\n\nvar ret__21071__auto___597 = (function (){\n/**\n * exercises the fn named by sym (a symbol) by applying it to\n *   n (default 10) generated samples of its args spec. When fspec is\n *   supplied its arg spec is used, and sym-or-f can be a fn.  Returns a\n *   sequence of tuples of [args ret]. \n */\n(function (){\ncljs.spec.alpha$macros.exercise_fn = (function cljs$spec$alpha$macros$exercise_fn(var_args){\nvar args593 = [];\nvar len__21020__auto___598 = arguments.length;\nvar i__21021__auto___599 = (0);\nwhile(true){\nif((i__21021__auto___599 < len__21020__auto___598)){\nargs593.push((arguments[i__21021__auto___599]));\n\nvar G__600 = (i__21021__auto___599 + (1));\ni__21021__auto___599 = G__600;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__595 = args593.length;\nswitch (G__595) {\ncase (3):\nreturn cljs.spec.alpha$macros.exercise_fn.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase (4):\nreturn cljs.spec.alpha$macros.exercise_fn.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase (5):\nreturn cljs.spec.alpha$macros.exercise_fn.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((args593.length - (2)))].join('')));\n\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.exercise_fn;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"exercise-fn\",\"cljs.spec.alpha$macros/exercise-fn\",(-1623834546),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"exercise-fn\",\"exercise-fn\",(1933214770),null),\"cljs/spec/alpha.cljc\",(22),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(5),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null),new cljs.core.Symbol(null,\"fspec\",\"fspec\",(1380883392),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null),new cljs.core.Symbol(null,\"fspec\",\"fspec\",(1380883392),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null,null)], null),(1),(514),true,(514),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null),new cljs.core.Symbol(null,\"fspec\",\"fspec\",(1380883392),null)], null)),\"exercises the fn named by sym (a symbol) by applying it to\\n  n (default 10) generated samples of its args spec. When fspec is\\n  supplied its arg spec is used, and sym-or-f can be a fn.  Returns a\\n  sequence of tuples of [args ret]. \",(cljs.core.truth_(cljs.spec.alpha$macros.exercise_fn)?cljs.spec.alpha$macros.exercise_fn.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.alpha$macros.exercise_fn.cljs$core$IFn$_invoke$arity$3 = (function (_AMPERSAND_form,_AMPERSAND_env,sym){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"exercise-fn\",\"cljs.spec.alpha/exercise-fn\",(295872941),null)),(function (){var x__20731__auto__ = sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,(10))], 0)));\n});\n\ncljs.spec.alpha$macros.exercise_fn.cljs$core$IFn$_invoke$arity$4 = (function (_AMPERSAND_form,_AMPERSAND_env,sym,n){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"exercise-fn\",\"cljs.spec.alpha/exercise-fn\",(295872941),null)),(function (){var x__20731__auto__ = sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = n;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n});\n\ncljs.spec.alpha$macros.exercise_fn.cljs$core$IFn$_invoke$arity$5 = (function (_AMPERSAND_form,_AMPERSAND_env,sym,n,fspec){\nvar sym__$1 = (function (){var G__596 = sym;\nvar G__596__$1 = (((cljs.core.sequential_QMARK_(sym)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(sym),new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null))))?cljs.core.second(G__596):G__596);\nreturn G__596__$1;\n})();\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fspec__47__auto__\",\"fspec__47__auto__\",(-1572927621),null)),(function (){var x__20731__auto__ = ((cljs.core.not(fspec))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"get-spec\",\"cljs.spec.alpha/get-spec\",(785931985),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.api.resolve(_AMPERSAND_env,sym__$1));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())):fspec);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"f__48__auto__\",\"f__48__auto__\",(-316627984),null)),(function (){var x__20731__auto__ = sym__$1;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"for\",\"cljs.core/for\",(-89947499),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args__49__auto__\",\"args__49__auto__\",(-872730926),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.gen.alpha\",\"sample\",\"cljs.spec.gen.alpha/sample\",(-2084840585),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"gen\",\"cljs.spec.alpha/gen\",(147877780),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"args\",\"args\",(1315556576))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fspec__47__auto__\",\"fspec__47__auto__\",(-1572927621),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = n;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args__49__auto__\",\"args__49__auto__\",(-872730926),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"apply\",\"cljs.core/apply\",(1757277831),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"f__48__auto__\",\"f__48__auto__\",(-316627984),null)),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"args__49__auto__\",\"args__49__auto__\",(-872730926),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.alpha$macros.exercise_fn.cljs$lang$maxFixedArity = (5);\n\nreturn new cljs.core.Var(function(){return cljs.spec.alpha$macros.exercise_fn;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"exercise-fn\",\"cljs.spec.alpha$macros/exercise-fn\",(-1623834546),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"exercise-fn\",\"exercise-fn\",(1933214770),null),\"cljs/spec/alpha.cljc\",(22),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(5),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null),new cljs.core.Symbol(null,\"fspec\",\"fspec\",(1380883392),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null),new cljs.core.Symbol(null,\"fspec\",\"fspec\",(1380883392),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null,null)], null),(1),(514),true,(514),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym\",\"sym\",(195671222),null),new cljs.core.Symbol(null,\"n\",\"n\",(-2092305744),null),new cljs.core.Symbol(null,\"fspec\",\"fspec\",(1380883392),null)], null)),\"exercises the fn named by sym (a symbol) by applying it to\\n  n (default 10) generated samples of its args spec. When fspec is\\n  supplied its arg spec is used, and sym-or-f can be a fn.  Returns a\\n  sequence of tuples of [args ret]. \",(cljs.core.truth_(cljs.spec.alpha$macros.exercise_fn)?cljs.spec.alpha$macros.exercise_fn.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.alpha$macros.exercise_fn.cljs$lang$macro = true;\n\nvar ret__21071__auto___602 = (function (){\ncljs.spec.alpha$macros.init_compile_asserts = (function cljs$spec$alpha$macros$init_compile_asserts(_AMPERSAND_form,_AMPERSAND_env){\nvar compile_asserts = cljs.core.not(new cljs.core.Keyword(null,\"elide-asserts\",\"elide-asserts\",(537063272)).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",(99638489)).cljs$core$IFn$_invoke$arity$1((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null,cljs.env._STAR_compiler_STAR_)))));\nreturn compile_asserts;\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.init_compile_asserts;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"init-compile-asserts\",\"cljs.spec.alpha$macros/init-compile-asserts\",(-882450371),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"init-compile-asserts\",\"init-compile-asserts\",(-682378183),null),\"cljs/spec/alpha.cljc\",(41),(1),(535),true,(535),cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.spec.alpha$macros.init_compile_asserts)?cljs.spec.alpha$macros.init_compile_asserts.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros.init_compile_asserts.cljs$lang$macro = true;\n\nvar ret__21071__auto___603 = /**\n * spec-checking assert expression. Returns x if x is valid? according\n * to spec, else throws an error with explain-data plus ::failure of\n * :assertion-failed.\n * Can be disabled at either compile time or runtime:\n * If *compile-asserts* is false at compile time, compiles to x. Defaults\n * to the negation value of the ':elide-asserts' compiler option, or true if\n * not set.\n * If (check-asserts?) is false at runtime, always returns x. Defaults to\n * value of 'cljs.spec.alpha/*runtime-asserts*', or false if not set. You can\n * toggle check-asserts? with (check-asserts bool).\n */\n(function (){\ncljs.spec.alpha$macros.assert = (function cljs$spec$alpha$macros$assert(_AMPERSAND_form,_AMPERSAND_env,spec,x){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"*compile-asserts*\",\"cljs.spec.alpha/*compile-asserts*\",(-1808061440),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"*runtime-asserts*\",\"cljs.spec.alpha/*runtime-asserts*\",(-1060443587),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"assert*\",\"cljs.spec.alpha/assert*\",(464381070),null)),(function (){var x__20731__auto__ = spec;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = x;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = x;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = x;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.alpha$macros.assert;},new cljs.core.Symbol(\"cljs.spec.alpha$macros\",\"assert\",\"cljs.spec.alpha$macros/assert\",(878016777),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",(-896343615),null),new cljs.core.Symbol(null,\"assert\",\"assert\",(677428501),null),\"cljs/spec/alpha.cljc\",(17),(1),(539),true,(539),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),new cljs.core.Symbol(null,\"x\",\"x\",(-555367584),null)], null)),\"spec-checking assert expression. Returns x if x is valid? according\\nto spec, else throws an error with explain-data plus ::failure of\\n:assertion-failed.\\nCan be disabled at either compile time or runtime:\\nIf *compile-asserts* is false at compile time, compiles to x. Defaults\\nto the negation value of the ':elide-asserts' compiler option, or true if\\nnot set.\\nIf (check-asserts?) is false at runtime, always returns x. Defaults to\\nvalue of 'cljs.spec.alpha/*runtime-asserts*', or false if not set. You can\\ntoggle check-asserts? with (check-asserts bool).\",(cljs.core.truth_(cljs.spec.alpha$macros.assert)?cljs.spec.alpha$macros.assert.cljs$lang$test:null)])));})()\n;\ncljs.spec.alpha$macros.assert.cljs$lang$macro = true;\n\n\n//# sourceURL=cljs/spec/alpha$macros.js?rel=1494623928538\n//# sourceMappingURL=data:application/json;base64,","clojure/test/check/results.js":"// Compiled by ClojureScript 1.9.542\ngoog.provide(\"clojure.test.check.results\");\n\n/**\n * @interface\n */\nclojure.test.check.results.Result = function(){};\n\nclojure.test.check.results.passing_QMARK_ = (function clojure$test$check$results$passing_QMARK_(result){\nif((!((result == null))) && (!((result.clojure$test$check$results$Result$passing_QMARK_$arity$1 == null)))){\nreturn result.clojure$test$check$results$Result$passing_QMARK_$arity$1(result);\n} else {\nvar x__20376__auto__ = (((result == null))?null:result);\nvar m__20377__auto__ = (clojure.test.check.results.passing_QMARK_[goog.typeOf(x__20376__auto__)]);\nif(!((m__20377__auto__ == null))){\nreturn m__20377__auto__.call(null,result);\n} else {\nvar m__20377__auto____$1 = (clojure.test.check.results.passing_QMARK_[\"_\"]);\nif(!((m__20377__auto____$1 == null))){\nreturn m__20377__auto____$1.call(null,result);\n} else {\nthrow cljs.core.missing_protocol.call(null,\"Result.passing?\",result);\n}\n}\n}\n});\n\n/**\n * A map of data about the trial.\n */\nclojure.test.check.results.result_data = (function clojure$test$check$results$result_data(result){\nif((!((result == null))) && (!((result.clojure$test$check$results$Result$result_data$arity$1 == null)))){\nreturn result.clojure$test$check$results$Result$result_data$arity$1(result);\n} else {\nvar x__20376__auto__ = (((result == null))?null:result);\nvar m__20377__auto__ = (clojure.test.check.results.result_data[goog.typeOf(x__20376__auto__)]);\nif(!((m__20377__auto__ == null))){\nreturn m__20377__auto__.call(null,result);\n} else {\nvar m__20377__auto____$1 = (clojure.test.check.results.result_data[\"_\"]);\nif(!((m__20377__auto____$1 == null))){\nreturn m__20377__auto____$1.call(null,result);\n} else {\nthrow cljs.core.missing_protocol.call(null,\"Result.result-data\",result);\n}\n}\n}\n});\n\n(clojure.test.check.results.Result[\"_\"] = true);\n\n(clojure.test.check.results.passing_QMARK_[\"_\"] = (function (this$){\nreturn cljs.core.boolean$.call(null,this$);\n}));\n\n(clojure.test.check.results.result_data[\"_\"] = (function (this$){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}));\n\n(clojure.test.check.results.Result[\"null\"] = true);\n\n(clojure.test.check.results.passing_QMARK_[\"null\"] = (function (this$){\nreturn false;\n}));\n\n(clojure.test.check.results.result_data[\"null\"] = (function (this$){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}));\n","cljs/stacktrace.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$parseInt\",[\"^ \"],\"~$RegExp\",[\"^ \"],\"~$Error\",[\"^ \"],\"~$goog\",[\"^ \",\"~$string\",[\"^ \",\"~$StringBuffer\",[\"^ \",\"~$prototype\",[\"^ \",\"~$append\",[\"^ \"]]]]]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$cljs.stacktrace\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$gstring\",\"~$goog.string\",\"^C\",\"^C\",\"^7\",\"~$clojure.string\",\"^D\",\"^D\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$output-directory\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"~:line\",53,\"~:column\",7,\"~:end-line\",53,\"~:end-column\",23,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^P\",[[\"~$opts\"]]]]]],\"^>\",\"~$cljs.stacktrace/output-directory\",\"~:variadic\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",23,\"~:method-params\",[\"^P\",[[\"^R\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^P\",[null,null]],\"^L\",1,\"^K\",53,\"^M\",53,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^R\"]]]]]],\"~$ends-with?\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",43,\"^L\",7,\"^M\",43,\"^N\",17,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s0\",\"~$s1\"]]]]],\"~:tag\",\"~$boolean\"],\"^>\",\"~$cljs.stacktrace/ends-with?\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",17,\"^U\",[\"^P\",[[\"^[\",\"^10\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",43,\"~:ret-tag\",\"^12\",\"^M\",43,\"^X\",2,\"^11\",\"^12\",\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^[\",\"^10\"]]]]]],\"~$starts-with?\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",37,\"^L\",7,\"^M\",37,\"^N\",19,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^[\",\"^10\"]]]]],\"^11\",\"^12\"],\"^>\",\"~$cljs.stacktrace/starts-with?\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",19,\"^U\",[\"^P\",[[\"^[\",\"^10\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",37,\"^14\",\"^12\",\"^M\",37,\"^X\",2,\"^11\",\"^12\",\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^[\",\"^10\"]]]]]],\"~$remove-ext\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",557,\"^L\",7,\"^M\",557,\"^N\",17,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$file\"]]]]]],\"^>\",\"~$cljs.stacktrace/remove-ext\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",17,\"^U\",[\"^P\",[[\"^18\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",557,\"^M\",557,\"^X\",1,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^18\"]]]]]],\"~$string->regex\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",49,\"^L\",7,\"^M\",49,\"^N\",20,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"^>\",\"~$cljs.stacktrace/string->regex\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",20,\"^U\",[\"^P\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",49,\"^M\",49,\"^X\",1,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"~$safari-st-el->frame\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",212,\"^L\",7,\"^M\",212,\"^N\",26,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$repl-env\",\"~$st-el\",\"^R\"]]]]]],\"^>\",\"~$cljs.stacktrace/safari-st-el->frame\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",26,\"^U\",[\"^P\",[[\"^1=\",\"^1>\",\"^R\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",212,\"^M\",212,\"^X\",3,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1=\",\"^1>\",\"^R\"]]]]]],\"~$mapped-frame\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",585,\"^L\",7,\"^M\",585,\"^N\",19,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[[\"^ \",\"~:keys\",[\"~$function\",\"^18\",\"~$line\",\"~$column\"]],\"~$sms\",\"^R\"]]]]],\"~:doc\",\"Given opts and a canonicalized JavaScript stacktrace frame, return the\\n  ClojureScript frame.\"],\"^>\",\"~$cljs.stacktrace/mapped-frame\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",19,\"^U\",[\"^P\",[[\"~$p__15501\",\"^1E\",\"^R\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",585,\"^M\",585,\"^X\",3,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[[\"^ \",\"^1A\",[\"^1B\",\"^18\",\"^1C\",\"^1D\"]],\"^1E\",\"^R\"]]]]],\"^1F\",\"Given opts and a canonicalized JavaScript stacktrace frame, return the\\n  ClojureScript frame.\"],\"~$firefox-st-el->frame\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",306,\"^L\",7,\"^M\",306,\"^N\",27,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1=\",\"^1>\",\"^R\"]]]]]],\"^>\",\"~$cljs.stacktrace/firefox-st-el->frame\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",27,\"^U\",[\"^P\",[[\"^1=\",\"^1>\",\"^R\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",306,\"^M\",306,\"^X\",3,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1=\",\"^1>\",\"^R\"]]]]]],\"~$firefox-clean-function\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",294,\"^L\",7,\"^M\",294,\"^N\",29,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$f\"]]]]]],\"^>\",\"~$cljs.stacktrace/firefox-clean-function\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",29,\"^U\",[\"^P\",[[\"~$f\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",294,\"^M\",294,\"^X\",1,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$f\"]]]]]],\"~$chrome-st-el->frame\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",111,\"^L\",7,\"^M\",111,\"^N\",26,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1=\",\"^1>\",\"^R\"]]]]]],\"^>\",\"~$cljs.stacktrace/chrome-st-el->frame\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",26,\"^U\",[\"^P\",[[\"^1=\",\"^1>\",\"^R\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",111,\"^M\",111,\"^X\",3,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1=\",\"^1>\",\"^R\"]]]]]],\"~$mapped-line-column-call\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",564,\"^L\",7,\"^M\",564,\"^N\",30,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1E\",\"^18\",\"^1C\",\"^1D\"]]]]],\"^1F\",\"Given a cljs.source-map source map data structure map a generated line\\n   and column back to the original line, column, and function called.\"],\"^>\",\"~$cljs.stacktrace/mapped-line-column-call\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",30,\"^U\",[\"^P\",[[\"^1E\",\"^18\",\"^1C\",\"^1D\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",564,\"^M\",564,\"^X\",4,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1E\",\"^18\",\"^1C\",\"^1D\"]]]]],\"^1F\",\"Given a cljs.source-map source map data structure map a generated line\\n   and column back to the original line, column, and function called.\"],\"~$mapped-stacktrace-str\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",642,\"^L\",7,\"^M\",642,\"^N\",28,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$stacktrace\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]]]],\"^1F\",\"Given a vector representing the canonicalized JavaScript stacktrace and a map\\n  of library names to decoded source maps, print the ClojureScript stacktrace .\\n  See mapped-stacktrace.\",\"~:top-fn\",[\"^ \",\"^T\",false,\"^X\",3,\"^U\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^O\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^W\",[\"^P\",[null,null]]]],\"^>\",\"~$cljs.stacktrace/mapped-stacktrace-str\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",28,\"^1S\",[\"^ \",\"^T\",false,\"^X\",3,\"^U\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^O\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^W\",[\"^P\",[null,null]]],\"^U\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",642,\"^M\",642,\"^X\",3,\"^Y\",true,\"^O\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^1F\",\"Given a vector representing the canonicalized JavaScript stacktrace and a map\\n  of library names to decoded source maps, print the ClojureScript stacktrace .\\n  See mapped-stacktrace.\"],\"~$mapped-stacktrace\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",605,\"^L\",7,\"^M\",605,\"^N\",24,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]]]],\"^1F\",\"Given a vector representing the canonicalized JavaScript stacktrace\\n   return the ClojureScript stacktrace. The canonical stacktrace must be\\n   in the form:\\n\\n    [{:file <string>\\n      :function <string>\\n      :line <integer>\\n      :column <integer>}*]\\n\\n   :file must be a URL path (without protocol) relative to :output-dir or a\\n   identifier delimited by angle brackets. The returned mapped stacktrace will\\n   also contain :url entries to the original sources if it can be determined\\n   from the classpath.\",\"^1S\",[\"^ \",\"^T\",false,\"^X\",3,\"^U\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^O\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^W\",[\"^P\",[null,null]]]],\"^>\",\"~$cljs.stacktrace/mapped-stacktrace\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",24,\"^1S\",[\"^ \",\"^T\",false,\"^X\",3,\"^U\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^O\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^W\",[\"^P\",[null,null]]],\"^U\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",605,\"^M\",605,\"^X\",3,\"^Y\",true,\"^O\",[\"^P\",[[\"^1R\",\"^1E\"],[\"^1R\",\"^1E\",\"^R\"]]],\"^1F\",\"Given a vector representing the canonicalized JavaScript stacktrace\\n   return the ClojureScript stacktrace. The canonical stacktrace must be\\n   in the form:\\n\\n    [{:file <string>\\n      :function <string>\\n      :line <integer>\\n      :column <integer>}*]\\n\\n   :file must be a URL path (without protocol) relative to :output-dir or a\\n   identifier delimited by angle brackets. The returned mapped stacktrace will\\n   also contain :url entries to the original sources if it can be determined\\n   from the classpath.\"],\"~$parse-stacktrace\",[\"^ \",\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",17,\"^L\",11,\"^M\",17,\"^N\",27,\"^1F\",\"Parse a JavaScript stacktrace string into a canonical data form. The\\n  arguments:\\n\\n  repl-env - the repl environment, an optional map with :host and :port keys\\n             if the stacktrace includes url, not file references\\n  st       - the original stacktrace string to parse\\n  err      - an error map. :ua-product key defines the type of stacktrace parser\\n             to use, for example :chrome\\n  opts     - additional options. :output-dir maybe given in this argument if\\n             :host and :port do not apply, for example, a file path\\n\\n  The canonical stacktrace representation can easily be mapped to a\\n  ClojureScript one see mapped-stacktrace and mapped-stacktrace-str\"],\"^>\",\"~$cljs.stacktrace/parse-stacktrace\",\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",27,\"^L\",1,\"^K\",17,\"^M\",17,\"^11\",\"~$cljs.core/MultiFn\",\"^1F\",\"Parse a JavaScript stacktrace string into a canonical data form. The\\n  arguments:\\n\\n  repl-env - the repl environment, an optional map with :host and :port keys\\n             if the stacktrace includes url, not file references\\n  st       - the original stacktrace string to parse\\n  err      - an error map. :ua-product key defines the type of stacktrace parser\\n             to use, for example :chrome\\n  opts     - additional options. :output-dir maybe given in this argument if\\n             :host and :port do not apply, for example, a file path\\n\\n  The canonical stacktrace representation can easily be mapped to a\\n  ClojureScript one see mapped-stacktrace and mapped-stacktrace-str\"],\"~$parse-int\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",33,\"^L\",7,\"^M\",33,\"^N\",16,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"^>\",\"~$cljs.stacktrace/parse-int\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",16,\"^U\",[\"^P\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",33,\"^M\",33,\"^X\",1,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"~$parse-file\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",81,\"^L\",7,\"^M\",81,\"^N\",17,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[[\"^ \",\"^1A\",[\"~$host\",\"~$host-port\",\"~$port\"],\"~:as\",\"^1=\"],\"^18\",[\"^ \",\"^1A\",[\"~$asset-path\"],\"^24\",\"^R\"]]]]]],\"^1F\",\"Given a browser file url convert it into a relative path that can be used\\n   to locate the original source.\"],\"^>\",\"~$cljs.stacktrace/parse-file\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",17,\"^U\",[\"^P\",[[\"~$p__15358\",\"^18\",\"~$p__15359\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",81,\"^M\",81,\"^X\",3,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[[\"^ \",\"^1A\",[\"^21\",\"^22\",\"^23\"],\"^24\",\"^1=\"],\"^18\",[\"^ \",\"^1A\",[\"^25\"],\"^24\",\"^R\"]]]]]],\"^1F\",\"Given a browser file url convert it into a relative path that can be used\\n   to locate the original source.\"],\"~$parse-file-line-column\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/stacktrace.cljc\",\"^K\",60,\"^L\",7,\"^M\",60,\"^N\",29,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$flc\"]]]]]],\"^>\",\"~$cljs.stacktrace/parse-file-line-column\",\"^T\",false,\"^J\",\"out/cljs/stacktrace.cljc\",\"^N\",29,\"^U\",[\"^P\",[[\"^2:\"]]],\"^V\",null,\"^W\",[\"^P\",[null,null]],\"^L\",1,\"^K\",60,\"^M\",60,\"^X\",1,\"^Y\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^2:\"]]]]]]],\"~:require-macros\",null,\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^=\",[\"~:asset-root\",\"~:output-dir\",\"~:ua-product\",\"~:safari\",\"~:else\",\"~:call\",\"~:default\",\"^>\",\"^J\",\"~:nodejs\",\"~:type\",\"~:port\",\"~:function\",\"^L\",\"~:firefox\",\"~:reason\",\"~:asset-path\",\"~:host\",\"~:parse-stacktrace\",\"^K\",\"~:chrome\",\"~:rhino\",\"~:relativize-url\",\"~:col\",\"~:hierarchy\",\"~:nashorn\",\"~:host-port\"]],\"~:order\",[\"^2S\",\"^2A\",\"^2E\",\"^2@\",\"^2M\",\"^2U\",\"^2H\",\"^2L\",\"^2?\",\"^2G\",\"^2K\",\"^2N\",\"^2Q\",\"^J\",\"^2I\",\"^K\",\"^L\",\"^2O\",\"^2B\",\"^2C\",\"^2J\",\"^2P\",\"^2T\",\"^2F\",\"^2R\",\"^>\",\"^2D\"]],\"^1F\",null]","clojure/string.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$RegExp\",[\"^ \"],\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$reverse\",\"~$replace\"]],\"~:name\",\"~$clojure.string\",\"~:imports\",[\"^ \",\"~$StringBuffer\",\"~$goog.string.StringBuffer\"],\"~:requires\",[\"^ \",\"~$gstring\",\"~$goog.string\",\"^A\",\"^A\",\"^=\",\"^>\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$ends-with?\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"~:line\",255,\"~:column\",16,\"~:end-line\",255,\"~:end-column\",26,\"~:tag\",\"~$boolean\",\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^O\",[[\"~$s\",\"~$substr\"]]]]],\"~:doc\",\"True if s ends with substr.\"],\"^:\",\"~$clojure.string/ends-with?\",\"~:variadic\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",26,\"~:method-params\",[\"^O\",[[\"~$s\",\"^Q\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^O\",[null,null]],\"^I\",1,\"^H\",255,\"~:ret-tag\",\"^M\",\"^J\",255,\"~:max-fixed-arity\",2,\"^L\",\"^M\",\"~:fn-var\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^Q\"]]]]],\"^R\",\"True if s ends with substr.\"],\"~$seq-reverse\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",14,\"^I\",8,\"^J\",14,\"^K\",19,\"~:private\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$coll\"]]]]]],\"^10\",true,\"^:\",\"~$clojure.string/seq-reverse\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",19,\"^U\",[\"^O\",[[\"^11\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",14,\"^J\",14,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"^11\"]]]]]],\"~$replace-with\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",36,\"^I\",8,\"^J\",36,\"^K\",20,\"^10\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$f\"]]]]]],\"^10\",true,\"^:\",\"~$clojure.string/replace-with\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",20,\"^U\",[\"^O\",[[\"~$f\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",36,\"^J\",36,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$f\"]]]]]],\"~$capitalize\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",100,\"^I\",7,\"^J\",100,\"^K\",17,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Converts first character of the string to upper-case, all other\\n  characters to lower-case.\"],\"^:\",\"~$clojure.string/capitalize\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",17,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",100,\"^J\",100,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Converts first character of the string to upper-case, all other\\n  characters to lower-case.\"],\"^8\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",21,\"^I\",7,\"^J\",21,\"^K\",14,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Returns s with its characters reversed.\"],\"^:\",\"~$clojure.string/reverse\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",14,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",21,\"^J\",21,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Returns s with its characters reversed.\"],\"~$join\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",71,\"^I\",7,\"^J\",71,\"^K\",11,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"^11\"],[\"~$separator\",\"^11\"]]]]],\"^R\",\"Returns a string of all elements in coll, as returned by (seq coll),\\n  separated by an optional separator.\",\"~:top-fn\",[\"^ \",\"^T\",false,\"^Y\",2,\"^U\",[\"^O\",[[\"^11\"],[\"^19\",\"^11\"]]],\"^N\",[\"^O\",[[\"^11\"],[\"^19\",\"^11\"]]],\"^W\",[\"^O\",[null,null]]]],\"^:\",\"~$clojure.string/join\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",11,\"^1:\",[\"^ \",\"^T\",false,\"^Y\",2,\"^U\",[\"^O\",[[\"^11\"],[\"^19\",\"^11\"]]],\"^N\",[\"^O\",[[\"^11\"],[\"^19\",\"^11\"]]],\"^W\",[\"^O\",[null,null]]],\"^U\",[\"^O\",[[\"^11\"],[\"^19\",\"^11\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",71,\"^J\",71,\"^Y\",2,\"^Z\",true,\"^N\",[\"^O\",[[\"^11\"],[\"^19\",\"^11\"]]],\"^R\",\"Returns a string of all elements in coll, as returned by (seq coll),\\n  separated by an optional separator.\"],\"~$replace-first\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",62,\"^I\",7,\"^J\",62,\"^K\",20,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"~$match\",\"~$replacement\"]]]]],\"^R\",\"Replaces the first instance of match with replacement in s.\\n   match/replacement can be:\\n\\n   string / string\\n   pattern / (string or function of match).\"],\"^:\",\"~$clojure.string/replace-first\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",20,\"^U\",[\"^O\",[[\"~$s\",\"^1=\",\"^1>\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",62,\"^J\",62,\"^Y\",3,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^1=\",\"^1>\"]]]]],\"^R\",\"Replaces the first instance of match with replacement in s.\\n   match/replacement can be:\\n\\n   string / string\\n   pattern / (string or function of match).\"],\"~$starts-with?\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",250,\"^I\",16,\"^J\",250,\"^K\",28,\"^L\",\"^M\",\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^Q\"]]]]],\"^R\",\"True if s starts with substr.\"],\"^:\",\"~$clojure.string/starts-with?\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",28,\"^U\",[\"^O\",[[\"~$s\",\"^Q\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",250,\"^X\",\"^M\",\"^J\",250,\"^Y\",2,\"^L\",\"^M\",\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^Q\"]]]]],\"^R\",\"True if s starts with substr.\"],\"~$escape\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",203,\"^I\",7,\"^J\",203,\"^K\",13,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"~$cmap\"]]]]],\"^R\",\"Return a new string, using cmap to escape each character ch\\n   from s as follows:\\n\\n   If (cmap ch) is nil, append ch to the new string.\\n   If (cmap ch) is non-nil, append (str (cmap ch)) instead.\"],\"^:\",\"~$clojure.string/escape\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",13,\"^U\",[\"^O\",[[\"~$s\",\"^1C\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",203,\"^J\",203,\"^Y\",2,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^1C\"]]]]],\"^R\",\"Return a new string, using cmap to escape each character ch\\n   from s as follows:\\n\\n   If (cmap ch) is nil, append ch to the new string.\\n   If (cmap ch) is non-nil, append (str (cmap ch)) instead.\"],\"~$replace-all\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",27,\"^I\",8,\"^J\",27,\"^K\",19,\"^10\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"~$re\",\"^1>\"]]]]]],\"^10\",true,\"^:\",\"~$clojure.string/replace-all\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",19,\"^U\",[\"^O\",[[\"~$s\",\"^1F\",\"^1>\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",27,\"^J\",27,\"^Y\",3,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^1F\",\"^1>\"]]]]]],\"~$discard-trailing-if-needed\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",125,\"^I\",8,\"^J\",125,\"^K\",34,\"^10\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$limit\",\"~$v\"]]]]]],\"^10\",true,\"^:\",\"~$clojure.string/discard-trailing-if-needed\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",34,\"^U\",[\"^O\",[[\"^1I\",\"~$v\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",125,\"^J\",125,\"^Y\",2,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"^1I\",\"~$v\"]]]]]],\"~$last-index-of\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",236,\"^I\",7,\"^J\",236,\"^K\",20,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"~$value\"],[\"~$s\",\"^1L\",\"~$from-index\"]]]]],\"^R\",\"Return last index of value (string or char) in s, optionally\\n  searching backward from from-index or nil if not found.\",\"^1:\",[\"^ \",\"^T\",false,\"^Y\",3,\"^U\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^N\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^W\",[\"^O\",[null,null]]]],\"^:\",\"~$clojure.string/last-index-of\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",20,\"^1:\",[\"^ \",\"^T\",false,\"^Y\",3,\"^U\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^N\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^W\",[\"^O\",[null,null]]],\"^U\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",236,\"^J\",236,\"^Y\",3,\"^Z\",true,\"^N\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^R\",\"Return last index of value (string or char) in s, optionally\\n  searching backward from from-index or nil if not found.\"],\"~$pop-last-while-empty\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",118,\"^I\",8,\"^J\",118,\"^K\",28,\"^10\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$v\"]]]]]],\"^10\",true,\"^:\",\"~$clojure.string/pop-last-while-empty\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",28,\"^U\",[\"^O\",[[\"~$v\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",118,\"^J\",118,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$v\"]]]]]],\"~$includes?\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",260,\"^I\",16,\"^J\",260,\"^K\",25,\"^L\",\"^M\",\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^Q\"]]]]],\"^R\",\"True if s includes substr.\"],\"^:\",\"~$clojure.string/includes?\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",25,\"^U\",[\"^O\",[[\"~$s\",\"^Q\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",260,\"^X\",\"^M\",\"^J\",260,\"^Y\",2,\"^L\",\"^M\",\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^Q\"]]]]],\"^R\",\"True if s includes substr.\"],\"^9\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",44,\"^I\",7,\"^J\",44,\"^K\",14,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^1=\",\"^1>\"]]]]],\"^R\",\"Replaces all instance of match with replacement in s.\\n   match/replacement can be:\\n\\n   string / string\\n   pattern / (string or function of match).\"],\"^:\",\"~$clojure.string/replace\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",14,\"^U\",[\"^O\",[[\"~$s\",\"^1=\",\"^1>\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",44,\"^J\",44,\"^Y\",3,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^1=\",\"^1>\"]]]]],\"^R\",\"Replaces all instance of match with replacement in s.\\n   match/replacement can be:\\n\\n   string / string\\n   pattern / (string or function of match).\"],\"~$split-lines\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",165,\"^I\",7,\"^J\",165,\"^K\",18,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Splits s on \\n or \\r\\n.\"],\"^:\",\"~$clojure.string/split-lines\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",18,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",165,\"^J\",165,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Splits s on \\n or \\r\\n.\"],\"~$lower-case\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",95,\"^I\",7,\"^J\",95,\"^K\",17,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Converts string to all lower-case.\"],\"^:\",\"~$clojure.string/lower-case\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",17,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",95,\"^J\",95,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Converts string to all lower-case.\"],\"~$trim-newline\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",185,\"^I\",7,\"^J\",185,\"^K\",19,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Removes all trailing newline \\\\n or return \\\\r characters from\\n  string.  Similar to Perl's chomp.\"],\"^:\",\"~$clojure.string/trim-newline\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",19,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",185,\"^J\",185,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Removes all trailing newline \\\\n or return \\\\r characters from\\n  string.  Similar to Perl's chomp.\"],\"~$upper-case\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",90,\"^I\",7,\"^J\",90,\"^K\",17,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Converts string to all upper-case.\"],\"^:\",\"~$clojure.string/upper-case\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",17,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",90,\"^J\",90,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Converts string to all upper-case.\"],\"~$split\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",141,\"^I\",7,\"^J\",141,\"^K\",12,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^1F\"],[\"~$s\",\"^1F\",\"^1I\"]]]]],\"^R\",\"Splits string on a regular expression. Optional argument limit is\\n  the maximum number of splits. Not lazy. Returns vector of the splits.\",\"^1:\",[\"^ \",\"^T\",false,\"^Y\",3,\"^U\",[\"^O\",[[\"~$s\",\"^1F\"],[\"~$s\",\"^1F\",\"^1I\"]]],\"^N\",[\"^O\",[[\"~$s\",\"^1F\"],[\"~$s\",\"^1F\",\"^1I\"]]],\"^W\",[\"^O\",[null,null]]]],\"^:\",\"~$clojure.string/split\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",12,\"^1:\",[\"^ \",\"^T\",false,\"^Y\",3,\"^U\",[\"^O\",[[\"~$s\",\"^1F\"],[\"~$s\",\"^1F\",\"^1I\"]]],\"^N\",[\"^O\",[[\"~$s\",\"^1F\"],[\"~$s\",\"^1F\",\"^1I\"]]],\"^W\",[\"^O\",[null,null]]],\"^U\",[\"^O\",[[\"~$s\",\"^1F\"],[\"~$s\",\"^1F\",\"^1I\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",141,\"^J\",141,\"^Y\",3,\"^Z\",true,\"^N\",[\"^O\",[[\"~$s\",\"^1F\"],[\"~$s\",\"^1F\",\"^1I\"]]],\"^R\",\"Splits string on a regular expression. Optional argument limit is\\n  the maximum number of splits. Not lazy. Returns vector of the splits.\"],\"~$trimr\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",180,\"^I\",7,\"^J\",180,\"^K\",12,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Removes whitespace from the right side of string.\"],\"^:\",\"~$clojure.string/trimr\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",12,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",180,\"^J\",180,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Removes whitespace from the right side of string.\"],\"~$index-of\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",222,\"^I\",7,\"^J\",222,\"^K\",15,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]]]],\"^R\",\"Return index of value (string or char) in s, optionally searching\\n  forward from from-index or nil if not found.\",\"^1:\",[\"^ \",\"^T\",false,\"^Y\",3,\"^U\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^N\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^W\",[\"^O\",[null,null]]]],\"^:\",\"~$clojure.string/index-of\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",15,\"^1:\",[\"^ \",\"^T\",false,\"^Y\",3,\"^U\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^N\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^W\",[\"^O\",[null,null]]],\"^U\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",222,\"^J\",222,\"^Y\",3,\"^Z\",true,\"^N\",[\"^O\",[[\"~$s\",\"^1L\"],[\"~$s\",\"^1L\",\"^1M\"]]],\"^R\",\"Return index of value (string or char) in s, optionally searching\\n  forward from from-index or nil if not found.\"],\"~$trim\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",170,\"^I\",7,\"^J\",170,\"^K\",11,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Removes whitespace from both ends of string.\"],\"^:\",\"~$clojure.string/trim\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",11,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",170,\"^J\",170,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Removes whitespace from both ends of string.\"],\"~$triml\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",175,\"^I\",7,\"^J\",175,\"^K\",12,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Removes whitespace from the left side of string.\"],\"^:\",\"~$clojure.string/triml\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",12,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",175,\"^J\",175,\"^Y\",1,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"Removes whitespace from the left side of string.\"],\"~$blank?\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",198,\"^I\",16,\"^J\",198,\"^K\",22,\"^L\",\"^M\",\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"True is s is nil, empty, or contains only whitespace.\"],\"^:\",\"~$clojure.string/blank?\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",22,\"^U\",[\"^O\",[[\"~$s\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",198,\"^X\",\"^M\",\"^J\",198,\"^Y\",1,\"^L\",\"^M\",\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\"]]]]],\"^R\",\"True is s is nil, empty, or contains only whitespace.\"],\"~$re-surrogate-pair\",[\"^ \",\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",18,\"^I\",16,\"^J\",18,\"^K\",33,\"^10\",true],\"^10\",true,\"^:\",\"~$clojure.string/re-surrogate-pair\",\"^G\",\"out/clojure/string.cljs\",\"^K\",33,\"^I\",1,\"^H\",18,\"^J\",18,\"^L\",\"~$js/RegExp\"],\"~$split-with-empty-regex\",[\"^ \",\"^E\",null,\"^F\",[\"^ \",\"^G\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/string.cljs\",\"^H\",131,\"^I\",8,\"^J\",131,\"^K\",30,\"^10\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^1I\"]]]]]],\"^10\",true,\"^:\",\"~$clojure.string/split-with-empty-regex\",\"^T\",false,\"^G\",\"out/clojure/string.cljs\",\"^K\",30,\"^U\",[\"^O\",[[\"~$s\",\"^1I\"]]],\"^V\",null,\"^W\",[\"^O\",[null,null]],\"^I\",1,\"^H\",131,\"^J\",131,\"^Y\",2,\"^Z\",true,\"^N\",[\"^O\",[\"^P\",[\"^O\",[[\"~$s\",\"^1I\"]]]]]]],\"~:require-macros\",null,\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^7\",[\"~:else\"]],\"~:order\",[\"^2D\"]],\"^R\",null]","cljs/source_map.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"],\"~$Date\",[\"^ \",\"~$prototype\",[\"^ \",\"~$valueOf\",[\"^ \"]]],\"~$JSON\",[\"^ \",\"~$stringify\",[\"^ \"]]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$cljs.source-map\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$gobj\",\"~$goog.object\",\"^A\",\"^A\",\"~$string\",\"~$clojure.string\",\"^C\",\"^C\",\"~$set\",\"~$clojure.set\",\"^E\",\"^E\",\"~$base64-vlq\",\"~$cljs.source-map.base64-vlq\",\"^G\",\"^G\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$update-result\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"~:line\",130,\"~:column\",7,\"~:end-line\",130,\"~:end-column\",20,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^S\",[[\"~$result\",\"~$segmap\",\"~$gline\"]]]]],\"~:doc\",\"Helper for decode. Take a source map and update it based on a\\n  segment map.\"],\"^<\",\"~$cljs.source-map/update-result\",\"~:variadic\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",20,\"~:method-params\",[\"^S\",[[\"^U\",\"^V\",\"^W\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^S\",[null,null]],\"^O\",1,\"^N\",130,\"^P\",130,\"~:max-fixed-arity\",3,\"~:fn-var\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^U\",\"^V\",\"^W\"]]]]],\"^X\",\"Helper for decode. Take a source map and update it based on a\\n  segment map.\"],\"~$encode\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",198,\"^O\",7,\"^P\",198,\"^Q\",13,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$m\",\"~$opts\"]]]]],\"^X\",\"Take an internal source map representation represented as nested\\n   sorted maps of file, line, column and return a source map v3 JSON\\n   string.\"],\"^<\",\"~$cljs.source-map/encode\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",13,\"^[\",[\"^S\",[[\"~$m\",\"^15\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",198,\"^P\",198,\"^12\",2,\"^13\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$m\",\"^15\"]]]]],\"^X\",\"Take an internal source map representation represented as nested\\n   sorted maps of file, line, column and return a source map v3 JSON\\n   string.\"],\"~$invert-reverse-map\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",285,\"^O\",7,\"^P\",285,\"^Q\",25,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$reverse-map\"]]]]],\"^X\",\"Given a ClojureScript to JavaScript source map, invert it. Useful when\\n   mapping JavaScript stack traces when environment support is unavailable.\"],\"^<\",\"~$cljs.source-map/invert-reverse-map\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",25,\"^[\",[\"^S\",[[\"^18\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",285,\"^P\",285,\"^12\",1,\"^13\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^18\"]]]]],\"^X\",\"Given a ClojureScript to JavaScript source map, invert it. Useful when\\n   mapping JavaScript stack traces when environment support is unavailable.\"],\"~$decode\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",145,\"^O\",7,\"^P\",145,\"^Q\",13,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$source-map\"],[\"~$mappings\",\"^1;\"]]]]],\"^X\",\"Convert a v3 source map JSON object into a source map mapping\\n  generated JavaScript source locations to the original\\n  ClojureScript.\",\"~:top-fn\",[\"^ \",\"^Z\",false,\"^12\",2,\"^[\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^R\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^11\",[\"^S\",[null,null]]]],\"^<\",\"~$cljs.source-map/decode\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",13,\"^1=\",[\"^ \",\"^Z\",false,\"^12\",2,\"^[\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^R\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^11\",[\"^S\",[null,null]]],\"^[\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",145,\"^P\",145,\"^12\",2,\"^13\",true,\"^R\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^X\",\"Convert a v3 source map JSON object into a source map mapping\\n  generated JavaScript source locations to the original\\n  ClojureScript.\"],\"~$seg->map\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",53,\"^O\",7,\"^P\",53,\"^Q\",15,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$seg\",\"^1;\"]]]]],\"^X\",\"Take a source map segment represented as a vector\\n   and return a map.\"],\"^<\",\"~$cljs.source-map/seg->map\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",15,\"^[\",[\"^S\",[[\"^1@\",\"^1;\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",53,\"^P\",53,\"^12\",2,\"^13\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1@\",\"^1;\"]]]]],\"^X\",\"Take a source map segment represented as a vector\\n   and return a map.\"],\"~$source-compare\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",42,\"^O\",7,\"^P\",42,\"^Q\",21,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$sources\"]]]]],\"^X\",\"Take a seq of source file names and return a comparator\\n   that can be used to construct a sorted map. For reverse\\n   source maps.\"],\"^<\",\"~$cljs.source-map/source-compare\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",21,\"^[\",[\"^S\",[[\"^1C\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",42,\"^P\",42,\"^12\",1,\"^13\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\"]]]]],\"^X\",\"Take a seq of source file names and return a comparator\\n   that can be used to construct a sorted map. For reverse\\n   source maps.\"],\"~$decode-reverse\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",99,\"^O\",7,\"^P\",99,\"^Q\",21,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]]]],\"^X\",\"Convert a v3 source map JSON object into a reverse source map\\n  mapping original ClojureScript source locations to the generated\\n  JavaScript.\",\"^1=\",[\"^ \",\"^Z\",false,\"^12\",2,\"^[\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^R\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^11\",[\"^S\",[null,null]]]],\"^<\",\"~$cljs.source-map/decode-reverse\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",21,\"^1=\",[\"^ \",\"^Z\",false,\"^12\",2,\"^[\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^R\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^11\",[\"^S\",[null,null]]],\"^[\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",99,\"^P\",99,\"^12\",2,\"^13\",true,\"^R\",[\"^S\",[[\"^1;\"],[\"^1<\",\"^1;\"]]],\"^X\",\"Convert a v3 source map JSON object into a reverse source map\\n  mapping original ClojureScript source locations to the generated\\n  JavaScript.\"],\"~$lines->segs\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",175,\"^O\",7,\"^P\",175,\"^Q\",18,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$lines\"]]]]],\"^X\",\"Take a nested sorted map encoding line and column information\\n   for a file and return a vector of vectors of encoded segments.\\n   Each vector represents a line, and the internal vectors are segments\\n   representing the contents of the line.\"],\"^<\",\"~$cljs.source-map/lines->segs\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",18,\"^[\",[\"^S\",[[\"^1H\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",175,\"^P\",175,\"^12\",1,\"^13\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1H\"]]]]],\"^X\",\"Take a nested sorted map encoding line and column information\\n   for a file and return a vector of vectors of encoded segments.\\n   Each vector represents a line, and the internal vectors are segments\\n   representing the contents of the line.\"],\"~$merge-source-maps\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",258,\"^O\",7,\"^P\",258,\"^Q\",24,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"~$cljs-map\",\"~$js-map\"]]]]],\"^X\",\"Merge an internal source map representation of a single\\n   ClojureScript file mapping original to generated with a\\n   second source map mapping original JS to generated JS.\\n   The is to support source maps that work through multiple\\n   compilation steps like Google Closure optimization passes.\"],\"^<\",\"~$cljs.source-map/merge-source-maps\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",24,\"^[\",[\"^S\",[[\"^1K\",\"^1L\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",258,\"^P\",258,\"^12\",2,\"^13\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1K\",\"^1L\"]]]]],\"^X\",\"Merge an internal source map representation of a single\\n   ClojureScript file mapping original to generated with a\\n   second source map mapping original JS to generated JS.\\n   The is to support source maps that work through multiple\\n   compilation steps like Google Closure optimization passes.\"],\"~$update-reverse-result\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",81,\"^O\",7,\"^P\",81,\"^Q\",28,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^U\",\"^V\",\"^W\"]]]]],\"^X\",\"Helper for decode-reverse. Take a reverse source map and\\n  update it with a segment map.\"],\"^<\",\"~$cljs.source-map/update-reverse-result\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",28,\"^[\",[\"^S\",[[\"^U\",\"^V\",\"^W\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",81,\"^P\",81,\"^12\",3,\"^13\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^U\",\"^V\",\"^W\"]]]]],\"^X\",\"Helper for decode-reverse. Take a reverse source map and\\n  update it with a segment map.\"],\"~$indexed-sources\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",34,\"^O\",7,\"^P\",34,\"^Q\",22,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\"]]]]],\"^X\",\"Take a seq of source file names and return a map from\\n   file number to integer index. For reverse source maps.\"],\"^<\",\"~$cljs.source-map/indexed-sources\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",22,\"^[\",[\"^S\",[[\"^1C\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",34,\"^P\",34,\"^12\",1,\"^13\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1C\"]]]]],\"^X\",\"Take a seq of source file names and return a map from\\n   file number to integer index. For reverse source maps.\"],\"~$seg-combine\",[\"^ \",\"^K\",null,\"^L\",[\"^ \",\"^M\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map.cljs\",\"^N\",65,\"^O\",7,\"^P\",65,\"^Q\",18,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1@\",\"~$relseg\"]]]]],\"^X\",\"Combine a source map segment vector and a relative\\n   source map segment vector and combine them to get\\n   an absolute segment posititon information as a vector.\"],\"^<\",\"~$cljs.source-map/seg-combine\",\"^Z\",false,\"^M\",\"out/cljs/source_map.cljs\",\"^Q\",18,\"^[\",[\"^S\",[[\"^1@\",\"^1S\"]]],\"^10\",null,\"^11\",[\"^S\",[null,null]],\"^O\",1,\"^N\",65,\"^P\",65,\"^12\",2,\"^13\",true,\"^R\",[\"^S\",[\"^T\",[\"^S\",[[\"^1@\",\"^1S\"]]]]],\"^X\",\"Combine a source map segment vector and a relative\\n   source map segment vector and combine them to get\\n   an absolute segment posititon information as a vector.\"]],\"~:require-macros\",null,\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^;\",[\"~:gline\",\"^<\",\"^M\",\"~:lines\",\"~:source\",\"~:preamble-line-count\",\"~:source-map-timestamp\",\"^N\",\"~:col\",\"~:gcol\",\"~:sources-content\"]],\"~:order\",[\"^22\",\"^1Z\",\"^N\",\"^21\",\"^<\",\"^1X\",\"^1[\",\"^M\",\"^20\",\"^1Y\",\"^23\"]],\"^X\",null]","clojure/test/check/generators.js":"// Compiled by ClojureScript 1.9.542\ngoog.provide(\"clojure.test.check.generators\");\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nclojure.test.check.generators.Generator = (function (gen,__meta,__extmap,__hash){\nthis.gen = gen;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = -2065299702;\nthis.cljs$lang$protocol_mask$partition1$ = 8192;\n})\nclojure.test.check.generators.Generator.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__20340__auto__,k__20341__auto__){\nvar self__ = this;\nvar this__20340__auto____$1 = this;\nreturn this__20340__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__20341__auto__,null);\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__20342__auto__,k76,else__20343__auto__){\nvar self__ = this;\nvar this__20342__auto____$1 = this;\nvar G__78 = k76;\nvar G__78__$1 = (((G__78 instanceof cljs.core.Keyword))?G__78.fqn:null);\nswitch (G__78__$1) {\ncase \"gen\":\nreturn self__.gen;\n\nbreak;\ndefault:\nreturn cljs.core.get.call(null,self__.__extmap,k76,else__20343__auto__);\n\n}\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__20354__auto__,writer__20355__auto__,opts__20356__auto__){\nvar self__ = this;\nvar this__20354__auto____$1 = this;\nvar pr_pair__20357__auto__ = ((function (this__20354__auto____$1){\nreturn (function (keyval__20358__auto__){\nreturn cljs.core.pr_sequential_writer.call(null,writer__20355__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__20356__auto__,keyval__20358__auto__);\n});})(this__20354__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer.call(null,writer__20355__auto__,pr_pair__20357__auto__,\"#clojure.test.check.generators.Generator{\",\", \",\"}\",opts__20356__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,(2),(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)),self__.gen],null))], null),self__.__extmap));\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;\n\nclojure.test.check.generators.Generator.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__75){\nvar self__ = this;\nvar G__75__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__75__$1,(1),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302))], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator.call(null,self__.__extmap):cljs.core.nil_iter.call(null))));\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__20338__auto__){\nvar self__ = this;\nvar this__20338__auto____$1 = this;\nreturn self__.__meta;\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__20334__auto__){\nvar self__ = this;\nvar this__20334__auto____$1 = this;\nreturn (new clojure.test.check.generators.Generator(self__.gen,self__.__meta,self__.__extmap,self__.__hash));\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__20344__auto__){\nvar self__ = this;\nvar this__20344__auto____$1 = this;\nreturn ((1) + cljs.core.count.call(null,self__.__extmap));\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__20335__auto__){\nvar self__ = this;\nvar this__20335__auto____$1 = this;\nvar h__20043__auto__ = self__.__hash;\nif(!((h__20043__auto__ == null))){\nreturn h__20043__auto__;\n} else {\nvar h__20043__auto____$1 = cljs.core.hash_imap.call(null,this__20335__auto____$1);\nself__.__hash = h__20043__auto____$1;\n\nreturn h__20043__auto____$1;\n}\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__20336__auto__,other__20337__auto__){\nvar self__ = this;\nvar this__20336__auto____$1 = this;\nif(cljs.core.truth_((function (){var and__19647__auto__ = other__20337__auto__;\nif(cljs.core.truth_(and__19647__auto__)){\nreturn ((this__20336__auto____$1.constructor === other__20337__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__20336__auto____$1,other__20337__auto__));\n} else {\nreturn and__19647__auto__;\n}\n})())){\nreturn true;\n} else {\nreturn false;\n}\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__20349__auto__,k__20350__auto__){\nvar self__ = this;\nvar this__20349__auto____$1 = this;\nif(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)),null], null), null),k__20350__auto__)){\nreturn cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__20349__auto____$1),self__.__meta),k__20350__auto__);\n} else {\nreturn (new clojure.test.check.generators.Generator(self__.gen,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__20350__auto__)),null));\n}\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__20347__auto__,k__20348__auto__,G__75){\nvar self__ = this;\nvar this__20347__auto____$1 = this;\nvar pred__79 = cljs.core.keyword_identical_QMARK_;\nvar expr__80 = k__20348__auto__;\nif(cljs.core.truth_(pred__79.call(null,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)),expr__80))){\nreturn (new clojure.test.check.generators.Generator(G__75,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new clojure.test.check.generators.Generator(self__.gen,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__20348__auto__,G__75),null));\n}\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__20352__auto__){\nvar self__ = this;\nvar this__20352__auto____$1 = this;\nreturn cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,(2),(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)),self__.gen],null))], null),self__.__extmap));\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__20339__auto__,G__75){\nvar self__ = this;\nvar this__20339__auto____$1 = this;\nreturn (new clojure.test.check.generators.Generator(self__.gen,G__75,self__.__extmap,self__.__hash));\n});\n\nclojure.test.check.generators.Generator.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__20345__auto__,entry__20346__auto__){\nvar self__ = this;\nvar this__20345__auto____$1 = this;\nif(cljs.core.vector_QMARK_.call(null,entry__20346__auto__)){\nreturn this__20345__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.call(null,entry__20346__auto__,(0)),cljs.core._nth.call(null,entry__20346__auto__,(1)));\n} else {\nreturn cljs.core.reduce.call(null,cljs.core._conj,this__20345__auto____$1,entry__20346__auto__);\n}\n});\n\nclojure.test.check.generators.Generator.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"gen\",\"gen\",(1783106829),null)], null);\n});\n\nclojure.test.check.generators.Generator.cljs$lang$type = true;\n\nclojure.test.check.generators.Generator.cljs$lang$ctorPrSeq = (function (this__20365__auto__){\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,\"clojure.test.check.generators/Generator\");\n});\n\nclojure.test.check.generators.Generator.cljs$lang$ctorPrWriter = (function (this__20365__auto__,writer__20366__auto__){\nreturn cljs.core._write.call(null,writer__20366__auto__,\"clojure.test.check.generators/Generator\");\n});\n\nclojure.test.check.generators.__GT_Generator = (function clojure$test$check$generators$__GT_Generator(gen){\nreturn (new clojure.test.check.generators.Generator(gen,null,null,null));\n});\n\nclojure.test.check.generators.map__GT_Generator = (function clojure$test$check$generators$map__GT_Generator(G__77){\nreturn (new clojure.test.check.generators.Generator(new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)).cljs$core$IFn$_invoke$arity$1(G__77),null,cljs.core.dissoc.call(null,G__77,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302))),null));\n});\n\n/**\n * Test if `x` is a generator. Generators should be treated as opaque values.\n */\nclojure.test.check.generators.generator_QMARK_ = (function clojure$test$check$generators$generator_QMARK_(x){\nreturn (x instanceof clojure.test.check.generators.Generator);\n});\nclojure.test.check.generators.make_gen = (function clojure$test$check$generators$make_gen(generator_fn){\nreturn (new clojure.test.check.generators.Generator(generator_fn,null,null,null));\n});\n/**\n * Internal function.\n */\nclojure.test.check.generators.call_gen = (function clojure$test$check$generators$call_gen(p__83,rnd,size){\nvar map__86 = p__83;\nvar map__86__$1 = ((((!((map__86 == null)))?((((map__86.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__86.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__86):map__86);\nvar generator_fn = cljs.core.get.call(null,map__86__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)));\nreturn generator_fn.call(null,rnd,size);\n});\n/**\n * Internal function.\n */\nclojure.test.check.generators.gen_pure = (function clojure$test$check$generators$gen_pure(value){\nreturn clojure.test.check.generators.make_gen.call(null,(function (rnd,size){\nreturn value;\n}));\n});\n/**\n * Internal function.\n */\nclojure.test.check.generators.gen_fmap = (function clojure$test$check$generators$gen_fmap(k,p__88){\nvar map__91 = p__88;\nvar map__91__$1 = ((((!((map__91 == null)))?((((map__91.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__91.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__91):map__91);\nvar h = cljs.core.get.call(null,map__91__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)));\nreturn clojure.test.check.generators.make_gen.call(null,((function (map__91,map__91__$1,h){\nreturn (function (rnd,size){\nreturn k.call(null,h.call(null,rnd,size));\n});})(map__91,map__91__$1,h))\n);\n});\n/**\n * Internal function.\n */\nclojure.test.check.generators.gen_bind = (function clojure$test$check$generators$gen_bind(p__93,k){\nvar map__101 = p__93;\nvar map__101__$1 = ((((!((map__101 == null)))?((((map__101.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__101.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__101):map__101);\nvar h = cljs.core.get.call(null,map__101__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)));\nreturn clojure.test.check.generators.make_gen.call(null,((function (map__101,map__101__$1,h){\nreturn (function (rnd,size){\nvar vec__103 = clojure.test.check.random.split.call(null,rnd);\nvar r1 = cljs.core.nth.call(null,vec__103,(0),null);\nvar r2 = cljs.core.nth.call(null,vec__103,(1),null);\nvar inner = h.call(null,r1,size);\nvar map__106 = k.call(null,inner);\nvar map__106__$1 = ((((!((map__106 == null)))?((((map__106.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__106.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__106):map__106);\nvar result = cljs.core.get.call(null,map__106__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)));\nreturn result.call(null,r2,size);\n});})(map__101,map__101__$1,h))\n);\n});\n/**\n * Internal function.\n * \n *   Given a random number generator, returns an infinite lazy sequence\n *   of random number generators.\n */\nclojure.test.check.generators.lazy_random_states = (function clojure$test$check$generators$lazy_random_states(rr){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar vec__111 = clojure.test.check.random.split.call(null,rr);\nvar r1 = cljs.core.nth.call(null,vec__111,(0),null);\nvar r2 = cljs.core.nth.call(null,vec__111,(1),null);\nreturn cljs.core.cons.call(null,r1,clojure.test.check.generators.lazy_random_states.call(null,r2));\n}),null,null));\n});\n/**\n * Takes a collection of generators and returns a generator of vectors.\n */\nclojure.test.check.generators.gen_tuple = (function clojure$test$check$generators$gen_tuple(gens){\nreturn clojure.test.check.generators.make_gen.call(null,(function (rnd,size){\nreturn cljs.core.mapv.call(null,(function (p1__6_SHARP_,p2__7_SHARP_){\nreturn clojure.test.check.generators.call_gen.call(null,p1__6_SHARP_,p2__7_SHARP_,size);\n}),gens,clojure.test.check.random.split_n.call(null,rnd,cljs.core.count.call(null,gens)));\n}));\n});\n/**\n * Returns a generator like `gen` but with values transformed by `f`.\n *   E.g.:\n * \n *    (gen/sample (gen/fmap str gen/nat))\n *    => (\"0\" \"1\" \"0\" \"1\" \"4\" \"3\" \"6\" \"6\" \"4\" \"2\")\n * \n *   Also see gen/let for a macro with similar functionality.\n */\nclojure.test.check.generators.fmap = (function clojure$test$check$generators$fmap(f,gen){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Second arg to fmap must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.gen_fmap.call(null,(function (p1__8_SHARP_){\nreturn clojure.test.check.rose_tree.fmap.call(null,f,p1__8_SHARP_);\n}),gen);\n});\n/**\n * Create a generator that always returns `value`,\n *   and never shrinks. You can think of this as\n *   the `constantly` of generators. E.g.:\n * \n *    (gen/sample (gen/return 42))\n *    => (42 42 42 42 42 42 42 42 42 42)\n */\nclojure.test.check.generators.return$ = (function clojure$test$check$generators$return(value){\nreturn clojure.test.check.generators.gen_pure.call(null,clojure.test.check.rose_tree.pure.call(null,value));\n});\nclojure.test.check.generators.bind_helper = (function clojure$test$check$generators$bind_helper(f){\nreturn (function (rose){\nreturn clojure.test.check.generators.gen_fmap.call(null,clojure.test.check.rose_tree.join,clojure.test.check.generators.make_gen.call(null,(function (rnd,size){\nreturn clojure.test.check.rose_tree.fmap.call(null,(function (p1__9_SHARP_){\nreturn clojure.test.check.generators.call_gen.call(null,p1__9_SHARP_,rnd,size);\n}),clojure.test.check.rose_tree.fmap.call(null,f,rose));\n})));\n});\n});\n/**\n * Create a new generator that passes the result of `gen` into function\n *   `f`. `f` should return a new generator. This allows you to create new\n *   generators that depend on the value of other generators. For example,\n *   to create a generator of permutations which first generates a\n *   `num-elements` and then generates a shuffling of `(range num-elements)`:\n * \n *    (gen/bind gen/nat\n *              ;; this function takes a value generated by\n *              ;; the generator above and returns a new generator\n *              ;; which shuffles the collection returned by `range`\n *              (fn [num-elements]\n *                (gen/shuffle (range num-elements))))\n * \n *   Also see gen/let for a macro with similar functionality.\n */\nclojure.test.check.generators.bind = (function clojure$test$check$generators$bind(generator,f){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,generator))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to bind must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? generator)\")].join('')));\n}\n\nreturn clojure.test.check.generators.gen_bind.call(null,generator,clojure.test.check.generators.bind_helper.call(null,f));\n});\n/**\n * Internal function.\n */\nclojure.test.check.generators.make_size_range_seq = (function clojure$test$check$generators$make_size_range_seq(max_size){\nreturn cljs.core.cycle.call(null,cljs.core.range.call(null,(0),max_size));\n});\n/**\n * Return a sequence of realized values from `generator`.\n */\nclojure.test.check.generators.sample_seq = (function clojure$test$check$generators$sample_seq(var_args){\nvar args114 = [];\nvar len__21020__auto___117 = arguments.length;\nvar i__21021__auto___118 = (0);\nwhile(true){\nif((i__21021__auto___118 < len__21020__auto___117)){\nargs114.push((arguments[i__21021__auto___118]));\n\nvar G__119 = (i__21021__auto___118 + (1));\ni__21021__auto___118 = G__119;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__116 = args114.length;\nswitch (G__116) {\ncase (1):\nreturn clojure.test.check.generators.sample_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase (2):\nreturn clojure.test.check.generators.sample_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args114.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.sample_seq.cljs$core$IFn$_invoke$arity$1 = (function (generator){\nreturn clojure.test.check.generators.sample_seq.call(null,generator,(200));\n});\n\nclojure.test.check.generators.sample_seq.cljs$core$IFn$_invoke$arity$2 = (function (generator,max_size){\nvar r = clojure.test.check.random.make_random.call(null);\nvar size_seq = clojure.test.check.generators.make_size_range_seq.call(null,max_size);\nreturn cljs.core.map.call(null,((function (r,size_seq){\nreturn (function (p1__10_SHARP_,p2__11_SHARP_){\nreturn clojure.test.check.rose_tree.root.call(null,clojure.test.check.generators.call_gen.call(null,generator,p1__10_SHARP_,p2__11_SHARP_));\n});})(r,size_seq))\n,clojure.test.check.generators.lazy_random_states.call(null,r),size_seq);\n});\n\nclojure.test.check.generators.sample_seq.cljs$lang$maxFixedArity = (2);\n\n/**\n * Return a sequence of `num-samples` (default 10)\n *   realized values from `generator`.\n * \n *   The sequence starts with small values from the generator, which\n *   probably do not reflect the variety of values that will be generated\n *   during a longer test run.\n * \n *   Note that this function is a dev helper and is not meant to be used\n *   to build other generators.\n */\nclojure.test.check.generators.sample = (function clojure$test$check$generators$sample(var_args){\nvar args121 = [];\nvar len__21020__auto___124 = arguments.length;\nvar i__21021__auto___125 = (0);\nwhile(true){\nif((i__21021__auto___125 < len__21020__auto___124)){\nargs121.push((arguments[i__21021__auto___125]));\n\nvar G__126 = (i__21021__auto___125 + (1));\ni__21021__auto___125 = G__126;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__123 = args121.length;\nswitch (G__123) {\ncase (1):\nreturn clojure.test.check.generators.sample.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase (2):\nreturn clojure.test.check.generators.sample.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args121.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.sample.cljs$core$IFn$_invoke$arity$1 = (function (generator){\nreturn clojure.test.check.generators.sample.call(null,generator,(10));\n});\n\nclojure.test.check.generators.sample.cljs$core$IFn$_invoke$arity$2 = (function (generator,num_samples){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,generator))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to sample must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? generator)\")].join('')));\n}\n\nreturn cljs.core.take.call(null,num_samples,clojure.test.check.generators.sample_seq.call(null,generator));\n});\n\nclojure.test.check.generators.sample.cljs$lang$maxFixedArity = (2);\n\n/**\n * Returns a single sample value from the generator.\n * \n *   Note that this function is a dev helper and is not meant to be used\n *   to build other generators.\n * \n *   Optional args:\n * \n *   - size: the abstract size parameter, defaults to 30\n *   - seed: the seed for the random number generator, an integer\n */\nclojure.test.check.generators.generate = (function clojure$test$check$generators$generate(var_args){\nvar args128 = [];\nvar len__21020__auto___131 = arguments.length;\nvar i__21021__auto___132 = (0);\nwhile(true){\nif((i__21021__auto___132 < len__21020__auto___131)){\nargs128.push((arguments[i__21021__auto___132]));\n\nvar G__133 = (i__21021__auto___132 + (1));\ni__21021__auto___132 = G__133;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__130 = args128.length;\nswitch (G__130) {\ncase (1):\nreturn clojure.test.check.generators.generate.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase (2):\nreturn clojure.test.check.generators.generate.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn clojure.test.check.generators.generate.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args128.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.generate.cljs$core$IFn$_invoke$arity$1 = (function (generator){\nreturn clojure.test.check.generators.generate.call(null,generator,(30));\n});\n\nclojure.test.check.generators.generate.cljs$core$IFn$_invoke$arity$2 = (function (generator,size){\nvar rng = clojure.test.check.random.make_random.call(null);\nreturn clojure.test.check.rose_tree.root.call(null,clojure.test.check.generators.call_gen.call(null,generator,rng,size));\n});\n\nclojure.test.check.generators.generate.cljs$core$IFn$_invoke$arity$3 = (function (generator,size,seed){\nvar rng = clojure.test.check.random.make_random.call(null,seed);\nreturn clojure.test.check.rose_tree.root.call(null,clojure.test.check.generators.call_gen.call(null,generator,rng,size));\n});\n\nclojure.test.check.generators.generate.cljs$lang$maxFixedArity = (3);\n\nclojure.test.check.generators.halfs = (function clojure$test$check$generators$halfs(n){\nreturn cljs.core.take_while.call(null,(function (p1__12_SHARP_){\nreturn cljs.core.not_EQ_.call(null,(0),p1__12_SHARP_);\n}),cljs.core.iterate.call(null,(function (p1__13_SHARP_){\nreturn cljs.core.quot.call(null,p1__13_SHARP_,(2));\n}),n));\n});\nclojure.test.check.generators.shrink_int = (function clojure$test$check$generators$shrink_int(integer){\nreturn cljs.core.map.call(null,(function (p1__14_SHARP_){\nreturn (integer - p1__14_SHARP_);\n}),clojure.test.check.generators.halfs.call(null,integer));\n});\nclojure.test.check.generators.int_rose_tree = (function clojure$test$check$generators$int_rose_tree(value){\nreturn clojure.test.check.rose_tree.make_rose.call(null,value,cljs.core.map.call(null,clojure.test.check.generators.int_rose_tree,clojure.test.check.generators.shrink_int.call(null,value)));\n});\nclojure.test.check.generators.calc_long = (function clojure$test$check$generators$calc_long(factor,lower,upper){\nreturn cljs.core.long$.call(null,Math.floor((lower + ((factor * ((1) + upper)) - (factor * lower)))));\n});\nclojure.test.check.generators.rand_range = (function clojure$test$check$generators$rand_range(rnd,lower,upper){\nif((lower <= upper)){\n} else {\nthrow (new Error(\"Assert failed: (<= lower upper)\"));\n}\n\nreturn clojure.test.check.generators.calc_long.call(null,clojure.test.check.random.rand_double.call(null,rnd),lower,upper);\n});\n/**\n * Create a generator that depends on the size parameter.\n *   `sized-gen` is a function that takes an integer and returns\n *   a generator.\n * \n *    TODO: example\n */\nclojure.test.check.generators.sized = (function clojure$test$check$generators$sized(sized_gen){\nreturn clojure.test.check.generators.make_gen.call(null,(function (rnd,size){\nvar sized_gen__$1 = sized_gen.call(null,size);\nreturn clojure.test.check.generators.call_gen.call(null,sized_gen__$1,rnd,size);\n}));\n});\n/**\n * Create a new generator with `size` always bound to `n`.\n * \n *    (gen/sample (gen/set (gen/resize 200 gen/double)))\n *    => (#{}\n *        #{-4.994772362980037E147}\n *        #{-4.234418056487335E-146}\n *        #{}\n *        #{}\n *        #{}\n *        #{NaN}\n *        #{8.142414100982609E-63}\n *        #{-3.58429955903876E-159 2.8563794617604296E-154\n *          4.1021360195776005E-100 1.9084564045332549E-38}\n *        #{-2.1582818131881376E83 -5.8460065493236117E48 9.729260993803226E166})\n */\nclojure.test.check.generators.resize = (function clojure$test$check$generators$resize(n,generator){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,generator))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Second arg to resize must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? generator)\")].join('')));\n}\n\nvar map__137 = generator;\nvar map__137__$1 = ((((!((map__137 == null)))?((((map__137.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__137.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__137):map__137);\nvar gen = cljs.core.get.call(null,map__137__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)));\nreturn clojure.test.check.generators.make_gen.call(null,((function (map__137,map__137__$1,gen){\nreturn (function (rnd,_size){\nreturn gen.call(null,rnd,n);\n});})(map__137,map__137__$1,gen))\n);\n});\n/**\n * Create a new generator that modifies the size parameter by the\n *   given function. Intended to support generators with sizes that need\n *   to grow at different rates compared to the normal linear scaling.\n * \n *    (gen/sample (gen/tuple (gen/scale #(/ % 10) gen/nat)\n *                           gen/nat\n *                           (gen/scale #(* % 10) gen/nat)))\n *    => ([0 0 0]  [0 1 2]  [0 2 13] [0 1 6]  [0 1 23]\n *        [0 2 42] [0 1 26] [0 1 12] [0 1 12] [0 0 3])\n */\nclojure.test.check.generators.scale = (function clojure$test$check$generators$scale(f,generator){\nreturn clojure.test.check.generators.sized.call(null,(function (n){\nreturn clojure.test.check.generators.resize.call(null,f.call(null,n),generator);\n}));\n});\n/**\n * Create a generator that returns integer numbers in the range\n *   `lower` to `upper`, inclusive.\n * \n *       (gen/sample (gen/choose 200 800))\n *       => (331 241 593 339 643 718 688 473 247 694)\n */\nclojure.test.check.generators.choose = (function clojure$test$check$generators$choose(lower,upper){\nreturn clojure.test.check.generators.make_gen.call(null,(function (rnd,_size){\nvar value = clojure.test.check.generators.rand_range.call(null,rnd,lower,upper);\nreturn clojure.test.check.rose_tree.filter.call(null,((function (value){\nreturn (function (p1__15_SHARP_){\nreturn ((p1__15_SHARP_ >= lower)) && ((p1__15_SHARP_ <= upper));\n});})(value))\n,clojure.test.check.generators.int_rose_tree.call(null,value));\n}));\n});\n/**\n * Create a generator that randomly chooses a value from the list of\n *   provided generators. Shrinks toward choosing an earlier generator,\n *   as well as shrinking the value generated by the chosen generator.\n * \n *    (gen/sample (gen/one-of [gen/int gen/boolean (gen/vector gen/int)]))\n *    => (true [] -1 [0] [1 -4 -4 1] true 4 [] 6 true)\n */\nclojure.test.check.generators.one_of = (function clojure$test$check$generators$one_of(generators){\nif(cljs.core.every_QMARK_.call(null,clojure.test.check.generators.generator_QMARK_,generators)){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Arg to one-of must be a collection of generators\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(every? generator? generators)\")].join('')));\n}\n\nif(cljs.core.seq.call(null,generators)){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"one-of cannot be called with an empty collection\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(seq generators)\")].join('')));\n}\n\nreturn clojure.test.check.generators.bind.call(null,clojure.test.check.generators.choose.call(null,(0),(cljs.core.count.call(null,generators) - (1))),(function (p1__16_SHARP_){\nreturn cljs.core.nth.call(null,generators,p1__16_SHARP_);\n}));\n});\n/**\n * Returns an index into the `likelihoods` sequence.\n */\nclojure.test.check.generators.pick = (function clojure$test$check$generators$pick(likelihoods,n){\nreturn cljs.core.count.call(null,cljs.core.take_while.call(null,(function (p1__17_SHARP_){\nreturn (p1__17_SHARP_ <= n);\n}),cljs.core.rest.call(null,cljs.core.reductions.call(null,cljs.core._PLUS_,(0),likelihoods))));\n});\n/**\n * Create a generator that chooses a generator from `pairs` based on the\n *   provided likelihoods. The likelihood of a given generator being chosen is\n *   its likelihood divided by the sum of all likelihoods. Shrinks toward\n *   choosing an earlier generator, as well as shrinking the value generated\n *   by the chosen generator.\n * \n *   Examples:\n * \n *    (gen/sample (gen/frequency [[5 gen/int] [3 (gen/vector gen/int)] [2 gen/boolean]]))\n *    => (true [] -1 [0] [1 -4 -4 1] true 4 [] 6 true)\n */\nclojure.test.check.generators.frequency = (function clojure$test$check$generators$frequency(pairs){\nif(cljs.core.every_QMARK_.call(null,(function (p__147){\nvar vec__148 = p__147;\nvar x = cljs.core.nth.call(null,vec__148,(0),null);\nvar g = cljs.core.nth.call(null,vec__148,(1),null);\nvar and__19647__auto__ = typeof x === 'number';\nif(and__19647__auto__){\nreturn clojure.test.check.generators.generator_QMARK_.call(null,g);\n} else {\nreturn and__19647__auto__;\n}\n}),pairs)){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Arg to frequency must be a list of [num generator] pairs\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(every? (fn [[x g]] (and (number? x) (generator? g))) pairs)\")].join('')));\n}\n\nif(cljs.core.seq.call(null,pairs)){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"frequency cannot be called with an empty collection\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(seq pairs)\")].join('')));\n}\n\nvar total = cljs.core.apply.call(null,cljs.core._PLUS_,cljs.core.map.call(null,cljs.core.first,pairs));\nreturn clojure.test.check.generators.make_gen.call(null,((function (total){\nreturn (function (rnd,size){\nreturn clojure.test.check.generators.call_gen.call(null,clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.choose.call(null,(0),(total - (1))),((function (total){\nreturn (function (x){\nvar idx = clojure.test.check.generators.pick.call(null,cljs.core.map.call(null,cljs.core.first,pairs),clojure.test.check.rose_tree.root.call(null,x));\nreturn clojure.test.check.generators.gen_fmap.call(null,((function (idx,total){\nreturn (function (rose){\nreturn clojure.test.check.rose_tree.make_rose.call(null,clojure.test.check.rose_tree.root.call(null,rose),(new cljs.core.LazySeq(null,((function (idx,total){\nreturn (function (){\nreturn cljs.core.concat.call(null,(function (){var iter__20525__auto__ = ((function (idx,total){\nreturn (function clojure$test$check$generators$frequency_$_iter__151(s__152){\nreturn (new cljs.core.LazySeq(null,((function (idx,total){\nreturn (function (){\nvar s__152__$1 = s__152;\nwhile(true){\nvar temp__19472__auto__ = cljs.core.seq.call(null,s__152__$1);\nif(temp__19472__auto__){\nvar s__152__$2 = temp__19472__auto__;\nif(cljs.core.chunked_seq_QMARK_.call(null,s__152__$2)){\nvar c__20523__auto__ = cljs.core.chunk_first.call(null,s__152__$2);\nvar size__20524__auto__ = cljs.core.count.call(null,c__20523__auto__);\nvar b__154 = cljs.core.chunk_buffer.call(null,size__20524__auto__);\nif((function (){var i__153 = (0);\nwhile(true){\nif((i__153 < size__20524__auto__)){\nvar idx__$1 = cljs.core._nth.call(null,c__20523__auto__,i__153);\ncljs.core.chunk_append.call(null,b__154,clojure.test.check.generators.call_gen.call(null,cljs.core.second.call(null,cljs.core.nth.call(null,pairs,idx__$1)),rnd,size));\n\nvar G__155 = (i__153 + (1));\ni__153 = G__155;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__154),clojure$test$check$generators$frequency_$_iter__151.call(null,cljs.core.chunk_rest.call(null,s__152__$2)));\n} else {\nreturn cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__154),null);\n}\n} else {\nvar idx__$1 = cljs.core.first.call(null,s__152__$2);\nreturn cljs.core.cons.call(null,clojure.test.check.generators.call_gen.call(null,cljs.core.second.call(null,cljs.core.nth.call(null,pairs,idx__$1)),rnd,size),clojure$test$check$generators$frequency_$_iter__151.call(null,cljs.core.rest.call(null,s__152__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(idx,total))\n,null,null));\n});})(idx,total))\n;\nreturn iter__20525__auto__.call(null,cljs.core.range.call(null,idx));\n})(),clojure.test.check.rose_tree.children.call(null,rose));\n});})(idx,total))\n,null,null)));\n});})(idx,total))\n,cljs.core.second.call(null,cljs.core.nth.call(null,pairs,idx)));\n});})(total))\n),rnd,size);\n});})(total))\n);\n});\n/**\n * Create a generator that randomly chooses an element from `coll`.\n * \n *    (gen/sample (gen/elements [:foo :bar :baz]))\n *    => (:foo :baz :baz :bar :foo :foo :bar :bar :foo :bar)\n */\nclojure.test.check.generators.elements = (function clojure$test$check$generators$elements(coll){\nif(cljs.core.seq.call(null,coll)){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"elements cannot be called with an empty collection\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(seq coll)\")].join('')));\n}\n\nvar v = cljs.core.vec.call(null,coll);\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.choose.call(null,(0),(cljs.core.count.call(null,v) - (1))),((function (v){\nreturn (function (p1__18_SHARP_){\nreturn clojure.test.check.generators.gen_pure.call(null,clojure.test.check.rose_tree.fmap.call(null,v,p1__18_SHARP_));\n});})(v))\n);\n});\nclojure.test.check.generators.such_that_helper = (function clojure$test$check$generators$such_that_helper(pred,gen,p__156,rng,size){\nvar map__162 = p__156;\nvar map__162__$1 = ((((!((map__162 == null)))?((((map__162.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__162.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__162):map__162);\nvar ex_fn = cljs.core.get.call(null,map__162__$1,new cljs.core.Keyword(null,\"ex-fn\",\"ex-fn\",(-284925510)));\nvar max_tries = cljs.core.get.call(null,map__162__$1,new cljs.core.Keyword(null,\"max-tries\",\"max-tries\",(-1824441792)));\nvar tries_left = max_tries;\nvar rng__$1 = rng;\nvar size__$1 = size;\nwhile(true){\nif((tries_left === (0))){\nthrow ex_fn.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"pred\",\"pred\",(1927423397)),pred,new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)),gen,new cljs.core.Keyword(null,\"max-tries\",\"max-tries\",(-1824441792)),max_tries], null));\n} else {\nvar vec__164 = clojure.test.check.random.split.call(null,rng__$1);\nvar r1 = cljs.core.nth.call(null,vec__164,(0),null);\nvar r2 = cljs.core.nth.call(null,vec__164,(1),null);\nvar value = clojure.test.check.generators.call_gen.call(null,gen,r1,size__$1);\nif(cljs.core.truth_(pred.call(null,clojure.test.check.rose_tree.root.call(null,value)))){\nreturn clojure.test.check.rose_tree.filter.call(null,pred,value);\n} else {\nvar G__167 = (tries_left - (1));\nvar G__168 = r2;\nvar G__169 = (size__$1 + (1));\ntries_left = G__167;\nrng__$1 = G__168;\nsize__$1 = G__169;\ncontinue;\n}\n}\nbreak;\n}\n});\nclojure.test.check.generators.default_such_that_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ex-fn\",\"ex-fn\",(-284925510)),(function (p__170){\nvar map__171 = p__170;\nvar map__171__$1 = ((((!((map__171 == null)))?((((map__171.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__171.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__171):map__171);\nvar arg = map__171__$1;\nvar max_tries = cljs.core.get.call(null,map__171__$1,new cljs.core.Keyword(null,\"max-tries\",\"max-tries\",(-1824441792)));\nreturn cljs.core.ex_info.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Couldn't satisfy such-that predicate after \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(max_tries),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\" tries.\")].join(''),arg);\n}),new cljs.core.Keyword(null,\"max-tries\",\"max-tries\",(-1824441792)),(10)], null);\n/**\n * Create a generator that generates values from `gen` that satisfy predicate\n *   `pred`. Care is needed to ensure there is a high chance `gen` will satisfy\n *   `pred`. By default, `such-that` will try 10 times to generate a value that\n *   satisfies the predicate. If no value passes this predicate after this number\n *   of iterations, a runtime exception will be thrown. Note also that each\n *   time such-that retries, it will increase the size parameter.\n * \n *   Examples:\n * \n *    ;; generate non-empty vectors of integers\n *    ;; (note, gen/not-empty does exactly this)\n *    (gen/such-that not-empty (gen/vector gen/int))\n * \n *   You can customize `such-that` by passing an optional third argument, which can\n *   either be an integer representing the maximum number of times test.check\n *   will try to generate a value matching the predicate, or a map:\n * \n *    :max-tries  positive integer, the maximum number of tries (default 10)\n *    :ex-fn      a function of one arg that will be called if test.check cannot\n *                generate a matching value; it will be passed a map with `:gen`,\n *                `:pred`, and `:max-tries` and should return an exception\n */\nclojure.test.check.generators.such_that = (function clojure$test$check$generators$such_that(var_args){\nvar args173 = [];\nvar len__21020__auto___176 = arguments.length;\nvar i__21021__auto___177 = (0);\nwhile(true){\nif((i__21021__auto___177 < len__21020__auto___176)){\nargs173.push((arguments[i__21021__auto___177]));\n\nvar G__178 = (i__21021__auto___177 + (1));\ni__21021__auto___177 = G__178;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__175 = args173.length;\nswitch (G__175) {\ncase (2):\nreturn clojure.test.check.generators.such_that.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn clojure.test.check.generators.such_that.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args173.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.such_that.cljs$core$IFn$_invoke$arity$2 = (function (pred,gen){\nreturn clojure.test.check.generators.such_that.call(null,pred,gen,(10));\n});\n\nclojure.test.check.generators.such_that.cljs$core$IFn$_invoke$arity$3 = (function (pred,gen,max_tries_or_opts){\nvar opts = ((cljs.core.integer_QMARK_.call(null,max_tries_or_opts))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"max-tries\",\"max-tries\",(-1824441792)),max_tries_or_opts], null):((cljs.core.map_QMARK_.call(null,max_tries_or_opts))?max_tries_or_opts:(function(){throw cljs.core.ex_info.call(null,\"Bad argument to such-that!\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"max-tries-or-opts\",\"max-tries-or-opts\",(-609860571)),max_tries_or_opts], null))})()\n));\nvar opts__$1 = cljs.core.merge.call(null,clojure.test.check.generators.default_such_that_opts,opts);\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Second arg to such-that must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.make_gen.call(null,((function (opts,opts__$1){\nreturn (function (rand_seed,size){\nreturn clojure.test.check.generators.such_that_helper.call(null,pred,gen,opts__$1,rand_seed,size);\n});})(opts,opts__$1))\n);\n});\n\nclojure.test.check.generators.such_that.cljs$lang$maxFixedArity = (3);\n\n/**\n * Modifies a generator so that it doesn't generate empty collections.\n * \n *   Examples:\n * \n *    ;; generate a vector of booleans, but never the empty vector\n *    (gen/sample (gen/not-empty (gen/vector gen/boolean)))\n *    => ([false]\n *        [false false]\n *        [false false]\n *        [false false false]\n *        [false false false false]\n *        [false true true]\n *        [true false false false]\n *        [true]\n *        [true true true false false true false]\n *        [false true true true false true true true false])\n */\nclojure.test.check.generators.not_empty = (function clojure$test$check$generators$not_empty(gen){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Arg to not-empty must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.such_that.call(null,cljs.core.not_empty,gen);\n});\n/**\n * Create a new generator that is just like `gen`, except does not shrink\n *   at all. This can be useful when shrinking is taking a long time or is not\n *   applicable to the domain.\n */\nclojure.test.check.generators.no_shrink = (function clojure$test$check$generators$no_shrink(gen){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Arg to no-shrink must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.gen_bind.call(null,gen,(function (rose){\nreturn clojure.test.check.generators.gen_pure.call(null,clojure.test.check.rose_tree.make_rose.call(null,clojure.test.check.rose_tree.root.call(null,rose),cljs.core.PersistentVector.EMPTY));\n}));\n});\n/**\n * Create a new generator like `gen`, but will consider nodes for shrinking\n *   even if their parent passes the test (up to one additional level).\n */\nclojure.test.check.generators.shrink_2 = (function clojure$test$check$generators$shrink_2(gen){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Arg to shrink-2 must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.gen_bind.call(null,gen,cljs.core.comp.call(null,clojure.test.check.generators.gen_pure,clojure.test.check.rose_tree.collapse));\n});\n/**\n * Generates one of `true` or `false`. Shrinks to `false`.\n */\nclojure.test.check.generators.boolean$ = clojure.test.check.generators.elements.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,true], null));\n/**\n * Create a generator that returns a vector, whose elements are chosen\n *   from the generators in the same position. The individual elements shrink\n *   according to their generator, but the value will never shrink in count.\n * \n *   Examples:\n * \n *    (def t (tuple gen/int gen/boolean))\n *    (sample t)\n *    ;; => ([1 true] [2 true] [2 false] [1 false] [0 true] [-2 false] [-6 false]\n *    ;; =>  [3 true] [-4 false] [9 true]))\n */\nclojure.test.check.generators.tuple = (function clojure$test$check$generators$tuple(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___181 = arguments.length;\nvar i__21021__auto___182 = (0);\nwhile(true){\nif((i__21021__auto___182 < len__21020__auto___181)){\nargs__21023__auto__.push((arguments[i__21021__auto___182]));\n\nvar G__183 = (i__21021__auto___182 + (1));\ni__21021__auto___182 = G__183;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((0) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((0)),(0),null)):null);\nreturn clojure.test.check.generators.tuple.cljs$core$IFn$_invoke$arity$variadic(argseq__21024__auto__);\n});\n\nclojure.test.check.generators.tuple.cljs$core$IFn$_invoke$arity$variadic = (function (generators){\nif(cljs.core.every_QMARK_.call(null,clojure.test.check.generators.generator_QMARK_,generators)){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Args to tuple must be generators\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(every? generator? generators)\")].join('')));\n}\n\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.gen_tuple.call(null,generators),(function (roses){\nreturn clojure.test.check.generators.gen_pure.call(null,clojure.test.check.rose_tree.zip.call(null,cljs.core.vector,roses));\n}));\n});\n\nclojure.test.check.generators.tuple.cljs$lang$maxFixedArity = (0);\n\nclojure.test.check.generators.tuple.cljs$lang$applyTo = (function (seq180){\nreturn clojure.test.check.generators.tuple.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null,seq180));\n});\n\n/**\n * Generates a positive or negative integer bounded by the generator's\n *   `size` parameter.\n */\nclojure.test.check.generators.int$ = clojure.test.check.generators.sized.call(null,(function (size){\nreturn clojure.test.check.generators.choose.call(null,(- size),size);\n}));\n/**\n * Generates non-negative integers bounded by the generator's `size`\n *   parameter. Shrinks to zero.\n */\nclojure.test.check.generators.nat = clojure.test.check.generators.fmap.call(null,(function (p1__19_SHARP_){\nreturn Math.abs(cljs.core.long$.call(null,p1__19_SHARP_));\n}),clojure.test.check.generators.int$);\n/**\n * Generate positive integers bounded by the generator's `size` parameter.\n */\nclojure.test.check.generators.pos_int = clojure.test.check.generators.nat;\n/**\n * Generate negative integers bounded by the generator's `size` parameter.\n */\nclojure.test.check.generators.neg_int = clojure.test.check.generators.fmap.call(null,(function (p1__20_SHARP_){\nreturn ((-1) * p1__20_SHARP_);\n}),clojure.test.check.generators.nat);\n/**\n * Generate strictly positive integers bounded by the generator's `size` + 1\n */\nclojure.test.check.generators.s_pos_int = clojure.test.check.generators.fmap.call(null,cljs.core.inc,clojure.test.check.generators.nat);\n/**\n * Generate strictly negative integers bounded by the generator's `size` + 1\n */\nclojure.test.check.generators.s_neg_int = clojure.test.check.generators.fmap.call(null,cljs.core.dec,clojure.test.check.generators.neg_int);\n/**\n * Create a generator of vectors whose elements are chosen from\n *   `generator`. The count of the vector will be bounded by the `size`\n *   generator parameter.\n */\nclojure.test.check.generators.vector = (function clojure$test$check$generators$vector(var_args){\nvar args184 = [];\nvar len__21020__auto___187 = arguments.length;\nvar i__21021__auto___188 = (0);\nwhile(true){\nif((i__21021__auto___188 < len__21020__auto___187)){\nargs184.push((arguments[i__21021__auto___188]));\n\nvar G__189 = (i__21021__auto___188 + (1));\ni__21021__auto___188 = G__189;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__186 = args184.length;\nswitch (G__186) {\ncase (1):\nreturn clojure.test.check.generators.vector.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase (2):\nreturn clojure.test.check.generators.vector.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn clojure.test.check.generators.vector.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args184.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.vector.cljs$core$IFn$_invoke$arity$1 = (function (generator){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,generator))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Arg to vector must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? generator)\")].join('')));\n}\n\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.sized.call(null,(function (p1__21_SHARP_){\nreturn clojure.test.check.generators.choose.call(null,(0),p1__21_SHARP_);\n})),(function (num_elements_rose){\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.gen_tuple.call(null,cljs.core.repeat.call(null,clojure.test.check.rose_tree.root.call(null,num_elements_rose),generator)),(function (roses){\nreturn clojure.test.check.generators.gen_pure.call(null,clojure.test.check.rose_tree.shrink_vector.call(null,cljs.core.vector,roses));\n}));\n}));\n});\n\nclojure.test.check.generators.vector.cljs$core$IFn$_invoke$arity$2 = (function (generator,num_elements){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,generator))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to vector must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? generator)\")].join('')));\n}\n\nreturn cljs.core.apply.call(null,clojure.test.check.generators.tuple,cljs.core.repeat.call(null,num_elements,generator));\n});\n\nclojure.test.check.generators.vector.cljs$core$IFn$_invoke$arity$3 = (function (generator,min_elements,max_elements){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,generator))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to vector must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? generator)\")].join('')));\n}\n\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.choose.call(null,min_elements,max_elements),(function (num_elements_rose){\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.gen_tuple.call(null,cljs.core.repeat.call(null,clojure.test.check.rose_tree.root.call(null,num_elements_rose),generator)),(function (roses){\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.gen_pure.call(null,clojure.test.check.rose_tree.shrink_vector.call(null,cljs.core.vector,roses)),(function (rose){\nreturn clojure.test.check.generators.gen_pure.call(null,clojure.test.check.rose_tree.filter.call(null,(function (v){\nreturn ((cljs.core.count.call(null,v) >= min_elements)) && ((cljs.core.count.call(null,v) <= max_elements));\n}),rose));\n}));\n}));\n}));\n});\n\nclojure.test.check.generators.vector.cljs$lang$maxFixedArity = (3);\n\n/**\n * Like `vector`, but generates lists.\n */\nclojure.test.check.generators.list = (function clojure$test$check$generators$list(generator){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,generator))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to list must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? generator)\")].join('')));\n}\n\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.sized.call(null,(function (p1__22_SHARP_){\nreturn clojure.test.check.generators.choose.call(null,(0),p1__22_SHARP_);\n})),(function (num_elements_rose){\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.gen_tuple.call(null,cljs.core.repeat.call(null,clojure.test.check.rose_tree.root.call(null,num_elements_rose),generator)),(function (roses){\nreturn clojure.test.check.generators.gen_pure.call(null,clojure.test.check.rose_tree.shrink_vector.call(null,cljs.core.list,roses));\n}));\n}));\n});\nclojure.test.check.generators.swap = (function clojure$test$check$generators$swap(coll,p__191){\nvar vec__195 = p__191;\nvar i1 = cljs.core.nth.call(null,vec__195,(0),null);\nvar i2 = cljs.core.nth.call(null,vec__195,(1),null);\nreturn cljs.core.assoc.call(null,coll,i2,coll.call(null,i1),i1,coll.call(null,i2));\n});\n/**\n * Create a generator that generates random permutations of\n *   `coll`. Shrinks toward the original collection: `coll`. `coll` will\n *   be coerced to a vector.\n */\nclojure.test.check.generators.shuffle = (function clojure$test$check$generators$shuffle(coll){\nvar coll__$1 = ((cljs.core.vector_QMARK_.call(null,coll))?coll:cljs.core.vec.call(null,coll));\nvar index_gen = clojure.test.check.generators.choose.call(null,(0),(cljs.core.count.call(null,coll__$1) - (1)));\nreturn clojure.test.check.generators.fmap.call(null,((function (coll__$1,index_gen){\nreturn (function (p1__23_SHARP_){\nreturn cljs.core.reduce.call(null,clojure.test.check.generators.swap,coll__$1,p1__23_SHARP_);\n});})(coll__$1,index_gen))\n,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.tuple.call(null,index_gen,index_gen),(0),((2) * cljs.core.count.call(null,coll__$1))));\n});\n/**\n * Like clojure.core/hash-map, except the values are generators.\n * Returns a generator that makes maps with the supplied keys and\n * values generated using the supplied generators.\n * \n *     (gen/sample (gen/hash-map :a gen/boolean :b gen/nat))\n *     => ({:a false, :b 0}\n *         {:a true,  :b 1}\n *         {:a false, :b 2}\n *         {:a true,  :b 2}\n *         {:a false, :b 4}\n *         {:a false, :b 2}\n *         {:a true,  :b 3}\n *         {:a true,  :b 4}\n *         {:a false, :b 1}\n *         {:a false, :b 0})\n */\nclojure.test.check.generators.hash_map = (function clojure$test$check$generators$hash_map(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___199 = arguments.length;\nvar i__21021__auto___200 = (0);\nwhile(true){\nif((i__21021__auto___200 < len__21020__auto___199)){\nargs__21023__auto__.push((arguments[i__21021__auto___200]));\n\nvar G__201 = (i__21021__auto___200 + (1));\ni__21021__auto___200 = G__201;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((0) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((0)),(0),null)):null);\nreturn clojure.test.check.generators.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__21024__auto__);\n});\n\nclojure.test.check.generators.hash_map.cljs$core$IFn$_invoke$arity$variadic = (function (kvs){\nif(cljs.core.even_QMARK_.call(null,cljs.core.count.call(null,kvs))){\n} else {\nthrow (new Error(\"Assert failed: (even? (count kvs))\"));\n}\n\nvar ks = cljs.core.take_nth.call(null,(2),kvs);\nvar vs = cljs.core.take_nth.call(null,(2),cljs.core.rest.call(null,kvs));\nif(cljs.core.every_QMARK_.call(null,clojure.test.check.generators.generator_QMARK_,vs)){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Value args to hash-map must be generators\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(every? generator? vs)\")].join('')));\n}\n\nreturn clojure.test.check.generators.fmap.call(null,((function (ks,vs){\nreturn (function (p1__24_SHARP_){\nreturn cljs.core.zipmap.call(null,ks,p1__24_SHARP_);\n});})(ks,vs))\n,cljs.core.apply.call(null,clojure.test.check.generators.tuple,vs));\n});\n\nclojure.test.check.generators.hash_map.cljs$lang$maxFixedArity = (0);\n\nclojure.test.check.generators.hash_map.cljs$lang$applyTo = (function (seq198){\nreturn clojure.test.check.generators.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null,seq198));\n});\n\nclojure.test.check.generators.transient_set_contains_QMARK_ = (function clojure$test$check$generators$transient_set_contains_QMARK_(s,k){\nreturn !((cljs.core._lookup.call(null,s,k) == null));\n});\n/**\n * Returns a rose tree.\n */\nclojure.test.check.generators.coll_distinct_by_STAR_ = (function clojure$test$check$generators$coll_distinct_by_STAR_(empty_coll,key_fn,shuffle_fn,gen,rng,size,num_elements,min_elements,max_tries,ex_fn){\nif(cljs.core.truth_(gen)){\n} else {\nthrow (new Error(\"Assert failed: gen\"));\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)).cljs$core$IFn$_invoke$arity$1(gen))){\n} else {\nthrow (new Error(\"Assert failed: (:gen gen)\"));\n}\n\nvar rose_trees = cljs.core.transient$.call(null,cljs.core.PersistentVector.EMPTY);\nvar s = cljs.core.transient$.call(null,cljs.core.PersistentHashSet.EMPTY);\nvar rng__$1 = rng;\nvar size__$1 = size;\nvar tries = (0);\nwhile(true){\nif((cljs.core._EQ_.call(null,max_tries,tries)) && ((cljs.core.count.call(null,rose_trees) < min_elements))){\nthrow ex_fn.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"gen\",\"gen\",(142575302)),gen,new cljs.core.Keyword(null,\"max-tries\",\"max-tries\",(-1824441792)),max_tries,new cljs.core.Keyword(null,\"num-elements\",\"num-elements\",(1960422107)),num_elements], null));\n} else {\nif((cljs.core._EQ_.call(null,max_tries,tries)) || (cljs.core._EQ_.call(null,cljs.core.count.call(null,rose_trees),num_elements))){\nreturn clojure.test.check.rose_tree.shrink_vector.call(null,((function (rose_trees,s,rng__$1,size__$1,tries){\nreturn (function() { \nvar G__208__delegate = function (rest__25_SHARP_){\nreturn cljs.core.into.call(null,empty_coll,rest__25_SHARP_);\n};\nvar G__208 = function (var_args){\nvar rest__25_SHARP_ = null;\nif (arguments.length > 0) {\nvar G__209__i = 0, G__209__a = new Array(arguments.length -  0);\nwhile (G__209__i < G__209__a.length) {G__209__a[G__209__i] = arguments[G__209__i + 0]; ++G__209__i;}\n  rest__25_SHARP_ = new cljs.core.IndexedSeq(G__209__a,0,null);\n} \nreturn G__208__delegate.call(this,rest__25_SHARP_);};\nG__208.cljs$lang$maxFixedArity = 0;\nG__208.cljs$lang$applyTo = (function (arglist__210){\nvar rest__25_SHARP_ = cljs.core.seq(arglist__210);\nreturn G__208__delegate(rest__25_SHARP_);\n});\nG__208.cljs$core$IFn$_invoke$arity$variadic = G__208__delegate;\nreturn G__208;\n})()\n;})(rose_trees,s,rng__$1,size__$1,tries))\n,shuffle_fn.call(null,rng__$1,cljs.core.persistent_BANG_.call(null,rose_trees)));\n} else {\nvar vec__205 = clojure.test.check.random.split.call(null,rng__$1);\nvar rng1 = cljs.core.nth.call(null,vec__205,(0),null);\nvar rng2 = cljs.core.nth.call(null,vec__205,(1),null);\nvar rose = clojure.test.check.generators.call_gen.call(null,gen,rng1,size__$1);\nvar root = clojure.test.check.rose_tree.root.call(null,rose);\nvar k = key_fn.call(null,root);\nif(cljs.core.truth_(clojure.test.check.generators.transient_set_contains_QMARK_.call(null,s,k))){\nvar G__211 = rose_trees;\nvar G__212 = s;\nvar G__213 = rng2;\nvar G__214 = (size__$1 + (1));\nvar G__215 = (tries + (1));\nrose_trees = G__211;\ns = G__212;\nrng__$1 = G__213;\nsize__$1 = G__214;\ntries = G__215;\ncontinue;\n} else {\nvar G__216 = cljs.core.conj_BANG_.call(null,rose_trees,rose);\nvar G__217 = cljs.core.conj_BANG_.call(null,s,k);\nvar G__218 = rng2;\nvar G__219 = size__$1;\nvar G__220 = (0);\nrose_trees = G__216;\ns = G__217;\nrng__$1 = G__218;\nsize__$1 = G__219;\ntries = G__220;\ncontinue;\n}\n\n}\n}\nbreak;\n}\n});\n/**\n * Like clojure.core/distinct? but takes a collection instead of varargs,\n *   and returns true for empty collections.\n */\nclojure.test.check.generators.distinct_by_QMARK_ = (function clojure$test$check$generators$distinct_by_QMARK_(f,coll){\nvar or__19662__auto__ = cljs.core.empty_QMARK_.call(null,coll);\nif(or__19662__auto__){\nreturn or__19662__auto__;\n} else {\nreturn cljs.core.apply.call(null,cljs.core.distinct_QMARK_,cljs.core.map.call(null,f,coll));\n}\n});\n/**\n * Returns a shuffled version of coll according to the rng.\n * \n *   Note that this is not a generator, it is just a utility function.\n */\nclojure.test.check.generators.the_shuffle_fn = (function clojure$test$check$generators$the_shuffle_fn(rng,coll){\nvar empty_coll = cljs.core.empty.call(null,coll);\nvar v = cljs.core.vec.call(null,coll);\nvar card = cljs.core.count.call(null,coll);\nvar dec_card = (card - (1));\nreturn cljs.core.into.call(null,empty_coll,cljs.core.first.call(null,cljs.core.reduce.call(null,((function (empty_coll,v,card,dec_card){\nreturn (function (p__228,idx){\nvar vec__229 = p__228;\nvar v__$1 = cljs.core.nth.call(null,vec__229,(0),null);\nvar rng__$1 = cljs.core.nth.call(null,vec__229,(1),null);\nvar vec__232 = clojure.test.check.random.split.call(null,rng__$1);\nvar rng1 = cljs.core.nth.call(null,vec__232,(0),null);\nvar rng2 = cljs.core.nth.call(null,vec__232,(1),null);\nvar swap_idx = clojure.test.check.generators.rand_range.call(null,rng1,idx,dec_card);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.test.check.generators.swap.call(null,v__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [idx,swap_idx], null)),rng2], null);\n});})(empty_coll,v,card,dec_card))\n,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v,rng], null),cljs.core.range.call(null,card))));\n});\nclojure.test.check.generators.coll_distinct_by = (function clojure$test$check$generators$coll_distinct_by(empty_coll,key_fn,allows_dupes_QMARK_,ordered_QMARK_,gen,p__235){\nvar map__238 = p__235;\nvar map__238__$1 = ((((!((map__238 == null)))?((((map__238.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__238.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__238):map__238);\nvar num_elements = cljs.core.get.call(null,map__238__$1,new cljs.core.Keyword(null,\"num-elements\",\"num-elements\",(1960422107)));\nvar min_elements = cljs.core.get.call(null,map__238__$1,new cljs.core.Keyword(null,\"min-elements\",\"min-elements\",(949370780)));\nvar max_elements = cljs.core.get.call(null,map__238__$1,new cljs.core.Keyword(null,\"max-elements\",\"max-elements\",(433034073)));\nvar max_tries = cljs.core.get.call(null,map__238__$1,new cljs.core.Keyword(null,\"max-tries\",\"max-tries\",(-1824441792)),(10));\nvar ex_fn = cljs.core.get.call(null,map__238__$1,new cljs.core.Keyword(null,\"ex-fn\",\"ex-fn\",(-284925510)),((function (map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries){\nreturn (function (p1__26_SHARP_){\nreturn cljs.core.ex_info.call(null,\"Couldn't generate enough distinct elements!\",p1__26_SHARP_);\n});})(map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries))\n);\nvar shuffle_fn = (cljs.core.truth_(ordered_QMARK_)?clojure.test.check.generators.the_shuffle_fn:((function (map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (_rng,coll){\nreturn coll;\n});})(map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n);\nvar hard_min_elements = (function (){var or__19662__auto__ = num_elements;\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nvar or__19662__auto____$1 = min_elements;\nif(cljs.core.truth_(or__19662__auto____$1)){\nreturn or__19662__auto____$1;\n} else {\nreturn (1);\n}\n}\n})();\nif(cljs.core.truth_(num_elements)){\nvar size_pred = ((function (shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (p1__27_SHARP_){\nreturn cljs.core._EQ_.call(null,num_elements,cljs.core.count.call(null,p1__27_SHARP_));\n});})(shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n;\nif(((min_elements == null)) && ((max_elements == null))){\n} else {\nthrow (new Error(\"Assert failed: (and (nil? min-elements) (nil? max-elements))\"));\n}\n\nreturn clojure.test.check.generators.make_gen.call(null,((function (size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (rng,gen_size){\nreturn clojure.test.check.rose_tree.filter.call(null,(cljs.core.truth_(allows_dupes_QMARK_)?cljs.core.every_pred.call(null,size_pred,((function (size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (p1__28_SHARP_){\nreturn clojure.test.check.generators.distinct_by_QMARK_.call(null,key_fn,p1__28_SHARP_);\n});})(size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n):size_pred),clojure.test.check.generators.coll_distinct_by_STAR_.call(null,empty_coll,key_fn,shuffle_fn,gen,rng,gen_size,num_elements,hard_min_elements,max_tries,ex_fn));\n});})(size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n);\n} else {\nvar min_elements__$1 = (function (){var or__19662__auto__ = min_elements;\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn (0);\n}\n})();\nvar size_pred = (cljs.core.truth_(max_elements)?((function (min_elements__$1,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (p1__29_SHARP_){\nreturn ((min_elements__$1 <= cljs.core.count.call(null,p1__29_SHARP_))) && ((cljs.core.count.call(null,p1__29_SHARP_) <= max_elements));\n});})(min_elements__$1,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n:((function (min_elements__$1,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (p1__30_SHARP_){\nreturn (min_elements__$1 <= cljs.core.count.call(null,p1__30_SHARP_));\n});})(min_elements__$1,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n);\nreturn clojure.test.check.generators.gen_bind.call(null,(cljs.core.truth_(max_elements)?clojure.test.check.generators.choose.call(null,min_elements__$1,max_elements):clojure.test.check.generators.sized.call(null,((function (min_elements__$1,size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (p1__31_SHARP_){\nreturn clojure.test.check.generators.choose.call(null,min_elements__$1,(min_elements__$1 + p1__31_SHARP_));\n});})(min_elements__$1,size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n)),((function (min_elements__$1,size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (num_elements_rose){\nvar num_elements__$1 = clojure.test.check.rose_tree.root.call(null,num_elements_rose);\nreturn clojure.test.check.generators.make_gen.call(null,((function (num_elements__$1,min_elements__$1,size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (rng,gen_size){\nreturn clojure.test.check.rose_tree.filter.call(null,(cljs.core.truth_(allows_dupes_QMARK_)?cljs.core.every_pred.call(null,size_pred,((function (num_elements__$1,min_elements__$1,size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn){\nreturn (function (p1__32_SHARP_){\nreturn clojure.test.check.generators.distinct_by_QMARK_.call(null,key_fn,p1__32_SHARP_);\n});})(num_elements__$1,min_elements__$1,size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n):size_pred),clojure.test.check.generators.coll_distinct_by_STAR_.call(null,empty_coll,key_fn,shuffle_fn,gen,rng,gen_size,num_elements__$1,hard_min_elements,max_tries,ex_fn));\n});})(num_elements__$1,min_elements__$1,size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n);\n});})(min_elements__$1,size_pred,shuffle_fn,hard_min_elements,map__238,map__238__$1,num_elements,min_elements,max_elements,max_tries,ex_fn))\n);\n}\n});\n/**\n * Generates a vector of elements from the given generator, with the\n *   guarantee that the elements will be distinct.\n * \n *   If the generator cannot or is unlikely to produce enough distinct\n *   elements, this generator will fail in the same way as `such-that`.\n * \n *   Available options:\n * \n *  :num-elements  the fixed size of generated vectors\n *  :min-elements  the min size of generated vectors\n *  :max-elements  the max size of generated vectors\n *  :max-tries     the number of times the generator will be tried before\n *                 failing when it does not produce distinct elements\n *                 (default 10)\n *  :ex-fn         a function of one arg that will be called if test.check cannot\n *                 generate enough distinct values; it will be passed a map with\n *                 `:gen`, `:num-elements`, and `:max-tries` and should return an\n *                 exception\n */\nclojure.test.check.generators.vector_distinct = (function clojure$test$check$generators$vector_distinct(var_args){\nvar args240 = [];\nvar len__21020__auto___243 = arguments.length;\nvar i__21021__auto___244 = (0);\nwhile(true){\nif((i__21021__auto___244 < len__21020__auto___243)){\nargs240.push((arguments[i__21021__auto___244]));\n\nvar G__245 = (i__21021__auto___244 + (1));\ni__21021__auto___244 = G__245;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__242 = args240.length;\nswitch (G__242) {\ncase (1):\nreturn clojure.test.check.generators.vector_distinct.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase (2):\nreturn clojure.test.check.generators.vector_distinct.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args240.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.vector_distinct.cljs$core$IFn$_invoke$arity$1 = (function (gen){\nreturn clojure.test.check.generators.vector_distinct.call(null,gen,cljs.core.PersistentArrayMap.EMPTY);\n});\n\nclojure.test.check.generators.vector_distinct.cljs$core$IFn$_invoke$arity$2 = (function (gen,opts){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to vector-distinct must be a generator!\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.coll_distinct_by.call(null,cljs.core.PersistentVector.EMPTY,cljs.core.identity,true,true,gen,opts);\n});\n\nclojure.test.check.generators.vector_distinct.cljs$lang$maxFixedArity = (2);\n\n/**\n * Generates a list of elements from the given generator, with the\n *   guarantee that the elements will be distinct.\n * \n *   If the generator cannot or is unlikely to produce enough distinct\n *   elements, this generator will fail in the same way as `such-that`.\n * \n *   Available options:\n * \n *  :num-elements  the fixed size of generated list\n *  :min-elements  the min size of generated list\n *  :max-elements  the max size of generated list\n *  :max-tries     the number of times the generator will be tried before\n *                 failing when it does not produce distinct elements\n *                 (default 10)\n *  :ex-fn         a function of one arg that will be called if test.check cannot\n *                 generate enough distinct values; it will be passed a map with\n *                 `:gen`, `:num-elements`, and `:max-tries` and should return an\n *                 exception\n */\nclojure.test.check.generators.list_distinct = (function clojure$test$check$generators$list_distinct(var_args){\nvar args247 = [];\nvar len__21020__auto___250 = arguments.length;\nvar i__21021__auto___251 = (0);\nwhile(true){\nif((i__21021__auto___251 < len__21020__auto___250)){\nargs247.push((arguments[i__21021__auto___251]));\n\nvar G__252 = (i__21021__auto___251 + (1));\ni__21021__auto___251 = G__252;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__249 = args247.length;\nswitch (G__249) {\ncase (1):\nreturn clojure.test.check.generators.list_distinct.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase (2):\nreturn clojure.test.check.generators.list_distinct.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args247.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.list_distinct.cljs$core$IFn$_invoke$arity$1 = (function (gen){\nreturn clojure.test.check.generators.list_distinct.call(null,gen,cljs.core.PersistentArrayMap.EMPTY);\n});\n\nclojure.test.check.generators.list_distinct.cljs$core$IFn$_invoke$arity$2 = (function (gen,opts){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to list-distinct must be a generator!\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.coll_distinct_by.call(null,cljs.core.List.EMPTY,cljs.core.identity,true,true,gen,opts);\n});\n\nclojure.test.check.generators.list_distinct.cljs$lang$maxFixedArity = (2);\n\n/**\n * Generates a vector of elements from the given generator, with the\n *   guarantee that (map key-fn the-vector) will be distinct.\n * \n *   If the generator cannot or is unlikely to produce enough distinct\n *   elements, this generator will fail in the same way as `such-that`.\n * \n *   Available options:\n * \n *  :num-elements  the fixed size of generated vectors\n *  :min-elements  the min size of generated vectors\n *  :max-elements  the max size of generated vectors\n *  :max-tries     the number of times the generator will be tried before\n *                 failing when it does not produce distinct elements\n *                 (default 10)\n *  :ex-fn         a function of one arg that will be called if test.check cannot\n *                 generate enough distinct values; it will be passed a map with\n *                 `:gen`, `:num-elements`, and `:max-tries` and should return an\n *                 exception\n */\nclojure.test.check.generators.vector_distinct_by = (function clojure$test$check$generators$vector_distinct_by(var_args){\nvar args254 = [];\nvar len__21020__auto___257 = arguments.length;\nvar i__21021__auto___258 = (0);\nwhile(true){\nif((i__21021__auto___258 < len__21020__auto___257)){\nargs254.push((arguments[i__21021__auto___258]));\n\nvar G__259 = (i__21021__auto___258 + (1));\ni__21021__auto___258 = G__259;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__256 = args254.length;\nswitch (G__256) {\ncase (2):\nreturn clojure.test.check.generators.vector_distinct_by.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn clojure.test.check.generators.vector_distinct_by.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args254.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.vector_distinct_by.cljs$core$IFn$_invoke$arity$2 = (function (key_fn,gen){\nreturn clojure.test.check.generators.vector_distinct_by.call(null,key_fn,gen,cljs.core.PersistentArrayMap.EMPTY);\n});\n\nclojure.test.check.generators.vector_distinct_by.cljs$core$IFn$_invoke$arity$3 = (function (key_fn,gen,opts){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to vector-distinct-by must be a generator!\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.coll_distinct_by.call(null,cljs.core.PersistentVector.EMPTY,key_fn,true,true,gen,opts);\n});\n\nclojure.test.check.generators.vector_distinct_by.cljs$lang$maxFixedArity = (3);\n\n/**\n * Generates a list of elements from the given generator, with the\n *   guarantee that (map key-fn the-list) will be distinct.\n * \n *   If the generator cannot or is unlikely to produce enough distinct\n *   elements, this generator will fail in the same way as `such-that`.\n * \n *   Available options:\n * \n *  :num-elements  the fixed size of generated list\n *  :min-elements  the min size of generated list\n *  :max-elements  the max size of generated list\n *  :max-tries     the number of times the generator will be tried before\n *                 failing when it does not produce distinct elements\n *                 (default 10)\n *  :ex-fn         a function of one arg that will be called if test.check cannot\n *                 generate enough distinct values; it will be passed a map with\n *                 `:gen`, `:num-elements`, and `:max-tries` and should return an\n *                 exception\n */\nclojure.test.check.generators.list_distinct_by = (function clojure$test$check$generators$list_distinct_by(var_args){\nvar args261 = [];\nvar len__21020__auto___264 = arguments.length;\nvar i__21021__auto___265 = (0);\nwhile(true){\nif((i__21021__auto___265 < len__21020__auto___264)){\nargs261.push((arguments[i__21021__auto___265]));\n\nvar G__266 = (i__21021__auto___265 + (1));\ni__21021__auto___265 = G__266;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__263 = args261.length;\nswitch (G__263) {\ncase (2):\nreturn clojure.test.check.generators.list_distinct_by.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn clojure.test.check.generators.list_distinct_by.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args261.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.list_distinct_by.cljs$core$IFn$_invoke$arity$2 = (function (key_fn,gen){\nreturn clojure.test.check.generators.list_distinct_by.call(null,key_fn,gen,cljs.core.PersistentArrayMap.EMPTY);\n});\n\nclojure.test.check.generators.list_distinct_by.cljs$core$IFn$_invoke$arity$3 = (function (key_fn,gen,opts){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to list-distinct-by must be a generator!\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.coll_distinct_by.call(null,cljs.core.List.EMPTY,key_fn,true,true,gen,opts);\n});\n\nclojure.test.check.generators.list_distinct_by.cljs$lang$maxFixedArity = (3);\n\n/**\n * Generates a set of elements from the given generator.\n * \n *   If the generator cannot or is unlikely to produce enough distinct\n *   elements, this generator will fail in the same way as `such-that`.\n * \n *   Available options:\n * \n *  :num-elements  the fixed size of generated set\n *  :min-elements  the min size of generated set\n *  :max-elements  the max size of generated set\n *  :max-tries     the number of times the generator will be tried before\n *                 failing when it does not produce distinct elements\n *                 (default 10)\n *  :ex-fn         a function of one arg that will be called if test.check cannot\n *                 generate enough distinct values; it will be passed a map with\n *                 `:gen`, `:num-elements`, and `:max-tries` and should return an\n *                 exception\n */\nclojure.test.check.generators.set = (function clojure$test$check$generators$set(var_args){\nvar args268 = [];\nvar len__21020__auto___271 = arguments.length;\nvar i__21021__auto___272 = (0);\nwhile(true){\nif((i__21021__auto___272 < len__21020__auto___271)){\nargs268.push((arguments[i__21021__auto___272]));\n\nvar G__273 = (i__21021__auto___272 + (1));\ni__21021__auto___272 = G__273;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__270 = args268.length;\nswitch (G__270) {\ncase (1):\nreturn clojure.test.check.generators.set.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase (2):\nreturn clojure.test.check.generators.set.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args268.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.set.cljs$core$IFn$_invoke$arity$1 = (function (gen){\nreturn clojure.test.check.generators.set.call(null,gen,cljs.core.PersistentArrayMap.EMPTY);\n});\n\nclojure.test.check.generators.set.cljs$core$IFn$_invoke$arity$2 = (function (gen,opts){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to set must be a generator!\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.coll_distinct_by.call(null,cljs.core.PersistentHashSet.EMPTY,cljs.core.identity,false,false,gen,opts);\n});\n\nclojure.test.check.generators.set.cljs$lang$maxFixedArity = (2);\n\n/**\n * Generates a sorted set of elements from the given generator.\n * \n *   If the generator cannot or is unlikely to produce enough distinct\n *   elements, this generator will fail in the same way as `such-that`.\n * \n *   Available options:\n * \n *  :num-elements  the fixed size of generated set\n *  :min-elements  the min size of generated set\n *  :max-elements  the max size of generated set\n *  :max-tries     the number of times the generator will be tried before\n *                 failing when it does not produce distinct elements\n *                 (default 10)\n *  :ex-fn         a function of one arg that will be called if test.check cannot\n *                 generate enough distinct values; it will be passed a map with\n *                 `:gen`, `:num-elements`, and `:max-tries` and should return an\n *                 exception\n */\nclojure.test.check.generators.sorted_set = (function clojure$test$check$generators$sorted_set(var_args){\nvar args275 = [];\nvar len__21020__auto___278 = arguments.length;\nvar i__21021__auto___279 = (0);\nwhile(true){\nif((i__21021__auto___279 < len__21020__auto___278)){\nargs275.push((arguments[i__21021__auto___279]));\n\nvar G__280 = (i__21021__auto___279 + (1));\ni__21021__auto___279 = G__280;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__277 = args275.length;\nswitch (G__277) {\ncase (1):\nreturn clojure.test.check.generators.sorted_set.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase (2):\nreturn clojure.test.check.generators.sorted_set.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args275.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.sorted_set.cljs$core$IFn$_invoke$arity$1 = (function (gen){\nreturn clojure.test.check.generators.sorted_set.call(null,gen,cljs.core.PersistentArrayMap.EMPTY);\n});\n\nclojure.test.check.generators.sorted_set.cljs$core$IFn$_invoke$arity$2 = (function (gen,opts){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"First arg to sorted-set must be a generator!\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.coll_distinct_by.call(null,cljs.core.sorted_set.call(null),cljs.core.identity,false,false,gen,opts);\n});\n\nclojure.test.check.generators.sorted_set.cljs$lang$maxFixedArity = (2);\n\n/**\n * Create a generator that generates maps, with keys chosen from\n *   `key-gen` and values chosen from `val-gen`.\n * \n *   If the key generator cannot or is unlikely to produce enough distinct\n *   elements, this generator will fail in the same way as `such-that`.\n * \n *   Available options:\n * \n *  :num-elements  the fixed size of generated maps\n *  :min-elements  the min size of generated maps\n *  :max-elements  the max size of generated maps\n *  :max-tries     the number of times the generator will be tried before\n *                 failing when it does not produce distinct elements\n *                 (default 10)\n *  :ex-fn         a function of one arg that will be called if test.check cannot\n *                 generate enough distinct keys; it will be passed a map with\n *                 `:gen` (the key-gen), `:num-elements`, and `:max-tries` and\n *                 should return an exception\n */\nclojure.test.check.generators.map = (function clojure$test$check$generators$map(var_args){\nvar args282 = [];\nvar len__21020__auto___285 = arguments.length;\nvar i__21021__auto___286 = (0);\nwhile(true){\nif((i__21021__auto___286 < len__21020__auto___285)){\nargs282.push((arguments[i__21021__auto___286]));\n\nvar G__287 = (i__21021__auto___286 + (1));\ni__21021__auto___286 = G__287;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__284 = args282.length;\nswitch (G__284) {\ncase (2):\nreturn clojure.test.check.generators.map.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn clojure.test.check.generators.map.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args282.length)].join('')));\n\n}\n});\n\nclojure.test.check.generators.map.cljs$core$IFn$_invoke$arity$2 = (function (key_gen,val_gen){\nreturn clojure.test.check.generators.map.call(null,key_gen,val_gen,cljs.core.PersistentArrayMap.EMPTY);\n});\n\nclojure.test.check.generators.map.cljs$core$IFn$_invoke$arity$3 = (function (key_gen,val_gen,opts){\nreturn clojure.test.check.generators.coll_distinct_by.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.first,false,false,clojure.test.check.generators.tuple.call(null,key_gen,val_gen),opts);\n});\n\nclojure.test.check.generators.map.cljs$lang$maxFixedArity = (3);\n\n/**\n * Generates a single uniformly random long, does not shrink.\n */\nclojure.test.check.generators.gen_raw_long = clojure.test.check.generators.make_gen.call(null,(function (rnd,_size){\nreturn clojure.test.check.rose_tree.pure.call(null,clojure.test.check.random.rand_long.call(null,rnd));\n}));\nclojure.test.check.generators.MAX_INTEGER = (cljs.core.apply.call(null,cljs.core._STAR_,cljs.core.repeat.call(null,(53),(2))) - (1));\nclojure.test.check.generators.MIN_INTEGER = (- clojure.test.check.generators.MAX_INTEGER);\nclojure.test.check.generators.abs = (function clojure$test$check$generators$abs(x){\nreturn Math.abs(x);\n});\nclojure.test.check.generators.long__GT_large_integer = (function clojure$test$check$generators$long__GT_large_integer(bit_count,x,min,max){\nvar res = (function (){var G__291 = x.shiftRight(((64) - bit_count)).toNumber();\nvar G__291__$1 = (((min === (0)))?clojure.test.check.generators.abs.call(null,G__291):G__291);\nreturn G__291__$1;\n})();\nwhile(true){\nif(((min <= res)) && ((res <= max))){\nreturn res;\n} else {\nvar res_SINGLEQUOTE_ = (- res);\nif(((min <= res_SINGLEQUOTE_)) && ((res_SINGLEQUOTE_ <= max))){\nreturn res_SINGLEQUOTE_;\n} else {\nvar G__293 = ((function (){var G__292 = res;\nvar G__292__$1 = ((cljs.core.odd_QMARK_.call(null,res))?(((res < (0)))?cljs.core.inc:cljs.core.dec).call(null,G__292):G__292);\nreturn G__292__$1;\n})() / (2));\nres = G__293;\ncontinue;\n}\n}\nbreak;\n}\n});\n/**\n * Like large-integer*, but assumes range includes zero.\n */\nclojure.test.check.generators.large_integer_STAR__STAR_ = (function clojure$test$check$generators$large_integer_STAR__STAR_(min,max){\nreturn clojure.test.check.generators.sized.call(null,(function (size){\nvar size__$1 = (function (){var x__19935__auto__ = size;\nvar y__19936__auto__ = (1);\nreturn ((x__19935__auto__ > y__19936__auto__) ? x__19935__auto__ : y__19936__auto__);\n})();\nvar max_bit_count = (function (){var x__19950__auto__ = size__$1;\nvar y__19951__auto__ = (54);\nreturn ((x__19950__auto__ < y__19951__auto__) ? x__19950__auto__ : y__19951__auto__);\n})();\nreturn clojure.test.check.generators.gen_fmap.call(null,((function (size__$1,max_bit_count){\nreturn (function (rose){\nvar vec__297 = clojure.test.check.rose_tree.root.call(null,rose);\nvar bit_count = cljs.core.nth.call(null,vec__297,(0),null);\nvar x = cljs.core.nth.call(null,vec__297,(1),null);\nreturn clojure.test.check.generators.int_rose_tree.call(null,clojure.test.check.generators.long__GT_large_integer.call(null,bit_count,x,min,max));\n});})(size__$1,max_bit_count))\n,clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.choose.call(null,(1),max_bit_count),clojure.test.check.generators.gen_raw_long));\n}));\n});\n/**\n * Like large-integer, but accepts options:\n * \n *  :min  the minimum integer (inclusive)\n *  :max  the maximum integer (inclusive)\n * \n *   Both :min and :max are optional.\n * \n *    (gen/sample (gen/large-integer* {:min 9000 :max 10000}))\n *    => (9000 9001 9001 9002 9000 9003 9006 9030 9005 9044)\n */\nclojure.test.check.generators.large_integer_STAR_ = (function clojure$test$check$generators$large_integer_STAR_(p__300){\nvar map__303 = p__300;\nvar map__303__$1 = ((((!((map__303 == null)))?((((map__303.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__303.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__303):map__303);\nvar min = cljs.core.get.call(null,map__303__$1,new cljs.core.Keyword(null,\"min\",\"min\",(444991522)));\nvar max = cljs.core.get.call(null,map__303__$1,new cljs.core.Keyword(null,\"max\",\"max\",(61366548)));\nvar min__$1 = (function (){var or__19662__auto__ = min;\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn clojure.test.check.generators.MIN_INTEGER;\n}\n})();\nvar max__$1 = (function (){var or__19662__auto__ = max;\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn clojure.test.check.generators.MAX_INTEGER;\n}\n})();\nif((min__$1 <= max__$1)){\n} else {\nthrow (new Error(\"Assert failed: (<= min max)\"));\n}\n\nreturn clojure.test.check.generators.such_that.call(null,((function (min__$1,max__$1,map__303,map__303__$1,min,max){\nreturn (function (p1__33_SHARP_){\nreturn ((min__$1 <= p1__33_SHARP_)) && ((p1__33_SHARP_ <= max__$1));\n});})(min__$1,max__$1,map__303,map__303__$1,min,max))\n,((((min__$1 <= (0))) && (((0) <= max__$1)))?clojure.test.check.generators.large_integer_STAR__STAR_.call(null,min__$1,max__$1):(((max__$1 < (0)))?clojure.test.check.generators.fmap.call(null,((function (min__$1,max__$1,map__303,map__303__$1,min,max){\nreturn (function (p1__34_SHARP_){\nreturn (max__$1 + p1__34_SHARP_);\n});})(min__$1,max__$1,map__303,map__303__$1,min,max))\n,clojure.test.check.generators.large_integer_STAR__STAR_.call(null,(min__$1 - max__$1),(0))):clojure.test.check.generators.fmap.call(null,((function (min__$1,max__$1,map__303,map__303__$1,min,max){\nreturn (function (p1__35_SHARP_){\nreturn (min__$1 + p1__35_SHARP_);\n});})(min__$1,max__$1,map__303,map__303__$1,min,max))\n,clojure.test.check.generators.large_integer_STAR__STAR_.call(null,(0),(max__$1 - min__$1))))));\n});\n/**\n * Generates a platform-native integer from the full available range\n *   (in clj, 64-bit Longs, and in cljs, numbers between -(2^53 - 1) and\n *   (2^53 - 1)).\n * \n *   Use large-integer* for more control.\n */\nclojure.test.check.generators.large_integer = clojure.test.check.generators.large_integer_STAR_.call(null,cljs.core.PersistentArrayMap.EMPTY);\nclojure.test.check.generators.POS_INFINITY = Number.POSITIVE_INFINITY;\nclojure.test.check.generators.NEG_INFINITY = Number.NEGATIVE_INFINITY;\nclojure.test.check.generators.MAX_POS_VALUE = Number.MAX_VALUE;\nclojure.test.check.generators.MIN_NEG_VALUE = (- clojure.test.check.generators.MAX_POS_VALUE);\nclojure.test.check.generators.NAN = Number.NaN;\n/**\n * Generates an integer uniformly in the range 0..(2^bit-count-1).\n */\nclojure.test.check.generators.uniform_integer = (function clojure$test$check$generators$uniform_integer(bit_count){\nif((bit_count <= (32))){\nreturn clojure.test.check.generators.choose.call(null,(0),(function (){var G__310 = cljs.core.long$.call(null,bit_count);\nswitch (G__310) {\ncase (32):\nreturn (4294967295);\n\nbreak;\ncase (31):\nreturn (2147483647);\n\nbreak;\ndefault:\nreturn (((1) << bit_count) - (1));\n\n}\n})());\n} else {\nreturn clojure.test.check.generators.fmap.call(null,(function (p__311){\nvar vec__312 = p__311;\nvar upper = cljs.core.nth.call(null,vec__312,(0),null);\nvar lower = cljs.core.nth.call(null,vec__312,(1),null);\nreturn ((upper * (4294967296)) + lower);\n}),clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.uniform_integer.call(null,(bit_count - (32))),clojure.test.check.generators.uniform_integer.call(null,(32))));\n}\n});\nclojure.test.check.generators.scalb = (function clojure$test$check$generators$scalb(x,exp){\nreturn (x * Math.pow((2),exp));\n});\n/**\n * Bit-reverses an integer in the range [0, 2^52).\n */\nclojure.test.check.generators.fifty_two_bit_reverse = (function clojure$test$check$generators$fifty_two_bit_reverse(n){\nvar out = (0);\nvar n__$1 = n;\nvar out_shifter = Math.pow((2),(52));\nwhile(true){\nif((n__$1 < (1))){\nreturn (out * out_shifter);\n} else {\nvar G__316 = ((out * (2)) + (n__$1 & (1)));\nvar G__317 = (n__$1 / (2));\nvar G__318 = (out_shifter / (2));\nout = G__316;\nn__$1 = G__317;\nout_shifter = G__318;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Generates a 52-bit non-negative integer that shrinks toward having\n *   fewer lower-order bits (and shrinks to 0 if possible).\n */\nclojure.test.check.generators.backwards_shrinking_significand = clojure.test.check.generators.fmap.call(null,clojure.test.check.generators.fifty_two_bit_reverse,clojure.test.check.generators.sized.call(null,(function (size){\nreturn clojure.test.check.generators.gen_bind.call(null,clojure.test.check.generators.choose.call(null,(0),(function (){var x__19950__auto__ = size;\nvar y__19951__auto__ = (52);\nreturn ((x__19950__auto__ < y__19951__auto__) ? x__19950__auto__ : y__19951__auto__);\n})()),(function (rose){\nreturn clojure.test.check.generators.uniform_integer.call(null,clojure.test.check.rose_tree.root.call(null,rose));\n}));\n})));\nclojure.test.check.generators.get_exponent = (function clojure$test$check$generators$get_exponent(x){\nif((x === (0))){\nreturn (-1023);\n} else {\nvar x__$1 = Math.abs(x);\nvar res = Math.floor((Math.log(x__$1) * Math.LOG2E));\nvar t = clojure.test.check.generators.scalb.call(null,x__$1,(- res));\nif((t < (1))){\nreturn (res - (1));\n} else {\nif(((2) <= t)){\nreturn (res + (1));\n} else {\nreturn res;\n\n}\n}\n}\n});\n/**\n * Generates [exp sign], where exp is in [-1023, 1023] and sign is 1\n *   or -1. Only generates values for exp and sign for which there are\n *   doubles within the given bounds.\n */\nclojure.test.check.generators.double_exp_and_sign = (function clojure$test$check$generators$double_exp_and_sign(lower_bound,upper_bound){\nvar gen_exp = (function clojure$test$check$generators$double_exp_and_sign_$_gen_exp(lb,ub){\nreturn clojure.test.check.generators.sized.call(null,(function (size){\nvar qs8 = ((1) << cljs.core.quot.call(null,(function (){var x__19950__auto__ = (200);\nvar y__19951__auto__ = size;\nreturn ((x__19950__auto__ < y__19951__auto__) ? x__19950__auto__ : y__19951__auto__);\n})(),(8)));\nif(((lb <= (0))) && (((0) <= ub))){\nreturn clojure.test.check.generators.choose.call(null,(function (){var x__19935__auto__ = lb;\nvar y__19936__auto__ = (- qs8);\nreturn ((x__19935__auto__ > y__19936__auto__) ? x__19935__auto__ : y__19936__auto__);\n})(),(function (){var x__19950__auto__ = ub;\nvar y__19951__auto__ = qs8;\nreturn ((x__19950__auto__ < y__19951__auto__) ? x__19950__auto__ : y__19951__auto__);\n})());\n} else {\nif((ub < (0))){\nreturn clojure.test.check.generators.choose.call(null,(function (){var x__19935__auto__ = lb;\nvar y__19936__auto__ = (ub - qs8);\nreturn ((x__19935__auto__ > y__19936__auto__) ? x__19935__auto__ : y__19936__auto__);\n})(),ub);\n} else {\nreturn clojure.test.check.generators.choose.call(null,lb,(function (){var x__19950__auto__ = ub;\nvar y__19951__auto__ = (lb + qs8);\nreturn ((x__19950__auto__ < y__19951__auto__) ? x__19950__auto__ : y__19951__auto__);\n})());\n\n}\n}\n}));\n});\nif(((lower_bound == null)) && ((upper_bound == null))){\nreturn clojure.test.check.generators.tuple.call(null,gen_exp.call(null,(-1023),(1023)),clojure.test.check.generators.elements.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(-1)], null)));\n} else {\nvar lower_bound__$1 = (function (){var or__19662__auto__ = lower_bound;\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn clojure.test.check.generators.MIN_NEG_VALUE;\n}\n})();\nvar upper_bound__$1 = (function (){var or__19662__auto__ = upper_bound;\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn clojure.test.check.generators.MAX_POS_VALUE;\n}\n})();\nvar lbexp = (function (){var x__19935__auto__ = (-1023);\nvar y__19936__auto__ = clojure.test.check.generators.get_exponent.call(null,lower_bound__$1);\nreturn ((x__19935__auto__ > y__19936__auto__) ? x__19935__auto__ : y__19936__auto__);\n})();\nvar ubexp = (function (){var x__19935__auto__ = (-1023);\nvar y__19936__auto__ = clojure.test.check.generators.get_exponent.call(null,upper_bound__$1);\nreturn ((x__19935__auto__ > y__19936__auto__) ? x__19935__auto__ : y__19936__auto__);\n})();\nif(((0) <= lower_bound__$1)){\nreturn clojure.test.check.generators.tuple.call(null,gen_exp.call(null,lbexp,ubexp),clojure.test.check.generators.return$.call(null,(1)));\n} else {\nif((upper_bound__$1 <= (0))){\nreturn clojure.test.check.generators.tuple.call(null,gen_exp.call(null,ubexp,lbexp),clojure.test.check.generators.return$.call(null,(-1)));\n} else {\nreturn clojure.test.check.generators.fmap.call(null,((function (lower_bound__$1,upper_bound__$1,lbexp,ubexp){\nreturn (function (p__323){\nvar vec__324 = p__323;\nvar exp = cljs.core.nth.call(null,vec__324,(0),null);\nvar sign = cljs.core.nth.call(null,vec__324,(1),null);\nvar pair = vec__324;\nif((((sign < (0))) && ((lbexp < exp))) || (((sign > (0))) && ((ubexp < exp)))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exp,(- sign)], null);\n} else {\nreturn pair;\n}\n});})(lower_bound__$1,upper_bound__$1,lbexp,ubexp))\n,clojure.test.check.generators.tuple.call(null,gen_exp.call(null,(-1023),(function (){var x__19935__auto__ = ubexp;\nvar y__19936__auto__ = lbexp;\nreturn ((x__19935__auto__ > y__19936__auto__) ? x__19935__auto__ : y__19936__auto__);\n})()),clojure.test.check.generators.elements.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(-1)], null))));\n\n}\n}\n}\n});\n/**\n * Returns [low high], the smallest and largest numbers in the given\n *   range.\n */\nclojure.test.check.generators.block_bounds = (function clojure$test$check$generators$block_bounds(exp,sign){\nif((sign < (0))){\nvar vec__330 = clojure.test.check.generators.block_bounds.call(null,exp,(- sign));\nvar low = cljs.core.nth.call(null,vec__330,(0),null);\nvar high = cljs.core.nth.call(null,vec__330,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(- high),(- low)], null);\n} else {\nif(cljs.core._EQ_.call(null,(-1023),exp)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),clojure.test.check.generators.scalb.call(null,(clojure.test.check.generators.scalb.call(null,(1),(52)) - (1)),(-1074))], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.test.check.generators.scalb.call(null,(1),exp),clojure.test.check.generators.scalb.call(null,(clojure.test.check.generators.scalb.call(null,(1),(52)) - (1)),(exp - (51)))], null);\n}\n}\n});\nclojure.test.check.generators.double_finite = (function clojure$test$check$generators$double_finite(lower_bound,upper_bound){\nif(((lower_bound == null)) || ((upper_bound == null)) || ((lower_bound <= upper_bound))){\n} else {\nthrow (new Error(\"Assert failed: (or (nil? lower-bound) (nil? upper-bound) (<= lower-bound upper-bound))\"));\n}\n\nvar pred = (cljs.core.truth_(lower_bound)?(cljs.core.truth_(upper_bound)?(function (p1__36_SHARP_){\nreturn ((lower_bound <= p1__36_SHARP_)) && ((p1__36_SHARP_ <= upper_bound));\n}):(function (p1__37_SHARP_){\nreturn (lower_bound <= p1__37_SHARP_);\n})):(cljs.core.truth_(upper_bound)?(function (p1__38_SHARP_){\nreturn (p1__38_SHARP_ <= upper_bound);\n}):null));\nvar gen = clojure.test.check.generators.fmap.call(null,((function (pred){\nreturn (function (p__346){\nvar vec__347 = p__346;\nvar vec__350 = cljs.core.nth.call(null,vec__347,(0),null);\nvar exp = cljs.core.nth.call(null,vec__350,(0),null);\nvar sign = cljs.core.nth.call(null,vec__350,(1),null);\nvar significand = cljs.core.nth.call(null,vec__347,(1),null);\nvar base = ((significand / Math.pow((2),(52))) + (1));\nvar x = (clojure.test.check.generators.scalb.call(null,base,exp) * sign);\nif(cljs.core.truth_((function (){var or__19662__auto__ = (pred == null);\nif(or__19662__auto__){\nreturn or__19662__auto__;\n} else {\nreturn pred.call(null,x);\n}\n})())){\nreturn x;\n} else {\nvar vec__353 = clojure.test.check.generators.block_bounds.call(null,exp,sign);\nvar low = cljs.core.nth.call(null,vec__353,(0),null);\nvar high = cljs.core.nth.call(null,vec__353,(1),null);\nvar block_lb = (function (){var G__356 = low;\nvar G__356__$1 = (cljs.core.truth_(lower_bound)?(function (){var x__19935__auto__ = G__356;\nvar y__19936__auto__ = lower_bound;\nreturn ((x__19935__auto__ > y__19936__auto__) ? x__19935__auto__ : y__19936__auto__);\n})():G__356);\nreturn G__356__$1;\n})();\nvar block_ub = (function (){var G__357 = high;\nvar G__357__$1 = (cljs.core.truth_(upper_bound)?(function (){var x__19950__auto__ = G__357;\nvar y__19951__auto__ = upper_bound;\nreturn ((x__19950__auto__ < y__19951__auto__) ? x__19950__auto__ : y__19951__auto__);\n})():G__357);\nreturn G__357__$1;\n})();\nvar x__$1 = (block_lb + ((block_ub - block_lb) * (base - (1))));\nvar x__19935__auto__ = (function (){var x__19950__auto__ = x__$1;\nvar y__19951__auto__ = block_ub;\nreturn ((x__19950__auto__ < y__19951__auto__) ? x__19950__auto__ : y__19951__auto__);\n})();\nvar y__19936__auto__ = block_lb;\nreturn ((x__19935__auto__ > y__19936__auto__) ? x__19935__auto__ : y__19936__auto__);\n}\n});})(pred))\n,clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.double_exp_and_sign.call(null,lower_bound,upper_bound),clojure.test.check.generators.backwards_shrinking_significand));\nvar G__358 = gen;\nvar G__358__$1 = (cljs.core.truth_(pred)?clojure.test.check.generators.such_that.call(null,pred,G__358):G__358);\nreturn G__358__$1;\n});\n/**\n * Generates a 64-bit floating point number. Options:\n * \n *  :infinite? - whether +/- infinity can be generated (default true)\n *  :NaN?      - whether NaN can be generated (default true)\n *  :min       - minimum value (inclusive, default none)\n *  :max       - maximum value (inclusive, default none)\n * \n *   Note that the min/max options must be finite numbers. Supplying a\n *   min precludes -Infinity, and supplying a max precludes +Infinity.\n */\nclojure.test.check.generators.double_STAR_ = (function clojure$test$check$generators$double_STAR_(p__359){\nvar map__363 = p__359;\nvar map__363__$1 = ((((!((map__363 == null)))?((((map__363.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__363.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__363):map__363);\nvar infinite_QMARK_ = cljs.core.get.call(null,map__363__$1,new cljs.core.Keyword(null,\"infinite?\",\"infinite?\",(-2017886608)),true);\nvar NaN_QMARK_ = cljs.core.get.call(null,map__363__$1,new cljs.core.Keyword(null,\"NaN?\",\"NaN?\",(-1917767651)),true);\nvar min = cljs.core.get.call(null,map__363__$1,new cljs.core.Keyword(null,\"min\",\"min\",(444991522)));\nvar max = cljs.core.get.call(null,map__363__$1,new cljs.core.Keyword(null,\"max\",\"max\",(61366548)));\nvar frequency_arg = (function (){var G__365 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(95),clojure.test.check.generators.double_finite.call(null,min,max)], null)], null);\nvar G__365__$1 = (((((min == null))?((max == null)) || (((0) <= max)):(((max == null))?(min <= (0)):((min <= (0))) && (((0) <= max)))))?cljs.core.conj.call(null,G__365,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.return$.call(null,(0))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.return$.call(null,(0))], null)):G__365);\nvar G__365__$2 = (cljs.core.truth_((function (){var and__19647__auto__ = infinite_QMARK_;\nif(cljs.core.truth_(and__19647__auto__)){\nreturn (max == null);\n} else {\nreturn and__19647__auto__;\n}\n})())?cljs.core.conj.call(null,G__365__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.return$.call(null,clojure.test.check.generators.POS_INFINITY)], null)):G__365__$1);\nvar G__365__$3 = (cljs.core.truth_((function (){var and__19647__auto__ = infinite_QMARK_;\nif(cljs.core.truth_(and__19647__auto__)){\nreturn (min == null);\n} else {\nreturn and__19647__auto__;\n}\n})())?cljs.core.conj.call(null,G__365__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.return$.call(null,clojure.test.check.generators.NEG_INFINITY)], null)):G__365__$2);\nvar G__365__$4 = (cljs.core.truth_(NaN_QMARK_)?cljs.core.conj.call(null,G__365__$3,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.return$.call(null,clojure.test.check.generators.NAN)], null)):G__365__$3);\nreturn G__365__$4;\n})();\nif(cljs.core._EQ_.call(null,(1),cljs.core.count.call(null,frequency_arg))){\nreturn cljs.core.second.call(null,cljs.core.first.call(null,frequency_arg));\n} else {\nreturn clojure.test.check.generators.frequency.call(null,frequency_arg);\n}\n});\n/**\n * Generates 64-bit floating point numbers from the entire range,\n *   including +/- infinity and NaN. Use double* for more control.\n */\nclojure.test.check.generators.double$ = clojure.test.check.generators.double_STAR_.call(null,cljs.core.PersistentArrayMap.EMPTY);\n/**\n * Generates character from 0-255.\n */\nclojure.test.check.generators.char$ = clojure.test.check.generators.fmap.call(null,cljs.core.char$,clojure.test.check.generators.choose.call(null,(0),(255)));\n/**\n * Generate only ascii character.\n */\nclojure.test.check.generators.char_ascii = clojure.test.check.generators.fmap.call(null,cljs.core.char$,clojure.test.check.generators.choose.call(null,(32),(126)));\n/**\n * Generate alphanumeric characters.\n */\nclojure.test.check.generators.char_alphanumeric = clojure.test.check.generators.fmap.call(null,cljs.core.char$,clojure.test.check.generators.one_of.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.test.check.generators.choose.call(null,(48),(57)),clojure.test.check.generators.choose.call(null,(65),(90)),clojure.test.check.generators.choose.call(null,(97),(122))], null)));\n/**\n * Deprecated - use char-alphanumeric instead.\n * \n *   Generate alphanumeric characters.\n */\nclojure.test.check.generators.char_alpha_numeric = clojure.test.check.generators.char_alphanumeric;\n/**\n * Generate alpha characters.\n */\nclojure.test.check.generators.char_alpha = clojure.test.check.generators.fmap.call(null,cljs.core.char$,clojure.test.check.generators.one_of.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.test.check.generators.choose.call(null,(65),(90)),clojure.test.check.generators.choose.call(null,(97),(122))], null)));\n/**\n * Generate non-alphanumeric characters that can be in a symbol.\n */\nclojure.test.check.generators.char_symbol_special = clojure.test.check.generators.elements.call(null,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"*\",\"+\",\"!\",\"-\",\"_\",\"?\"], null));\n/**\n * Generate characters that can be the char following first of a keyword.\n */\nclojure.test.check.generators.char_keyword_rest = clojure.test.check.generators.frequency.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),clojure.test.check.generators.char_alphanumeric], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.char_symbol_special], null)], null));\n/**\n * Generate characters that can be the first char of a keyword.\n */\nclojure.test.check.generators.char_keyword_first = clojure.test.check.generators.frequency.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),clojure.test.check.generators.char_alpha], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.char_symbol_special], null)], null));\n/**\n * Generate strings. May generate unprintable characters.\n */\nclojure.test.check.generators.string = clojure.test.check.generators.fmap.call(null,clojure.string.join,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.char$));\n/**\n * Generate ascii strings.\n */\nclojure.test.check.generators.string_ascii = clojure.test.check.generators.fmap.call(null,clojure.string.join,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.char_ascii));\n/**\n * Generate alphanumeric strings.\n */\nclojure.test.check.generators.string_alphanumeric = clojure.test.check.generators.fmap.call(null,clojure.string.join,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.char_alphanumeric));\n/**\n * Deprecated - use string-alphanumeric instead.\n * \n *   Generate alphanumeric strings.\n */\nclojure.test.check.generators.string_alpha_numeric = clojure.test.check.generators.string_alphanumeric;\nclojure.test.check.generators.digit_QMARK_ = (function clojure$test$check$generators$digit_QMARK_(d){\nreturn goog.string.isNumeric(d);\n});\n/**\n * Returns true if c is \\+ or \\- and d is non-nil and a digit.\n * \n *   Symbols that start with +3 or -2 are not readable because they look\n *   like numbers.\n */\nclojure.test.check.generators._PLUS__or___digit_QMARK_ = (function clojure$test$check$generators$_PLUS__or___digit_QMARK_(c,d){\nreturn cljs.core.boolean$.call(null,(function (){var and__19647__auto__ = d;\nif(cljs.core.truth_(and__19647__auto__)){\nvar and__19647__auto____$1 = ((\"+\" === c)) || ((\"-\" === c));\nif(and__19647__auto____$1){\nreturn clojure.test.check.generators.digit_QMARK_.call(null,d);\n} else {\nreturn and__19647__auto____$1;\n}\n} else {\nreturn and__19647__auto__;\n}\n})());\n});\n/**\n * Generate the segment of a namespace.\n */\nclojure.test.check.generators.namespace_segment = clojure.test.check.generators.fmap.call(null,(function (p__366){\nvar vec__367 = p__366;\nvar c = cljs.core.nth.call(null,vec__367,(0),null);\nvar cs = cljs.core.nth.call(null,vec__367,(1),null);\nreturn clojure.string.join.call(null,cljs.core.cons.call(null,c,cs));\n}),clojure.test.check.generators.such_that.call(null,(function (p__370){\nvar vec__371 = p__370;\nvar c = cljs.core.nth.call(null,vec__371,(0),null);\nvar vec__374 = cljs.core.nth.call(null,vec__371,(1),null);\nvar d = cljs.core.nth.call(null,vec__374,(0),null);\nreturn cljs.core.not.call(null,clojure.test.check.generators._PLUS__or___digit_QMARK_.call(null,c,d));\n}),clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.char_keyword_first,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.char_keyword_rest))));\n/**\n * Generate a namespace (or nil for no namespace).\n */\nclojure.test.check.generators.namespace = clojure.test.check.generators.fmap.call(null,(function (v){\nif(cljs.core.seq.call(null,v)){\nreturn clojure.string.join.call(null,\".\",v);\n} else {\nreturn null;\n}\n}),clojure.test.check.generators.vector.call(null,clojure.test.check.generators.namespace_segment));\n/**\n * Generate segments of a keyword (between \\:)\n */\nclojure.test.check.generators.keyword_segment_rest = clojure.test.check.generators.fmap.call(null,(function (p__377){\nvar vec__378 = p__377;\nvar c = cljs.core.nth.call(null,vec__378,(0),null);\nvar cs = cljs.core.nth.call(null,vec__378,(1),null);\nreturn clojure.string.join.call(null,cljs.core.cons.call(null,c,cs));\n}),clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.char_keyword_rest,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.char_keyword_rest)));\n/**\n * Generate segments of a keyword that can be first (between \\:)\n */\nclojure.test.check.generators.keyword_segment_first = clojure.test.check.generators.fmap.call(null,(function (p__381){\nvar vec__382 = p__381;\nvar c = cljs.core.nth.call(null,vec__382,(0),null);\nvar cs = cljs.core.nth.call(null,vec__382,(1),null);\nreturn clojure.string.join.call(null,cljs.core.cons.call(null,c,cs));\n}),clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.char_keyword_first,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.char_keyword_rest)));\n/**\n * Scales the sizing down on a keyword or symbol generator so as to\n *   make it reasonable.\n */\nclojure.test.check.generators.resize_symbolish_generator = (function clojure$test$check$generators$resize_symbolish_generator(g){\nreturn clojure.test.check.generators.scale.call(null,(function (p1__39_SHARP_){\nreturn cljs.core.long$.call(null,Math.pow(p1__39_SHARP_,(0.46)));\n}),g);\n});\n/**\n * Generate keywords without namespaces.\n */\nclojure.test.check.generators.keyword = clojure.test.check.generators.resize_symbolish_generator.call(null,clojure.test.check.generators.fmap.call(null,(function (p__385){\nvar vec__386 = p__385;\nvar c = cljs.core.nth.call(null,vec__386,(0),null);\nvar cs = cljs.core.nth.call(null,vec__386,(1),null);\nreturn cljs.core.keyword.call(null,clojure.string.join.call(null,\":\",cljs.core.cons.call(null,c,cs)));\n}),clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.keyword_segment_first,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.keyword_segment_rest))));\n/**\n * Generate keywords with optional namespaces.\n */\nclojure.test.check.generators.keyword_ns = clojure.test.check.generators.resize_symbolish_generator.call(null,clojure.test.check.generators.fmap.call(null,(function (p__389){\nvar vec__390 = p__389;\nvar ns = cljs.core.nth.call(null,vec__390,(0),null);\nvar c = cljs.core.nth.call(null,vec__390,(1),null);\nvar cs = cljs.core.nth.call(null,vec__390,(2),null);\nreturn cljs.core.keyword.call(null,ns,clojure.string.join.call(null,cljs.core.cons.call(null,c,cs)));\n}),clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.namespace,clojure.test.check.generators.char_keyword_first,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.char_keyword_rest))));\nclojure.test.check.generators.char_symbol_first = clojure.test.check.generators.frequency.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(10),clojure.test.check.generators.char_alpha], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),clojure.test.check.generators.char_symbol_special], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.return$.call(null,\".\")], null)], null));\nclojure.test.check.generators.char_symbol_rest = clojure.test.check.generators.frequency.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(10),clojure.test.check.generators.char_alphanumeric], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),clojure.test.check.generators.char_symbol_special], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.return$.call(null,\".\")], null)], null));\n/**\n * Generate symbols without namespaces.\n */\nclojure.test.check.generators.symbol = clojure.test.check.generators.frequency.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),clojure.test.check.generators.resize_symbolish_generator.call(null,clojure.test.check.generators.fmap.call(null,(function (p__393){\nvar vec__394 = p__393;\nvar c = cljs.core.nth.call(null,vec__394,(0),null);\nvar cs = cljs.core.nth.call(null,vec__394,(1),null);\nreturn cljs.core.symbol.call(null,clojure.string.join.call(null,cljs.core.cons.call(null,c,cs)));\n}),clojure.test.check.generators.such_that.call(null,(function (p__397){\nvar vec__398 = p__397;\nvar c = cljs.core.nth.call(null,vec__398,(0),null);\nvar vec__401 = cljs.core.nth.call(null,vec__398,(1),null);\nvar d = cljs.core.nth.call(null,vec__401,(0),null);\nreturn cljs.core.not.call(null,clojure.test.check.generators._PLUS__or___digit_QMARK_.call(null,c,d));\n}),clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.char_symbol_first,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.char_symbol_rest)))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.return$.call(null,new cljs.core.Symbol(null,\"/\",\"/\",(-1371932971),null))], null)], null));\n/**\n * Generate symbols with optional namespaces.\n */\nclojure.test.check.generators.symbol_ns = clojure.test.check.generators.frequency.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(100),clojure.test.check.generators.resize_symbolish_generator.call(null,clojure.test.check.generators.fmap.call(null,(function (p__404){\nvar vec__405 = p__404;\nvar ns = cljs.core.nth.call(null,vec__405,(0),null);\nvar c = cljs.core.nth.call(null,vec__405,(1),null);\nvar cs = cljs.core.nth.call(null,vec__405,(2),null);\nreturn cljs.core.symbol.call(null,ns,clojure.string.join.call(null,cljs.core.cons.call(null,c,cs)));\n}),clojure.test.check.generators.such_that.call(null,(function (p__408){\nvar vec__409 = p__408;\nvar _ = cljs.core.nth.call(null,vec__409,(0),null);\nvar c = cljs.core.nth.call(null,vec__409,(1),null);\nvar vec__412 = cljs.core.nth.call(null,vec__409,(2),null);\nvar d = cljs.core.nth.call(null,vec__412,(0),null);\nreturn cljs.core.not.call(null,clojure.test.check.generators._PLUS__or___digit_QMARK_.call(null,c,d));\n}),clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.namespace,clojure.test.check.generators.char_symbol_first,clojure.test.check.generators.vector.call(null,clojure.test.check.generators.char_symbol_rest)))))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),clojure.test.check.generators.return$.call(null,new cljs.core.Symbol(null,\"/\",\"/\",(-1371932971),null))], null)], null));\n/**\n * Generates a `clojure.lang.Ratio`. Shrinks toward 0. Not all values generated\n *   will be ratios, as many values returned by `/` are not ratios.\n */\nclojure.test.check.generators.ratio = clojure.test.check.generators.fmap.call(null,(function (p__415){\nvar vec__416 = p__415;\nvar a = cljs.core.nth.call(null,vec__416,(0),null);\nvar b = cljs.core.nth.call(null,vec__416,(1),null);\nreturn (a / b);\n}),clojure.test.check.generators.tuple.call(null,clojure.test.check.generators.int$,clojure.test.check.generators.such_that.call(null,cljs.core.complement.call(null,cljs.core.zero_QMARK_),clojure.test.check.generators.int$)));\n/**\n * Generates a random type-4 UUID. Does not shrink.\n */\nclojure.test.check.generators.uuid = clojure.test.check.generators.no_shrink.call(null,clojure.test.check.generators.fmap.call(null,(function (nibbles){\nvar hex = (function clojure$test$check$generators$hex(idx){\nreturn nibbles.call(null,idx).toString((16));\n});\nvar rhex = ((nibbles.call(null,(15)) & (3)) + (8)).toString((16));\nreturn cljs.core.uuid.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(0))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(1))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(2))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(3))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(4))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(5))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(6))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(7))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"-\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(8))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(9))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(10))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(11))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"-\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"4\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(12))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(13))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(14))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"-\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(16))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(17))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(18))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"-\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(19))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(20))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(21))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(22))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(23))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(24))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(25))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(26))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(27))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(28))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(29))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex.call(null,(30)))].join(''));\n}),clojure.test.check.generators.vector.call(null,clojure.test.check.generators.choose.call(null,(0),(15)),(31))));\nclojure.test.check.generators.simple_type = clojure.test.check.generators.one_of.call(null,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.test.check.generators.int$,clojure.test.check.generators.large_integer,clojure.test.check.generators.double$,clojure.test.check.generators.char$,clojure.test.check.generators.string,clojure.test.check.generators.ratio,clojure.test.check.generators.boolean$,clojure.test.check.generators.keyword,clojure.test.check.generators.keyword_ns,clojure.test.check.generators.symbol,clojure.test.check.generators.symbol_ns,clojure.test.check.generators.uuid], null));\nclojure.test.check.generators.simple_type_printable = clojure.test.check.generators.one_of.call(null,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.test.check.generators.int$,clojure.test.check.generators.large_integer,clojure.test.check.generators.double$,clojure.test.check.generators.char_ascii,clojure.test.check.generators.string_ascii,clojure.test.check.generators.ratio,clojure.test.check.generators.boolean$,clojure.test.check.generators.keyword,clojure.test.check.generators.keyword_ns,clojure.test.check.generators.symbol,clojure.test.check.generators.symbol_ns,clojure.test.check.generators.uuid], null));\nclojure.test.check.generators.hashable_QMARK_ = (function clojure$test$check$generators$hashable_QMARK_(x){\nif(typeof x === 'number'){\nreturn cljs.core.not.call(null,(function (){var or__19662__auto__ = isNaN(x);\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nreturn (cljs.core._EQ_.call(null,clojure.test.check.generators.NEG_INFINITY,x)) || (cljs.core._EQ_.call(null,clojure.test.check.generators.POS_INFINITY,x));\n}\n})());\n} else {\nreturn true;\n}\n});\nclojure.test.check.generators.container_type = (function clojure$test$check$generators$container_type(inner_type){\nreturn clojure.test.check.generators.one_of.call(null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.test.check.generators.vector.call(null,inner_type),clojure.test.check.generators.list.call(null,inner_type),clojure.test.check.generators.set.call(null,clojure.test.check.generators.such_that.call(null,clojure.test.check.generators.hashable_QMARK_,inner_type)),clojure.test.check.generators.scale.call(null,(function (p1__40_SHARP_){\nreturn cljs.core.quot.call(null,p1__40_SHARP_,(2));\n}),clojure.test.check.generators.map.call(null,clojure.test.check.generators.such_that.call(null,clojure.test.check.generators.hashable_QMARK_,inner_type),inner_type))], null));\n});\nclojure.test.check.generators.size__GT_max_leaf_count = (function clojure$test$check$generators$size__GT_max_leaf_count(size){\nreturn cljs.core.long$.call(null,Math.pow(size,(1.1)));\n});\nvar log2_425 = Math.log((2));\n/**\n * Returns (not generates) a random collection of integers `xs`\n *   greater than 1 such that (<= (apply * xs) n).\n */\nclojure.test.check.generators.random_pseudofactoring = ((function (log2_425){\nreturn (function clojure$test$check$generators$random_pseudofactoring(n,rng){\nif((n <= (2))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null);\n} else {\nvar log = Math.log(n);\nvar vec__422 = clojure.test.check.random.split.call(null,rng);\nvar r1 = cljs.core.nth.call(null,vec__422,(0),null);\nvar r2 = cljs.core.nth.call(null,vec__422,(1),null);\nvar n1 = cljs.core.long$.call(null,Math.exp(((clojure.test.check.random.rand_double.call(null,r1) * (log - log2_425)) + log2_425)));\nvar n2 = cljs.core.quot.call(null,n,n1);\nif((((1) < n1)) && (((1) < n2))){\nreturn cljs.core.cons.call(null,n1,clojure.test.check.generators.random_pseudofactoring.call(null,n2,r2));\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null);\n}\n}\n});})(log2_425))\n;\n/**\n * Like sized, but passes an rng instead of a size.\n */\nclojure.test.check.generators.randomized = (function clojure$test$check$generators$randomized(func){\nreturn clojure.test.check.generators.make_gen.call(null,(function (rng,size){\nvar vec__429 = clojure.test.check.random.split.call(null,rng);\nvar r1 = cljs.core.nth.call(null,vec__429,(0),null);\nvar r2 = cljs.core.nth.call(null,vec__429,(1),null);\nreturn clojure.test.check.generators.call_gen.call(null,func.call(null,r1),r2,size);\n}));\n});\n/**\n * This is a helper for writing recursive (tree-shaped) generators. The first\n *   argument should be a function that takes a generator as an argument, and\n *   produces another generator that 'contains' that generator. The vector function\n *   in this namespace is a simple example. The second argument is a scalar\n *   generator, like boolean. For example, to produce a tree of booleans:\n * \n *  (gen/recursive-gen gen/vector gen/boolean)\n * \n *   Vectors or maps either recurring or containing booleans or integers:\n * \n *  (gen/recursive-gen (fn [inner] (gen/one-of [(gen/vector inner)\n *                                              (gen/map inner inner)]))\n *                     (gen/one-of [gen/boolean gen/int]))\n * \n *   Note that raw scalar values will be generated as well. To prevent this, you\n *   can wrap the returned generator with the function passed as the first arg,\n *   e.g.:\n * \n *  (gen/vector (gen/recursive-gen gen/vector gen/boolean))\n */\nclojure.test.check.generators.recursive_gen = (function clojure$test$check$generators$recursive_gen(container_gen_fn,scalar_gen){\nif(cljs.core.truth_(clojure.test.check.generators.generator_QMARK_.call(null,scalar_gen))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Second arg to recursive-gen must be a generator\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(generator? scalar-gen)\")].join('')));\n}\n\nreturn clojure.test.check.generators.sized.call(null,(function (size){\nreturn clojure.test.check.generators.bind.call(null,clojure.test.check.generators.choose.call(null,(0),clojure.test.check.generators.size__GT_max_leaf_count.call(null,size)),(function (max_leaf_count){\nreturn clojure.test.check.generators.randomized.call(null,(function (rng){\nvar sizes = clojure.test.check.generators.random_pseudofactoring.call(null,max_leaf_count,rng);\nvar sized_scalar_gen = clojure.test.check.generators.resize.call(null,size,scalar_gen);\nreturn cljs.core.reduce.call(null,((function (sizes,sized_scalar_gen){\nreturn (function (g,size__$1){\nreturn clojure.test.check.generators.bind.call(null,clojure.test.check.generators.choose.call(null,(0),(10)),((function (sizes,sized_scalar_gen){\nreturn (function (x){\nif((x === (0))){\nreturn sized_scalar_gen;\n} else {\nreturn clojure.test.check.generators.resize.call(null,size__$1,container_gen_fn.call(null,g));\n}\n});})(sizes,sized_scalar_gen))\n);\n});})(sizes,sized_scalar_gen))\n,sized_scalar_gen,sizes);\n}));\n}));\n}));\n});\n/**\n * A recursive generator that will generate many different, often nested, values\n */\nclojure.test.check.generators.any = clojure.test.check.generators.recursive_gen.call(null,clojure.test.check.generators.container_type,clojure.test.check.generators.simple_type);\n/**\n * Like any, but avoids characters that the shell will interpret as actions,\n *   like 7 and 14 (bell and alternate character set command)\n */\nclojure.test.check.generators.any_printable = clojure.test.check.generators.recursive_gen.call(null,clojure.test.check.generators.container_type,clojure.test.check.generators.simple_type_printable);\nvar ret__21071__auto___439 = (function (){\n/**\n * Macro for building generators using values from other generators.\n *   Uses a binding vector with the same syntax as clojure.core/let,\n *   where the right-hand side of the binding pairs are generators, and\n *   the left-hand side are names (or destructuring forms) for generated\n *   values.\n * \n *   Subsequent generator expressions can refer to the previously bound\n *   values, in the same way as clojure.core/let.\n * \n *   Alternately, when the clauses are all independent, you can use a\n *   map instead of a vector for the bindings. This will expand to\n *   `tuple` instead of `bind`, which allows more effective shrinking.\n * \n *   The body of the let can be either a value or a generator, and does\n *   the expected thing in either case. In this way let provides the\n *   functionality of both `bind` and `fmap`.\n * \n *   Examples:\n * \n *  (gen/let [strs (gen/not-empty (gen/list gen/string))\n *            s (gen/elements strs)]\n *    {:some-strings strs\n *     :one-of-those-strings s})\n * \n *  ;; map bindings for independent generators:\n *  (gen/let {a gen/large-integer\n *            b gen/large-integer}\n *    (+' a b))\n * \n *  ;; generates collections of \"users\" that have integer IDs\n *  ;; from 0...N-1, but are in a random order\n *  (gen/let [users (gen/list (gen/hash-map :name gen/string-ascii\n *                                          :age gen/nat))]\n *    (->> users\n *         (map #(assoc %2 :id %1) (range))\n *         (gen/shuffle)))\n */\nclojure.test.check.generators.let$ = (function clojure$test$check$generators$let(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___440 = arguments.length;\nvar i__21021__auto___441 = (0);\nwhile(true){\nif((i__21021__auto___441 < len__21020__auto___440)){\nargs__21023__auto__.push((arguments[i__21021__auto___441]));\n\nvar G__442 = (i__21021__auto___441 + (1));\ni__21021__auto___441 = G__442;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn clojure.test.check.generators.let$.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\nclojure.test.check.generators.let$.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,bindings,body){\nif(cljs.core.vector_QMARK_.call(null,bindings)){\nif(cljs.core.even_QMARK_.call(null,cljs.core.count.call(null,bindings))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"gen/let requires an even number of forms in binding vector\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(even? (count bindings))\")].join('')));\n}\n\nif(cljs.core.empty_QMARK_.call(null,bindings)){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"val__41__auto__\",\"val__41__auto__\",(625028792),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),body));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"clojure.test.check.generators\",\"generator?\",\"clojure.test.check.generators/generator?\",(-1378210460),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"val__41__auto__\",\"val__41__auto__\",(625028792),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"val__41__auto__\",\"val__41__auto__\",(625028792),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"clojure.test.check.generators\",\"return\",\"clojure.test.check.generators/return\",(1744522038),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"val__41__auto__\",\"val__41__auto__\",(625028792),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n} else {\nvar vec__436 = bindings;\nvar seq__437 = cljs.core.seq.call(null,vec__436);\nvar first__438 = cljs.core.first.call(null,seq__437);\nvar seq__437__$1 = cljs.core.next.call(null,seq__437);\nvar binding = first__438;\nvar first__438__$1 = cljs.core.first.call(null,seq__437__$1);\nvar seq__437__$2 = cljs.core.next.call(null,seq__437__$1);\nvar gen = first__438__$1;\nvar more = seq__437__$2;\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"clojure.test.check.generators\",\"bind\",\"clojure.test.check.generators/bind\",(-361313906),null)),(function (){var x__20731__auto__ = gen;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(function (){var x__20731__auto__ = binding;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"clojure.test.check.generators\",\"let\",\"clojure.test.check.generators/let\",(-2079390126),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,more)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n}\n} else {\nif(cljs.core.map_QMARK_.call(null,bindings)){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"clojure.test.check.generators\",\"let\",\"clojure.test.check.generators/let\",(-2079390126),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core.keys.call(null,bindings))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"clojure.test.check.generators\",\"tuple\",\"clojure.test.check.generators/tuple\",(-143711557),null)),cljs.core.vals.call(null,bindings)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\n} else {\nthrow cljs.core.ex_info.call(null,\"gen/let requires a vector or map of bindings\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"arg\",\"arg\",(-1747261837)),bindings], null));\n\n}\n}\n});\n\nclojure.test.check.generators.let$.cljs$lang$maxFixedArity = (3);\n\nclojure.test.check.generators.let$.cljs$lang$applyTo = (function (seq432){\nvar G__433 = cljs.core.first.call(null,seq432);\nvar seq432__$1 = cljs.core.next.call(null,seq432);\nvar G__434 = cljs.core.first.call(null,seq432__$1);\nvar seq432__$2 = cljs.core.next.call(null,seq432__$1);\nvar G__435 = cljs.core.first.call(null,seq432__$2);\nvar seq432__$3 = cljs.core.next.call(null,seq432__$2);\nreturn clojure.test.check.generators.let$.cljs$core$IFn$_invoke$arity$variadic(G__433,G__434,G__435,seq432__$3);\n});\n\nreturn null;\n})()\n;\nclojure.test.check.generators.let$.cljs$lang$macro = true;\n\n","cljs/support$macros.js":"goog.provide('cljs.support');\ngoog.require('cljs.core');\nvar ret__21071__auto___658 = (function (){\n/**\n * Internal - do not use!\n */\ncljs.support.assert_args = (function cljs$support$assert_args(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___659 = arguments.length;\nvar i__21021__auto___660 = (0);\nwhile(true){\nif((i__21021__auto___660 < len__21020__auto___659)){\nargs__21023__auto__.push((arguments[i__21021__auto___660]));\n\nvar G__661 = (i__21021__auto___660 + (1));\ni__21021__auto___660 = G__661;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.support.assert_args.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.support.assert_args.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,fnname,pairs){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when-not\",\"cljs.core/when-not\",(-556141047),null)),(function (){var x__20731__auto__ = cljs.core.first.call(null,pairs);\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"throw\",\"throw\",(595905694),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"ex-info\",\"cljs.core/ex-info\",(-409744395),null)),(function (){var x__20731__auto__ = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(fnname),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\" requires \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null,pairs))].join('');\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.apply.call(null,cljs.core.array_map,cljs.core.sequence.call(null,cljs.core.concat.call(null)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = (function (){var more = cljs.core.nnext.call(null,pairs);\nif(cljs.core.truth_(more)){\nreturn cljs.core.list_STAR_.call(null,new cljs.core.Symbol(\"cljs.support\",\"assert-args\",\"cljs.support/assert-args\",(-1359206108),null),fnname,more);\n} else {\nreturn null;\n}\n})();\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.support.assert_args.cljs$lang$maxFixedArity = (3);\n\ncljs.support.assert_args.cljs$lang$applyTo = (function (seq654){\nvar G__655 = cljs.core.first.call(null,seq654);\nvar seq654__$1 = cljs.core.next.call(null,seq654);\nvar G__656 = cljs.core.first.call(null,seq654__$1);\nvar seq654__$2 = cljs.core.next.call(null,seq654__$1);\nvar G__657 = cljs.core.first.call(null,seq654__$2);\nvar seq654__$3 = cljs.core.next.call(null,seq654__$2);\nreturn cljs.support.assert_args.cljs$core$IFn$_invoke$arity$variadic(G__655,G__656,G__657,seq654__$3);\n});\n\nreturn null;\n})()\n;\ncljs.support.assert_args.cljs$lang$macro = true;\n\n","clojure/test/check/random/longs/bit_count_impl.js":"// Compiled by ClojureScript 1.9.542\ngoog.provide(\"clojure.test.check.random.longs.bit_count_impl\");\nclojure.test.check.random.longs.bit_count_impl.lookup = (function (){var arr = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(arr[(0)] = (0));\n\nvar n__20816__auto___25 = (256);\nvar i_26 = (0);\nwhile(true){\nif((i_26 < n__20816__auto___25)){\n(arr[i_26] = ((arr[(i_26 >> (1))]) + (i_26 & (1))));\n\nvar G__27 = (i_26 + (1));\ni_26 = G__27;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn arr;\n})();\n/**\n * Returns a JS number (not a Long), the number of set bits in the\n *   given Long.\n */\nclojure.test.check.random.longs.bit_count_impl.bit_count = (function clojure$test$check$random$longs$bit_count_impl$bit_count(x){\nvar low = x.low_;\nvar high = x.high_;\nreturn ((((((((clojure.test.check.random.longs.bit_count_impl.lookup[(low & (255))]) + (clojure.test.check.random.longs.bit_count_impl.lookup[((low >> (8)) & (255))])) + (clojure.test.check.random.longs.bit_count_impl.lookup[((low >> (16)) & (255))])) + (clojure.test.check.random.longs.bit_count_impl.lookup[((low >> (24)) & (255))])) + (clojure.test.check.random.longs.bit_count_impl.lookup[(high & (255))])) + (clojure.test.check.random.longs.bit_count_impl.lookup[((high >> (8)) & (255))])) + (clojure.test.check.random.longs.bit_count_impl.lookup[((high >> (16)) & (255))])) + (clojure.test.check.random.longs.bit_count_impl.lookup[((high >> (24)) & (255))]));\n});\n","cljs/spec/gen/alpha$macros.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$delay\"]],\"~:name\",\"~$cljs.spec.gen.alpha$macros\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$c\",\"~$cljs.core\",\"^<\",\"^<\",\"~$string\",\"~$clojure.string\",\"^>\",\"^>\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$dynaload\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"~$cljs.spec.gen.alpha\",\"~:line\",14,\"~:column\",11,\"~:end-line\",14,\"~:end-column\",19,\"~:macro\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^L\",[[[\"^M\",\"~$s\"]]]]]]],\"^8\",\"~$cljs.spec.gen.alpha$macros/dynaload\",\"~:variadic\",false,\"^D\",\"cljs/spec/gen/alpha.cljc\",\"^I\",19,\"~:method-params\",[\"^L\",[[\"~$&form\",\"~$&env\",\"~$p__383\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^L\",[null,null]],\"^G\",1,\"^F\",14,\"^J\",true,\"^H\",14,\"~:max-fixed-arity\",3,\"~:fn-var\",false,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[[\"^M\",\"~$s\"]]]]]]],\"^7\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^E\",\"^I\",16,\"~:top-fn\",[\"^ \",\"^O\",true,\"^V\",2,\"^P\",[[\"^L\",[\"^Q\",\"^R\",\"~$body\"]]],\"^K\",[\"^L\",[[\"^Q\",\"^R\",\"~$&\",\"^Y\"]]],\"^U\",[\"^L\",[null]]],\"^G\",11,\"^F\",32,\"^J\",true,\"^H\",32,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$&\",\"^Y\"]]]]],\"~:doc\",\"given body that returns a generator, returns a\\n  generator that delegates to that, but delays\\n  creation until used.\"],\"^8\",\"~$cljs.spec.gen.alpha$macros/delay\",\"^O\",true,\"^D\",\"cljs/spec/gen/alpha.cljc\",\"^I\",16,\"^X\",[\"^ \",\"^O\",true,\"^V\",2,\"^P\",[[\"^L\",[\"^Q\",\"^R\",\"^Y\"]]],\"^K\",[\"^L\",[[\"^Q\",\"^R\",\"~$&\",\"^Y\"]]],\"^U\",[\"^L\",[null]]],\"^P\",[[\"^L\",[\"^Q\",\"^R\",\"^Y\"]]],\"^T\",null,\"^U\",[\"^L\",[null]],\"^G\",1,\"^F\",32,\"^J\",true,\"^H\",32,\"^V\",2,\"^W\",false,\"^K\",[\"^L\",[[\"^Q\",\"^R\",\"~$&\",\"^Y\"]]],\"^Z\",\"given body that returns a generator, returns a\\n  generator that delegates to that, but delays\\n  creation until used.\"],\"~$lazy-combinator\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^E\",\"^I\",38,\"~:skip-wiki\",true,\"^G\",23,\"^F\",39,\"^J\",true,\"^H\",39,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$s\"]]]]],\"^Z\",\"Implementation macro, do not call directly.\"],\"^8\",\"~$cljs.spec.gen.alpha$macros/lazy-combinator\",\"^O\",false,\"^D\",\"cljs/spec/gen/alpha.cljc\",\"^I\",38,\"^P\",[\"^L\",[[\"^Q\",\"^R\",\"~$s\"]]],\"^T\",null,\"^11\",true,\"^U\",[\"^L\",[null,null]],\"^G\",1,\"^F\",39,\"^J\",true,\"^H\",39,\"^V\",3,\"^W\",false,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$s\"]]]]],\"^Z\",\"Implementation macro, do not call directly.\"],\"~$lazy-combinators\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^E\",\"^I\",39,\"^X\",[\"^ \",\"^O\",true,\"^V\",2,\"^P\",[[\"^L\",[\"^Q\",\"^R\",\"~$syms\"]]],\"^K\",[\"^L\",[[\"^Q\",\"^R\",\"~$&\",\"^14\"]]],\"^U\",[\"^L\",[null]]],\"^11\",true,\"^G\",23,\"^F\",50,\"^J\",true,\"^H\",50,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$&\",\"^14\"]]]]],\"^Z\",\"Implementation macro, do not call directly.\"],\"^8\",\"~$cljs.spec.gen.alpha$macros/lazy-combinators\",\"^O\",true,\"^D\",\"cljs/spec/gen/alpha.cljc\",\"^I\",39,\"^X\",[\"^ \",\"^O\",true,\"^V\",2,\"^P\",[[\"^L\",[\"^Q\",\"^R\",\"^14\"]]],\"^K\",[\"^L\",[[\"^Q\",\"^R\",\"~$&\",\"^14\"]]],\"^U\",[\"^L\",[null]]],\"^P\",[[\"^L\",[\"^Q\",\"^R\",\"^14\"]]],\"^T\",null,\"^11\",true,\"^U\",[\"^L\",[null]],\"^G\",1,\"^F\",50,\"^J\",true,\"^H\",50,\"^V\",2,\"^W\",false,\"^K\",[\"^L\",[[\"^Q\",\"^R\",\"~$&\",\"^14\"]]],\"^Z\",\"Implementation macro, do not call directly.\"],\"~$lazy-prim\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^E\",\"^I\",32,\"^11\",true,\"^G\",23,\"^F\",58,\"^J\",true,\"^H\",58,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$s\"]]]]],\"^Z\",\"Implementation macro, do not call directly.\"],\"^8\",\"~$cljs.spec.gen.alpha$macros/lazy-prim\",\"^O\",false,\"^D\",\"cljs/spec/gen/alpha.cljc\",\"^I\",32,\"^P\",[\"^L\",[[\"^Q\",\"^R\",\"~$s\"]]],\"^T\",null,\"^11\",true,\"^U\",[\"^L\",[null,null]],\"^G\",1,\"^F\",58,\"^J\",true,\"^H\",58,\"^V\",3,\"^W\",false,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$s\"]]]]],\"^Z\",\"Implementation macro, do not call directly.\"],\"~$lazy-prims\",[\"^ \",\"^B\",null,\"^C\",[\"^ \",\"^D\",\"^E\",\"^I\",33,\"^X\",[\"^ \",\"^O\",true,\"^V\",2,\"^P\",[[\"^L\",[\"^Q\",\"^R\",\"^14\"]]],\"^K\",[\"^L\",[[\"^Q\",\"^R\",\"~$&\",\"^14\"]]],\"^U\",[\"^L\",[null]]],\"^11\",true,\"^G\",23,\"^F\",69,\"^J\",true,\"^H\",69,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$&\",\"^14\"]]]]],\"^Z\",\"Implementation macro, do not call directly.\"],\"^8\",\"~$cljs.spec.gen.alpha$macros/lazy-prims\",\"^O\",true,\"^D\",\"cljs/spec/gen/alpha.cljc\",\"^I\",33,\"^X\",[\"^ \",\"^O\",true,\"^V\",2,\"^P\",[[\"^L\",[\"^Q\",\"^R\",\"^14\"]]],\"^K\",[\"^L\",[[\"^Q\",\"^R\",\"~$&\",\"^14\"]]],\"^U\",[\"^L\",[null]]],\"^P\",[[\"^L\",[\"^Q\",\"^R\",\"^14\"]]],\"^T\",null,\"^11\",true,\"^U\",[\"^L\",[null]],\"^G\",1,\"^F\",69,\"^J\",true,\"^H\",69,\"^V\",2,\"^W\",false,\"^K\",[\"^L\",[[\"^Q\",\"^R\",\"~$&\",\"^14\"]]],\"^Z\",\"Implementation macro, do not call directly.\"]],\"~:require-macros\",[\"^ \"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^6\",[\"~$&\",\"~$cljs.core/exists?\",\"^16\",\"~$cljs.core/str\",\"^17\",\"^[\",\"^Y\",\"~$cljs.spec.gen.alpha/dynaload\",\"~$cljs.spec.gen.alpha/lazy-combinator\",\"~$cljs.spec.gen.alpha/LazyVar.\",\"^7\",\"~$cljs.core/deref\",\"~$cljs.core/apply\",\"~$args\",\"~$cljs.spec.gen.alpha/delay-impl\",\"^18\",\"~:ns\",\"^8\",\"^Q\",\"^O\",\"^D\",\"^I\",\"^X\",\"~$cljs.core/defn\",\"~$cljs.spec.gen.alpha/lazy-prim\",\"^A\",\"~$do\",\"^P\",\"^N\",\"^11\",\"~$if\",\"^U\",\"~$cljs.core/namespace\",\"^G\",\"^9\",\"~$cljs.core/let\",\"^15\",\"~$g__16__auto__\",\"~$g__17__auto__\",\"^13\",\"^F\",\"^J\",\"~$js/Error.\",\"~$s\",\"^14\",\"^R\",\"^19\",\"~$cljs.core/fn\",\"^H\",\"~:cljs.analyzer/no-resolve\",\"^V\",\"^M\",\"^K\",\"~$cljs.core/and\",\"~$cljs.core/delay\",\"^Z\",\"^12\",\"~:test\",\"~$throw\",\"^10\"]],\"~:order\",[\"^1=\",\"^1A\",\"^1P\",\"^1J\",\"^1R\",\"^1Q\",\"^1U\",\"^1O\",\"^1>\",\"^M\",\"^1K\",\"^N\",\"^1F\",\"^8\",\"^D\",\"^I\",\"^G\",\"^F\",\"^J\",\"^H\",\"^K\",\"^Z\",\"^1T\",\"^9\",\"^A\",\"~$s\",\"^[\",\"^X\",\"^7\",\"^O\",\"^V\",\"^P\",\"^U\",\"^Q\",\"^R\",\"^Y\",\"~$&\",\"^1E\",\"^1S\",\"^1L\",\"^1M\",\"^1?\",\"^1G\",\"^1D\",\"^1C\",\"^1B\",\"^12\",\"^11\",\"^10\",\"^15\",\"^13\",\"^14\",\"^1I\",\"^1@\",\"^1N\",\"^17\",\"^16\",\"^19\",\"^18\",\"^1H\"]],\"^Z\",null]","cljs/spec/test/alpha.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$window\",[\"^ \",\"~$location\",[\"^ \",\"~$host\",[\"^ \"],\"~$port\",[\"^ \"]]],\"~$Error\",[\"^ \",\"~$prototype\",[\"^ \",\"~$stack\",[\"^ \"]]],\"~$goog\",[\"^ \",\"~$string\",[\"^ \",\"~$StringBuffer\",[\"^ \",\"^8\",[\"^ \",\"~$append\",[\"^ \"]]]]]],\"~:use-macros\",[\"^ \",\"~$with-instrument-disabled\",\"~$cljs.spec.test.alpha\"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"^@\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$goog.userAgent.product\",\"^F\",\"~$cljs.stacktrace\",\"^G\",\"~$gobj\",\"~$goog.object\",\"~$stc\",\"~$clojure.test.check\",\"^I\",\"^I\",\"~$gen\",\"~$cljs.spec.gen.alpha\",\"~$pp\",\"~$cljs.pprint\",\"^K\",\"^K\",\"^O\",\"^O\",\"~$s\",\"~$cljs.spec.alpha\",\"^;\",\"~$clojure.string\",\"~$clojure.test.check.properties\",\"^R\",\"~$product\",\"^F\",\"^Q\",\"^Q\",\"~$st\",\"^G\",\"^P\",\"^P\",\"^M\",\"^M\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$failure-type\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"~:line\",236,\"~:column\",8,\"~:end-line\",236,\"~:end-column\",20,\"~:private\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^15\",[[\"~$x\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/failure-type\",\"~:variadic\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",20,\"~:method-params\",[\"^15\",[[\"~$x\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^15\",[null,null]],\"^10\",1,\"^[\",236,\"^11\",236,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$get-env\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",60,\"^10\",7,\"^11\",60,\"^12\",14,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"^C\",\"~$cljs.spec.test.alpha/get-env\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",14,\"^19\",[\"^15\",[[]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",60,\"^11\",60,\"^1<\",0,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"~$instrument-choose-fn\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",125,\"^10\",8,\"^11\",125,\"^12\",28,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"~$spec\",\"~$sym\",[\"^ \",\"~$over\",\"~:gen\",\"~:keys\",[\"~$stub\",\"~$replace\"]]]]]]],\"~:doc\",\"Helper for instrument.\"],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/instrument-choose-fn\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",28,\"^19\",[\"^15\",[[\"~$f\",\"^1A\",\"^1B\",\"~$p__24355\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",125,\"^11\",125,\"^1<\",4,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"^1A\",\"^1B\",[\"^ \",\"^1C\",\"^1D\",\"^1E\",[\"^1F\",\"^1G\"]]]]]]],\"^1H\",\"Helper for instrument.\"],\"~$explain-data*\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",69,\"^10\",8,\"^11\",69,\"^12\",21,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1A\",\"~$v\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/explain-data*\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",21,\"^19\",[\"^15\",[[\"^1A\",\"~$v\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",69,\"^11\",69,\"^1<\",2,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1A\",\"~$v\"]]]]]],\"~$explain-check\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",182,\"^10\",8,\"^11\",182,\"^12\",21,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$args\",\"^1A\",\"~$v\",\"~$role\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/explain-check\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",21,\"^19\",[\"^15\",[[\"^1N\",\"^1A\",\"~$v\",\"^1O\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",182,\"^11\",182,\"^1<\",4,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1N\",\"^1A\",\"~$v\",\"^1O\"]]]]]],\"~$distinct-by\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",22,\"^10\",7,\"^11\",22,\"^12\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"~$coll\"]]]]]],\"^C\",\"~$cljs.spec.test.alpha/distinct-by\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",18,\"^19\",[\"^15\",[[\"~$f\",\"^1R\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",22,\"^11\",22,\"^1<\",2,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"^1R\"]]]]]],\"~$*instrument-enabled*\",[\"^ \",\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",41,\"^10\",26,\"^11\",41,\"^12\",46,\"~:dynamic\",true,\"^13\",true],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/*instrument-enabled*\",\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",46,\"^10\",1,\"^1U\",true,\"^[\",41,\"^11\",41,\"~:tag\",\"~$boolean\",\"^1H\",\"if false, instrumented fns call straight through\"],\"~$collectionize\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",163,\"^10\",8,\"^11\",163,\"^12\",21,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/collectionize\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",21,\"^19\",[\"^15\",[[\"~$x\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",163,\"^11\",163,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$instrumented-vars\",[\"^ \",\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",123,\"^10\",20,\"^11\",123,\"^12\",37,\"^13\",true],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/instrumented-vars\",\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",37,\"^10\",1,\"^[\",123,\"^11\",123,\"^1W\",\"~$any\"],\"~$summarize-results\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",269,\"^10\",7,\"^11\",269,\"^12\",24,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$check-results\"],[\"^23\",\"~$summary-result\"]]]]],\"^1H\",\"Given a collection of check-results, e.g. from 'check', pretty\\nprints the summary-result (default abbrev-result) of each.\\n\\nReturns a map with :total, the total number of results, plus a\\nkey with a count for each different :type of result.\",\"~:top-fn\",[\"^ \",\"^18\",false,\"^1<\",2,\"^19\",[\"^15\",[[\"^23\"],[\"^23\",\"^24\"]]],\"^14\",[\"^15\",[[\"^23\"],[\"^23\",\"^24\"]]],\"^1;\",[\"^15\",[null,null]]]],\"^C\",\"~$cljs.spec.test.alpha/summarize-results\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",24,\"^25\",[\"^ \",\"^18\",false,\"^1<\",2,\"^19\",[\"^15\",[[\"^23\"],[\"^23\",\"^24\"]]],\"^14\",[\"^15\",[[\"^23\"],[\"^23\",\"^24\"]]],\"^1;\",[\"^15\",[null,null]]],\"^19\",[\"^15\",[[\"^23\"],[\"^23\",\"^24\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",269,\"^11\",269,\"^1<\",2,\"^1=\",true,\"^14\",[\"^15\",[[\"^23\"],[\"^23\",\"^24\"]]],\"^1H\",\"Given a collection of check-results, e.g. from 'check', pretty\\nprints the summary-result (default abbrev-result) of each.\\n\\nReturns a map with :total, the total number of results, plus a\\nkey with a count for each different :type of result.\"],\"~$instrumentable-syms\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",169,\"^10\",7,\"^11\",169,\"^12\",26,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[],[\"~$opts\"]]]]],\"^1H\",\"Given an opts map as per instrument, returns the set of syms\\nthat can be instrumented.\",\"^25\",[\"^ \",\"^18\",false,\"^1<\",1,\"^19\",[\"^15\",[[],[\"^28\"]]],\"^14\",[\"^15\",[[],[\"^28\"]]],\"^1;\",[\"^15\",[null,null]]]],\"^C\",\"~$cljs.spec.test.alpha/instrumentable-syms\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",26,\"^25\",[\"^ \",\"^18\",false,\"^1<\",1,\"^19\",[\"^15\",[[],[\"^28\"]]],\"^14\",[\"^15\",[[],[\"^28\"]]],\"^1;\",[\"^15\",[null,null]]],\"^19\",[\"^15\",[[],[\"^28\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",169,\"^11\",169,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[[],[\"^28\"]]],\"^1H\",\"Given an opts map as per instrument, returns the set of syms\\nthat can be instrumented.\"],\"~$get-host-port\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",45,\"^10\",7,\"^11\",45,\"^12\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"^C\",\"~$cljs.spec.test.alpha/get-host-port\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",20,\"^19\",[\"^15\",[[]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",45,\"^11\",45,\"^1<\",0,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"~$spec-checking-fn\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",87,\"^10\",8,\"^11\",87,\"^12\",24,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$v\",\"~$f\",\"~$fn-spec\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/spec-checking-fn\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",24,\"^19\",[\"^15\",[[\"~$v\",\"~$f\",\"^2=\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",87,\"^11\",87,\"^1<\",3,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$v\",\"~$f\",\"^2=\"]]]]]],\"~$get-ua-product\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",51,\"^10\",7,\"^11\",51,\"^12\",21,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"^C\",\"~$cljs.spec.test.alpha/get-ua-product\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",21,\"^19\",[\"^15\",[[]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",51,\"^11\",51,\"^1<\",0,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"~$unwrap-failure\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",240,\"^10\",8,\"^11\",240,\"^12\",22,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/unwrap-failure\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",22,\"^19\",[\"^15\",[[\"~$x\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",240,\"^11\",240,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$fn-spec-name?\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",159,\"^10\",8,\"^11\",159,\"^12\",21,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/fn-spec-name?\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",21,\"^19\",[\"^15\",[[\"~$s\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",159,\"^11\",159,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\"]]]]]],\"~$->sym\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",35,\"^10\",7,\"^11\",35,\"^12\",12,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^C\",\"~$cljs.spec.test.alpha/->sym\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",12,\"^19\",[\"^15\",[[\"~$x\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",35,\"^11\",35,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$instrument-1*\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",137,\"^10\",8,\"^11\",137,\"^12\",21,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\",\"~$v\",\"^28\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/instrument-1*\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",21,\"^19\",[\"^15\",[[\"~$s\",\"~$v\",\"^28\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",137,\"^11\",137,\"^1<\",3,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\",\"~$v\",\"^28\"]]]]]],\"~$quick-check\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",209,\"^10\",8,\"^11\",209,\"^12\",19,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"~$specs\",[\"^ \",\"^L\",\"^1D\",\"^28\",\"~:clojure.test.check/opts\"]]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/quick-check\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",19,\"^19\",[\"^15\",[[\"~$f\",\"^2J\",\"~$p__24381\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",209,\"^11\",209,\"^1<\",3,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"^2J\",[\"^ \",\"^L\",\"^1D\",\"^28\",\"^2K\"]]]]]]],\"~$instrument-choose-spec\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",132,\"^10\",8,\"^11\",132,\"^12\",30,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1A\",\"^1B\",[\"^ \",\"~$overrides\",\"~:spec\"]]]]]],\"^1H\",\"Helper for instrument\"],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/instrument-choose-spec\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",30,\"^19\",[\"^15\",[[\"^1A\",\"^1B\",\"~$p__24360\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",132,\"^11\",132,\"^1<\",3,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1A\",\"^1B\",[\"^ \",\"^2O\",\"^2P\"]]]]]],\"^1H\",\"Helper for instrument\"],\"~$find-caller\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",74,\"^10\",8,\"^11\",74,\"^12\",19,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^T\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/find-caller\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",19,\"^19\",[\"^15\",[[\"^T\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",74,\"^11\",74,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^T\"]]]]]],\"~$check-call\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",192,\"^10\",8,\"^11\",192,\"^12\",18,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"^2J\",\"^1N\"]]]]],\"^1H\",\"Returns true if call passes specs, otherwise *returns* an exception\\nwith explain-data + ::s/failure.\"],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/check-call\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",18,\"^19\",[\"^15\",[[\"~$f\",\"^2J\",\"^1N\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",192,\"^11\",192,\"^1<\",3,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"^2J\",\"^1N\"]]]]],\"^1H\",\"Returns true if call passes specs, otherwise *returns* an exception\\nwith explain-data + ::s/failure.\"],\"~$fn-spec?\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",63,\"^10\",8,\"^11\",63,\"^12\",16,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$m\"]]]]],\"^1H\",\"Fn-spec must include at least :args or :ret specs.\"],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/fn-spec?\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",16,\"^19\",[\"^15\",[[\"~$m\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",63,\"^11\",63,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$m\"]]]]],\"^1H\",\"Fn-spec must include at least :args or :ret specs.\"],\"~$no-fspec\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",118,\"^10\",8,\"^11\",118,\"^12\",16,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$v\",\"^1A\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/no-fspec\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",16,\"^19\",[\"^15\",[[\"~$v\",\"^1A\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",118,\"^11\",118,\"^1<\",2,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$v\",\"^1A\"]]]]]],\"~$unstrument-1*\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",150,\"^10\",8,\"^11\",150,\"^12\",21,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\",\"~$v\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/unstrument-1*\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",21,\"^19\",[\"^15\",[[\"~$s\",\"~$v\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",150,\"^11\",150,\"^1<\",2,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\",\"~$v\"]]]]]],\"~$make-check-result\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",218,\"^10\",8,\"^11\",218,\"^12\",25,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$check-sym\",\"^1A\",\"~$test-check-ret\"]]]]],\"^1H\",\"Builds spec result map.\"],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/make-check-result\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",25,\"^19\",[\"^15\",[[\"^32\",\"^1A\",\"^33\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",218,\"^11\",218,\"^1<\",3,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^32\",\"^1A\",\"^33\"]]]]],\"^1H\",\"Builds spec result map.\"],\"~$result-type\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",246,\"^10\",8,\"^11\",246,\"^12\",19,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$ret\"]]]]],\"^1H\",\"Returns the type of the check result. This can be any of the\\n::s/failure keywords documented in 'check', or:\\n\\n  :check-passed   all checked fn returns conformed\\n  :check-threw    checked fn threw an exception\"],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/result-type\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",19,\"^19\",[\"^15\",[[\"^36\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",246,\"^11\",246,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^36\"]]]]],\"^1H\",\"Returns the type of the check result. This can be any of the\\n::s/failure keywords documented in 'check', or:\\n\\n  :check-passed   all checked fn returns conformed\\n  :check-threw    checked fn threw an exception\"],\"~$abbrev-result\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",259,\"^10\",7,\"^11\",259,\"^12\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]],\"^1H\",\"Given a check result, returns an abbreviated version\\nsuitable for summary use.\"],\"^C\",\"~$cljs.spec.test.alpha/abbrev-result\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",20,\"^19\",[\"^15\",[[\"~$x\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",259,\"^11\",259,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]],\"^1H\",\"Given a check result, returns an abbreviated version\\nsuitable for summary use.\"],\"~$validate-check-opts\",[\"^ \",\"^X\",null,\"^Y\",[\"^ \",\"^Z\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/test/alpha.cljs\",\"^[\",230,\"^10\",8,\"^11\",230,\"^12\",27,\"^13\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^28\"]]]]]],\"^13\",true,\"^C\",\"~$cljs.spec.test.alpha/validate-check-opts\",\"^18\",false,\"^Z\",\"out/cljs/spec/test/alpha.cljs\",\"^12\",27,\"^19\",[\"^15\",[[\"^28\"]]],\"^1:\",null,\"^1;\",[\"^15\",[null,null]],\"^10\",1,\"^[\",230,\"^11\",230,\"^1<\",1,\"^1=\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^28\"]]]]]]],\"~:require-macros\",[\"^ \",\"~$m\",\"^@\",\"^@\",\"^@\",\"^N\",\"^O\",\"^O\",\"^O\",\"~$s\",\"^P\",\"^P\",\"^P\",\"^L\",\"^M\",\"^M\",\"^M\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^B\",[\"~:args\",\"~:cljs.spec.alpha/failure\",\"~$x\",\"~$cljs.spec.alpha/maybe-spec\",\"~:ret\",\"~:ua-product\",\"~:shrunk\",\"~:fn\",\"~:check-passed\",\"~:instrument\",\"~:safari\",\"^13\",\"~:else\",\"^1D\",\"~:replace\",\"~:failure\",\"~:raw\",\"~:default\",\"~:ns\",\"^C\",\"^Z\",\"~:num-tests\",\"~:cljs.spec.test.alpha/caller\",\"^12\",\"^2K\",\"~:port\",\"^2E\",\"~:function\",\"~:stub\",\"~:sym\",\"^10\",\"~$spec-or-k\",\"~:firefox\",\"~:clojure.test.check/ret\",\"^2P\",\"~:cljs.spec.alpha/invalid\",\"~:host\",\"~:total\",\"~:no-fspec\",\"^[\",\"~:chrome\",\"~:var\",\"~:result\",\"~:ie\",\"~:cljs.spec.test.alpha/val\",\"~:check-failed\",\"^11\",\"~:cljs.spec.alpha/args\",\"~$cljs.spec.alpha/->sym\",\"~$maybe-spec\",\"~:cljs.spec.test.alpha/args\",\"^14\",\"^1H\",\"^P\",\"~:wrapped\",\"~:check-threw\",\"~:test\"]],\"~:order\",[\"^47\",\"^13\",\"^3N\",\"^C\",\"^Z\",\"^12\",\"^10\",\"^[\",\"^11\",\"^14\",\"^1H\",\"^4<\",\"^P\",\"^2E\",\"~$x\",\"^3Y\",\"^3Q\",\"^3H\",\"^40\",\"^3V\",\"^43\",\"^3C\",\"^3?\",\"^3B\",\"^3R\",\"^3A\",\"^48\",\"^3U\",\"^3X\",\"^46\",\"^3@\",\"^3G\",\"^3P\",\"^41\",\"^2P\",\"^3[\",\"^1D\",\"^3S\",\"^3J\",\"^3L\",\"^4:\",\"^49\",\"^44\",\"^45\",\"^3E\",\"^2K\",\"^3O\",\"^3I\",\"^42\",\"^3W\",\"^3T\",\"^3K\",\"^3D\",\"^3F\",\"^3M\",\"^4;\",\"^3Z\"]],\"^1H\",null]","cljs/spec/alpha.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"],\"~$goog\",[\"^ \",\"~$string\",[\"^ \",\"~$StringBuffer\",[\"^ \",\"~$prototype\",[\"^ \",\"~$append\",[\"^ \"]]]]]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$cat\",\"~$*\",\"~$or\",\"~$merge\",\"~$keys\",\"~$+\",\"~$and\",\"~$def\"]],\"~:name\",\"~$cljs.spec.alpha\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$cljs.core\",\"^F\",\"~$gobj\",\"~$goog.object\",\"^H\",\"^H\",\"~$walk\",\"~$clojure.walk\",\"~$gen\",\"~$cljs.spec.gen.alpha\",\"~$c\",\"^F\",\"~$str\",\"~$clojure.string\",\"^N\",\"^N\",\"^J\",\"^J\",\"^L\",\"^L\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$form\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"~:line\",162,\"~:column\",7,\"~:end-line\",162,\"~:end-column\",11,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^Z\",[[\"~$spec\"]]]]],\"~:doc\",\"returns the spec as data\"],\"^B\",\"~$cljs.spec.alpha/form\",\"~:variadic\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",11,\"~:method-params\",[\"^Z\",[[\"^10\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",162,\"^W\",162,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"]]]]],\"^11\",\"returns the spec as data\"],\"~$->t_cljs$spec$alpha17937\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"~:anonymous\",true,\"~:protocols\",[\"^;\",[\"~$cljs.spec.alpha/Spec\",\"~$cljs.core/IMeta\",\"~$cljs.spec.alpha/Specize\",\"~$cljs.core/IWithMeta\"]],\"~:skip-protocol-flag\",[\"^;\",[\"^1=\",\"^1?\"]],\"~:factory\",\"~:positional\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$meta17938\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17937\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^10\",\"^1C\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",1333,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^1C\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$nilable-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1349,\"^V\",19,\"^W\",1349,\"^X\",31,\"~:skip-wiki\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"~$pred\",\"~$gfn\"]]]]],\"^11\",\"Do not call this directly, use 'nilable'\"],\"^B\",\"~$cljs.spec.alpha/nilable-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",31,\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1349,\"^W\",1349,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'nilable'\"],\"~$*recursion-limit*\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",21,\"^V\",16,\"^W\",21,\"^X\",33,\"~:dynamic\",true],\"^B\",\"~$cljs.spec.alpha/*recursion-limit*\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",33,\"^V\",1,\"^1K\",true,\"^U\",21,\"^W\",21,\"~:tag\",\"~$number\",\"^11\",\"A soft limit on how many times a branching spec (or/alt/*/opt-keys/multi-spec)\\n  can be recursed through during generation. After this a\\n  non-recursive branch will be chosen.\"],\"~$*coll-error-limit*\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",35,\"^V\",16,\"^W\",35,\"^X\",34,\"^1K\",true],\"^B\",\"~$cljs.spec.alpha/*coll-error-limit*\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",34,\"^V\",1,\"^1K\",true,\"^U\",35,\"^W\",35,\"^1M\",\"^1N\",\"^11\",\"The number of errors reported by explain in a collection spec'ed with 'every'\"],\"~$explain-printer\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",214,\"^V\",7,\"^W\",214,\"^X\",22,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$ed\"]]]]],\"^11\",\"Default printer for explain-data. nil indicates a successful validation.\"],\"^B\",\"~$cljs.spec.alpha/explain-printer\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",22,\"^14\",[\"^Z\",[[\"^1R\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",214,\"^W\",214,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^1R\"]]]]],\"^11\",\"Default printer for explain-data. nil indicates a successful validation.\"],\"~$op-explain\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1101,\"^V\",8,\"^W\",1101,\"^X\",18,\"~:private\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"~$p\",\"~$path\",\"~$via\",\"~$in\",\"~$input\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/op-explain\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",18,\"^14\",[\"^Z\",[[\"^Q\",\"~$p\",\"^1V\",\"^1W\",\"^1X\",\"^1Y\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1101,\"^W\",1101,\"^17\",6,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"~$p\",\"^1V\",\"^1W\",\"^1X\",\"^1Y\"]]]]]],\"~$Specize\",[\"^ \",\"^S\",[\"^ \",\"~:protocol-symbol\",true,\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^X\",21,\"^V\",14,\"^U\",123,\"~:protocol-info\",[\"^ \",\"~:methods\",[\"^ \",\"~$specize*\",[[\"~$_\"],[\"~$_\",\"^Q\"]]]],\"^W\",123,\"^11\",null,\"~:jsdoc\",[\"^Z\",[\"@interface\"]]],\"^20\",true,\"^B\",\"^1>\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",21,\"^V\",1,\"^U\",123,\"^21\",[\"^ \",\"^22\",[\"^ \",\"^23\",[[\"~$_\"],[\"~$_\",\"^Q\"]]]],\"~:info\",null,\"^W\",123,\"^1M\",\"~$any\",\"~:impls\",[\"^;\",[\"~$cljs.spec.alpha/t_cljs$spec$alpha17515\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17549\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17377\",\"~$cljs.core/Keyword\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17395\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17900\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17916\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17519\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17944\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17536\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17933\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17533\",\"~$default\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17362\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17897\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17409\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17417\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17271\",\"~$cljs.core/Symbol\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17910\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17937\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17941\",\"~$cljs.spec.alpha/t_cljs$spec$alpha17311\"]],\"^11\",null,\"^24\",[\"^Z\",[\"@interface\"]]],\"~$alt-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",985,\"^V\",19,\"^W\",985,\"^X\",27,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$ks\",\"~$ps\",\"~$forms\"]]]]],\"^11\",\"Do not call this directly, use 'alt'\"],\"^B\",\"~$cljs.spec.alpha/alt-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",27,\"^14\",[\"^Z\",[[\"^2P\",\"^2Q\",\"^2R\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",985,\"^W\",985,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2P\",\"^2Q\",\"^2R\"]]]]],\"^11\",\"Do not call this directly, use 'alt'\"],\"~$tagged-ret\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",604,\"^V\",8,\"^W\",604,\"^X\",18,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$v\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/tagged-ret\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",18,\"^14\",[\"^Z\",[[\"~$v\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",604,\"^W\",604,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$v\"]]]]]],\"~$t_cljs$spec$alpha17916\",[\"^ \",\"~:num-fields\",9,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"~$cljs.core/ILookup\"]],\"^B\",\"^2>\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"~:type\",true,\"^1:\",true,\"^V\",5,\"^U\",1285,\"~:record\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\",\"^2X\"]]],\"~$pvalid?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1U\",true,\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^X\",15,\"~:top-fn\",[\"^ \",\"^13\",false,\"^17\",3,\"^14\",[\"^Z\",[[\"^1G\",\"~$x\"],[\"^1G\",\"~$x\",\"^Q\"]]],\"^Y\",[\"^Z\",[[\"^1G\",\"~$x\"],[\"^1G\",\"~$x\",\"^Q\"]]],\"^16\",[\"^Z\",[null,null]]],\"^V\",8,\"^U\",362,\"^W\",362,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^1G\",\"~$x\"],[\"^1G\",\"~$x\",\"^Q\"]]]]],\"^11\",\"internal helper function that returns true when x is valid for spec.\"],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/pvalid?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^30\",[\"^ \",\"^13\",false,\"^17\",3,\"^14\",[\"^Z\",[[\"^1G\",\"~$x\"],[\"^1G\",\"~$x\",\"^Q\"]]],\"^Y\",[\"^Z\",[[\"^1G\",\"~$x\"],[\"^1G\",\"~$x\",\"^Q\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"^1G\",\"~$x\"],[\"^1G\",\"~$x\",\"^Q\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",362,\"^W\",362,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[[\"^1G\",\"~$x\"],[\"^1G\",\"~$x\",\"^Q\"]]],\"^11\",\"internal helper function that returns true when x is valid for spec.\"],\"~$t_cljs$spec$alpha17900\",[\"^ \",\"^2W\",3,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2=\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",3,\"^U\",1236,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$->t_cljs$spec$alpha17910\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^2X\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\",\"^2X\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$argspec\",\"~$aform\",\"~$retspec\",\"~$rform\",\"~$fnspec\",\"~$fform\",\"^1H\",\"~$specs\",\"~$meta17911\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^2X\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17910\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^34\",\"^35\",\"^36\",\"^37\",\"^38\",\"^39\",\"^1H\",\"^3:\",\"^3;\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",1285,\"^17\",9,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^34\",\"^35\",\"^36\",\"^37\",\"^38\",\"^39\",\"^1H\",\"^3:\",\"^3;\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\",\"^2X\"]]],\"~$t_cljs$spec$alpha17395\",[\"^ \",\"^2W\",6,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2<\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",6,\"^U\",548,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$def-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",290,\"^V\",19,\"^W\",290,\"^X\",27,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$k\",\"^Q\",\"^10\"]]]]],\"^11\",\"Do not call this directly, use 'def'\"],\"^B\",\"~$cljs.spec.alpha/def-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",27,\"^14\",[\"^Z\",[[\"~$k\",\"^Q\",\"^10\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",290,\"^W\",290,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$k\",\"^Q\",\"^10\"]]]]],\"^11\",\"Do not call this directly, use 'def'\"],\"~$*explain-out*\",[\"^ \",\"^B\",\"~$cljs.spec.alpha/*explain-out*\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^U\",246,\"^V\",1,\"^W\",246,\"^X\",29,\"^1K\",true,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",246,\"^V\",16,\"^W\",246,\"^X\",29,\"^1K\",true]],\"~$t_cljs$spec$alpha17944\",[\"^ \",\"^2W\",5,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2@\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",1353,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$*runtime-asserts*\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1420,\"^V\",3,\"^W\",1420,\"^X\",20,\"^1U\",true,\"^1K\",true],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/*runtime-asserts*\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",20,\"^V\",1,\"^1K\",true,\"^U\",1418,\"^W\",1420,\"^1M\",\"~$boolean\"],\"~$regex-spec-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1233,\"^V\",19,\"^W\",1233,\"^X\",34,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$re\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'spec' with a regex op argument\"],\"^B\",\"~$cljs.spec.alpha/regex-spec-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",34,\"^14\",[\"^Z\",[[\"^3G\",\"^1H\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1233,\"^W\",1233,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^3G\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'spec' with a regex op argument\"],\"~$merge-spec-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",764,\"^V\",19,\"^W\",764,\"^X\",34,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"~$preds\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'merge'\"],\"^B\",\"~$cljs.spec.alpha/merge-spec-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",34,\"^14\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",764,\"^W\",764,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'merge'\"],\"~$t_cljs$spec$alpha17362\",[\"^ \",\"^2W\",6,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2E\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",6,\"^U\",468,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$->t_cljs$spec$alpha17377\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"~$mmvar\",\"~$retag\",\"^1H\",\"~$id\",\"~$predx\",\"~$dval\",\"~$tag\",\"~$meta17378\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17377\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^Q\",\"^3N\",\"^3O\",\"^1H\",\"^3P\",\"^3Q\",\"^3R\",\"^3S\",\"^3T\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",6,\"^1A\",\"^1B\",\"^U\",504,\"^17\",9,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^3N\",\"^3O\",\"^1H\",\"^3P\",\"^3Q\",\"^3R\",\"^3S\",\"^3T\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$explain-data*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",200,\"^V\",7,\"^W\",200,\"^X\",20,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]]]]]],\"^B\",\"~$cljs.spec.alpha/explain-data*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",20,\"^14\",[\"^Z\",[[\"^10\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",200,\"^W\",200,\"^17\",5,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]]]]]],\"~$->t_cljs$spec$alpha17515\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^3:\",\"~$cform\",\"~$meta17516\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17515\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^3:\",\"^3Y\",\"^3Z\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",731,\"^17\",6,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^3:\",\"^3Y\",\"^3Z\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$add-ret\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1052,\"^V\",8,\"^W\",1052,\"^X\",15,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"~$r\",\"~$k\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/add-ret\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^14\",[\"^Z\",[[\"~$p\",\"~$r\",\"~$k\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1052,\"^W\",1052,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"~$r\",\"~$k\"]]]]]],\"~$explain-pred-list\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",689,\"^V\",8,\"^W\",689,\"^X\",25,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/explain-pred-list\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",25,\"^14\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",689,\"^W\",689,\"^17\",6,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]]]]]],\"~$MAX_INT\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",19,\"^V\",14,\"^W\",19,\"^X\",21,\"~:const\",true],\"^B\",\"~$cljs.spec.alpha/MAX_INT\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",21,\"^V\",1,\"^45\",true,\"^U\",19,\"^W\",19,\"^1M\",\"^1N\"],\"~$check-asserts\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1428,\"^V\",7,\"^W\",1428,\"^X\",20,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$flag\"]]]]],\"^11\",\"Enable or disable spec asserts that have been compiled\\nwith '*compile-asserts*' true.  See 'assert'.\\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\\nDefaults to false.\"],\"^B\",\"~$cljs.spec.alpha/check-asserts\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",20,\"^14\",[\"^Z\",[[\"^48\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1428,\"^W\",1428,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^48\"]]]]],\"^11\",\"Enable or disable spec asserts that have been compiled\\nwith '*compile-asserts*' true.  See 'assert'.\\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\\nDefaults to false.\"],\"~$alt2\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",983,\"^V\",8,\"^W\",983,\"^X\",12,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p1\",\"~$p2\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/alt2\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^14\",[\"^Z\",[[\"^4;\",\"^4<\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",983,\"^W\",983,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^4;\",\"^4<\"]]]]]],\"~$assert*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1436,\"^V\",7,\"^W\",1436,\"^X\",14,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Do not call this directly, use 'assert'.\"],\"^B\",\"~$cljs.spec.alpha/assert*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",14,\"^14\",[\"^Z\",[[\"^10\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1436,\"^W\",1436,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Do not call this directly, use 'assert'.\"],\"~$inst-in-range?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1384,\"^V\",7,\"^W\",1384,\"^X\",21,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$start\",\"~$end\",\"~$inst\"]]]]],\"^11\",\"Return true if inst at or after start and before end\"],\"^B\",\"~$cljs.spec.alpha/inst-in-range?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",21,\"^14\",[\"^Z\",[[\"^4A\",\"^4B\",\"^4C\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1384,\"^W\",1384,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^4A\",\"^4B\",\"^4C\"]]]]],\"^11\",\"Return true if inst at or after start and before end\"],\"~$t_cljs$spec$alpha17519\",[\"^ \",\"^2W\",6,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2?\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",731,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$registry-ref\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",47,\"^V\",20,\"^W\",47,\"^X\",32,\"^1U\",true],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/registry-ref\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",32,\"^V\",1,\"^U\",47,\"^W\",47,\"^1M\",\"^26\"],\"~$accept?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",920,\"^V\",8,\"^W\",920,\"^X\",15,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[[\"^ \",\"~:keys\",[\"~:cljs.spec.alpha/op\"]]]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/accept?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^14\",[\"^Z\",[[\"~$p__17585\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",920,\"^W\",920,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[[\"^ \",\"^4I\",[\"^4J\"]]]]]]]],\"~$and-spec-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",700,\"^V\",19,\"^W\",700,\"^X\",32,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'and'\"],\"^B\",\"~$cljs.spec.alpha/and-spec-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",32,\"^14\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",700,\"^W\",700,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'and'\"],\"~$accept\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",918,\"^V\",8,\"^W\",918,\"^X\",14,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/accept\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",14,\"^14\",[\"^Z\",[[\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",918,\"^W\",918,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]]],\"~$recur-limit?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",333,\"^V\",8,\"^W\",333,\"^X\",20,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$rmap\",\"^3P\",\"^1V\",\"~$k\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/recur-limit?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",20,\"^14\",[\"^Z\",[[\"^4R\",\"^3P\",\"^1V\",\"~$k\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",333,\"^W\",333,\"^17\",4,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^4R\",\"^3P\",\"^1V\",\"~$k\"]]]]]],\"~$->t_cljs$spec$alpha17362\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"~$cpred?\",\"~$unc\",\"~$meta17363\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17362\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^4U\",\"^4V\",\"^4W\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",6,\"^1A\",\"^1B\",\"^U\",468,\"^17\",6,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^4U\",\"^4V\",\"^4W\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$describe*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",45,\"^V\",4,\"^W\",45,\"^X\",13,\"~:protocol\",\"^1<\",\"^11\",null,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"]]]]]],\"^4Z\",\"^1<\",\"^B\",\"~$cljs.spec.alpha/describe*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",13,\"^14\",[\"^Z\",[[\"^10\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",39,\"^W\",45,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"]]]]],\"^11\",null],\"~$map-spec-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",376,\"^V\",19,\"^W\",376,\"^X\",32,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[[\"^ \",\"^4I\",[\"~$req-un\",\"~$opt-un\",\"~$keys-pred\",\"~$pred-exprs\",\"~$opt-keys\",\"~$req-specs\",\"~$req\",\"~$req-keys\",\"~$opt-specs\",\"~$pred-forms\",\"~$opt\",\"^1H\"],\"~:as\",\"~$argm\"]]]]]],\"^11\",\"Do not call this directly, use 'spec' with a map argument\"],\"^B\",\"~$cljs.spec.alpha/map-spec-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",32,\"^14\",[\"^Z\",[[\"~$p__17268\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",376,\"^W\",376,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[[\"^ \",\"^4I\",[\"^51\",\"^52\",\"^53\",\"^54\",\"^55\",\"^56\",\"^57\",\"^58\",\"^59\",\"^5:\",\"^5;\",\"^1H\"],\"^5<\",\"^5=\"]]]]]],\"^11\",\"Do not call this directly, use 'spec' with a map argument\"],\"~$reg-resolve!\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",66,\"^V\",8,\"^W\",66,\"^X\",20,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$k\"]]]]],\"^11\",\"returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident\"],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/reg-resolve!\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",20,\"^14\",[\"^Z\",[[\"~$k\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",66,\"^W\",66,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$k\"]]]]],\"^11\",\"returns the spec/regex at end of alias chain starting with k, throws if not found, k if k not ident\"],\"~$re-explain\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1207,\"^V\",8,\"^W\",1207,\"^X\",18,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^1V\",\"^1W\",\"^1X\",\"^3G\",\"^1Y\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/re-explain\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",18,\"^14\",[\"^Z\",[[\"^1V\",\"^1W\",\"^1X\",\"^3G\",\"^1Y\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1207,\"^W\",1207,\"^17\",5,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^1V\",\"^1W\",\"^1X\",\"^3G\",\"^1Y\"]]]]]],\"~$alts\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",982,\"^V\",8,\"^W\",982,\"^X\",12,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^2Q\"]]]]],\"^30\",[\"^ \",\"^13\",true,\"^17\",0,\"^14\",[[\"^Z\",[\"^2Q\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^2Q\"]]],\"^16\",[\"^Z\",[null]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/alts\",\"^13\",true,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^30\",[\"^ \",\"^13\",true,\"^17\",0,\"^14\",[[\"^Z\",[\"^2Q\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^2Q\"]]],\"^16\",[\"^Z\",[null]]],\"^14\",[[\"^Z\",[\"^2Q\"]]],\"^15\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",982,\"^W\",982,\"^17\",0,\"^18\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^2Q\"]]]],\"~$t_cljs$spec$alpha17409\",[\"^ \",\"^2W\",9,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2G\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",648,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$->t_cljs$spec$alpha17519\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^3:\",\"^3Y\",\"~$meta17520\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17519\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^3:\",\"^3Y\",\"^5H\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",731,\"^17\",6,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^3:\",\"^3Y\",\"^5H\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$t_cljs$spec$alpha17417\",[\"^ \",\"^2W\",9,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2H\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",648,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$->t_cljs$spec$alpha17409\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^?\",\"^2R\",\"^3J\",\"^1H\",\"^3P\",\"~$kps\",\"^3:\",\"^3Y\",\"~$meta17410\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17409\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^?\",\"^2R\",\"^3J\",\"^1H\",\"^3P\",\"^5L\",\"^3:\",\"^3Y\",\"^5M\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",648,\"^17\",9,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^?\",\"^2R\",\"^3J\",\"^1H\",\"^3P\",\"^5L\",\"^3:\",\"^3Y\",\"^5M\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$with-name\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",85,\"^V\",8,\"^W\",85,\"^X\",17,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$name\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/with-name\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",17,\"^14\",[\"^Z\",[[\"^10\",\"^5P\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",85,\"^W\",85,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^5P\"]]]]]],\"~$explain\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",254,\"^V\",7,\"^W\",254,\"^X\",14,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value that fails to conform, prints an explanation to *out*.\"],\"^B\",\"~$cljs.spec.alpha/explain\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",14,\"^14\",[\"^Z\",[[\"^10\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",254,\"^W\",254,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value that fails to conform, prints an explanation to *out*.\"],\"~$spec-name\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",93,\"^V\",8,\"^W\",93,\"^X\",17,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/spec-name\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",17,\"^14\",[\"^Z\",[[\"^10\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",93,\"^W\",93,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"]]]]]],\"~$map-spec\",[\"^ \",\"^B\",\"~$cljs.spec.alpha/map-spec\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^U\",317,\"^V\",1,\"^W\",317,\"^X\",18,\"~:declared\",true,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",317,\"^V\",10,\"^W\",317,\"^X\",18,\"^5X\",true]],\"~$with-gen*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",44,\"^V\",4,\"^W\",44,\"^X\",13,\"^4Z\",\"^1<\",\"^11\",null,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^1H\"]]]]]],\"^4Z\",\"^1<\",\"^B\",\"~$cljs.spec.alpha/with-gen*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",13,\"^14\",[\"^Z\",[[\"^10\",\"^1H\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",39,\"^W\",44,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^1H\"]]]]],\"^11\",null],\"~$->t_cljs$spec$alpha17549\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"~$max-count\",\"~$check?\",\"^1H\",\"~$gen-max\",\"^1G\",\"~$cpred\",\"~$conform-keys\",\"~$kind-form\",\"~$addcv\",\"~$cfns\",\"~$describe-form\",\"~$distinct\",\"~$map__17547\",\"^10\",\"~$kfn\",\"~$gen-into\",\"~$p__17546\",\"~$count\",\"~$min-count\",\"~$opts\",\"~$kind\",\"~$conform-all\",\"~$conform-into\",\"~$meta17550\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17549\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^Q\",\"^60\",\"^61\",\"^1H\",\"^62\",\"^1G\",\"^63\",\"^64\",\"^65\",\"^66\",\"^67\",\"^68\",\"^69\",\"^6:\",\"^10\",\"^6;\",\"^6<\",\"^6=\",\"^6>\",\"^6?\",\"^6@\",\"^6A\",\"^6B\",\"^6C\",\"^6D\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",6,\"^1A\",\"^1B\",\"^U\",830,\"^17\",25,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^60\",\"^61\",\"^1H\",\"^62\",\"^1G\",\"^63\",\"^64\",\"^65\",\"^66\",\"^67\",\"^68\",\"^69\",\"^6:\",\"^10\",\"^6;\",\"^6<\",\"^6=\",\"^6>\",\"^6?\",\"^6@\",\"^6A\",\"^6B\",\"^6C\",\"^6D\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$or-spec-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",610,\"^V\",19,\"^W\",610,\"^X\",31,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^?\",\"^2R\",\"^3J\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'or'\"],\"^B\",\"~$cljs.spec.alpha/or-spec-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",31,\"^14\",[\"^Z\",[[\"^?\",\"^2R\",\"^3J\",\"^1H\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",610,\"^W\",610,\"^17\",4,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^?\",\"^2R\",\"^3J\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'or'\"],\"~$specize\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",140,\"^V\",8,\"^W\",140,\"^X\",15,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$s\"],[\"~$s\",\"^Q\"]]]]],\"^30\",[\"^ \",\"^13\",false,\"^17\",2,\"^14\",[\"^Z\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^Y\",[\"^Z\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^16\",[\"^Z\",[null,null]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/specize\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^30\",[\"^ \",\"^13\",false,\"^17\",2,\"^14\",[\"^Z\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^Y\",[\"^Z\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"~$s\"],[\"~$s\",\"^Q\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",140,\"^W\",140,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[[\"~$s\"],[\"~$s\",\"^Q\"]]]],\"~$t_cljs$spec$alpha17549\",[\"^ \",\"^2W\",25,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^29\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",6,\"^U\",830,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$*fspec-iterations*\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",27,\"^V\",16,\"^W\",27,\"^X\",34,\"^1K\",true],\"^B\",\"~$cljs.spec.alpha/*fspec-iterations*\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",34,\"^V\",1,\"^1K\",true,\"^U\",27,\"^W\",27,\"^1M\",\"^1N\",\"^11\",\"The number of times an anonymous fn specified by fspec will be (generatively) tested during conform\"],\"~$Spec\",[\"^ \",\"^S\",[\"^ \",\"^20\",true,\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^X\",18,\"^V\",14,\"^U\",39,\"^21\",[\"^ \",\"^22\",[\"^ \",\"~$conform*\",[[\"^10\",\"~$x\"]],\"~$unform*\",[[\"^10\",\"~$y\"]],\"~$explain*\",[[\"^10\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]],\"~$gen*\",[[\"^10\",\"~$overrides\",\"^1V\",\"^4R\"]],\"^5Y\",[[\"^10\",\"^1H\"]],\"^4Y\",[[\"^10\"]]]],\"^W\",39,\"^11\",null,\"^24\",[\"^Z\",[\"@interface\"]]],\"^20\",true,\"^B\",\"^1<\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",18,\"^V\",1,\"^U\",39,\"^21\",[\"^ \",\"^22\",[\"^ \",\"^6N\",[[\"^10\",\"~$x\"]],\"^6O\",[[\"^10\",\"~$y\"]],\"^6P\",[[\"^10\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]],\"^6Q\",[[\"^10\",\"^6R\",\"^1V\",\"^4R\"]],\"^5Y\",[[\"^10\",\"^1H\"]],\"^4Y\",[[\"^10\"]]]],\"^25\",null,\"^W\",39,\"^1M\",\"^26\",\"^27\",[\"^;\",[\"^28\",\"^29\",\"^2:\",\"^2<\",\"^2=\",\"^2>\",\"^2?\",\"^2@\",\"^2A\",\"^2B\",\"^2C\",\"^2E\",\"^2F\",\"^2G\",\"^2H\",\"^2I\",\"^2K\",\"^2L\",\"^2M\",\"^2N\"]],\"^11\",null,\"^24\",[\"^Z\",[\"@interface\"]]],\"~$unform\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",155,\"^V\",7,\"^W\",155,\"^X\",13,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value created by or compliant with a call to\\n  'conform' with the same spec, returns a value with all conform\\n   destructuring undone.\"],\"^B\",\"~$cljs.spec.alpha/unform\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",13,\"^14\",[\"^Z\",[[\"^10\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",155,\"^W\",155,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value created by or compliant with a call to\\n  'conform' with the same spec, returns a value with all conform\\n   destructuring undone.\"],\"~$->t_cljs$spec$alpha17900\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^3G\",\"^1H\",\"~$meta17901\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17900\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^3G\",\"^1H\",\"^6V\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",3,\"^1A\",\"^1B\",\"^U\",1236,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^3G\",\"^1H\",\"^6V\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$valid?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",353,\"^V\",7,\"^W\",353,\"^X\",13,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"],[\"^10\",\"~$x\",\"^Q\"]]]]],\"^11\",\"Helper function that returns true when x is valid for spec.\",\"^30\",[\"^ \",\"^13\",false,\"^17\",3,\"^14\",[\"^Z\",[[\"^10\",\"~$x\"],[\"^10\",\"~$x\",\"^Q\"]]],\"^Y\",[\"^Z\",[[\"^10\",\"~$x\"],[\"^10\",\"~$x\",\"^Q\"]]],\"^16\",[\"^Z\",[null,null]]]],\"^B\",\"~$cljs.spec.alpha/valid?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",13,\"^30\",[\"^ \",\"^13\",false,\"^17\",3,\"^14\",[\"^Z\",[[\"^10\",\"~$x\"],[\"^10\",\"~$x\",\"^Q\"]]],\"^Y\",[\"^Z\",[[\"^10\",\"~$x\"],[\"^10\",\"~$x\",\"^Q\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"^10\",\"~$x\"],[\"^10\",\"~$x\",\"^Q\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",353,\"^W\",353,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[[\"^10\",\"~$x\"],[\"^10\",\"~$x\",\"^Q\"]]],\"^11\",\"Helper function that returns true when x is valid for spec.\"],\"~$->t_cljs$spec$alpha17395\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^3:\",\"~$cnt\",\"~$meta17396\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17395\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^3:\",\"^6[\",\"^70\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",6,\"^1A\",\"^1B\",\"^U\",548,\"^17\",6,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^3:\",\"^6[\",\"^70\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$->t_cljs$spec$alpha17944\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^10\",\"~$meta17945\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17944\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^10\",\"^73\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",1353,\"^17\",5,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^10\",\"^73\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$t_cljs$spec$alpha17271\",[\"^ \",\"^2W\",19,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2I\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",383,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"^K\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",277,\"^V\",7,\"^W\",277,\"^X\",10,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"],[\"^10\",\"^6R\"]]]]],\"^11\",\"Given a spec, returns the generator for it, or throws if none can\\n  be constructed. Optionally an overrides map can be provided which\\n  should map spec names or paths (vectors of keywords) to no-arg\\n  generator-creating fns. These will be used instead of the generators at those\\n  names/paths. Note that parent generator (in the spec or overrides\\n  map) will supersede those of any subtrees. A generator for a regex\\n  op must always return a sequential collection (i.e. a generator for\\n  s/? should return either an empty sequence/vector or a\\n  sequence/vector with one item in it)\",\"^30\",[\"^ \",\"^13\",false,\"^17\",2,\"^14\",[\"^Z\",[[\"^10\"],[\"^10\",\"^6R\"]]],\"^Y\",[\"^Z\",[[\"^10\"],[\"^10\",\"^6R\"]]],\"^16\",[\"^Z\",[null,null]]]],\"^B\",\"~$cljs.spec.alpha/gen\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",10,\"^30\",[\"^ \",\"^13\",false,\"^17\",2,\"^14\",[\"^Z\",[[\"^10\"],[\"^10\",\"^6R\"]]],\"^Y\",[\"^Z\",[[\"^10\"],[\"^10\",\"^6R\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"^10\"],[\"^10\",\"^6R\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",277,\"^W\",277,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[[\"^10\"],[\"^10\",\"^6R\"]]],\"^11\",\"Given a spec, returns the generator for it, or throws if none can\\n  be constructed. Optionally an overrides map can be provided which\\n  should map spec names or paths (vectors of keywords) to no-arg\\n  generator-creating fns. These will be used instead of the generators at those\\n  names/paths. Note that parent generator (in the spec or overrides\\n  map) will supersede those of any subtrees. A generator for a regex\\n  op must always return a sequential collection (i.e. a generator for\\n  s/? should return either an empty sequence/vector or a\\n  sequence/vector with one item in it)\"],\"~$t_cljs$spec$alpha17377\",[\"^ \",\"^2W\",9,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2:\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",6,\"^U\",504,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$nonconforming\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1328,\"^V\",7,\"^W\",1328,\"^X\",20,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"]]]]],\"^11\",\"takes a spec and returns a spec that has the same properties except\\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops.\"],\"^B\",\"~$cljs.spec.alpha/nonconforming\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",20,\"^14\",[\"^Z\",[[\"^10\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1328,\"^W\",1328,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"]]]]],\"^11\",\"takes a spec and returns a spec that has the same properties except\\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops.\"],\"^6O\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",41,\"^V\",4,\"^W\",41,\"^X\",11,\"^4Z\",\"^1<\",\"^11\",null,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$y\"]]]]]],\"^4Z\",\"^1<\",\"^B\",\"~$cljs.spec.alpha/unform*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",11,\"^14\",[\"^Z\",[[\"^10\",\"~$y\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",39,\"^W\",41,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$y\"]]]]],\"^11\",null],\"~$->sym\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",305,\"^V\",8,\"^W\",305,\"^X\",13,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]],\"^11\",\"Returns a symbol from a symbol or var\"],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/->sym\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",13,\"^14\",[\"^Z\",[[\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",305,\"^W\",305,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]],\"^11\",\"Returns a symbol from a symbol or var\"],\"~$abbrev\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",168,\"^V\",7,\"^W\",168,\"^X\",13,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\"]]]]]],\"^B\",\"~$cljs.spec.alpha/abbrev\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",13,\"^14\",[\"^Z\",[[\"^Q\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",168,\"^W\",168,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\"]]]]]],\"~$->t_cljs$spec$alpha17536\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"~$meta17537\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17536\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^7@\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",3,\"^1A\",\"^1B\",\"^U\",767,\"^17\",4,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^7@\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$regex?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",80,\"^V\",7,\"^W\",80,\"^X\",13,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]],\"^11\",\"returns x if x is a (clojure.spec) regex op, else logical false\"],\"^B\",\"~$cljs.spec.alpha/regex?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",13,\"^14\",[\"^Z\",[[\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",80,\"^W\",80,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]],\"^11\",\"returns x if x is a (clojure.spec) regex op, else logical false\"],\"~$int-in-range?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1391,\"^V\",7,\"^W\",1391,\"^X\",20,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^4A\",\"^4B\",\"~$val\"]]]]],\"^11\",\"Return true if start <= val and val < end\"],\"^B\",\"~$cljs.spec.alpha/int-in-range?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",20,\"^14\",[\"^Z\",[[\"^4A\",\"^4B\",\"^7E\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1391,\"^W\",1391,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^4A\",\"^4B\",\"^7E\"]]]]],\"^11\",\"Return true if start <= val and val < end\"],\"~$dt\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",340,\"^V\",8,\"^W\",340,\"^X\",10,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^1G\",\"~$x\",\"^Q\"],[\"^1G\",\"~$x\",\"^Q\",\"^4U\"]]]]],\"^30\",[\"^ \",\"^13\",false,\"^17\",4,\"^14\",[\"^Z\",[[\"^1G\",\"~$x\",\"^Q\"],[\"^1G\",\"~$x\",\"^Q\",\"^4U\"]]],\"^Y\",[\"^Z\",[[\"^1G\",\"~$x\",\"^Q\"],[\"^1G\",\"~$x\",\"^Q\",\"^4U\"]]],\"^16\",[\"^Z\",[null,null]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/dt\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",10,\"^30\",[\"^ \",\"^13\",false,\"^17\",4,\"^14\",[\"^Z\",[[\"^1G\",\"~$x\",\"^Q\"],[\"^1G\",\"~$x\",\"^Q\",\"^4U\"]]],\"^Y\",[\"^Z\",[[\"^1G\",\"~$x\",\"^Q\"],[\"^1G\",\"~$x\",\"^Q\",\"^4U\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"^1G\",\"~$x\",\"^Q\"],[\"^1G\",\"~$x\",\"^Q\",\"^4U\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",340,\"^W\",340,\"^17\",4,\"^18\",true,\"^Y\",[\"^Z\",[[\"^1G\",\"~$x\",\"^Q\"],[\"^1G\",\"~$x\",\"^Q\",\"^4U\"]]]],\"~$preturn\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1016,\"^V\",8,\"^W\",1016,\"^X\",15,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/preturn\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^14\",[\"^Z\",[[\"~$p\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1016,\"^W\",1016,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\"]]]]]],\"~$re-conform\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1194,\"^V\",8,\"^W\",1194,\"^X\",18,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",[\"~$x\",\"~$&\",\"~$xs\",\"^5<\",\"~$data\"]]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/re-conform\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",18,\"^14\",[\"^Z\",[[\"~$p\",\"~$p__17865\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1194,\"^W\",1194,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",[\"~$x\",\"~$&\",\"^7L\",\"^5<\",\"^7M\"]]]]]]],\"~$spec?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",74,\"^V\",7,\"^W\",74,\"^X\",12,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]],\"^11\",\"returns x if x is a spec object, else logical false\"],\"^B\",\"~$cljs.spec.alpha/spec?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^14\",[\"^Z\",[[\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",74,\"^W\",74,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\"]]]]],\"^11\",\"returns x if x is a spec object, else logical false\"],\"~$registry\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",300,\"^V\",7,\"^W\",300,\"^X\",15,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[]]]]],\"^11\",\"returns the registry map, prefer 'get-spec' to lookup a spec by name\"],\"^B\",\"~$cljs.spec.alpha/registry\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^14\",[\"^Z\",[[]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",300,\"^W\",300,\"^17\",0,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[]]]]],\"^11\",\"returns the registry map, prefer 'get-spec' to lookup a spec by name\"],\"~$->t_cljs$spec$alpha17311\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$keys->specnames\",\"^5;\",\"^51\",\"^52\",\"^5?\",\"^1H\",\"^54\",\"^53\",\"^5=\",\"^55\",\"^56\",\"~$map__17309\",\"^57\",\"^3P\",\"^58\",\"^59\",\"~$k->s\",\"^5:\",\"~$meta17312\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17311\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^7U\",\"^5;\",\"^51\",\"^52\",\"^5?\",\"^1H\",\"^54\",\"^53\",\"^5=\",\"^55\",\"^56\",\"^7V\",\"^57\",\"^3P\",\"^58\",\"^59\",\"^7W\",\"^5:\",\"^7X\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",383,\"^17\",19,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^7U\",\"^5;\",\"^51\",\"^52\",\"^5?\",\"^1H\",\"^54\",\"^53\",\"^5=\",\"^55\",\"^56\",\"^7V\",\"^57\",\"^3P\",\"^58\",\"^59\",\"^7W\",\"^5:\",\"^7X\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$rep+impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",951,\"^V\",19,\"^W\",951,\"^X\",27,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"~$p\"]]]]],\"^11\",\"Do not call this directly, use '+'\"],\"^B\",\"~$cljs.spec.alpha/rep+impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",27,\"^14\",[\"^Z\",[[\"^Q\",\"~$p\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",951,\"^W\",951,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"~$p\"]]]]],\"^11\",\"Do not call this directly, use '+'\"],\"~$t_cljs$spec$alpha17536\",[\"^ \",\"^2W\",4,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2A\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",3,\"^U\",767,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$t_cljs$spec$alpha17533\",[\"^ \",\"^2W\",4,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2C\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",3,\"^U\",767,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$deriv\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1065,\"^V\",8,\"^W\",1065,\"^X\",13,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"~$x\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/deriv\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",13,\"^14\",[\"^Z\",[[\"~$p\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1065,\"^W\",1065,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"~$x\"]]]]]],\"~$deep-resolve\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",49,\"^V\",8,\"^W\",49,\"^X\",20,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$reg\",\"~$k\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/deep-resolve\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",20,\"^14\",[\"^Z\",[[\"^85\",\"~$k\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",49,\"^W\",49,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^85\",\"~$k\"]]]]]],\"~$->t_cljs$spec$alpha17916\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^2X\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\",\"^2X\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^34\",\"^35\",\"^36\",\"^37\",\"^38\",\"^39\",\"^1H\",\"^3:\",\"~$meta17917\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^2X\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17916\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^34\",\"^35\",\"^36\",\"^37\",\"^38\",\"^39\",\"^1H\",\"^3:\",\"^88\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",1285,\"^17\",9,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^34\",\"^35\",\"^36\",\"^37\",\"^38\",\"^39\",\"^1H\",\"^3:\",\"^88\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\",\"^2X\"]]],\"~$exercise\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1375,\"^V\",7,\"^W\",1375,\"^X\",15,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"],[\"^10\",\"~$n\"],[\"^10\",\"~$n\",\"^6R\"]]]]],\"^11\",\"generates a number (default 10) of values compatible with spec and maps conform over them,\\n  returning a sequence of [val conformed-val] tuples. Optionally takes\\n  a generator overrides map as per gen\",\"^30\",[\"^ \",\"^13\",false,\"^17\",3,\"^14\",[\"^Z\",[[\"^10\"],[\"^10\",\"~$n\"],[\"^10\",\"~$n\",\"^6R\"]]],\"^Y\",[\"^Z\",[[\"^10\"],[\"^10\",\"~$n\"],[\"^10\",\"~$n\",\"^6R\"]]],\"^16\",[\"^Z\",[null,null,null]]]],\"^B\",\"~$cljs.spec.alpha/exercise\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^30\",[\"^ \",\"^13\",false,\"^17\",3,\"^14\",[\"^Z\",[[\"^10\"],[\"^10\",\"~$n\"],[\"^10\",\"~$n\",\"^6R\"]]],\"^Y\",[\"^Z\",[[\"^10\"],[\"^10\",\"~$n\"],[\"^10\",\"~$n\",\"^6R\"]]],\"^16\",[\"^Z\",[null,null,null]]],\"^14\",[\"^Z\",[[\"^10\"],[\"^10\",\"~$n\"],[\"^10\",\"~$n\",\"^6R\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null,null]],\"^V\",1,\"^U\",1375,\"^W\",1375,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[[\"^10\"],[\"^10\",\"~$n\"],[\"^10\",\"~$n\",\"^6R\"]]],\"^11\",\"generates a number (default 10) of values compatible with spec and maps conform over them,\\n  returning a sequence of [val conformed-val] tuples. Optionally takes\\n  a generator overrides map as per gen\"],\"~$explain-data\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",205,\"^V\",7,\"^W\",205,\"^X\",19,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value x which ought to conform, returns nil if x\\n  conforms, else a map with at least the key ::problems whose value is\\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\\n  keys describing the predicate and the value that failed at that\\n  path.\"],\"^B\",\"~$cljs.spec.alpha/explain-data\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",19,\"^14\",[\"^Z\",[[\"^10\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",205,\"^W\",205,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value x which ought to conform, returns nil if x\\n  conforms, else a map with at least the key ::problems whose value is\\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\\n  keys describing the predicate and the value that failed at that\\n  path.\"],\"~$tuple-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^X\",29,\"^30\",[\"^ \",\"^13\",false,\"^17\",3,\"^14\",[\"^Z\",[[\"^2R\",\"^3J\"],[\"^2R\",\"^3J\",\"^1H\"]]],\"^Y\",[\"^Z\",[[\"^2R\",\"^3J\"],[\"^2R\",\"^3J\",\"^1H\"]]],\"^16\",[\"^Z\",[null,null]]],\"^1F\",true,\"^V\",19,\"^U\",542,\"^W\",542,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\"],[\"^2R\",\"^3J\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'tuple'\"],\"^B\",\"~$cljs.spec.alpha/tuple-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",29,\"^30\",[\"^ \",\"^13\",false,\"^17\",3,\"^14\",[\"^Z\",[[\"^2R\",\"^3J\"],[\"^2R\",\"^3J\",\"^1H\"]]],\"^Y\",[\"^Z\",[[\"^2R\",\"^3J\"],[\"^2R\",\"^3J\",\"^1H\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"^2R\",\"^3J\"],[\"^2R\",\"^3J\",\"^1H\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",542,\"^W\",542,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[[\"^2R\",\"^3J\"],[\"^2R\",\"^3J\",\"^1H\"]]],\"^11\",\"Do not call this directly, use 'tuple'\"],\"~$multi-spec-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^X\",34,\"^30\",[\"^ \",\"^13\",false,\"^17\",4,\"^14\",[\"^Z\",[[\"^Q\",\"^3N\",\"^3O\"],[\"^Q\",\"^3N\",\"^3O\",\"^1H\"]]],\"^Y\",[\"^Z\",[[\"^Q\",\"^3N\",\"^3O\"],[\"^Q\",\"^3N\",\"^3O\",\"^1H\"]]],\"^16\",[\"^Z\",[null,null]]],\"^1F\",true,\"^V\",19,\"^U\",492,\"^W\",492,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^3N\",\"^3O\"],[\"^Q\",\"^3N\",\"^3O\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'multi-spec'\"],\"^B\",\"~$cljs.spec.alpha/multi-spec-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",34,\"^30\",[\"^ \",\"^13\",false,\"^17\",4,\"^14\",[\"^Z\",[[\"^Q\",\"^3N\",\"^3O\"],[\"^Q\",\"^3N\",\"^3O\",\"^1H\"]]],\"^Y\",[\"^Z\",[[\"^Q\",\"^3N\",\"^3O\"],[\"^Q\",\"^3N\",\"^3O\",\"^1H\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"^Q\",\"^3N\",\"^3O\"],[\"^Q\",\"^3N\",\"^3O\",\"^1H\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",492,\"^W\",492,\"^17\",4,\"^18\",true,\"^Y\",[\"^Z\",[[\"^Q\",\"^3N\",\"^3O\"],[\"^Q\",\"^3N\",\"^3O\",\"^1H\"]]],\"^11\",\"Do not call this directly, use 'multi-spec'\"],\"~$->t_cljs$spec$alpha17897\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^3G\",\"^1H\",\"~$meta17898\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17897\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^3G\",\"^1H\",\"^8C\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",3,\"^1A\",\"^1B\",\"^U\",1236,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^3G\",\"^1H\",\"^8C\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$->t_cljs$spec$alpha17271\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^7U\",\"^5;\",\"^51\",\"^52\",\"^5?\",\"^1H\",\"^54\",\"^53\",\"^5=\",\"^55\",\"^56\",\"~$map__17269\",\"^57\",\"^3P\",\"^58\",\"^59\",\"^7W\",\"^5:\",\"~$meta17272\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17271\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^7U\",\"^5;\",\"^51\",\"^52\",\"^5?\",\"^1H\",\"^54\",\"^53\",\"^5=\",\"^55\",\"^56\",\"^8F\",\"^57\",\"^3P\",\"^58\",\"^59\",\"^7W\",\"^5:\",\"^8G\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",383,\"^17\",19,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^7U\",\"^5;\",\"^51\",\"^52\",\"^5?\",\"^1H\",\"^54\",\"^53\",\"^5=\",\"^55\",\"^56\",\"^8F\",\"^57\",\"^3P\",\"^58\",\"^59\",\"^7W\",\"^5:\",\"^8G\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$conform\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",149,\"^V\",7,\"^W\",149,\"^X\",14,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value, returns :clojure.spec/invalid if value does not match spec,\\n  else the (possibly destructured) value.\"],\"^B\",\"~$cljs.spec.alpha/conform\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",14,\"^14\",[\"^Z\",[[\"^10\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",149,\"^W\",149,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value, returns :clojure.spec/invalid if value does not match spec,\\n  else the (possibly destructured) value.\"],\"^6Q\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",43,\"^V\",4,\"^W\",43,\"^X\",8,\"^4Z\",\"^1<\",\"^11\",null,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^6R\",\"^1V\",\"^4R\"]]]]]],\"^4Z\",\"^1<\",\"^B\",\"~$cljs.spec.alpha/gen*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",8,\"^14\",[\"^Z\",[[\"^10\",\"^6R\",\"^1V\",\"^4R\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",39,\"^W\",43,\"^17\",4,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^6R\",\"^1V\",\"^4R\"]]]]],\"^11\",null],\"~$fspec-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1281,\"^V\",19,\"^W\",1281,\"^X\",29,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^34\",\"^35\",\"^36\",\"^37\",\"^38\",\"^39\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'fspec'\"],\"^B\",\"~$cljs.spec.alpha/fspec-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",29,\"^14\",[\"^Z\",[[\"^34\",\"^35\",\"^36\",\"^37\",\"^38\",\"^39\",\"^1H\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1281,\"^W\",1281,\"^17\",7,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^34\",\"^35\",\"^36\",\"^37\",\"^38\",\"^39\",\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'fspec'\"],\"~$inck\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",337,\"^V\",8,\"^W\",337,\"^X\",12,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$m\",\"~$k\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/inck\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^14\",[\"^Z\",[[\"~$m\",\"~$k\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",337,\"^W\",337,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$m\",\"~$k\"]]]]]],\"~$t_cljs$spec$alpha17311\",[\"^ \",\"^2W\",19,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2N\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",383,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$*coll-check-limit*\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",31,\"^V\",16,\"^W\",31,\"^X\",34,\"^1K\",true],\"^B\",\"~$cljs.spec.alpha/*coll-check-limit*\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",34,\"^V\",1,\"^1K\",true,\"^U\",31,\"^W\",31,\"^1M\",\"^1N\",\"^11\",\"The number of items validated in a collection spec'ed with 'every'\"],\"~$t_cljs$spec$alpha17897\",[\"^ \",\"^2W\",3,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2F\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",3,\"^U\",1236,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$t_cljs$spec$alpha17937\",[\"^ \",\"^2W\",2,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2L\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",1333,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$get-spec\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",312,\"^V\",7,\"^W\",312,\"^X\",15,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$k\"]]]]],\"^11\",\"Returns spec registered for keyword/symbol/var k, or nil.\"],\"^B\",\"~$cljs.spec.alpha/get-spec\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^14\",[\"^Z\",[[\"~$k\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",312,\"^W\",312,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$k\"]]]]],\"^11\",\"Returns spec registered for keyword/symbol/var k, or nil.\"],\"~$gensub\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",266,\"^V\",8,\"^W\",266,\"^X\",14,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^6R\",\"^1V\",\"^4R\",\"^Q\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/gensub\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",14,\"^14\",[\"^Z\",[[\"^10\",\"^6R\",\"^1V\",\"^4R\",\"^Q\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",266,\"^W\",266,\"^17\",5,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^6R\",\"^1V\",\"^4R\",\"^Q\"]]]]]],\"~$t_cljs$spec$alpha17933\",[\"^ \",\"^2W\",2,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2B\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",1333,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$t_cljs$spec$alpha17941\",[\"^ \",\"^2W\",5,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^2M\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",1353,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$the-spec\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",116,\"^V\",8,\"^W\",116,\"^X\",16,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$spec-or-k\"]]]]],\"^11\",\"spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym\"],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/the-spec\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",16,\"^14\",[\"^Z\",[[\"^90\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",116,\"^W\",116,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^90\"]]]]],\"^11\",\"spec-or-k must be a spec, regex or kw/sym, else returns nil. Throws if unresolvable kw/sym\"],\"~$coll-prob\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",744,\"^V\",8,\"^W\",744,\"^X\",17,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\",\"^6;\",\"~$kform\",\"^69\",\"^6>\",\"^6?\",\"^60\",\"^1V\",\"^1W\",\"^1X\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/coll-prob\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",17,\"^14\",[\"^Z\",[[\"~$x\",\"^6;\",\"^93\",\"^69\",\"^6>\",\"^6?\",\"^60\",\"^1V\",\"^1W\",\"^1X\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",744,\"^W\",744,\"^17\",10,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\",\"^6;\",\"^93\",\"^69\",\"^6>\",\"^6?\",\"^60\",\"^1V\",\"^1W\",\"^1X\"]]]]]],\"~$every-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^X\",29,\"^30\",[\"^ \",\"^13\",false,\"^17\",4,\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^6@\"],[\"^Q\",\"^1G\",[\"^ \",\"^6<\",\"~:into\",\"^68\",\"~:cljs.spec.alpha/describe\",\"^4I\",[\"^6A\",\"~:cljs.spec.alpha/kind-form\",\"^6>\",\"^60\",\"^6?\",\"^69\",\"^62\",\"~:cljs.spec.alpha/kfn\",\"~:cljs.spec.alpha/cpred\",\"^64\",\"~:cljs.spec.alpha/conform-all\"],\"~:or\",[\"^ \",\"^62\",20],\"^5<\",\"^6@\"],\"^1H\"]]],\"^Y\",[\"^Z\",[[\"^Q\",\"^1G\",\"^6@\"],[\"^Q\",\"^1G\",[\"^ \",\"^6<\",\"^96\",\"^68\",\"^97\",\"^4I\",[\"^6A\",\"^98\",\"^6>\",\"^60\",\"^6?\",\"^69\",\"^62\",\"^99\",\"^9:\",\"^64\",\"^9;\"],\"^9<\",[\"^ \",\"^62\",20],\"^5<\",\"^6@\"],\"^1H\"]]],\"^16\",[\"^Z\",[null,null]]],\"^1F\",true,\"^V\",19,\"^U\",792,\"^W\",792,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^6@\"],[\"^Q\",\"^1G\",[\"^ \",\"^6<\",\"^96\",\"^68\",\"^97\",\"^4I\",[\"^6A\",\"^98\",\"^6>\",\"^60\",\"^6?\",\"^69\",\"^62\",\"^99\",\"^9:\",\"^64\",\"^9;\"],\"^9<\",[\"^ \",\"^62\",20],\"^5<\",\"^6@\"],\"^1H\"]]]]],\"^11\",\"Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'\"],\"^B\",\"~$cljs.spec.alpha/every-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",29,\"^30\",[\"^ \",\"^13\",false,\"^17\",4,\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^6@\"],[\"^Q\",\"^1G\",[\"^ \",\"^6<\",\"^96\",\"^68\",\"^97\",\"^4I\",[\"^6A\",\"^98\",\"^6>\",\"^60\",\"^6?\",\"^69\",\"^62\",\"^99\",\"^9:\",\"^64\",\"^9;\"],\"^9<\",[\"^ \",\"^62\",20],\"^5<\",\"^6@\"],\"^1H\"]]],\"^Y\",[\"^Z\",[[\"^Q\",\"^1G\",\"^6@\"],[\"^Q\",\"^1G\",[\"^ \",\"^6<\",\"^96\",\"^68\",\"^97\",\"^4I\",[\"^6A\",\"^98\",\"^6>\",\"^60\",\"^6?\",\"^69\",\"^62\",\"^99\",\"^9:\",\"^64\",\"^9;\"],\"^9<\",[\"^ \",\"^62\",20],\"^5<\",\"^6@\"],\"^1H\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^6@\"],[\"^Q\",\"^1G\",[\"^ \",\"^6<\",\"^96\",\"^68\",\"^97\",\"^4I\",[\"^6A\",\"^98\",\"^6>\",\"^60\",\"^6?\",\"^69\",\"^62\",\"^99\",\"^9:\",\"^64\",\"^9;\"],\"^9<\",[\"^ \",\"^62\",20],\"^5<\",\"^6@\"],\"^1H\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",792,\"^W\",792,\"^17\",4,\"^18\",true,\"^Y\",[\"^Z\",[[\"^Q\",\"^1G\",\"^6@\"],[\"^Q\",\"^1G\",[\"^ \",\"^6<\",\"^96\",\"^68\",\"^97\",\"^4I\",[\"^6A\",\"^98\",\"^6>\",\"^60\",\"^6?\",\"^69\",\"^62\",\"^99\",\"^9:\",\"^64\",\"^9;\"],\"^9<\",[\"^ \",\"^62\",20],\"^5<\",\"^6@\"],\"^1H\"]]],\"^11\",\"Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'\"],\"~$accept-nil?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1001,\"^V\",8,\"^W\",1001,\"^X\",19,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/accept-nil?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",19,\"^14\",[\"^Z\",[[\"~$p\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1001,\"^W\",1001,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\"]]]]]],\"~$->t_cljs$spec$alpha17941\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^10\",\"~$meta17942\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17941\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^10\",\"^9A\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",1353,\"^17\",5,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^10\",\"^9A\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$maybe-spec\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",105,\"^V\",8,\"^W\",105,\"^X\",18,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^90\"]]]]],\"^11\",\"spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil.\"],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/maybe-spec\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",18,\"^14\",[\"^Z\",[[\"^90\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",105,\"^W\",105,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^90\"]]]]],\"^11\",\"spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil.\"],\"~$spec-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^X\",28,\"^30\",[\"^ \",\"^13\",false,\"^17\",5,\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^4U\"],[\"^Q\",\"^1G\",\"^1H\",\"^4U\",\"^4V\"]]],\"^Y\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^4U\"],[\"^Q\",\"^1G\",\"^1H\",\"^4U\",\"^4V\"]]],\"^16\",[\"^Z\",[null,null]]],\"^1F\",true,\"^V\",19,\"^U\",459,\"^W\",459,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^4U\"],[\"^Q\",\"^1G\",\"^1H\",\"^4U\",\"^4V\"]]]]],\"^11\",\"Do not call this directly, use 'spec'\"],\"^B\",\"~$cljs.spec.alpha/spec-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",28,\"^30\",[\"^ \",\"^13\",false,\"^17\",5,\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^4U\"],[\"^Q\",\"^1G\",\"^1H\",\"^4U\",\"^4V\"]]],\"^Y\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^4U\"],[\"^Q\",\"^1G\",\"^1H\",\"^4U\",\"^4V\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^4U\"],[\"^Q\",\"^1G\",\"^1H\",\"^4U\",\"^4V\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",459,\"^W\",459,\"^17\",5,\"^18\",true,\"^Y\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1H\",\"^4U\"],[\"^Q\",\"^1G\",\"^1H\",\"^4U\",\"^4V\"]]],\"^11\",\"Do not call this directly, use 'spec'\"],\"~$invalid?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",144,\"^V\",7,\"^W\",144,\"^X\",15,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$ret\"]]]]],\"^11\",\"tests the validity of a conform return value\"],\"^B\",\"~$cljs.spec.alpha/invalid?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^14\",[\"^Z\",[[\"^9H\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",144,\"^W\",144,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^9H\"]]]]],\"^11\",\"tests the validity of a conform return value\"],\"~$amp-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",956,\"^V\",19,\"^W\",956,\"^X\",27,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^3G\",\"^3J\",\"^5:\"]]]]],\"^11\",\"Do not call this directly, use '&'\"],\"^B\",\"~$cljs.spec.alpha/amp-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",27,\"^14\",[\"^Z\",[[\"^3G\",\"^3J\",\"^5:\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",956,\"^W\",956,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^3G\",\"^3J\",\"^5:\"]]]]],\"^11\",\"Do not call this directly, use '&'\"],\"~$pcat*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",923,\"^V\",8,\"^W\",923,\"^X\",13,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[[\"~#cmap\",[[\"^4;\",\"~$&\",\"~$pr\",\"^5<\",\"^2Q\"],\"~:ps\",[\"~$k1\",\"~$&\",\"~$kr\",\"^5<\",\"^2P\"],\"~:ks\",[\"~$f1\",\"~$&\",\"~$fr\",\"^5<\",\"^2R\"],\"~:forms\",\"^9H\",\"~:ret\",\"~$rep+\",\"~:rep+\"]]]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/pcat*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",13,\"^14\",[\"^Z\",[[\"~$p__17590\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",923,\"^W\",923,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[[\"^9M\",[[\"^4;\",\"~$&\",\"^9N\",\"^5<\",\"^2Q\"],\"^9O\",[\"^9P\",\"~$&\",\"^9Q\",\"^5<\",\"^2P\"],\"^9R\",[\"^9S\",\"~$&\",\"^9T\",\"^5<\",\"^2R\"],\"^9U\",\"^9H\",\"^9V\",\"^9W\",\"^9X\"]]]]]]]],\"~$alt*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",970,\"^V\",8,\"^W\",970,\"^X\",12,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2Q\",\"^2P\",\"^2R\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/alt*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^14\",[\"^Z\",[[\"^2Q\",\"^2P\",\"^2R\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",970,\"^W\",970,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2Q\",\"^2P\",\"^2R\"]]]]]],\"~$cat-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",935,\"^V\",19,\"^W\",935,\"^X\",27,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2P\",\"^2Q\",\"^2R\"]]]]],\"^11\",\"Do not call this directly, use 'cat'\"],\"^B\",\"~$cljs.spec.alpha/cat-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",27,\"^14\",[\"^Z\",[[\"^2P\",\"^2Q\",\"^2R\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",935,\"^W\",935,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2P\",\"^2Q\",\"^2R\"]]]]],\"^11\",\"Do not call this directly, use 'cat'\"],\"~$macroexpand-check\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",319,\"^V\",8,\"^W\",319,\"^X\",25,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$v\",\"~$args\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/macroexpand-check\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",25,\"^14\",[\"^Z\",[[\"~$v\",\"^:4\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",319,\"^W\",319,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$v\",\"^:4\"]]]]]],\"~$reg-resolve\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",55,\"^V\",8,\"^W\",55,\"^X\",19,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$k\"]]]]],\"^11\",\"returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident\"],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/reg-resolve\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",19,\"^14\",[\"^Z\",[[\"~$k\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",55,\"^W\",55,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$k\"]]]]],\"^11\",\"returns the spec/regex at end of alias chain starting with k, nil if not found, k if k not ident\"],\"~$t_cljs$spec$alpha17515\",[\"^ \",\"^2W\",6,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"^28\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",731,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$explain-str\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",259,\"^V\",7,\"^W\",259,\"^X\",18,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value that fails to conform, returns an explanation as a string.\"],\"^B\",\"~$cljs.spec.alpha/explain-str\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",18,\"^14\",[\"^Z\",[[\"^10\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",259,\"^W\",259,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",\"Given a spec and a value that fails to conform, returns an explanation as a string.\"],\"~$*compile-asserts*\",[\"^ \",\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1415,\"^V\",3,\"^W\",1415,\"^X\",20,\"^1K\",true,\"^11\",\"If true, compiler will enable spec asserts, which are then\\nsubject to runtime control via check-asserts? If false, compiler\\nwill eliminate all spec assert overhead. See 'assert'.\\nInitially set to the negation of the ':elide-asserts' compiler option.\\nDefaults to true.\"],\"^B\",\"~$cljs.spec.alpha/*compile-asserts*\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",20,\"^V\",1,\"^1K\",true,\"^U\",1408,\"^W\",1415,\"^1M\",\"^3E\",\"^11\",\"If true, compiler will enable spec asserts, which are then\\nsubject to runtime control via check-asserts? If false, compiler\\nwill eliminate all spec assert overhead. See 'assert'.\\nInitially set to the negation of the ':elide-asserts' compiler option.\\nDefaults to true.\"],\"~$->t_cljs$spec$alpha17933\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$meta17934\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17933\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^10\",\"^:>\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",1333,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^:>\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$with-gen\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",192,\"^V\",7,\"^W\",192,\"^X\",15,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$gen-fn\"]]]]],\"^11\",\"Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator\"],\"^B\",\"~$cljs.spec.alpha/with-gen\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^14\",[\"^Z\",[[\"^10\",\"^:A\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",192,\"^W\",192,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^:A\"]]]]],\"^11\",\"Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator\"],\"^6N\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",40,\"^V\",4,\"^W\",40,\"^X\",12,\"^4Z\",\"^1<\",\"^11\",null,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]]],\"^4Z\",\"^1<\",\"^B\",\"~$cljs.spec.alpha/conform*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^14\",[\"^Z\",[[\"^10\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",39,\"^W\",40,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"~$x\"]]]]],\"^11\",null],\"~$check-asserts?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1423,\"^V\",16,\"^W\",1423,\"^X\",30,\"^1M\",\"^3E\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[]]]]],\"^11\",\"Returns the value set by check-asserts.\"],\"^B\",\"~$cljs.spec.alpha/check-asserts?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",30,\"^14\",[\"^Z\",[[]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1423,\"~:ret-tag\",\"^3E\",\"^W\",1423,\"^17\",0,\"^1M\",\"^3E\",\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[]]]]],\"^11\",\"Returns the value set by check-asserts.\"],\"~$noret?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",993,\"^V\",8,\"^W\",993,\"^X\",14,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^4;\",\"~$pret\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/noret?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",14,\"^14\",[\"^Z\",[[\"^4;\",\"^:H\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",993,\"^W\",993,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^4;\",\"^:H\"]]]]]],\"~$rep-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",947,\"^V\",19,\"^W\",947,\"^X\",27,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"~$p\"]]]]],\"^11\",\"Do not call this directly, use '*'\"],\"^B\",\"~$cljs.spec.alpha/rep-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",27,\"^14\",[\"^Z\",[[\"^Q\",\"~$p\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",947,\"^W\",947,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"~$p\"]]]]],\"^11\",\"Do not call this directly, use '*'\"],\"~$->t_cljs$spec$alpha17533\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"~$meta17534\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17533\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^:M\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",3,\"^1A\",\"^1B\",\"^U\",767,\"^17\",4,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2R\",\"^3J\",\"^1H\",\"^:M\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$op-describe\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1085,\"^V\",8,\"^W\",1085,\"^X\",19,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/op-describe\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",19,\"^14\",[\"^Z\",[[\"~$p\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1085,\"^W\",1085,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\"]]]]]],\"~$describe\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",187,\"^V\",7,\"^W\",187,\"^X\",15,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"]]]]],\"^11\",\"returns an abbreviated description of the spec as data\"],\"^B\",\"~$cljs.spec.alpha/describe\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",15,\"^14\",[\"^Z\",[[\"^10\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",187,\"^W\",187,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\"]]]]],\"^11\",\"returns an abbreviated description of the spec as data\"],\"~$explain-1\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",369,\"^V\",8,\"^W\",369,\"^X\",17,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1V\",\"^1W\",\"^1X\",\"~$v\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/explain-1\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",17,\"^14\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1V\",\"^1W\",\"^1X\",\"~$v\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",369,\"^W\",369,\"^17\",6,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^Q\",\"^1G\",\"^1V\",\"^1W\",\"^1X\",\"~$v\"]]]]]],\"~$explain-out\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",248,\"^V\",7,\"^W\",248,\"^X\",18,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^1R\"]]]]],\"^11\",\"Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\\n    by default explain-printer.\"],\"^B\",\"~$cljs.spec.alpha/explain-out\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",18,\"^14\",[\"^Z\",[[\"^1R\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",248,\"^W\",248,\"^17\",1,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^1R\"]]]]],\"^11\",\"Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\\n    by default explain-printer.\"],\"~$re-gen\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1156,\"^V\",8,\"^W\",1156,\"^X\",14,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"^6R\",\"^1V\",\"^4R\",\"~$f\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/re-gen\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",14,\"^14\",[\"^Z\",[[\"~$p\",\"^6R\",\"^1V\",\"^4R\",\"~$f\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1156,\"^W\",1156,\"^17\",5,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"^6R\",\"^1V\",\"^4R\",\"~$f\"]]]]]],\"~$t_cljs$spec$alpha17910\",[\"^ \",\"^2W\",9,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^2X\"]],\"^B\",\"^2K\",\"^T\",\"out/cljs/spec/alpha.cljs\",\"^2Y\",true,\"^1:\",true,\"^V\",5,\"^U\",1285,\"^2Z\",false,\"^1@\",[\"^;\",[\"^1=\",\"^1?\",\"^2X\"]]],\"~$filter-alt\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",961,\"^V\",8,\"^W\",961,\"^X\",18,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2Q\",\"^2P\",\"^2R\",\"~$f\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/filter-alt\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",18,\"^14\",[\"^Z\",[[\"^2Q\",\"^2P\",\"^2R\",\"~$f\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",961,\"^W\",961,\"^17\",4,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^2Q\",\"^2P\",\"^2R\",\"~$f\"]]]]]],\"~$and-preds\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",677,\"^V\",8,\"^W\",677,\"^X\",17,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\",\"^3J\",\"^2R\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/and-preds\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",17,\"^14\",[\"^Z\",[[\"~$x\",\"^3J\",\"^2R\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",677,\"^W\",677,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$x\",\"^3J\",\"^2R\"]]]]]],\"~$->t_cljs$spec$alpha17417\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^1:\",true,\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]],\"^1A\",\"^1B\",\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^?\",\"^2R\",\"^3J\",\"^1H\",\"^3P\",\"^5L\",\"^3:\",\"^3Y\",\"~$meta17418\"]]]]],\"^T\",null],\"^1;\",[\"^;\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]],\"^B\",\"~$cljs.spec.alpha/->t_cljs$spec$alpha17417\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^14\",[\"^Z\",[[\"^?\",\"^2R\",\"^3J\",\"^1H\",\"^3P\",\"^5L\",\"^3:\",\"^3Y\",\"^;3\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^1:\",true,\"^V\",5,\"^1A\",\"^1B\",\"^U\",648,\"^17\",9,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^?\",\"^2R\",\"^3J\",\"^1H\",\"^3P\",\"^5L\",\"^3:\",\"^3Y\",\"^;3\"]]]]],\"^1@\",[\"^;\",[\"^1=\",\"^1?\"]]],\"~$call-valid?\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1260,\"^V\",8,\"^W\",1260,\"^X\",19,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$f\",\"^3:\",\"^:4\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/call-valid?\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",19,\"^14\",[\"^Z\",[[\"~$f\",\"^3:\",\"^:4\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1260,\"^W\",1260,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$f\",\"^3:\",\"^:4\"]]]]]],\"~$op-unform\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1031,\"^V\",8,\"^W\",1031,\"^X\",17,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"~$x\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/op-unform\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",17,\"^14\",[\"^Z\",[[\"~$p\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1031,\"^W\",1031,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"~$x\"]]]]]],\"~$rep*\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",940,\"^V\",8,\"^W\",940,\"^X\",12,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^4;\",\"^4<\",\"^9H\",\"~$splice\",\"^Q\"]]]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/rep*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^14\",[\"^Z\",[[\"^4;\",\"^4<\",\"^9H\",\"^;:\",\"^Q\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",940,\"^W\",940,\"^17\",5,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^4;\",\"^4<\",\"^9H\",\"^;:\",\"^Q\"]]]]]],\"^23\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^4Z\",\"^1>\",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^X\",12,\"^30\",[\"^ \",\"^13\",false,\"^17\",2,\"^14\",[\"^Z\",[[\"~$_\"],[\"~$_\",\"^Q\"]]],\"^Y\",[\"^Z\",[[\"~$_\"],[\"~$_\",\"^Q\"]]],\"^16\",[\"^Z\",[null,null]]],\"^V\",4,\"^U\",124,\"^W\",124,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$_\"],[\"~$_\",\"^Q\"]]]]],\"^11\",null],\"^4Z\",\"^1>\",\"^B\",\"~$cljs.spec.alpha/specize*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^30\",[\"^ \",\"^13\",false,\"^17\",2,\"^14\",[\"^Z\",[[\"~$_\"],[\"~$_\",\"^Q\"]]],\"^Y\",[\"^Z\",[[\"~$_\"],[\"~$_\",\"^Q\"]]],\"^16\",[\"^Z\",[null,null]]],\"^14\",[\"^Z\",[[\"~$_\"],[\"~$_\",\"^Q\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",123,\"^W\",124,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[[\"~$_\"],[\"~$_\",\"^Q\"]]],\"^11\",null],\"~$maybe-impl\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",989,\"^V\",19,\"^W\",989,\"^X\",29,\"^1F\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"^Q\"]]]]],\"^11\",\"Do not call this directly, use '?'\"],\"^B\",\"~$cljs.spec.alpha/maybe-impl\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",29,\"^14\",[\"^Z\",[[\"~$p\",\"^Q\"]]],\"^15\",null,\"^1F\",true,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",989,\"^W\",989,\"^17\",2,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$p\",\"^Q\"]]]]],\"^11\",\"Do not call this directly, use '?'\"],\"~$pcat\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",933,\"^V\",8,\"^W\",933,\"^X\",12,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$&\",\"^2Q\"]]]]],\"^30\",[\"^ \",\"^13\",true,\"^17\",0,\"^14\",[[\"^Z\",[\"^2Q\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^2Q\"]]],\"^16\",[\"^Z\",[null]]]],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/pcat\",\"^13\",true,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^30\",[\"^ \",\"^13\",true,\"^17\",0,\"^14\",[[\"^Z\",[\"^2Q\"]]],\"^Y\",[\"^Z\",[[\"~$&\",\"^2Q\"]]],\"^16\",[\"^Z\",[null]]],\"^14\",[[\"^Z\",[\"^2Q\"]]],\"^15\",null,\"^16\",[\"^Z\",[null]],\"^V\",1,\"^U\",933,\"^W\",933,\"^17\",0,\"^18\",true,\"^Y\",[\"^Z\",[[\"~$&\",\"^2Q\"]]]],\"^6P\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",42,\"^V\",4,\"^W\",42,\"^X\",12,\"^4Z\",\"^1<\",\"^11\",null,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]]]]]],\"^4Z\",\"^1<\",\"^B\",\"~$cljs.spec.alpha/explain*\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",12,\"^14\",[\"^Z\",[[\"^10\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",39,\"^W\",42,\"^17\",5,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"^10\",\"^1V\",\"^1W\",\"^1X\",\"~$x\"]]]]],\"^11\",null],\"~$validate-fn\",[\"^ \",\"^R\",null,\"^S\",[\"^ \",\"^T\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/spec/alpha.cljs\",\"^U\",1271,\"^V\",8,\"^W\",1271,\"^X\",19,\"^1U\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$f\",\"^3:\",\"~$iters\"]]]]],\"^11\",\"returns f if valid, else smallest\"],\"^1U\",true,\"^B\",\"~$cljs.spec.alpha/validate-fn\",\"^13\",false,\"^T\",\"out/cljs/spec/alpha.cljs\",\"^X\",19,\"^14\",[\"^Z\",[[\"~$f\",\"^3:\",\"^;C\"]]],\"^15\",null,\"^16\",[\"^Z\",[null,null]],\"^V\",1,\"^U\",1271,\"^W\",1271,\"^17\",3,\"^18\",true,\"^Y\",[\"^Z\",[\"^[\",[\"^Z\",[[\"~$f\",\"^3:\",\"^;C\"]]]]],\"^11\",\"returns f if valid, else smallest\"]],\"~:require-macros\",[\"^ \",\"~$c\",\"^F\",\"^F\",\"^F\",\"~$s\",\"^C\",\"^C\",\"^C\",\"^K\",\"^L\",\"^L\",\"^L\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^;\",[\"^Q\",\"^3S\",\"^60\",\"~:args\",\"~:cljs.spec.alpha/failure\",\"~$cljs.spec.alpha/*\",\"~:max-tries\",\"~:path\",\"~:req-un\",\"~:opt-un\",\"^4V\",\"^70\",\"~$cljs.spec.alpha/+\",\"~:p2\",\"^9V\",\"~:cljs.spec.alpha/unknown\",\"~:gfn\",\"~:cljs.spec.alpha/recursion-limit\",\"~:cljs.spec.alpha/name\",\"^;3\",\"~:pred-exprs\",\"^96\",\"~:keys-pred\",\"~$vector?\",\"~:gen-max\",\"~$p1__17927#\",\"~:shrunk\",\"~:fn\",\"~$cljs.spec.alpha/alt\",\"^3Q\",\"^9X\",\"~$cljs.core/=\",\"~:opt-keys\",\"^35\",\"^7U\",\"~:cljs.spec.alpha/rep\",\"~:pred\",\"^3R\",\"~:splice\",\"^61\",\"^2R\",\"^5;\",\"~:cljs.spec.alpha/accept\",\"^34\",\"^8C\",\"~:else\",\"^9R\",\"~$cljs.core/count\",\"~$cljs.spec.alpha/and\",\"^51\",\"^52\",\"~$cljs.spec.alpha/cat\",\"~:_\",\"^98\",\"~:maybe\",\"~:via\",\"~$cljs.spec.alpha/every\",\"^5?\",\"^4W\",\"~:req-specs\",\"~$cljs.spec.alpha/or\",\"^1H\",\"~:cljs.spec.alpha/gfn\",\"^62\",\"^38\",\"~$v\",\"~$map?\",\"^54\",\"~:conform-keys\",\"^53\",\"^88\",\"^4U\",\"~$cljs.spec.alpha/fspec\",\"^5=\",\"~$fn\",\"~:val\",\"^39\",\"^4J\",\"~$cljs.spec.alpha/nilable\",\"^55\",\"~:cljs.spec.alpha/v\",\"^7X\",\"~$cljs.spec.alpha/tuple\",\"^1G\",\"^6V\",\"^9:\",\"~:p1\",\"^:>\",\"~$cljs.core/zipmap\",\"~:cljs.spec.alpha/problems\",\"^6D\",\"^63\",\"~$%\",\"~$cljs.core/map\",\"~:cljs.spec.alpha/kvs->map\",\"~$method\",\"~:distinct\",\"^56\",\"~$cljs.spec.alpha/keys\",\"^3G\",\"^64\",\"^9A\",\"^5L\",\"~:reason\",\"~$cljs.spec.alpha/merge\",\"~:cljs.spec.alpha/invalid\",\"^3J\",\"^65\",\"~:req\",\"^66\",\"^7V\",\"^67\",\"~$nil?\",\"~:assertion-failed\",\"~$fn*\",\"~$cljs.core/<=\",\"^79\",\"^:M\",\"~:cljs.spec.alpha/amp\",\"~:id\",\"^1C\",\"^68\",\"~:min-count\",\"~:kind\",\"~:smallest\",\"~:count\",\"^6[\",\"^3N\",\"~:req-keys\",\"^3O\",\"~$k\",\"^8F\",\"~:cljs.spec.alpha/k\",\"~$cljs.core/fn\",\"^69\",\"^36\",\"~:opt-specs\",\"^73\",\"^6:\",\"~$p1__17928#\",\"~:cljs.spec.alpha/args\",\"^37\",\"~$ifn?\",\"~:pred-forms\",\"^57\",\"^10\",\"^5H\",\"^?\",\"~$distinct?\",\"^3T\",\"~:max-count\",\"^6;\",\"^99\",\"~:max-elements\",\"^6<\",\"~$cljs.spec.alpha/multi-spec\",\"~$cljs.core/coll?\",\"^3P\",\"^3;\",\"^6=\",\"^7@\",\"^3Z\",\"~:num-elements\",\"^8G\",\"^3:\",\"^6>\",\"^58\",\"~$apply\",\"^6?\",\"^6@\",\"^6A\",\"^3Y\",\"~:min-elements\",\"~$clojure.spec/&\",\"^59\",\"^6B\",\"^9;\",\"~:cljs.spec.alpha/alt\",\"^9U\",\"~:cljs.spec.alpha/pred\",\"~:cljs.spec.alpha/nil\",\"^9O\",\"^7W\",\"~$cljs.spec.alpha/conformer\",\"~:in\",\"^97\",\"^6C\",\"~:accept\",\"~:opt\",\"~:cljs.spec.alpha/pcat\",\"^5:\",\"^5M\",\"~$cljs.spec.alpha/?\"]],\"~:order\",[\"^4J\",\"^;T\",\"^;Q\",\"^<S\",\"^<D\",\"~$%\",\"^<7\",\"^<@\",\"^<K\",\"^;L\",\"^<4\",\"^<E\",\"^<Q\",\"^<<\",\"^=H\",\"^;S\",\"^;H\",\"^=8\",\"^=J\",\"^;M\",\"^;N\",\"^;R\",\"^;U\",\"^;V\",\"^<2\",\"^<>\",\"^<T\",\"^=3\",\"^=6\",\"^=:\",\"^<A\",\"^<P\",\"^7U\",\"^5;\",\"^51\",\"^52\",\"^5?\",\"^1H\",\"^54\",\"^53\",\"^5=\",\"^55\",\"^56\",\"^8F\",\"^57\",\"^3P\",\"^58\",\"^59\",\"^7W\",\"^5:\",\"^8G\",\"^7V\",\"^7X\",\"^Q\",\"^1G\",\"^4U\",\"^4V\",\"^4W\",\"^<N\",\"^=>\",\"^3N\",\"^3O\",\"^3Q\",\"^3R\",\"^3S\",\"^3T\",\"^;W\",\"^<1\",\"^<8\",\"^<H\",\"^2R\",\"^3J\",\"^3:\",\"^6[\",\"^70\",\"^<?\",\"^?\",\"^5L\",\"^3Y\",\"^5M\",\"^;3\",\"^<9\",\"^3Z\",\"^5H\",\"^=?\",\"^<X\",\"^=;\",\"^<R\",\"^:M\",\"^7@\",\"^=<\",\"^98\",\"^;X\",\"^9:\",\"^<B\",\"^97\",\"^<O\",\"^99\",\"^96\",\"^=2\",\"^<[\",\"^=0\",\"^9;\",\"^=@\",\"^;K\",\"^=B\",\"^==\",\"^<=\",\"^60\",\"^61\",\"^62\",\"^63\",\"^64\",\"^65\",\"^66\",\"^67\",\"^68\",\"^69\",\"^6:\",\"^10\",\"^6;\",\"^6<\",\"^6=\",\"^6>\",\"^6?\",\"^6@\",\"^6A\",\"^6B\",\"^6C\",\"^6D\",\"^9V\",\"^<6\",\"^9O\",\"^9R\",\"^9U\",\"^9X\",\"^=K\",\"^;P\",\"^<5\",\"^<Z\",\"^<3\",\"^<I\",\"^;J\",\"^<Y\",\"^=D\",\"^=F\",\"^<;\",\"^=C\",\"^;O\",\"^<:\",\"~:_\",\"^=L\",\"^<0\",\"^=I\",\"^3G\",\"^8C\",\"^6V\",\"^;[\",\"^=1\",\"^;Z\",\"^=A\",\"^=9\",\"^<C\",\"^34\",\"^35\",\"^36\",\"^37\",\"^38\",\"^39\",\"^3;\",\"^88\",\"^<M\",\"^=G\",\"^<W\",\"^;Y\",\"^<J\",\"^<L\",\"^=4\",\"^<G\",\"^=7\",\"^=5\",\"~$k\",\"~$v\",\"^79\",\"^:>\",\"^1C\",\"^=E\",\"^<U\",\"^<F\",\"^9A\",\"^73\",\"^;I\",\"^<V\"]],\"^11\",null]","cljs/spec/test/alpha.js":"// Compiled by ClojureScript 1.9.542 {:static-fns true, :optimize-constants false}\ngoog.provide('cljs.spec.test.alpha');\ngoog.require('cljs.core');\ngoog.require('goog.object');\ngoog.require('goog.userAgent.product');\ngoog.require('clojure.string');\ngoog.require('cljs.stacktrace');\ngoog.require('cljs.pprint');\ngoog.require('cljs.spec.alpha');\ngoog.require('cljs.spec.gen.alpha');\ngoog.require('clojure.test.check');\ngoog.require('clojure.test.check.properties');\ncljs.spec.test.alpha.distinct_by = (function cljs$spec$test$alpha$distinct_by(f,coll){\nvar step = (function cljs$spec$test$alpha$distinct_by_$_step(xs,seen){\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn (function (p__24320,seen__$1){\nwhile(true){\nvar vec__24321 = p__24320;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24321,(0),null);\nvar xs__$1 = vec__24321;\nvar temp__4657__auto__ = cljs.core.seq(xs__$1);\nif(temp__4657__auto__){\nvar s = temp__4657__auto__;\nvar v = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x));\nif(cljs.core.contains_QMARK_(seen__$1,v)){\nvar G__24324 = cljs.core.rest(s);\nvar G__24325 = seen__$1;\np__24320 = G__24324;\nseen__$1 = G__24325;\ncontinue;\n} else {\nreturn cljs.core.cons(x,cljs$spec$test$alpha$distinct_by_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,v)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}).call(null,xs,seen);\n}),null,null));\n});\nreturn step(coll,cljs.core.PersistentHashSet.EMPTY);\n});\ncljs.spec.test.alpha.__GT_sym = (function cljs$spec$test$alpha$__GT_sym(x){\nreturn (function (){var G__24327 = new cljs.core.Var(function(){return cljs.spec.alpha.__GT_sym;},new cljs.core.Symbol(\"cljs.spec.alpha\",\"->sym\",\"cljs.spec.alpha/->sym\",-2031271081,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",-558947994),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null),new cljs.core.Symbol(null,\"->sym\",\"->sym\",696606926,null),\"out/cljs/spec/alpha.cljs\",13,1,305,305,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",-555367584,null)], null)),\"Returns a symbol from a symbol or var\",(cljs.core.truth_(cljs.spec.alpha.__GT_sym)?cljs.spec.alpha.__GT_sym.cljs$lang$test:null)]));\nreturn (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24327) : cljs.core.deref.call(null,G__24327));\n})().call(null,x);\n});\n/**\n * if false, instrumented fns call straight through\n */\ncljs.spec.test.alpha._STAR_instrument_enabled_STAR_ = true;\ncljs.spec.test.alpha.get_host_port = (function cljs$spec$test$alpha$get_host_port(){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(\"browser\",cljs.core._STAR_target_STAR_)){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"host\",\"host\",-1558485167),window.location.host,new cljs.core.Keyword(null,\"port\",\"port\",1534937262),window.location.port], null);\n}\n});\ncljs.spec.test.alpha.get_ua_product = (function cljs$spec$test$alpha$get_ua_product(){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(\"browser\",cljs.core._STAR_target_STAR_)){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_target_STAR_);\n} else {\nif(cljs.core.truth_(goog.userAgent.product.SAFARI)){\nreturn new cljs.core.Keyword(null,\"safari\",\"safari\",497115653);\n} else {\nif(cljs.core.truth_(goog.userAgent.product.CHROME)){\nreturn new cljs.core.Keyword(null,\"chrome\",\"chrome\",1718738387);\n} else {\nif(cljs.core.truth_(goog.userAgent.product.FIREFOX)){\nreturn new cljs.core.Keyword(null,\"firefox\",\"firefox\",1283768880);\n} else {\nif(cljs.core.truth_(goog.userAgent.product.IE)){\nreturn new cljs.core.Keyword(null,\"ie\",\"ie\",2038473780);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});\ncljs.spec.test.alpha.get_env = (function cljs$spec$test$alpha$get_env(){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ua-product\",\"ua-product\",938384227),cljs.spec.test.alpha.get_ua_product()], null);\n});\n/**\n * Fn-spec must include at least :args or :ret specs.\n */\ncljs.spec.test.alpha.fn_spec_QMARK_ = (function cljs$spec$test$alpha$fn_spec_QMARK_(m){\nvar or__6677__auto__ = new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(or__6677__auto__)){\nreturn or__6677__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(m);\n}\n});\ncljs.spec.test.alpha.explain_data_STAR_ = (function cljs$spec$test$alpha$explain_data_STAR_(spec,v){\nif(cljs.core.truth_(cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3(spec,v,null))){\nreturn null;\n} else {\nreturn cljs.spec.alpha.explain_data(spec,v);\n}\n});\ncljs.spec.test.alpha.find_caller = (function cljs$spec$test$alpha$find_caller(st){\nvar search_spec_fn = (function cljs$spec$test$alpha$find_caller_$_search_spec_fn(frame){\nif(cljs.core.truth_(frame)){\nvar s = new cljs.core.Keyword(null,\"function\",\"function\",-2127255473).cljs$core$IFn$_invoke$arity$1(frame);\nvar and__6665__auto__ = typeof s === 'string';\nif(and__6665__auto__){\nvar and__6665__auto____$1 = !(clojure.string.blank_QMARK_(s));\nif(and__6665__auto____$1){\nreturn cljs.core.re_find(/cljs\\.spec\\.test\\.spec_checking_fn/,s);\n} else {\nreturn and__6665__auto____$1;\n}\n} else {\nreturn and__6665__auto__;\n}\n} else {\nreturn null;\n}\n});\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(search_spec_fn,cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((function (p1__24328_SHARP_){\nreturn cljs.core.not(search_spec_fn(p1__24328_SHARP_));\n}),st)));\n});\ncljs.spec.test.alpha.spec_checking_fn = (function cljs$spec$test$alpha$spec_checking_fn(v,f,fn_spec){\nvar fn_spec__$1 = (function (){var G__24339 = new cljs.core.Var(function(){return cljs.spec.alpha.maybe_spec;},new cljs.core.Symbol(\"cljs.spec.alpha\",\"maybe-spec\",\"cljs.spec.alpha/maybe-spec\",1954004993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",-558947994),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"test\",\"test\",577538877)],[true,new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null),new cljs.core.Symbol(null,\"maybe-spec\",\"maybe-spec\",-741366888,null),\"out/cljs/spec/alpha.cljs\",18,1,105,105,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"spec-or-k\",\"spec-or-k\",1986391440,null)], null)),\"spec-or-k must be a spec, regex or resolvable kw/sym, else returns nil.\",(cljs.core.truth_(cljs.spec.alpha.maybe_spec)?cljs.spec.alpha.maybe_spec.cljs$lang$test:null)]));\nreturn (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24339) : cljs.core.deref.call(null,G__24339));\n})().call(null,fn_spec);\nvar conform_BANG_ = ((function (fn_spec__$1){\nreturn (function (v__$1,role,spec,data,args){\nvar conformed = cljs.spec.alpha.conform(spec,data);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs.spec.alpha\",\"invalid\",\"cljs.spec.alpha/invalid\",-1220295119),conformed)){\nvar caller = cljs.spec.test.alpha.find_caller((function (){var G__24340 = cljs.spec.test.alpha.get_host_port();\nvar G__24341 = (new Error()).stack;\nvar G__24342 = cljs.spec.test.alpha.get_env();\nvar G__24343 = null;\nreturn (cljs.stacktrace.parse_stacktrace.cljs$core$IFn$_invoke$arity$4 ? cljs.stacktrace.parse_stacktrace.cljs$core$IFn$_invoke$arity$4(G__24340,G__24341,G__24342,G__24343) : cljs.stacktrace.parse_stacktrace.call(null,G__24340,G__24341,G__24342,G__24343));\n})());\nvar ed = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.spec.alpha.explain_data_STAR_(spec,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [role], null),cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,data),new cljs.core.Keyword(\"cljs.spec.alpha\",\"args\",\"cljs.spec.alpha/args\",1870769783),args,cljs.core.array_seq([new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592),new cljs.core.Keyword(null,\"instrument\",\"instrument\",-960698844)], 0)),(cljs.core.truth_(caller)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec.test.alpha\",\"caller\",\"cljs.spec.test.alpha/caller\",-398302390),caller], null):null)], 0));\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Call to \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(v__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\" did not conform to spec:\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var sb__7671__auto__ = (new goog.string.StringBuffer());\nvar _STAR_print_newline_STAR_24344_24349 = cljs.core._STAR_print_newline_STAR_;\nvar _STAR_print_fn_STAR_24345_24350 = cljs.core._STAR_print_fn_STAR_;\ncljs.core._STAR_print_newline_STAR_ = true;\n\ncljs.core._STAR_print_fn_STAR_ = ((function (_STAR_print_newline_STAR_24344_24349,_STAR_print_fn_STAR_24345_24350,sb__7671__auto__,caller,ed,conformed,fn_spec__$1){\nreturn (function (x__7672__auto__){\nreturn sb__7671__auto__.append(x__7672__auto__);\n});})(_STAR_print_newline_STAR_24344_24349,_STAR_print_fn_STAR_24345_24350,sb__7671__auto__,caller,ed,conformed,fn_spec__$1))\n;\n\ntry{cljs.spec.alpha.explain_out(ed);\n}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_24345_24350;\n\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_24344_24349;\n}\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__7671__auto__)].join('');\n})())].join(''),ed);\n} else {\nreturn conformed;\n}\n});})(fn_spec__$1))\n;\nvar G__24346 = ((function (fn_spec__$1,conform_BANG_){\nreturn (function() { \nvar G__24351__delegate = function (args){\nif(cljs.spec.test.alpha._STAR_instrument_enabled_STAR_){\nvar _STAR_instrument_enabled_STAR_24347 = cljs.spec.test.alpha._STAR_instrument_enabled_STAR_;\ncljs.spec.test.alpha._STAR_instrument_enabled_STAR_ = null;\n\ntry{if(cljs.core.truth_(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(fn_spec__$1))){\nconform_BANG_(v,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(fn_spec__$1),args,args);\n} else {\n}\n\nvar _STAR_instrument_enabled_STAR_24348 = cljs.spec.test.alpha._STAR_instrument_enabled_STAR_;\ncljs.spec.test.alpha._STAR_instrument_enabled_STAR_ = true;\n\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);\n}finally {cljs.spec.test.alpha._STAR_instrument_enabled_STAR_ = _STAR_instrument_enabled_STAR_24348;\n}}finally {cljs.spec.test.alpha._STAR_instrument_enabled_STAR_ = _STAR_instrument_enabled_STAR_24347;\n}} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);\n}\n};\nvar G__24351 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__24352__i = 0, G__24352__a = new Array(arguments.length -  0);\nwhile (G__24352__i < G__24352__a.length) {G__24352__a[G__24352__i] = arguments[G__24352__i + 0]; ++G__24352__i;}\n  args = new cljs.core.IndexedSeq(G__24352__a,0,null);\n} \nreturn G__24351__delegate.call(this,args);};\nG__24351.cljs$lang$maxFixedArity = 0;\nG__24351.cljs$lang$applyTo = (function (arglist__24353){\nvar args = cljs.core.seq(arglist__24353);\nreturn G__24351__delegate(args);\n});\nG__24351.cljs$core$IFn$_invoke$arity$variadic = G__24351__delegate;\nreturn G__24351;\n})()\n;})(fn_spec__$1,conform_BANG_))\n;\ngoog.object.extend(G__24346,f);\n\nreturn G__24346;\n});\ncljs.spec.test.alpha.no_fspec = (function cljs$spec$test$alpha$no_fspec(v,spec){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Fn at \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(v),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\" is not spec'ed.\")].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),v,new cljs.core.Keyword(null,\"spec\",\"spec\",347520401),spec,new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592),new cljs.core.Keyword(null,\"no-fspec\",\"no-fspec\",-1763393966)], null));\n});\nif(typeof cljs.spec.test.alpha.instrumented_vars !== 'undefined'){\n} else {\ncljs.spec.test.alpha.instrumented_vars = (function (){var G__24354 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24354) : cljs.core.atom.call(null,G__24354));\n})();\n}\n/**\n * Helper for instrument.\n */\ncljs.spec.test.alpha.instrument_choose_fn = (function cljs$spec$test$alpha$instrument_choose_fn(f,spec,sym,p__24355){\nvar map__24358 = p__24355;\nvar map__24358__$1 = ((((!((map__24358 == null)))?((((map__24358.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24358.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24358):map__24358);\nvar over = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24358__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",142575302));\nvar stub = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24358__$1,new cljs.core.Keyword(null,\"stub\",\"stub\",1339145807));\nvar replace = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24358__$1,new cljs.core.Keyword(null,\"replace\",\"replace\",-786587770));\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([sym]),stub))){\nreturn cljs.spec.gen.alpha.generate(cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2(spec,over));\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(replace,sym,f);\n}\n});\n/**\n * Helper for instrument\n */\ncljs.spec.test.alpha.instrument_choose_spec = (function cljs$spec$test$alpha$instrument_choose_spec(spec,sym,p__24360){\nvar map__24363 = p__24360;\nvar map__24363__$1 = ((((!((map__24363 == null)))?((((map__24363.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24363.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24363):map__24363);\nvar overrides = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24363__$1,new cljs.core.Keyword(null,\"spec\",\"spec\",347520401));\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(overrides,sym,spec);\n});\ncljs.spec.test.alpha.instrument_1_STAR_ = (function cljs$spec$test$alpha$instrument_1_STAR_(s,v,opts){\nvar spec = cljs.spec.alpha.get_spec(v);\nvar map__24367 = cljs.core.get.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.spec.test.alpha.instrumented_vars) : cljs.core.deref.call(null,cljs.spec.test.alpha.instrumented_vars)),v);\nvar map__24367__$1 = ((((!((map__24367 == null)))?((((map__24367.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24367.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24367):map__24367);\nvar raw = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24367__$1,new cljs.core.Keyword(null,\"raw\",\"raw\",1604651272));\nvar wrapped = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24367__$1,new cljs.core.Keyword(null,\"wrapped\",\"wrapped\",1775172701));\nvar current = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(v) : cljs.core.deref.call(null,v));\nvar to_wrap = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(wrapped,current))?raw:current);\nvar ospec = (function (){var or__6677__auto__ = cljs.spec.test.alpha.instrument_choose_spec(spec,s,opts);\nif(cljs.core.truth_(or__6677__auto__)){\nreturn or__6677__auto__;\n} else {\nthrow cljs.spec.test.alpha.no_fspec(v,spec);\n}\n})();\nvar ofn = cljs.spec.test.alpha.instrument_choose_fn(to_wrap,ospec,s,opts);\nvar checked = cljs.spec.test.alpha.spec_checking_fn(v,ofn,ospec);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.spec.test.alpha.instrumented_vars,cljs.core.assoc,v,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"raw\",\"raw\",1604651272),to_wrap,new cljs.core.Keyword(null,\"wrapped\",\"wrapped\",1775172701),checked], null));\n\nreturn checked;\n});\ncljs.spec.test.alpha.unstrument_1_STAR_ = (function cljs$spec$test$alpha$unstrument_1_STAR_(s,v){\nif(cljs.core.truth_(v)){\nvar temp__4657__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.spec.test.alpha.instrumented_vars) : cljs.core.deref.call(null,cljs.spec.test.alpha.instrumented_vars)),v);\nif(cljs.core.truth_(temp__4657__auto__)){\nvar map__24371 = temp__4657__auto__;\nvar map__24371__$1 = ((((!((map__24371 == null)))?((((map__24371.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24371.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24371):map__24371);\nvar raw = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24371__$1,new cljs.core.Keyword(null,\"raw\",\"raw\",1604651272));\nvar wrapped = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24371__$1,new cljs.core.Keyword(null,\"wrapped\",\"wrapped\",1775172701));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.spec.test.alpha.instrumented_vars,cljs.core.dissoc,v);\n\nvar current = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(v) : cljs.core.deref.call(null,v));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(wrapped,current)){\nreturn raw;\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.spec.test.alpha.fn_spec_name_QMARK_ = (function cljs$spec$test$alpha$fn_spec_name_QMARK_(s){\nreturn (s instanceof cljs.core.Symbol);\n});\ncljs.spec.test.alpha.collectionize = (function cljs$spec$test$alpha$collectionize(x){\nif((x instanceof cljs.core.Symbol)){\nvar x__7519__auto__ = x;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__7519__auto__);\n} else {\nreturn x;\n}\n});\n/**\n * Given an opts map as per instrument, returns the set of syms\n * that can be instrumented.\n */\ncljs.spec.test.alpha.instrumentable_syms = (function cljs$spec$test$alpha$instrumentable_syms(var_args){\nvar args24373 = [];\nvar len__7790__auto___24376 = arguments.length;\nvar i__7791__auto___24377 = (0);\nwhile(true){\nif((i__7791__auto___24377 < len__7790__auto___24376)){\nargs24373.push((arguments[i__7791__auto___24377]));\n\nvar G__24378 = (i__7791__auto___24377 + (1));\ni__7791__auto___24377 = G__24378;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24375 = args24373.length;\nswitch (G__24375) {\ncase 0:\nreturn cljs.spec.test.alpha.instrumentable_syms.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.spec.test.alpha.instrumentable_syms.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24373.length)].join('')));\n\n}\n});\n\ncljs.spec.test.alpha.instrumentable_syms.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.spec.test.alpha.instrumentable_syms.cljs$core$IFn$_invoke$arity$1(null);\n});\n\ncljs.spec.test.alpha.instrumentable_syms.cljs$core$IFn$_invoke$arity$1 = (function (opts){\nif(cljs.core.every_QMARK_(cljs.core.ident_QMARK_,cljs.core.keys(new cljs.core.Keyword(null,\"gen\",\"gen\",142575302).cljs$core$IFn$_invoke$arity$1(opts)))){\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"instrument :gen expects ident keys\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(every? ident? (keys (:gen opts)))\")].join('')));\n}\n\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.into,cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.spec.test.alpha.fn_spec_name_QMARK_,cljs.core.keys(cljs.spec.alpha.registry())),cljs.core.keys(new cljs.core.Keyword(null,\"spec\",\"spec\",347520401).cljs$core$IFn$_invoke$arity$1(opts)),new cljs.core.Keyword(null,\"stub\",\"stub\",1339145807).cljs$core$IFn$_invoke$arity$1(opts),cljs.core.keys(new cljs.core.Keyword(null,\"replace\",\"replace\",-786587770).cljs$core$IFn$_invoke$arity$1(opts))], null));\n});\n\ncljs.spec.test.alpha.instrumentable_syms.cljs$lang$maxFixedArity = 1;\n\ncljs.spec.test.alpha.explain_check = (function cljs$spec$test$alpha$explain_check(args,spec,v,role){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Specification-based check failed\",(cljs.core.truth_(cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3(spec,v,null))?null:cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.spec.alpha.explain_data_STAR_(spec,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [role], null),cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,v),new cljs.core.Keyword(\"cljs.spec.test.alpha\",\"args\",\"cljs.spec.test.alpha/args\",78409593),args,cljs.core.array_seq([new cljs.core.Keyword(\"cljs.spec.test.alpha\",\"val\",\"cljs.spec.test.alpha/val\",1634694485),v,new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592),new cljs.core.Keyword(null,\"check-failed\",\"check-failed\",-1316157547)], 0))));\n});\n/**\n * Returns true if call passes specs, otherwise *returns* an exception\n * with explain-data + ::s/failure.\n */\ncljs.spec.test.alpha.check_call = (function cljs$spec$test$alpha$check_call(f,specs,args){\nvar cargs = (cljs.core.truth_(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(specs))?cljs.spec.alpha.conform(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(specs),args):null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cargs,new cljs.core.Keyword(\"cljs.spec.alpha\",\"invalid\",\"cljs.spec.alpha/invalid\",-1220295119))){\nreturn cljs.spec.test.alpha.explain_check(args,new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(specs),args,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\n} else {\nvar ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);\nvar cret = (cljs.core.truth_(new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(specs))?cljs.spec.alpha.conform(new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(specs),ret):null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cret,new cljs.core.Keyword(\"cljs.spec.alpha\",\"invalid\",\"cljs.spec.alpha/invalid\",-1220295119))){\nreturn cljs.spec.test.alpha.explain_check(args,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(specs),ret,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814));\n} else {\nif(cljs.core.truth_((function (){var and__6665__auto__ = new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(specs);\nif(cljs.core.truth_(and__6665__auto__)){\nvar and__6665__auto____$1 = new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(specs);\nif(cljs.core.truth_(and__6665__auto____$1)){\nreturn new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(specs);\n} else {\nreturn and__6665__auto____$1;\n}\n} else {\nreturn and__6665__auto__;\n}\n})())){\nif(cljs.core.truth_(cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(specs),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cargs,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cret], null)))){\nreturn true;\n} else {\nreturn cljs.spec.test.alpha.explain_check(args,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(specs),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cargs,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cret], null),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204));\n}\n} else {\nreturn true;\n}\n}\n}\n});\ncljs.spec.test.alpha.quick_check = (function cljs$spec$test$alpha$quick_check(f,specs,p__24381){\nvar map__24387 = p__24381;\nvar map__24387__$1 = ((((!((map__24387 == null)))?((((map__24387.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24387.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24387):map__24387);\nvar gen = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24387__$1,new cljs.core.Keyword(null,\"gen\",\"gen\",142575302));\nvar opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24387__$1,new cljs.core.Keyword(\"clojure.test.check\",\"opts\",\"clojure.test.check/opts\",-1773872533));\nvar map__24389 = opts;\nvar map__24389__$1 = ((((!((map__24389 == null)))?((((map__24389.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24389.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24389):map__24389);\nvar num_tests = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__24389__$1,new cljs.core.Keyword(null,\"num-tests\",\"num-tests\",2050041354),(1000));\nvar g = (function (){try{return cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(specs),gen);\n}catch (e24391){if((e24391 instanceof Error)){\nvar t = e24391;\nreturn t;\n} else {\nthrow e24391;\n\n}\n}})();\nif((g instanceof Error)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"result\",\"result\",1415092211),g], null);\n} else {\nvar prop = cljs.spec.gen.alpha.for_all_STAR_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null),((function (map__24389,map__24389__$1,num_tests,g,map__24387,map__24387__$1,gen,opts){\nreturn (function (p1__24380_SHARP_){\nreturn cljs.spec.test.alpha.check_call(f,specs,p1__24380_SHARP_);\n});})(map__24389,map__24389__$1,num_tests,g,map__24387,map__24387__$1,gen,opts))\n], 0));\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.spec.gen.alpha.quick_check,num_tests,prop,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.identity,cljs.core.array_seq([opts], 0)));\n}\n});\n/**\n * Builds spec result map.\n */\ncljs.spec.test.alpha.make_check_result = (function cljs$spec$test$alpha$make_check_result(check_sym,spec,test_check_ret){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"spec\",\"spec\",347520401),spec,new cljs.core.Keyword(\"clojure.test.check\",\"ret\",\"clojure.test.check/ret\",1393978960),test_check_ret], null),(cljs.core.truth_(check_sym)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),check_sym], null):null),(function (){var temp__4657__auto__ = new cljs.core.Keyword(null,\"result\",\"result\",1415092211).cljs$core$IFn$_invoke$arity$1(test_check_ret);\nif(cljs.core.truth_(temp__4657__auto__)){\nvar result = temp__4657__auto__;\nif(result === true){\nreturn null;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"failure\",\"failure\",720415879),result], null);\n}\n} else {\nreturn null;\n}\n})(),(function (){var temp__4657__auto__ = new cljs.core.Keyword(null,\"shrunk\",\"shrunk\",-2041664412).cljs$core$IFn$_invoke$arity$1(test_check_ret);\nif(cljs.core.truth_(temp__4657__auto__)){\nvar shrunk = temp__4657__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"failure\",\"failure\",720415879),new cljs.core.Keyword(null,\"result\",\"result\",1415092211).cljs$core$IFn$_invoke$arity$1(shrunk)], null);\n} else {\nreturn null;\n}\n})()], 0));\n});\ncljs.spec.test.alpha.validate_check_opts = (function cljs$spec$test$alpha$validate_check_opts(opts){\nif(cljs.core.every_QMARK_(cljs.core.ident_QMARK_,cljs.core.keys(new cljs.core.Keyword(null,\"gen\",\"gen\",142575302).cljs$core$IFn$_invoke$arity$1(opts)))){\nreturn null;\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Assert failed: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"check :gen expects ident keys\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"\\n\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(every? ident? (keys (:gen opts)))\")].join('')));\n}\n});\ncljs.spec.test.alpha.failure_type = (function cljs$spec$test$alpha$failure_type(x){\nreturn new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",188258592).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(x));\n});\ncljs.spec.test.alpha.unwrap_failure = (function cljs$spec$test$alpha$unwrap_failure(x){\nif(cljs.core.truth_(cljs.spec.test.alpha.failure_type(x))){\nreturn cljs.core.ex_data(x);\n} else {\nreturn x;\n}\n});\n/**\n * Returns the type of the check result. This can be any of the\n * ::s/failure keywords documented in 'check', or:\n * \n *   :check-passed   all checked fn returns conformed\n *   :check-threw    checked fn threw an exception\n */\ncljs.spec.test.alpha.result_type = (function cljs$spec$test$alpha$result_type(ret){\nvar failure = new cljs.core.Keyword(null,\"failure\",\"failure\",720415879).cljs$core$IFn$_invoke$arity$1(ret);\nif((failure == null)){\nreturn new cljs.core.Keyword(null,\"check-passed\",\"check-passed\",1505510820);\n} else {\nif(cljs.core.truth_(cljs.spec.test.alpha.failure_type(failure))){\nreturn cljs.spec.test.alpha.failure_type(failure);\n} else {\nreturn new cljs.core.Keyword(null,\"check-threw\",\"check-threw\",-1050428963);\n\n}\n}\n});\n/**\n * Given a check result, returns an abbreviated version\n * suitable for summary use.\n */\ncljs.spec.test.alpha.abbrev_result = (function cljs$spec$test$alpha$abbrev_result(x){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"failure\",\"failure\",720415879).cljs$core$IFn$_invoke$arity$1(x))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(\"clojure.test.check\",\"ret\",\"clojure.test.check/ret\",1393978960)),new cljs.core.Keyword(null,\"spec\",\"spec\",347520401),cljs.spec.alpha.describe),new cljs.core.Keyword(null,\"failure\",\"failure\",720415879),cljs.spec.test.alpha.unwrap_failure);\n} else {\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(x,new cljs.core.Keyword(null,\"spec\",\"spec\",347520401),cljs.core.array_seq([new cljs.core.Keyword(\"clojure.test.check\",\"ret\",\"clojure.test.check/ret\",1393978960)], 0));\n}\n});\n/**\n * Given a collection of check-results, e.g. from 'check', pretty\n * prints the summary-result (default abbrev-result) of each.\n * \n * Returns a map with :total, the total number of results, plus a\n * key with a count for each different :type of result.\n */\ncljs.spec.test.alpha.summarize_results = (function cljs$spec$test$alpha$summarize_results(var_args){\nvar args24392 = [];\nvar len__7790__auto___24395 = arguments.length;\nvar i__7791__auto___24396 = (0);\nwhile(true){\nif((i__7791__auto___24396 < len__7790__auto___24395)){\nargs24392.push((arguments[i__7791__auto___24396]));\n\nvar G__24397 = (i__7791__auto___24396 + (1));\ni__7791__auto___24396 = G__24397;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24394 = args24392.length;\nswitch (G__24394) {\ncase 1:\nreturn cljs.spec.test.alpha.summarize_results.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.spec.test.alpha.summarize_results.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24392.length)].join('')));\n\n}\n});\n\ncljs.spec.test.alpha.summarize_results.cljs$core$IFn$_invoke$arity$1 = (function (check_results){\nreturn cljs.spec.test.alpha.summarize_results.cljs$core$IFn$_invoke$arity$2(check_results,cljs.spec.test.alpha.abbrev_result);\n});\n\ncljs.spec.test.alpha.summarize_results.cljs$core$IFn$_invoke$arity$2 = (function (check_results,summary_result){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (summary,result){\ncljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1((summary_result.cljs$core$IFn$_invoke$arity$1 ? summary_result.cljs$core$IFn$_invoke$arity$1(result) : summary_result.call(null,result)));\n\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(summary,new cljs.core.Keyword(null,\"total\",\"total\",1916810418),cljs.core.inc),cljs.spec.test.alpha.result_type(result),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.inc,(0)));\n}),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"total\",\"total\",1916810418),(0)], null),check_results);\n});\n\ncljs.spec.test.alpha.summarize_results.cljs$lang$maxFixedArity = 2;\n\n\n//# sourceMappingURL=alpha.js.map","clojure/test/check/random/longs.js":"// Compiled by ClojureScript 1.9.542\ngoog.provide(\"clojure.test.check.random.longs\");\nclojure.test.check.random.longs.unsigned_bit_shift_right = (function clojure$test$check$random$longs$unsigned_bit_shift_right(x,n){\nreturn x.shiftRightUnsigned(n);\n});\nclojure.test.check.random.longs._PLUS_ = (function clojure$test$check$random$longs$_PLUS_(x,y){\nreturn x.add(y);\n});\nclojure.test.check.random.longs._STAR_ = (function clojure$test$check$random$longs$_STAR_(x,y){\nreturn x.multiply(y);\n});\nclojure.test.check.random.longs.bit_xor = (function clojure$test$check$random$longs$bit_xor(x,y){\nreturn x.xor(y);\n});\nclojure.test.check.random.longs.bit_or = (function clojure$test$check$random$longs$bit_or(x,y){\nreturn x.or(y);\n});\nclojure.test.check.random.longs.from_string = (function clojure$test$check$random$longs$from_string(s,radix){\nreturn goog.math.Long.fromString(s,radix);\n});\nclojure.test.check.random.longs.from_number = (function clojure$test$check$random$longs$from_number(x){\nreturn goog.math.Long.fromNumber(x);\n});\n/**\n * Coerces to long, or returns nil if not possible.\n */\nclojure.test.check.random.longs.__GT_long = (function clojure$test$check$random$longs$__GT_long(x){\nif(typeof x === 'number'){\nreturn goog.math.Long.fromNumber(x);\n} else {\nif((x instanceof goog.math.Long)){\nreturn x;\n} else {\nreturn null;\n}\n}\n});\nclojure.test.check.random.longs.ONE = goog.math.Long.getOne();\nclojure.test.check.random.longs.bit_count = clojure.test.check.random.longs.bit_count_impl.bit_count;\n","clojure/test/check/random/doubles.js":"// Compiled by ClojureScript 1.9.542\ngoog.provide(\"clojure.test.check.random.doubles\");\nclojure.test.check.random.doubles.double_unit = (function (){var i = (53);\nvar x = (1);\nwhile(true){\nif((i === (0))){\nreturn x;\n} else {\nvar G__28 = (i - (1));\nvar G__29 = (x / (2));\ni = G__28;\nx = G__29;\ncontinue;\n}\nbreak;\n}\n})();\nclojure.test.check.random.doubles.big_double_unit = (clojure.test.check.random.doubles.double_unit * (4294967296));\n/**\n * Given a uniformly distributed random long, returns a uniformly\n *   distributed double between 0.0 (inclusive) and 1.0 (exclusive).\n */\nclojure.test.check.random.doubles.rand_long__GT_rand_double = (function clojure$test$check$random$doubles$rand_long__GT_rand_double(long$){\nvar x = clojure.test.check.random.longs.unsigned_bit_shift_right.call(null,long$,(11));\nvar low_bits = x.getLowBitsUnsigned();\nvar high_bits = x.getHighBits();\nreturn ((clojure.test.check.random.doubles.double_unit * low_bits) + (clojure.test.check.random.doubles.big_double_unit * high_bits));\n});\n","cljs/spec/alpha$macros.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"],\"~$Date\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$cat\",\"~$*\",\"~$or\",\"~$assert\",\"~$merge\",\"~$keys\",\"~$+\",\"~$resolve\",\"~$and\",\"~$def\"]],\"~:name\",\"~$cljs.spec.alpha$macros\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$cljs.core\",\"^D\",\"~$walk\",\"~$clojure.walk\",\"~$cljs.analyzer.api\",\"^G\",\"~$cljs.env\",\"^H\",\"~$gen\",\"~$cljs.spec.gen.alpha\",\"~$ana\",\"~$cljs.analyzer\",\"~$env\",\"^H\",\"^L\",\"^L\",\"~$c\",\"^D\",\"~$str\",\"~$clojure.string\",\"^O\",\"^O\",\"^F\",\"^F\",\"^J\",\"^J\"],\"~:uses\",[\"^ \",\"^=\",\"^G\"],\"~:defs\",[\"^ \",\"~$res\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"~$cljs.spec.alpha\",\"~:line\",36,\"~:column\",8,\"~:end-line\",36,\"~:end-column\",11,\"~:private\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^11\",[[\"^M\",\"~$form\"]]]]]],\"^[\",true,\"^@\",\"~$cljs.spec.alpha$macros/res\",\"~:variadic\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",11,\"~:method-params\",[\"^11\",[[\"^M\",\"^13\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^11\",[null,null]],\"^X\",1,\"^W\",36,\"^Y\",36,\"~:max-fixed-arity\",2,\"~:fn-var\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^M\",\"^13\"]]]]]],\"~$&\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",12,\"~:top-fn\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"~$&form\",\"~$&env\",\"~$re\",\"~$preds\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^1>\",\"~$&\",\"^1?\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",359,\"~:macro\",true,\"^Y\",359,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^1>\",\"~$&\",\"^1?\"]]]]],\"~:doc\",\"takes a regex op re, and predicates. Returns a regex-op that consumes\\n  input as per re but subjects the resulting value to the\\n  conjunction of the predicates, and any conforming they might perform.\"],\"^@\",\"~$cljs.spec.alpha$macros/&\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",12,\"^1;\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^1>\",\"~$&\",\"^1?\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1>\",\"^1?\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",359,\"^1@\",true,\"^Y\",359,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^1>\",\"~$&\",\"^1?\"]]],\"^1A\",\"takes a regex op re, and predicates. Returns a regex-op that consumes\\n  input as per re but subjects the resulting value to the\\n  conjunction of the predicates, and any conforming they might perform.\"],\"~$fspec\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",[\"^ \",\"~:keys\",[\"~$args\",\"~$ret\",\"~$fn\",\"^I\"]]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",[\"^ \",\"^1D\",[\"^1E\",\"^1F\",\"^1G\",\"^I\"]]]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",375,\"^1@\",true,\"^Y\",375,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",[\"^ \",\"^1D\",[\"^1E\",\"^1F\",\"^1G\",\"^I\"]]]]]]],\"^1A\",\"takes :args :ret and (optional) :fn kwargs whose values are preds\\n  and returns a spec whose conform/explain take a fn and validates it\\n  using generative testing. The conformed value is always the fn itself.\\n\\n  See 'fdef' for a single operation that creates an fspec and\\n  registers it, as well as a full description of :args, :ret and :fn\\n\\n  fspecs can generate functions that validate the arguments and\\n  fabricate a return value compliant with the :ret spec, ignoring\\n  the :fn spec if present.\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args\\n  that returns a test.check generator.\"],\"^@\",\"~$cljs.spec.alpha$macros/fspec\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",[\"^ \",\"^1D\",[\"^1E\",\"^1F\",\"^1G\",\"^I\"]]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",[\"^ \",\"^1D\",[\"^1E\",\"^1F\",\"^1G\",\"^I\"]]]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",[\"^ \",\"^1D\",[\"^1E\",\"^1F\",\"^1G\",\"^I\"]]]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",375,\"^1@\",true,\"^Y\",375,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",[\"^ \",\"^1D\",[\"^1E\",\"^1F\",\"^1G\",\"^I\"]]]]],\"^1A\",\"takes :args :ret and (optional) :fn kwargs whose values are preds\\n  and returns a spec whose conform/explain take a fn and validates it\\n  using generative testing. The conformed value is always the fn itself.\\n\\n  See 'fdef' for a single operation that creates an fspec and\\n  registers it, as well as a full description of :args, :ret and :fn\\n\\n  fspecs can generate functions that validate the arguments and\\n  fabricate a return value compliant with the :ret spec, ignoring\\n  the :fn spec if present.\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args\\n  that returns a test.check generator.\"],\"~$res-kind\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",211,\"^X\",8,\"^Y\",211,\"^Z\",16,\"^[\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^M\",\"~$opts\"]]]]]],\"^[\",true,\"^@\",\"~$cljs.spec.alpha$macros/res-kind\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",16,\"^16\",[\"^11\",[[\"^M\",\"^1J\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",211,\"^Y\",211,\"^19\",2,\"^1:\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^M\",\"^1J\"]]]]]],\"~$every\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"~$pred\",[\"^ \",\"^1D\",[\"~$into\",\"~$kind\",\"~$count\",\"~$max-count\",\"~$min-count\",\"~$distinct\",\"~$gen-max\",\"~$gen-into\",\"^I\"],\"~:as\",\"^1J\"]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^1M\",\"~$&\",[\"^ \",\"^1D\",[\"^1N\",\"^1O\",\"^1P\",\"^1Q\",\"^1R\",\"^1S\",\"^1T\",\"^1U\",\"^I\"],\"^1V\",\"^1J\"]]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",220,\"^1@\",true,\"^Y\",220,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^1M\",\"~$&\",[\"^ \",\"^1D\",[\"^1N\",\"^1O\",\"^1P\",\"^1Q\",\"^1R\",\"^1S\",\"^1T\",\"^1U\",\"^I\"],\"^1V\",\"^1J\"]]]]]],\"^1A\",\"takes a pred and validates collection elements against that pred.\\n\\n  Note that 'every' does not do exhaustive checking, rather it samples\\n  *coll-check-limit* elements. Nor (as a result) does it do any\\n  conforming of elements. 'explain' will report at most *coll-error-limit*\\n  problems.  Thus 'every' should be suitable for potentially large\\n  collections.\\n\\n  Takes several kwargs options that further constrain the collection:\\n\\n  :kind - a pred/spec that the collection type must satisfy, e.g. vector?\\n          (default nil) Note that if :kind is specified and :into is\\n          not, this pred must generate in order for every to generate.\\n  :count - specifies coll has exactly this count (default nil)\\n  :min-count, :max-count - coll has count (<= min-count count max-count) (defaults nil)\\n  :distinct - all the elements are distinct (default nil)\\n\\n  And additional args that control gen\\n\\n  :gen-max - the maximum coll size to generate (default 20)\\n  :into - one of [], (), {}, #{} - the default collection to generate into\\n      (default same as :kind if supplied, else []\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator\\n\\n  See also - coll-of, every-kv\\n\"],\"^@\",\"~$cljs.spec.alpha$macros/every\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1M\",[\"^ \",\"^1D\",[\"^1N\",\"^1O\",\"^1P\",\"^1Q\",\"^1R\",\"^1S\",\"^1T\",\"^1U\",\"^I\"],\"^1V\",\"^1J\"]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^1M\",\"~$&\",[\"^ \",\"^1D\",[\"^1N\",\"^1O\",\"^1P\",\"^1Q\",\"^1R\",\"^1S\",\"^1T\",\"^1U\",\"^I\"],\"^1V\",\"^1J\"]]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1M\",[\"^ \",\"^1D\",[\"^1N\",\"^1O\",\"^1P\",\"^1Q\",\"^1R\",\"^1S\",\"^1T\",\"^1U\",\"^I\"],\"^1V\",\"^1J\"]]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",220,\"^1@\",true,\"^Y\",220,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^1M\",\"~$&\",[\"^ \",\"^1D\",[\"^1N\",\"^1O\",\"^1P\",\"^1Q\",\"^1R\",\"^1S\",\"^1T\",\"^1U\",\"^I\"],\"^1V\",\"^1J\"]]]],\"^1A\",\"takes a pred and validates collection elements against that pred.\\n\\n  Note that 'every' does not do exhaustive checking, rather it samples\\n  *coll-check-limit* elements. Nor (as a result) does it do any\\n  conforming of elements. 'explain' will report at most *coll-error-limit*\\n  problems.  Thus 'every' should be suitable for potentially large\\n  collections.\\n\\n  Takes several kwargs options that further constrain the collection:\\n\\n  :kind - a pred/spec that the collection type must satisfy, e.g. vector?\\n          (default nil) Note that if :kind is specified and :into is\\n          not, this pred must generate in order for every to generate.\\n  :count - specifies coll has exactly this count (default nil)\\n  :min-count, :max-count - coll has count (<= min-count count max-count) (defaults nil)\\n  :distinct - all the elements are distinct (default nil)\\n\\n  And additional args that control gen\\n\\n  :gen-max - the maximum coll size to generate (default 20)\\n  :into - one of [], (), {}, #{} - the default collection to generate into\\n      (default same as :kind if supplied, else []\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator\\n\\n  See also - coll-of, every-kv\\n\"],\"~$keys*\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"~$kspecs\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^1Y\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",444,\"^1@\",true,\"^Y\",444,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",\"^1Y\"]]]]],\"^1A\",\"takes the same arguments as spec/keys and returns a regex op that matches sequences of key/values,\\n  converts them into a map, and conforms that map with a corresponding\\n  spec/keys call:\\n\\n  user=> (s/conform (s/keys :req-un [::a ::c]) {:a 1 :c 2})\\n  {:a 1, :c 2}\\n  user=> (s/conform (s/keys* :req-un [::a ::c]) [:a 1 :c 2])\\n  {:a 1, :c 2}\\n\\n  the resulting regex op can be composed into a larger regex:\\n\\n  user=> (s/conform (s/cat :i1 integer? :m (s/keys* :req-un [::a ::c]) :i2 integer?) [42 :a 1 :c 2 :d 4 99])\\n  {:i1 42, :m {:a 1, :c 2, :d 4}, :i2 99}\"],\"^@\",\"~$cljs.spec.alpha$macros/keys*\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1Y\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^1Y\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1Y\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",444,\"^1@\",true,\"^Y\",444,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^1Y\"]]],\"^1A\",\"takes the same arguments as spec/keys and returns a regex op that matches sequences of key/values,\\n  converts them into a map, and conforms that map with a corresponding\\n  spec/keys call:\\n\\n  user=> (s/conform (s/keys :req-un [::a ::c]) {:a 1 :c 2})\\n  {:a 1, :c 2}\\n  user=> (s/conform (s/keys* :req-un [::a ::c]) [:a 1 :c 2])\\n  {:a 1, :c 2}\\n\\n  the resulting regex op can be composed into a larger regex:\\n\\n  user=> (s/conform (s/cat :i1 integer? :m (s/keys* :req-un [::a ::c]) :i2 integer?) [42 :a 1 :c 2 :d 4 99])\\n  {:i1 42, :m {:a 1, :c 2, :d 4}, :i2 99}\"],\"~$speced-vars\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",405,\"^X\",7,\"^Y\",405,\"^Z\",18,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[]]]]]],\"^@\",\"~$cljs.spec.alpha$macros/speced-vars\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",18,\"^16\",[\"^11\",[[]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",405,\"^Y\",405,\"^19\",0,\"^1:\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[]]]]]],\"~$mres\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^[\",true,\"^U\",\"^V\",\"^Z\",25,\"^X\",21,\"^W\",50,\"^1@\",true,\"^Y\",50,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^13\"]]]]],\"^1A\",\"a compile time res, for use in cljs/spec/alpha.cljs\"],\"^[\",true,\"^@\",\"~$cljs.spec.alpha$macros/mres\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",25,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^13\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",50,\"^1@\",true,\"^Y\",50,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^13\"]]]]],\"^1A\",\"a compile time res, for use in cljs/spec/alpha.cljs\"],\"~$registry-ref\",[\"^ \",\"^@\",\"~$cljs.spec.alpha$macros/registry-ref\",\"^U\",\"cljs/spec/alpha.cljc\",\"^W\",19,\"^X\",1,\"^Y\",19,\"^Z\",22,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",19,\"^X\",10,\"^Y\",19,\"^Z\",22],\"~:tag\",\"~$any\"],\"~$nilable\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",463,\"^X\",11,\"^Y\",463,\"^Z\",18,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^1M\"]]]]],\"^1A\",\"returns a spec that accepts nil and values satisfiying pred\"],\"^@\",\"~$cljs.spec.alpha$macros/nilable\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",18,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^1M\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",463,\"^1@\",true,\"^Y\",463,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^1M\"]]]]],\"^1A\",\"returns a spec that accepts nil and values satisfiying pred\"],\"~$unfn\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",28,\"^X\",8,\"^Y\",28,\"^Z\",12,\"^[\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$expr\"]]]]]],\"^[\",true,\"^@\",\"~$cljs.spec.alpha$macros/unfn\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",12,\"^16\",[\"^11\",[[\"^2:\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",28,\"^Y\",28,\"^19\",1,\"^1:\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2:\"]]]]]],\"~$coll-of\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",18,\"^1;\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1M\",\"^1J\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^1M\",\"~$&\",\"^1J\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",279,\"^1@\",true,\"^Y\",279,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^1M\",\"~$&\",\"^1J\"]]]]],\"^1A\",\"Returns a spec for a collection of items satisfying pred. Unlike\\n  generator will fill an empty init-coll.\\n\\n  Same options as 'every'. conform will produce a collection\\n  corresponding to :into if supplied, else will match the input collection,\\n  avoiding rebuilding when possible.\\n\\n  Same options as 'every'.\\n\\n  See also - every, map-of\"],\"^@\",\"~$cljs.spec.alpha$macros/coll-of\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",18,\"^1;\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1M\",\"^1J\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^1M\",\"~$&\",\"^1J\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1M\",\"^1J\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",279,\"^1@\",true,\"^Y\",279,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^1M\",\"~$&\",\"^1J\"]]],\"^1A\",\"Returns a spec for a collection of items satisfying pred. Unlike\\n  generator will fill an empty init-coll.\\n\\n  Same options as 'every'. conform will produce a collection\\n  corresponding to :into if supplied, else will match the input collection,\\n  avoiding rebuilding when possible.\\n\\n  Same options as 'every'.\\n\\n  See also - every, map-of\"],\"^8\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",14,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"~$key-pred-forms\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^2>\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",343,\"^1@\",true,\"^Y\",343,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",\"^2>\"]]]]],\"^1A\",\"Takes key+pred pairs, e.g.\\n\\n  (s/cat :e even? :o odd?)\\n\\n  Returns a regex op that matches (all) values in sequence, returning a map\\n  containing the keys of each pred and the corresponding value.\"],\"^@\",\"~$cljs.spec.alpha$macros/cat\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",14,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2>\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^2>\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2>\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",343,\"^1@\",true,\"^Y\",343,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^2>\"]]],\"^1A\",\"Takes key+pred pairs, e.g.\\n\\n  (s/cat :e even? :o odd?)\\n\\n  Returns a regex op that matches (all) values in sequence, returning a map\\n  containing the keys of each pred and the corresponding value.\"],\"~$*\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",308,\"^X\",11,\"^Y\",308,\"^Z\",12,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$pred-form\"]]]]],\"^1A\",\"Returns a regex op that matches zero or more values matching\\n  pred. Produces a vector of matches iff there is at least one match\"],\"^@\",\"~$cljs.spec.alpha$macros/*\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",12,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^2@\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",308,\"^1@\",true,\"^Y\",308,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2@\"]]]]],\"^1A\",\"Returns a regex op that matches zero or more values matching\\n  pred. Produces a vector of matches iff there is at least one match\"],\"~$every-kv\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",19,\"^1;\",[\"^ \",\"^15\",true,\"^19\",4,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"~$kpred\",\"~$vpred\",\"^1J\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"~$&\",\"^1J\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",268,\"^1@\",true,\"^Y\",268,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2C\",\"^2D\",\"~$&\",\"^1J\"]]]]],\"^1A\",\"like 'every' but takes separate key and val preds and works on associative collections.\\n\\n  Same options as 'every', :into defaults to {}\\n\\n  See also - map-of\"],\"^@\",\"~$cljs.spec.alpha$macros/every-kv\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",19,\"^1;\",[\"^ \",\"^15\",true,\"^19\",4,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"^1J\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"~$&\",\"^1J\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"^1J\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",268,\"^1@\",true,\"^Y\",268,\"^19\",4,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"~$&\",\"^1J\"]]],\"^1A\",\"like 'every' but takes separate key and val preds and works on associative collections.\\n\\n  Same options as 'every', :into defaults to {}\\n\\n  See also - map-of\"],\"~$int-in\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",481,\"^X\",11,\"^Y\",481,\"^Z\",17,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$start\",\"~$end\"]]]]],\"^1A\",\"Returns a spec that validates longs in the range from start\\n  (inclusive) to end (exclusive).\"],\"^@\",\"~$cljs.spec.alpha$macros/int-in\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",17,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^2G\",\"^2H\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",481,\"^1@\",true,\"^Y\",481,\"^19\",4,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2G\",\"^2H\"]]]]],\"^1A\",\"Returns a spec that validates longs in the range from start\\n  (inclusive) to end (exclusive).\"],\"~$alt\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",14,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2>\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^2>\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",326,\"^1@\",true,\"^Y\",326,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",\"^2>\"]]]]],\"^1A\",\"Takes key+pred pairs, e.g.\\n\\n  (s/alt :even even? :small #(< % 42))\\n\\n  Returns a regex op that returns a map entry containing the key of the\\n  first matching pred and the corresponding value. Thus the\\n  'key' and 'val' functions can be used to refer generically to the\\n  components of the tagged return.\"],\"^@\",\"~$cljs.spec.alpha$macros/alt\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",14,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2>\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^2>\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2>\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",326,\"^1@\",true,\"^Y\",326,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^2>\"]]],\"^1A\",\"Takes key+pred pairs, e.g.\\n\\n  (s/alt :even even? :small #(< % 42))\\n\\n  Returns a regex op that returns a map entry containing the key of the\\n  first matching pred and the corresponding value. Thus the\\n  'key' and 'val' functions can be used to refer generically to the\\n  components of the tagged return.\"],\"~$->sym\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",21,\"^X\",8,\"^Y\",21,\"^Z\",13,\"^[\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$x\"]]]]],\"^1A\",\"Returns a symbol from a symbol or var\"],\"^[\",true,\"^@\",\"~$cljs.spec.alpha$macros/->sym\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",13,\"^16\",[\"^11\",[[\"~$x\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",21,\"^Y\",21,\"^19\",1,\"^1:\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$x\"]]]]],\"^1A\",\"Returns a symbol from a symbol or var\"],\"^9\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",13,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2>\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^2>\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",184,\"^1@\",true,\"^Y\",184,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",\"^2>\"]]]]],\"^1A\",\"Takes key+pred pairs, e.g.\\n\\n  (s/or :even even? :small #(< % 42))\\n\\n  Returns a destructuring spec that returns a map entry containing the\\n  key of the first matching pred and the corresponding value. Thus the\\n  'key' and 'val' functions can be used to refer generically to the\\n  components of the tagged return.\"],\"^@\",\"~$cljs.spec.alpha$macros/or\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",13,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2>\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^2>\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2>\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",184,\"^1@\",true,\"^Y\",184,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^2>\"]]],\"^1A\",\"Takes key+pred pairs, e.g.\\n\\n  (s/or :even even? :small #(< % 42))\\n\\n  Returns a destructuring spec that returns a map entry containing the\\n  key of the first matching pred and the corresponding value. Thus the\\n  'key' and 'val' functions can be used to refer generically to the\\n  components of the tagged return.\"],\"~$_speced_vars\",[\"^ \",\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",403,\"^X\",16,\"^Y\",403,\"^Z\",28,\"^[\",true],\"^[\",true,\"^@\",\"~$cljs.spec.alpha$macros/_speced_vars\",\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",28,\"^X\",1,\"^W\",403,\"^Y\",403,\"^25\",\"^26\"],\"~$exercise-fn\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",22,\"^1;\",[\"^ \",\"^15\",false,\"^19\",5,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"~$sym\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\",\"^1C\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^2R\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\",\"^1C\"]]],\"^18\",[\"^11\",[null,null,null]]],\"^X\",11,\"^W\",514,\"^1@\",true,\"^Y\",514,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2R\"],[\"^2R\",\"~$n\"],[\"^2R\",\"~$n\",\"^1C\"]]]]],\"^1A\",\"exercises the fn named by sym (a symbol) by applying it to\\n  n (default 10) generated samples of its args spec. When fspec is\\n  supplied its arg spec is used, and sym-or-f can be a fn.  Returns a\\n  sequence of tuples of [args ret]. \"],\"^@\",\"~$cljs.spec.alpha$macros/exercise-fn\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",22,\"^1;\",[\"^ \",\"^15\",false,\"^19\",5,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^2R\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\",\"^1C\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^2R\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\",\"^1C\"]]],\"^18\",[\"^11\",[null,null,null]]],\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^2R\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\",\"^1C\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null,null]],\"^X\",1,\"^W\",514,\"^1@\",true,\"^Y\",514,\"^19\",5,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^2R\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\"],[\"^1<\",\"^1=\",\"^2R\",\"~$n\",\"^1C\"]]],\"^1A\",\"exercises the fn named by sym (a symbol) by applying it to\\n  n (default 10) generated samples of its args spec. When fspec is\\n  supplied its arg spec is used, and sym-or-f can be a fn.  Returns a\\n  sequence of tuples of [args ret]. \"],\"~$multi-spec\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",93,\"^X\",11,\"^Y\",93,\"^Z\",21,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$mm\",\"~$retag\"]]]]],\"^1A\",\"Takes the name of a spec/predicate-returning multimethod and a\\n  tag-restoring keyword or fn (retag).  Returns a spec that when\\n  conforming or explaining data will pass it to the multimethod to get\\n  an appropriate spec. You can e.g. use multi-spec to dynamically and\\n  extensibly associate specs with 'tagged' data (i.e. data where one\\n  of the fields indicates the shape of the rest of the structure).\\n\\n  (defmulti mspec :tag)\\n\\n  The methods should ignore their argument and return a predicate/spec:\\n  (defmethod mspec :int [_] (s/keys :req-un [::tag ::i]))\\n\\n  retag is used during generation to retag generated values with\\n  matching tags. retag can either be a keyword, at which key the\\n  dispatch-tag will be assoc'ed, or a fn of generated value and\\n  dispatch-tag that should return an appropriately retagged value.\\n\\n  Note that because the tags themselves comprise an open set,\\n  the tag key spec cannot enumerate the values, but can e.g.\\n  test for keyword?.\\n\\n  Note also that the dispatch values of the multimethod will be\\n  included in the path, i.e. in reporting and gen overrides, even\\n  though those values are not evident in the spec.\\n\"],\"^@\",\"~$cljs.spec.alpha$macros/multi-spec\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",21,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^2U\",\"^2V\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",93,\"^1@\",true,\"^Y\",93,\"^19\",4,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2U\",\"^2V\"]]]]],\"^1A\",\"Takes the name of a spec/predicate-returning multimethod and a\\n  tag-restoring keyword or fn (retag).  Returns a spec that when\\n  conforming or explaining data will pass it to the multimethod to get\\n  an appropriate spec. You can e.g. use multi-spec to dynamically and\\n  extensibly associate specs with 'tagged' data (i.e. data where one\\n  of the fields indicates the shape of the rest of the structure).\\n\\n  (defmulti mspec :tag)\\n\\n  The methods should ignore their argument and return a predicate/spec:\\n  (defmethod mspec :int [_] (s/keys :req-un [::tag ::i]))\\n\\n  retag is used during generation to retag generated values with\\n  matching tags. retag can either be a keyword, at which key the\\n  dispatch-tag will be assoc'ed, or a fn of generated value and\\n  dispatch-tag that should return an appropriately retagged value.\\n\\n  Note that because the tags themselves comprise an open set,\\n  the tag key spec cannot enumerate the values, but can e.g.\\n  test for keyword?.\\n\\n  Note also that the dispatch values of the multimethod will be\\n  included in the path, i.e. in reporting and gen overrides, even\\n  though those values are not evident in the spec.\\n\"],\"~$tuple\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1?\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^1?\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",395,\"^1@\",true,\"^Y\",395,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",\"^1?\"]]]]],\"^1A\",\"takes one or more preds and returns a spec for a tuple, a vector\\n  where each element conforms to the corresponding pred. Each element\\n  will be referred to in paths using its ordinal.\"],\"^@\",\"~$cljs.spec.alpha$macros/tuple\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1?\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^1?\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^1?\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",395,\"^1@\",true,\"^Y\",395,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^1?\"]]],\"^1A\",\"takes one or more preds and returns a spec for a tuple, a vector\\n  where each element conforms to the corresponding pred. Each element\\n  will be referred to in paths using its ordinal.\"],\"^:\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",539,\"^X\",11,\"^Y\",539,\"^Z\",17,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$spec\",\"~$x\"]]]]],\"^1A\",\"spec-checking assert expression. Returns x if x is valid? according\\nto spec, else throws an error with explain-data plus ::failure of\\n:assertion-failed.\\nCan be disabled at either compile time or runtime:\\nIf *compile-asserts* is false at compile time, compiles to x. Defaults\\nto the negation value of the ':elide-asserts' compiler option, or true if\\nnot set.\\nIf (check-asserts?) is false at runtime, always returns x. Defaults to\\nvalue of 'cljs.spec.alpha/*runtime-asserts*', or false if not set. You can\\ntoggle check-asserts? with (check-asserts bool).\"],\"^@\",\"~$cljs.spec.alpha$macros/assert\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",17,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^2Z\",\"~$x\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",539,\"^1@\",true,\"^Y\",539,\"^19\",4,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2Z\",\"~$x\"]]]]],\"^1A\",\"spec-checking assert expression. Returns x if x is valid? according\\nto spec, else throws an error with explain-data plus ::failure of\\n:assertion-failed.\\nCan be disabled at either compile time or runtime:\\nIf *compile-asserts* is false at compile time, compiles to x. Defaults\\nto the negation value of the ':elide-asserts' compiler option, or true if\\nnot set.\\nIf (check-asserts?) is false at runtime, always returns x. Defaults to\\nvalue of 'cljs.spec.alpha/*runtime-asserts*', or false if not set. You can\\ntoggle check-asserts? with (check-asserts bool).\"],\"~$?\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",320,\"^X\",11,\"^Y\",320,\"^Z\",12,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2@\"]]]]],\"^1A\",\"Returns a regex op that matches zero or one value matching\\n  pred. Produces a single value (not a collection) if matched.\"],\"^@\",\"~$cljs.spec.alpha$macros/?\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",12,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^2@\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",320,\"^1@\",true,\"^Y\",320,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2@\"]]]]],\"^1A\",\"Returns a regex op that matches zero or one value matching\\n  pred. Produces a single value (not a collection) if matched.\"],\"~$ns-qualify\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",55,\"^X\",8,\"^Y\",55,\"^Z\",18,\"^[\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^M\",\"~$s\"]]]]],\"^1A\",\"Qualify symbol s by resolving it or using the current *ns*.\"],\"^[\",true,\"^@\",\"~$cljs.spec.alpha$macros/ns-qualify\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",18,\"^16\",[\"^11\",[[\"^M\",\"~$s\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",55,\"^Y\",55,\"^19\",2,\"^1:\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^M\",\"~$s\"]]]]],\"^1A\",\"Qualify symbol s by resolving it or using the current *ns*.\"],\"^;\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"~$pred-forms\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^33\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",505,\"^1@\",true,\"^Y\",505,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",\"^33\"]]]]],\"^1A\",\"Takes map-validating specs (e.g. 'keys' specs) and\\n  returns a spec that returns a conformed map satisfying all of the\\n  specs.  Successive conformed values propagate through rest of\\n  predicates. Unlike 'and', merge can generate maps satisfying the\\n  union of the predicates.\"],\"^@\",\"~$cljs.spec.alpha$macros/merge\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",16,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^33\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^33\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^33\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",505,\"^1@\",true,\"^Y\",505,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^33\"]]],\"^1A\",\"Takes map-validating specs (e.g. 'keys' specs) and\\n  returns a spec that returns a conformed map satisfying all of the\\n  specs.  Successive conformed values propagate through rest of\\n  predicates. Unlike 'and', merge can generate maps satisfying the\\n  union of the predicates.\"],\"~$conformer\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",20,\"^1;\",[\"^ \",\"^15\",false,\"^19\",4,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"~$f\"],[\"^1<\",\"^1=\",\"~$f\",\"~$unf\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$f\"],[\"^1<\",\"^1=\",\"~$f\",\"^36\"]]],\"^18\",[\"^11\",[null,null]]],\"^X\",11,\"^W\",367,\"^1@\",true,\"^Y\",367,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$f\"],[\"~$f\",\"^36\"]]]]],\"^1A\",\"takes a predicate function with the semantics of conform i.e. it should return either a\\n  (possibly converted) value or :cljs.spec.alpha/invalid, and returns a\\n  spec that uses it as a predicate/conformer. Optionally takes a\\n  second fn that does unform of result of first\"],\"^@\",\"~$cljs.spec.alpha$macros/conformer\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",20,\"^1;\",[\"^ \",\"^15\",false,\"^19\",4,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"~$f\"],[\"^1<\",\"^1=\",\"~$f\",\"^36\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$f\"],[\"^1<\",\"^1=\",\"~$f\",\"^36\"]]],\"^18\",[\"^11\",[null,null]]],\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"~$f\"],[\"^1<\",\"^1=\",\"~$f\",\"^36\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",367,\"^1@\",true,\"^Y\",367,\"^19\",4,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$f\"],[\"^1<\",\"^1=\",\"~$f\",\"^36\"]]],\"^1A\",\"takes a predicate function with the semantics of conform i.e. it should return either a\\n  (possibly converted) value or :cljs.spec.alpha/invalid, and returns a\\n  spec that uses it as a predicate/conformer. Optionally takes a\\n  second fn that does unform of result of first\"],\"^2Z\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",15,\"^1;\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^13\",[\"^ \",\"^1D\",[\"^I\"]]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^13\",\"~$&\",[\"^ \",\"^1D\",[\"^I\"]]]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",74,\"^1@\",true,\"^Y\",74,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^13\",\"~$&\",[\"^ \",\"^1D\",[\"^I\"]]]]]]],\"^1A\",\"Takes a single predicate form, e.g. can be the name of a predicate,\\n  like even?, or a fn literal like #(< % 42). Note that it is not\\n  generally necessary to wrap predicates in spec when using the rest\\n  of the spec macros, only to attach a unique generator\\n\\n  Can also be passed the result of one of the regex ops -\\n  cat, alt, *, +, ?, in which case it will return a regex-conforming\\n  spec, useful when nesting an independent regex.\\n  ---\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator.\\n\\n  Returns a spec.\"],\"^@\",\"~$cljs.spec.alpha$macros/spec\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",15,\"^1;\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^13\",[\"^ \",\"^1D\",[\"^I\"]]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^13\",\"~$&\",[\"^ \",\"^1D\",[\"^I\"]]]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^13\",[\"^ \",\"^1D\",[\"^I\"]]]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",74,\"^1@\",true,\"^Y\",74,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^13\",\"~$&\",[\"^ \",\"^1D\",[\"^I\"]]]]],\"^1A\",\"Takes a single predicate form, e.g. can be the name of a predicate,\\n  like even?, or a fn literal like #(< % 42). Note that it is not\\n  generally necessary to wrap predicates in spec when using the rest\\n  of the spec macros, only to attach a unique generator\\n\\n  Can also be passed the result of one of the regex ops -\\n  cat, alt, *, +, ?, in which case it will return a regex-conforming\\n  spec, useful when nesting an independent regex.\\n  ---\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator.\\n\\n  Returns a spec.\"],\"~$init-compile-asserts\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",535,\"^X\",21,\"^Y\",535,\"^Z\",41,\"^[\",true,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[]]]]]],\"^[\",true,\"^@\",\"~$cljs.spec.alpha$macros/init-compile-asserts\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",41,\"^16\",[\"^11\",[[\"^1<\",\"^1=\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",535,\"^1@\",true,\"^Y\",535,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[]]]]]],\"^<\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",15,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",[\"^ \",\"^1D\",[\"~$req\",\"~$req-un\",\"~$opt\",\"~$opt-un\",\"^I\"]]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",[\"^ \",\"^1D\",[\"^3;\",\"^3<\",\"^3=\",\"^3>\",\"^I\"]]]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",122,\"^1@\",true,\"^Y\",122,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",[\"^ \",\"^1D\",[\"^3;\",\"^3<\",\"^3=\",\"^3>\",\"^I\"]]]]]]],\"^1A\",\"Creates and returns a map validating spec. :req and :opt are both\\n  vectors of namespaced-qualified keywords. The validator will ensure\\n  the :req keys are present. The :opt keys serve as documentation and\\n  may be used by the generator.\\n\\n  The :req key vector supports 'and' and 'or' for key groups:\\n\\n  (s/keys :req [::x ::y (or ::secret (and ::user ::pwd))] :opt [::z])\\n\\n  There are also -un versions of :req and :opt. These allow\\n  you to connect unqualified keys to specs.  In each case, fully\\n  qualfied keywords are passed, which name the specs, but unqualified\\n  keys (with the same name component) are expected and checked at\\n  conform-time, and generated during gen:\\n\\n  (s/keys :req-un [:my.ns/x :my.ns/y])\\n\\n  The above says keys :x and :y are required, and will be validated\\n  and generated by specs (if they exist) named :my.ns/x :my.ns/y\\n  respectively.\\n\\n  In addition, the values of *all* namespace-qualified keys will be validated\\n  (and possibly destructured) by any registered specs. Note: there is\\n  no support for inline value specification, by design.\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator.\"],\"^@\",\"~$cljs.spec.alpha$macros/keys\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",15,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",[\"^ \",\"^1D\",[\"^3;\",\"^3<\",\"^3=\",\"^3>\",\"^I\"]]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",[\"^ \",\"^1D\",[\"^3;\",\"^3<\",\"^3=\",\"^3>\",\"^I\"]]]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",[\"^ \",\"^1D\",[\"^3;\",\"^3<\",\"^3=\",\"^3>\",\"^I\"]]]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",122,\"^1@\",true,\"^Y\",122,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",[\"^ \",\"^1D\",[\"^3;\",\"^3<\",\"^3=\",\"^3>\",\"^I\"]]]]],\"^1A\",\"Creates and returns a map validating spec. :req and :opt are both\\n  vectors of namespaced-qualified keywords. The validator will ensure\\n  the :req keys are present. The :opt keys serve as documentation and\\n  may be used by the generator.\\n\\n  The :req key vector supports 'and' and 'or' for key groups:\\n\\n  (s/keys :req [::x ::y (or ::secret (and ::user ::pwd))] :opt [::z])\\n\\n  There are also -un versions of :req and :opt. These allow\\n  you to connect unqualified keys to specs.  In each case, fully\\n  qualfied keywords are passed, which name the specs, but unqualified\\n  keys (with the same name component) are expected and checked at\\n  conform-time, and generated during gen:\\n\\n  (s/keys :req-un [:my.ns/x :my.ns/y])\\n\\n  The above says keys :x and :y are required, and will be validated\\n  and generated by specs (if they exist) named :my.ns/x :my.ns/y\\n  respectively.\\n\\n  In addition, the values of *all* namespace-qualified keys will be validated\\n  (and possibly destructured) by any registered specs. Note: there is\\n  no support for inline value specification, by design.\\n\\n  Optionally takes :gen generator-fn, which must be a fn of no args that\\n  returns a test.check generator.\"],\"~$+\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",314,\"^X\",11,\"^Y\",314,\"^Z\",12,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2@\"]]]]],\"^1A\",\"Returns a regex op that matches one or more values matching\\n  pred. Produces a vector of matches\"],\"^@\",\"~$cljs.spec.alpha$macros/+\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",12,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^2@\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",314,\"^1@\",true,\"^Y\",314,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2@\"]]]]],\"^1A\",\"Returns a regex op that matches one or more values matching\\n  pred. Produces a vector of matches\"],\"~$map-of\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",17,\"^1;\",[\"^ \",\"^15\",true,\"^19\",4,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"^1J\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"~$&\",\"^1J\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",294,\"^1@\",true,\"^Y\",294,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2C\",\"^2D\",\"~$&\",\"^1J\"]]]]],\"^1A\",\"Returns a spec for a map whose keys satisfy kpred and vals satisfy\\n  vpred. Unlike 'every-kv', map-of will exhaustively conform every\\n  value.\\n\\n  Same options as 'every', :kind defaults to map?, with the addition of:\\n\\n  :conform-keys - conform keys as well as values (default false)\\n\\n  See also - every-kv\"],\"^@\",\"~$cljs.spec.alpha$macros/map-of\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",17,\"^1;\",[\"^ \",\"^15\",true,\"^19\",4,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"^1J\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"~$&\",\"^1J\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"^1J\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",294,\"^1@\",true,\"^Y\",294,\"^19\",4,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^2C\",\"^2D\",\"~$&\",\"^1J\"]]],\"^1A\",\"Returns a spec for a map whose keys satisfy kpred and vals satisfy\\n  vpred. Unlike 'every-kv', map-of will exhaustively conform every\\n  value.\\n\\n  Same options as 'every', :kind defaults to map?, with the addition of:\\n\\n  :conform-keys - conform keys as well as values (default false)\\n\\n  See also - every-kv\"],\"~$double-in\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",20,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",[\"^ \",\"^1D\",[\"~$infinite?\",\"~$NaN?\",\"~$min\",\"~$max\"],\"~:or\",[\"^ \",\"^3D\",true,\"^3E\",true],\"^1V\",\"~$m\"]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",[\"^ \",\"^1D\",[\"^3D\",\"^3E\",\"^3F\",\"^3G\"],\"^3H\",[\"^ \",\"^3D\",true,\"^3E\",true],\"^1V\",\"~$m\"]]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",488,\"^1@\",true,\"^Y\",488,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",[\"^ \",\"^1D\",[\"^3D\",\"^3E\",\"^3F\",\"^3G\"],\"^3H\",[\"^ \",\"^3D\",true,\"^3E\",true],\"^1V\",\"~$m\"]]]]]],\"^1A\",\"Specs a 64-bit floating point number. Options:\\n\\n    :infinite? - whether +/- infinity allowed (default true)\\n    :NaN?      - whether NaN allowed (default true)\\n    :min       - minimum value (inclusive, default none)\\n    :max       - maximum value (inclusive, default none)\"],\"^@\",\"~$cljs.spec.alpha$macros/double-in\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",20,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",[\"^ \",\"^1D\",[\"^3D\",\"^3E\",\"^3F\",\"^3G\"],\"^3H\",[\"^ \",\"^3D\",true,\"^3E\",true],\"^1V\",\"~$m\"]]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",[\"^ \",\"^1D\",[\"^3D\",\"^3E\",\"^3F\",\"^3G\"],\"^3H\",[\"^ \",\"^3D\",true,\"^3E\",true],\"^1V\",\"~$m\"]]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",[\"^ \",\"^1D\",[\"^3D\",\"^3E\",\"^3F\",\"^3G\"],\"^3H\",[\"^ \",\"^3D\",true,\"^3E\",true],\"^1V\",\"~$m\"]]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",488,\"^1@\",true,\"^Y\",488,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",[\"^ \",\"^1D\",[\"^3D\",\"^3E\",\"^3F\",\"^3G\"],\"^3H\",[\"^ \",\"^3D\",true,\"^3E\",true],\"^1V\",\"~$m\"]]]],\"^1A\",\"Specs a 64-bit floating point number. Options:\\n\\n    :infinite? - whether +/- infinity allowed (default true)\\n    :NaN?      - whether NaN allowed (default true)\\n    :min       - minimum value (inclusive, default none)\\n    :max       - maximum value (inclusive, default none)\"],\"~$inst-in\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",469,\"^X\",11,\"^Y\",469,\"^Z\",18,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2G\",\"^2H\"]]]]],\"^1A\",\"Returns a spec that validates insts in the range from start\\n  (inclusive) to end (exclusive).\"],\"^@\",\"~$cljs.spec.alpha$macros/inst-in\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",18,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"^2G\",\"^2H\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",469,\"^1@\",true,\"^Y\",469,\"^19\",4,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^2G\",\"^2H\"]]]]],\"^1A\",\"Returns a spec that validates insts in the range from start\\n  (inclusive) to end (exclusive).\"],\"^>\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",14,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^33\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^33\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",201,\"^1@\",true,\"^Y\",201,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$&\",\"^33\"]]]]],\"^1A\",\"Takes predicate/spec-forms, e.g.\\n\\n  (s/and even? #(< % 42))\\n\\n  Returns a spec that returns the conformed value. Successive\\n  conformed values propagate through rest of predicates.\"],\"^@\",\"~$cljs.spec.alpha$macros/and\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",14,\"^1;\",[\"^ \",\"^15\",true,\"^19\",2,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^33\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^33\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^33\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",201,\"^1@\",true,\"^Y\",201,\"^19\",2,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"~$&\",\"^33\"]]],\"^1A\",\"Takes predicate/spec-forms, e.g.\\n\\n  (s/and even? #(< % 42))\\n\\n  Returns a spec that returns the conformed value. Successive\\n  conformed values propagate through rest of predicates.\"],\"^?\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^W\",64,\"^X\",11,\"^Y\",64,\"^Z\",14,\"^1@\",true,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$k\",\"~$spec-form\"]]]]],\"^1A\",\"Given a namespace-qualified keyword or resolveable symbol k, and a spec,\\n   spec-name, predicate or regex-op makes an entry in the registry mapping k to\\n   the spec\"],\"^@\",\"~$cljs.spec.alpha$macros/def\",\"^15\",false,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",14,\"^16\",[\"^11\",[[\"^1<\",\"^1=\",\"~$k\",\"^3M\"]]],\"^17\",null,\"^18\",[\"^11\",[null,null]],\"^X\",1,\"^W\",64,\"^1@\",true,\"^Y\",64,\"^19\",4,\"^1:\",false,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"~$k\",\"^3M\"]]]]],\"^1A\",\"Given a namespace-qualified keyword or resolveable symbol k, and a spec,\\n   spec-name, predicate or regex-op makes an entry in the registry mapping k to\\n   the spec\"],\"~$fdef\",[\"^ \",\"^S\",null,\"^T\",[\"^ \",\"^U\",\"^V\",\"^Z\",15,\"^1;\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"~$fn-sym\",\"~$specs\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^3P\",\"~$&\",\"^3Q\"]]],\"^18\",[\"^11\",[null]]],\"^X\",11,\"^W\",408,\"^1@\",true,\"^Y\",408,\"^10\",[\"^11\",[\"^12\",[\"^11\",[[\"^3P\",\"~$&\",\"^3Q\"]]]]],\"^1A\",\"Takes a symbol naming a function, and one or more of the following:\\n\\n  :args A regex spec for the function arguments as they were a list to be\\n    passed to apply - in this way, a single spec can handle functions with\\n    multiple arities\\n  :ret A spec for the function's return value\\n  :fn A spec of the relationship between args and ret - the\\n    value passed is {:args conformed-args :ret conformed-ret} and is\\n    expected to contain predicates that relate those values\\n\\n  Qualifies fn-sym with resolve, or using *ns* if no resolution found.\\n  Registers an fspec in the global registry, where it can be retrieved\\n  by calling get-spec with the var or full-qualified symbol.\\n\\n  Once registered, function specs are included in doc, checked by\\n  instrument, tested by the runner clojure.spec.test/run-tests, and (if\\n  a macro) used to explain errors during macroexpansion.\\n\\n  Note that :fn specs require the presence of :args and :ret specs to\\n  conform values, and so :fn specs will be ignored if :args or :ret\\n  are missing.\\n\\n  Returns the qualified fn-sym.\\n\\n  For example, to register function specs for the symbol function:\\n\\n  (s/fdef clojure.core/symbol\\n    :args (s/alt :separate (s/cat :ns string? :n string?)\\n                 :str string?\\n                 :sym symbol?)\\n    :ret symbol?)\"],\"^@\",\"~$cljs.spec.alpha$macros/fdef\",\"^15\",true,\"^U\",\"cljs/spec/alpha.cljc\",\"^Z\",15,\"^1;\",[\"^ \",\"^15\",true,\"^19\",3,\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^3P\",\"^3Q\"]]],\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^3P\",\"~$&\",\"^3Q\"]]],\"^18\",[\"^11\",[null]]],\"^16\",[[\"^11\",[\"^1<\",\"^1=\",\"^3P\",\"^3Q\"]]],\"^17\",null,\"^18\",[\"^11\",[null]],\"^X\",1,\"^W\",408,\"^1@\",true,\"^Y\",408,\"^19\",3,\"^1:\",false,\"^10\",[\"^11\",[[\"^1<\",\"^1=\",\"^3P\",\"~$&\",\"^3Q\"]]],\"^1A\",\"Takes a symbol naming a function, and one or more of the following:\\n\\n  :args A regex spec for the function arguments as they were a list to be\\n    passed to apply - in this way, a single spec can handle functions with\\n    multiple arities\\n  :ret A spec for the function's return value\\n  :fn A spec of the relationship between args and ret - the\\n    value passed is {:args conformed-args :ret conformed-ret} and is\\n    expected to contain predicates that relate those values\\n\\n  Qualifies fn-sym with resolve, or using *ns* if no resolution found.\\n  Registers an fspec in the global registry, where it can be retrieved\\n  by calling get-spec with the var or full-qualified symbol.\\n\\n  Once registered, function specs are included in doc, checked by\\n  instrument, tested by the runner clojure.spec.test/run-tests, and (if\\n  a macro) used to explain errors during macroexpansion.\\n\\n  Note that :fn specs require the presence of :args and :ret specs to\\n  conform values, and so :fn specs will be ignored if :args or :ret\\n  are missing.\\n\\n  Returns the qualified fn-sym.\\n\\n  For example, to register function specs for the symbol function:\\n\\n  (s/fdef clojure.core/symbol\\n    :args (s/alt :separate (s/cat :ns string? :n string?)\\n                 :str string?\\n                 :sym symbol?)\\n    :ret symbol?)\"]],\"~:require-macros\",[\"^ \",\"^I\",\"^J\",\"^J\",\"^J\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^7\",[\"~$cljs.spec.alpha/*compile-asserts*\",\"^13\",\"^R\",\"^1Q\",\"~:args\",\"~$cljs.spec.alpha/*\",\"~$&\",\"~$cljs.spec.alpha/spec-impl\",\"~:req-un\",\"~:opt-un\",\"~$x\",\"^1C\",\"^1I\",\"^2H\",\"~$cljs.spec.gen.alpha/large-integer*\",\"^A\",\"^2K\",\"^1L\",\"~$cljs.spec.alpha/amp-impl\",\"~:min\",\"^1X\",\"~:ret\",\"~:gfn\",\"^2;\",\"~$cljs.spec.alpha/inst-in-range?\",\"^3L\",\"~$cljs.core/keyword?\",\"~:pred-exprs\",\"~:into\",\"~:keys-pred\",\"~:gen-max\",\"~$cljs.spec.alpha/MAX_INT\",\"^3M\",\"~$cljs.spec.alpha/merge-spec-impl\",\"^1[\",\"~$cljs.spec.alpha/every-impl\",\"~:fn\",\"~$cljs.spec.alpha/maybe-impl\",\"^2=\",\"^21\",\"^3E\",\"~$cljs.core/=\",\"^2?\",\"~$cljs.spec.alpha/def\",\"~$cljs.core/dec\",\"~:opt-keys\",\"~$cljs.spec.alpha/rep-impl\",\"^1K\",\"~$st__33__auto__\",\"^3P\",\"^23\",\"^27\",\"^1W\",\"^1Z\",\"^3=\",\"^3@\",\"^[\",\"^29\",\"~:else\",\"~:gen\",\"~$cljs.spec.alpha/and\",\"^3<\",\"^3>\",\"~$js/Date.\",\"~$cljs.spec.alpha/coll-of\",\"~$mkdate__35__auto__\",\"~$cljs.spec.alpha/cat\",\"~$cljs.core/apply\",\"^2U\",\"^20\",\"^1E\",\"~:cljs.spec.alpha/kind-form\",\"~$cljs.core/int?\",\"^2<\",\"~$cljs.spec.alpha/def-impl\",\"~$cljs.spec.alpha/every\",\"^8\",\"~:ns\",\"~:elide-asserts\",\"^@\",\"~$cljs.spec.alpha/nilable-impl\",\"~$cljs.core/double?\",\"^1V\",\"^1<\",\"^2[\",\"^2E\",\"^2I\",\"^15\",\"~$*\",\"^24\",\"^3F\",\"^28\",\"^1F\",\"~:req-specs\",\"^3H\",\"~$cljs.spec.alpha/alt-impl\",\"^1T\",\"~$cljs.spec.alpha/tuple-impl\",\"^U\",\"~$cljs.core/concat\",\"^1N\",\"^32\",\"~$cljs.spec.alpha/every-kv\",\"^Z\",\"^1;\",\"~$cljs.spec.alpha/fspec\",\"^1G\",\"~:cljs.spec.alpha/v\",\"~$cljs.core/inst-ms\",\"~$cljs.spec.alpha/multi-spec-impl\",\"~$cljs.spec.alpha/tuple\",\"~$cljs.core/empty?\",\"^1H\",\"^1M\",\"^16\",\"^I\",\"^2B\",\"~$cljs.spec.alpha/exercise-fn\",\"^2F\",\"^2J\",\"~$cljs.core/contains?\",\"^2A\",\"~$cljs.core/map?\",\"~$cljs.spec.alpha/map-spec-impl\",\"~:cljs.spec.alpha/cpred\",\"~$cljs.spec.gen.alpha/double*\",\"^2S\",\"~$cljs.spec.alpha/assert*\",\"^2L\",\"~$cljs.core/inst?\",\"~$if\",\"^18\",\"~$cljs.spec.alpha/rep+impl\",\"~$%\",\"~:cljs.spec.alpha/kvs->map\",\"^2Y\",\"~$p1__44__45__auto__\",\"~:distinct\",\"^X\",\"~$p1__32__37__auto__\",\"^2D\",\"~$cljs.spec.alpha/or-spec-impl\",\"~$d__36__auto__\",\"^9\",\"~:infinite?\",\"~$n\",\"~$cljs.spec.alpha/keys\",\"^2@\",\"^2O\",\"~$m\",\"~$f__48__auto__\",\"~$cljs.core/let\",\"~$cljs.spec.alpha/spec\",\"^1>\",\"^3I\",\"^3K\",\"^1?\",\"~$cljs.spec.alpha/get-spec\",\"~:req\",\"^2C\",\"^2Q\",\"^2M\",\"~:gen-into\",\"~$p1__40#\",\"^1D\",\"~$args__49__auto__\",\"^2G\",\"^34\",\"^2T\",\"~$cljs.spec.alpha/cat-impl\",\"^W\",\"^2X\",\"~$fn*\",\"~$js/isNaN\",\"~$not\",\"^36\",\"~$cljs.core/<=\",\"^1@\",\"~:max\",\"~$cljs.core/distinct?\",\"~$cljs.spec.alpha/int-in-range?\",\"^M\",\"^2N\",\"^2P\",\"~$v__25__auto__\",\"~$cljs.spec.alpha/with-gen\",\"~$cljs.spec.alpha/gen\",\"~$cljs.spec.gen.alpha/fmap\",\"~:min-count\",\"~:kind\",\"^1Y\",\"^:\",\"~$cljs.spec.alpha/map-of\",\"~$s\",\"~:count\",\"~$cljs.core/for\",\"^1=\",\"~:req-keys\",\"~$cljs.core/nth\",\"^2V\",\"~$k\",\"~:cljs.spec.alpha/k\",\"^2R\",\"~$?\",\"~$cljs.core/fn\",\"^1S\",\"^3B\",\"~:opt-specs\",\"^31\",\"^;\",\"~$p1__42__43__auto__\",\"^35\",\"^2W\",\"^Y\",\"^3D\",\"~$cljs.spec.gen.alpha/sample\",\"~:pred-forms\",\"~$cljs.core/bounded-count\",\"^3;\",\"^22\",\"^2Z\",\"^39\",\"^<\",\"^19\",\"~:options\",\"~:max-count\",\"~$i__24__auto__\",\"~:cljs.spec.alpha/kfn\",\"^1U\",\"~$+\",\"~$var\",\"^30\",\"~$mspec__30__auto__\",\"^12\",\"~$p1__38__39__auto__\",\"^3A\",\"~$m__31__auto__\",\"^10\",\"~$cljs.core/coll?\",\"^37\",\"^2:\",\"~$cljs.core/and\",\"^3N\",\"^3R\",\"^2>\",\"^3G\",\"~$fspec__47__auto__\",\"^1A\",\"^3Q\",\"~$cljs.spec.alpha/and-spec-impl\",\"^1P\",\"^14\",\"^1B\",\"^1R\",\"^1J\",\"^1O\",\"^38\",\"~:NaN?\",\"^3:\",\"^3?\",\"^3C\",\"^3J\",\"~:cljs.spec.alpha/conform-all\",\"~$cljs.spec.alpha/*runtime-asserts*\",\"~$cljs.spec.alpha/fspec-impl\",\"~$cljs.core/or\",\"~:test\",\"~$et__34__auto__\",\"~$cljs.core/any?\",\"^>\",\"~$cljs.core/inc\",\"~$cljs.spec.alpha/conformer\",\"^?\",\"~:cljs.spec.alpha/describe\",\"~$cljs.spec.alpha/&\",\"~:opt\",\"~$p1__41#\",\"^3O\",\"^33\",\"~$f\"]],\"~:order\",[\"^24\",\"^4R\",\"^@\",\"^U\",\"^Z\",\"^X\",\"^W\",\"^Y\",\"^10\",\"^1A\",\"^6N\",\"^A\",\"^23\",\"^2M\",\"^[\",\"^2L\",\"~$x\",\"~$%\",\"^1G\",\"^2;\",\"^29\",\"^2:\",\"^4F\",\"^14\",\"^R\",\"^M\",\"^13\",\"^22\",\"^1@\",\"^21\",\"^32\",\"^31\",\"~$s\",\"^4P\",\"^12\",\"^3N\",\"^?\",\"~$k\",\"^3M\",\"^38\",\"^1;\",\"^2Z\",\"^15\",\"^19\",\"^16\",\"^18\",\"^1<\",\"^1=\",\"^1D\",\"^I\",\"~$&\",\"^4G\",\"^3Y\",\"^52\",\"^6A\",\"^2W\",\"^2T\",\"^2U\",\"^2V\",\"^3?\",\"^<\",\"^3;\",\"^3<\",\"^3=\",\"^3>\",\"^5K\",\"^3Z\",\"^6U\",\"^3[\",\"^56\",\"^57\",\"^5P\",\"^6F\",\"^58\",\"^44\",\"^47\",\"^49\",\"^4C\",\"^4V\",\"^64\",\"^68\",\"^6;\",\"^2N\",\"^9\",\"^2>\",\"^5C\",\"^3L\",\"^>\",\"^33\",\"^6H\",\"^60\",\"^1K\",\"^1I\",\"^1J\",\"^1W\",\"^1L\",\"^1M\",\"^1V\",\"^1N\",\"^1O\",\"^1P\",\"^1Q\",\"^1R\",\"^1S\",\"^1T\",\"^1U\",\"^6>\",\"^4:\",\"^48\",\"^5A\",\"^5L\",\"^62\",\"^5[\",\"^6S\",\"^4N\",\"^4Q\",\"^6E\",\"^4@\",\"^6<\",\"^5S\",\"^6M\",\"^5=\",\"^6Q\",\"^4;\",\"^54\",\"^4M\",\"^5U\",\"^4=\",\"^59\",\"^2E\",\"^2B\",\"^2C\",\"^2D\",\"^4Z\",\"^53\",\"^6@\",\"^67\",\"^6?\",\"^5W\",\"^65\",\"^2=\",\"^2<\",\"^4J\",\"^6J\",\"^3B\",\"^3A\",\"^61\",\"^4D\",\"^2A\",\"~$*\",\"^2@\",\"^5>\",\"^3@\",\"~$+\",\"^4?\",\"^30\",\"~$?\",\"^2K\",\"^2J\",\"^4W\",\"^2?\",\"^8\",\"^5O\",\"^1B\",\"^1>\",\"^1?\",\"^41\",\"^37\",\"^35\",\"~$f\",\"^36\",\"^6R\",\"^1H\",\"^1C\",\"^1E\",\"^1F\",\"^3W\",\"^43\",\"^4>\",\"^6L\",\"^5I\",\"^2Y\",\"^2X\",\"^4X\",\"^2P\",\"^2O\",\"^20\",\"^1[\",\"^3R\",\"^3O\",\"^3P\",\"^3Q\",\"^4A\",\"^4[\",\"^1Z\",\"^1X\",\"^1Y\",\"^5H\",\"^6B\",\"^5F\",\"^5X\",\"^6T\",\"^3X\",\"^4L\",\"^66\",\"^46\",\"^50\",\"^6P\",\"^5?\",\"^5Z\",\"^6D\",\"^4Y\",\"^5Y\",\"^4T\",\"^28\",\"^27\",\"^4E\",\"^51\",\"^6O\",\"^4K\",\"^5D\",\"^4I\",\"^4H\",\"^5<\",\"^5B\",\"^45\",\"^40\",\"^42\",\"^5T\",\"^3K\",\"^3J\",\"^2G\",\"^2H\",\"^4O\",\"^6C\",\"^5V\",\"^4B\",\"^2I\",\"^2F\",\"^3I\",\"^3C\",\"^3H\",\"^3D\",\"^3E\",\"^3F\",\"^3G\",\"~$m\",\"^5E\",\"^6I\",\"^4U\",\"^5M\",\"^5R\",\"^6V\",\"^5Q\",\"^69\",\"^5@\",\"^5:\",\"^34\",\"^;\",\"^4<\",\"^2S\",\"^2Q\",\"^2R\",\"~$n\",\"^55\",\"^6G\",\"^5J\",\"^5G\",\"^63\",\"^5N\",\"^6:\",\"^4S\",\"^6=\",\"^3:\",\"^39\",\"^3V\",\"^6K\",\"^5;\",\"^2[\",\"^:\"]],\"^1A\",null]","clojure/test/check/random/doubles.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$clojure.test.check.random.doubles\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$longs\",\"~$clojure.test.check.random.longs\",\"^:\",\"^:\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$double-unit\",[\"^ \",\"~:meta\",[\"^ \",\"~:file\",\"^6\",\"~:line\",14,\"~:column\",16,\"~:end-line\",14,\"~:end-column\",27,\"~:private\",true],\"^D\",true,\"^5\",\"~$clojure.test.check.random.doubles/double-unit\",\"^?\",\"clojure/test/check/random/doubles.cljs\",\"^C\",27,\"^A\",1,\"^@\",14,\"^B\",14,\"~:tag\",\"~$number\"],\"~$big-double-unit\",[\"^ \",\"^>\",[\"^ \",\"^?\",\"^6\",\"^@\",20,\"^A\",16,\"^B\",20,\"^C\",31,\"^D\",true],\"^D\",true,\"^5\",\"~$clojure.test.check.random.doubles/big-double-unit\",\"^?\",\"clojure/test/check/random/doubles.cljs\",\"^C\",31,\"^A\",1,\"^@\",20,\"^B\",20,\"^F\",\"^G\"],\"~$rand-long->rand-double\",[\"^ \",\"~:protocol-inline\",null,\"^>\",[\"^ \",\"^?\",\"^6\",\"^@\",24,\"^A\",7,\"^B\",24,\"^C\",29,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^M\",[[\"~$long\"]]]]],\"~:doc\",\"Given a uniformly distributed random long, returns a uniformly\\n  distributed double between 0.0 (inclusive) and 1.0 (exclusive).\"],\"^5\",\"~$clojure.test.check.random.doubles/rand-long->rand-double\",\"~:variadic\",false,\"^?\",\"clojure/test/check/random/doubles.cljs\",\"^C\",29,\"~:method-params\",[\"^M\",[[\"^O\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^M\",[null,null]],\"^A\",1,\"^@\",24,\"^B\",24,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^O\"]]]]],\"^P\",\"Given a uniformly distributed random long, returns a uniformly\\n  distributed double between 0.0 (inclusive) and 1.0 (exclusive).\"]],\"~:require-macros\",[\"^ \"],\"^P\",null]","cljs/stacktrace.js":"// Compiled by ClojureScript 1.9.542 {:static-fns true, :optimize-constants false}\ngoog.provide('cljs.stacktrace');\ngoog.require('cljs.core');\ngoog.require('goog.string');\ngoog.require('clojure.string');\nif(typeof cljs.stacktrace.parse_stacktrace !== 'undefined'){\n} else {\n/**\n * Parse a JavaScript stacktrace string into a canonical data form. The\n *   arguments:\n * \n *   repl-env - the repl environment, an optional map with :host and :port keys\n *           if the stacktrace includes url, not file references\n *   st       - the original stacktrace string to parse\n *   err      - an error map. :ua-product key defines the type of stacktrace parser\n *           to use, for example :chrome\n *   opts     - additional options. :output-dir maybe given in this argument if\n *           :host and :port do not apply, for example, a file path\n * \n *   The canonical stacktrace representation can easily be mapped to a\n *   ClojureScript one see mapped-stacktrace and mapped-stacktrace-str\n */\ncljs.stacktrace.parse_stacktrace = (function (){var method_table__7610__auto__ = (function (){var G__15320 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15320) : cljs.core.atom.call(null,G__15320));\n})();\nvar prefer_table__7611__auto__ = (function (){var G__15321 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15321) : cljs.core.atom.call(null,G__15321));\n})();\nvar method_cache__7612__auto__ = (function (){var G__15322 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15322) : cljs.core.atom.call(null,G__15322));\n})();\nvar cached_hierarchy__7613__auto__ = (function (){var G__15323 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15323) : cljs.core.atom.call(null,G__15323));\n})();\nvar hierarchy__7614__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),cljs.core.get_global_hierarchy());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.stacktrace\",\"parse-stacktrace\"),((function (method_table__7610__auto__,prefer_table__7611__auto__,method_cache__7612__auto__,cached_hierarchy__7613__auto__,hierarchy__7614__auto__){\nreturn (function (repl_env,st,err,opts){\nreturn new cljs.core.Keyword(null,\"ua-product\",\"ua-product\",938384227).cljs$core$IFn$_invoke$arity$1(err);\n});})(method_table__7610__auto__,prefer_table__7611__auto__,method_cache__7612__auto__,cached_hierarchy__7613__auto__,hierarchy__7614__auto__))\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__7614__auto__,method_table__7610__auto__,prefer_table__7611__auto__,method_cache__7612__auto__,cached_hierarchy__7613__auto__));\n})();\n}\ncljs.stacktrace.parse_int = (function cljs$stacktrace$parse_int(s){\nreturn parseInt(s,(10));\n});\ncljs.stacktrace.starts_with_QMARK_ = (function cljs$stacktrace$starts_with_QMARK_(s0,s1){\nreturn goog.string.startsWith(s0,s1);\n});\ncljs.stacktrace.ends_with_QMARK_ = (function cljs$stacktrace$ends_with_QMARK_(s0,s1){\nreturn goog.string.endsWith(s0,s1);\n});\ncljs.stacktrace.string__GT_regex = (function cljs$stacktrace$string__GT_regex(s){\nreturn (new RegExp(s));\n});\ncljs.stacktrace.output_directory = (function cljs$stacktrace$output_directory(opts){\nvar or__6677__auto__ = new cljs.core.Keyword(null,\"output-dir\",\"output-dir\",-290956991).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__6677__auto__)){\nreturn or__6677__auto__;\n} else {\nreturn \"out\";\n}\n});\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (repl_env,st,err,opts){\nreturn st;\n}));\ncljs.stacktrace.parse_file_line_column = (function cljs$stacktrace$parse_file_line_column(flc){\nif(cljs.core.not(cljs.core.re_find(/:/,flc))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [flc,null,null], null);\n} else {\nvar xs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(flc,/:/);\nvar vec__15341 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (xs){\nreturn (function (p__15347,p__15348){\nvar vec__15349 = p__15347;\nvar pre = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15349,(0),null);\nvar post = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15349,(1),null);\nvar vec__15352 = p__15348;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15352,(0),null);\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15352,(1),null);\nif((i <= (2))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(post,x)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(pre,x),post], null);\n}\n});})(xs))\n,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY], null),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,xs,cljs.core.range.cljs$core$IFn$_invoke$arity$3(cljs.core.count(xs),(0),(-1))));\nvar pre = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15341,(0),null);\nvar vec__15344 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15341,(1),null);\nvar line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15344,(0),null);\nvar column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15344,(1),null);\nvar file = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\":\",pre);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__15355 = file;\nif(cljs.stacktrace.starts_with_QMARK_(file,\"(\")){\nreturn clojure.string.replace(G__15355,\"(\",\"\");\n} else {\nreturn G__15355;\n}\n})(),cljs.stacktrace.parse_int((function (){var G__15356 = line;\nif(cljs.stacktrace.ends_with_QMARK_(line,\")\")){\nreturn clojure.string.replace(G__15356,\")\",\"\");\n} else {\nreturn G__15356;\n}\n})()),cljs.stacktrace.parse_int((function (){var G__15357 = column;\nif(cljs.stacktrace.ends_with_QMARK_(column,\")\")){\nreturn clojure.string.replace(G__15357,\")\",\"\");\n} else {\nreturn G__15357;\n}\n})())], null);\n}\n});\n/**\n * Given a browser file url convert it into a relative path that can be used\n * to locate the original source.\n */\ncljs.stacktrace.parse_file = (function cljs$stacktrace$parse_file(p__15358,file,p__15359){\nvar map__15364 = p__15358;\nvar map__15364__$1 = ((((!((map__15364 == null)))?((((map__15364.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__15364.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15364):map__15364);\nvar repl_env = map__15364__$1;\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15364__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar host_port = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15364__$1,new cljs.core.Keyword(null,\"host-port\",\"host-port\",1956551772));\nvar port = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15364__$1,new cljs.core.Keyword(null,\"port\",\"port\",1534937262));\nvar map__15365 = p__15359;\nvar map__15365__$1 = ((((!((map__15365 == null)))?((((map__15365.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__15365.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15365):map__15365);\nvar opts = map__15365__$1;\nvar asset_path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15365__$1,new cljs.core.Keyword(null,\"asset-path\",\"asset-path\",1500889617));\nvar urlpat = (cljs.core.truth_(host)?cljs.stacktrace.string__GT_regex([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"http://\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\":\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__6677__auto__ = host_port;\nif(cljs.core.truth_(or__6677__auto__)){\nreturn or__6677__auto__;\n} else {\nreturn port;\n}\n})()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"/\")].join('')):\"\");\nvar match = (cljs.core.truth_(host)?cljs.core.re_find(urlpat,file):cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\"output-dir\",\"output-dir\",-290956991)));\nif(cljs.core.truth_(match)){\nreturn clojure.string.replace(clojure.string.replace(file,urlpat,\"\"),cljs.stacktrace.string__GT_regex([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"^\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__6677__auto__ = (function (){var and__6665__auto__ = asset_path;\nif(cljs.core.truth_(and__6665__auto__)){\nreturn clojure.string.replace(asset_path,/^\\//,\"\");\n} else {\nreturn and__6665__auto__;\n}\n})();\nif(cljs.core.truth_(or__6677__auto__)){\nreturn or__6677__auto__;\n} else {\nreturn cljs.stacktrace.output_directory(opts);\n}\n})()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"/\")].join('')),\"\");\n} else {\nvar temp__4655__auto__ = new cljs.core.Keyword(null,\"asset-root\",\"asset-root\",1771735072).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__4655__auto__)){\nvar asset_root = temp__4655__auto__;\nreturn clojure.string.replace(file,asset_root,\"\");\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Could not relativize URL \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(file)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"parse-stacktrace\",\"parse-stacktrace\",-38208461),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),new cljs.core.Keyword(null,\"relativize-url\",\"relativize-url\",621482324)], null));\n}\n}\n});\ncljs.stacktrace.chrome_st_el__GT_frame = (function cljs$stacktrace$chrome_st_el__GT_frame(repl_env,st_el,opts){\nvar xs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(clojure.string.replace(st_el,/\\s+at\\s+/,\"\"),/\\s+/);\nvar vec__15374 = ((((1) === cljs.core.count(xs)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,cljs.core.first(xs)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(xs),cljs.core.last(xs)], null));\nvar function$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15374,(0),null);\nvar flc = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15374,(1),null);\nvar vec__15377 = cljs.stacktrace.parse_file_line_column(flc);\nvar file = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15377,(0),null);\nvar line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15377,(1),null);\nvar column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15377,(2),null);\nif(cljs.core.truth_((function (){var and__6665__auto__ = file;\nif(cljs.core.truth_(and__6665__auto__)){\nvar and__6665__auto____$1 = function$;\nif(cljs.core.truth_(and__6665__auto____$1)){\nvar and__6665__auto____$2 = line;\nif(cljs.core.truth_(and__6665__auto____$2)){\nreturn column;\n} else {\nreturn and__6665__auto____$2;\n}\n} else {\nreturn and__6665__auto____$1;\n}\n} else {\nreturn and__6665__auto__;\n}\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.stacktrace.parse_file(repl_env,file,opts),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),clojure.string.replace(function$,/Object\\./,\"\"),new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column], null);\n} else {\nif(clojure.string.blank_QMARK_(function$)){\nreturn null;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),null,new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),clojure.string.replace(function$,/Object\\./,\"\"),new cljs.core.Keyword(null,\"line\",\"line\",212345235),null,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),null], null);\n}\n}\n});\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"chrome\",\"chrome\",1718738387),(function (repl_env,st,err,opts){\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15382_SHARP_){\nreturn cljs.stacktrace.chrome_st_el__GT_frame(repl_env,p1__15382_SHARP_,opts);\n}),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__15381_SHARP_){\nreturn !(cljs.stacktrace.starts_with_QMARK_(p1__15381_SHARP_,\"    at eval\"));\n}),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((function (p1__15380_SHARP_){\nreturn cljs.stacktrace.starts_with_QMARK_(p1__15380_SHARP_,\"Error\");\n}),clojure.string.split_lines(st))))));\n}));\ncljs.stacktrace.safari_st_el__GT_frame = (function cljs$stacktrace$safari_st_el__GT_frame(repl_env,st_el,opts){\nvar vec__15389 = (cljs.core.truth_(cljs.core.re_find(/@/,st_el))?clojure.string.split.cljs$core$IFn$_invoke$arity$2(st_el,/@/):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,st_el], null));\nvar function$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15389,(0),null);\nvar flc = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15389,(1),null);\nvar vec__15392 = cljs.stacktrace.parse_file_line_column(flc);\nvar file = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15392,(0),null);\nvar line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15392,(1),null);\nvar column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15392,(2),null);\nif(cljs.core.truth_((function (){var and__6665__auto__ = file;\nif(cljs.core.truth_(and__6665__auto__)){\nvar and__6665__auto____$1 = function$;\nif(cljs.core.truth_(and__6665__auto____$1)){\nvar and__6665__auto____$2 = line;\nif(cljs.core.truth_(and__6665__auto____$2)){\nreturn column;\n} else {\nreturn and__6665__auto____$2;\n}\n} else {\nreturn and__6665__auto____$1;\n}\n} else {\nreturn and__6665__auto__;\n}\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.stacktrace.parse_file(repl_env,file,opts),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),clojure.string.trim(function$),new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column], null);\n} else {\nif(clojure.string.blank_QMARK_(function$)){\nreturn null;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),null,new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),clojure.string.trim(function$),new cljs.core.Keyword(null,\"line\",\"line\",212345235),null,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),null], null);\n}\n}\n});\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"safari\",\"safari\",497115653),(function (repl_env,st,err,opts){\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15397_SHARP_){\nreturn cljs.stacktrace.safari_st_el__GT_frame(repl_env,p1__15397_SHARP_,opts);\n}),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(clojure.string.blank_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__15396_SHARP_){\nreturn !(cljs.stacktrace.starts_with_QMARK_(p1__15396_SHARP_,\"eval code\"));\n}),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((function (p1__15395_SHARP_){\nreturn cljs.stacktrace.starts_with_QMARK_(p1__15395_SHARP_,\"Error\");\n}),clojure.string.split_lines(st)))))));\n}));\ncljs.stacktrace.firefox_clean_function = (function cljs$stacktrace$firefox_clean_function(f){\nvar f__$1 = f;\nvar f__$2 = ((clojure.string.blank_QMARK_(f__$1))?null:((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(f__$1.indexOf(\"</\"),(-1)))?(function (){var idx = f__$1.indexOf(\"</\");\nreturn f__$1.substring((idx + (2)));\n})():f__$1\n));\nreturn clojure.string.replace(clojure.string.replace(f__$2,/</,\"\"),(new RegExp(\"\\\\/\")),\"\");\n});\ncljs.stacktrace.firefox_st_el__GT_frame = (function cljs$stacktrace$firefox_st_el__GT_frame(repl_env,st_el,opts){\nvar vec__15404 = (cljs.core.truth_(cljs.core.re_find(/@/,st_el))?clojure.string.split.cljs$core$IFn$_invoke$arity$2(st_el,/@/):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,st_el], null));\nvar function$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15404,(0),null);\nvar flc = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15404,(1),null);\nvar vec__15407 = cljs.stacktrace.parse_file_line_column(flc);\nvar file = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15407,(0),null);\nvar line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15407,(1),null);\nvar column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15407,(2),null);\nif(cljs.core.truth_((function (){var and__6665__auto__ = file;\nif(cljs.core.truth_(and__6665__auto__)){\nvar and__6665__auto____$1 = function$;\nif(cljs.core.truth_(and__6665__auto____$1)){\nvar and__6665__auto____$2 = line;\nif(cljs.core.truth_(and__6665__auto____$2)){\nreturn column;\n} else {\nreturn and__6665__auto____$2;\n}\n} else {\nreturn and__6665__auto____$1;\n}\n} else {\nreturn and__6665__auto__;\n}\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.stacktrace.parse_file(repl_env,file,opts),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),cljs.stacktrace.firefox_clean_function(function$),new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column], null);\n} else {\nif(clojure.string.blank_QMARK_(function$)){\nreturn null;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),null,new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),cljs.stacktrace.firefox_clean_function(function$),new cljs.core.Keyword(null,\"line\",\"line\",212345235),null,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),null], null);\n}\n}\n});\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"firefox\",\"firefox\",1283768880),(function (repl_env,st,err,opts){\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15412_SHARP_){\nreturn cljs.stacktrace.firefox_st_el__GT_frame(repl_env,p1__15412_SHARP_,opts);\n}),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(clojure.string.blank_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__15411_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__15411_SHARP_.indexOf(\"> eval\"),(-1));\n}),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((function (p1__15410_SHARP_){\nreturn cljs.stacktrace.starts_with_QMARK_(p1__15410_SHARP_,\"Error\");\n}),clojure.string.split_lines(st)))))));\n}));\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"rhino\",\"rhino\",1962118035),(function (repl_env,st,err,p__15413){\nvar map__15414 = p__15413;\nvar map__15414__$1 = ((((!((map__15414 == null)))?((((map__15414.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__15414.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15414):map__15414);\nvar opts = map__15414__$1;\nvar output_dir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15414__$1,new cljs.core.Keyword(null,\"output-dir\",\"output-dir\",-290956991));\nvar process_frame = ((function (map__15414,map__15414__$1,opts,output_dir){\nreturn (function cljs$stacktrace$process_frame(frame_str){\nif((clojure.string.blank_QMARK_(frame_str)) || (((-1) === frame_str.indexOf(\"\\tat\")))){\nreturn null;\n} else {\nvar vec__15434 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(frame_str,/:/);\nvar file_side = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15434,(0),null);\nvar line_fn_side = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15434,(1),null);\nvar file = clojure.string.replace(file_side,/\\s+at\\s+/,\"\");\nvar vec__15437 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(line_fn_side,/\\s+/);\nvar line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15437,(0),null);\nvar function$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15437,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),clojure.string.replace(file,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(output_dir),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"/\")].join(''),\"\"),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),(cljs.core.truth_(function$)?clojure.string.replace(clojure.string.replace(function$,\"(\",\"\"),\")\",\"\"):null),new cljs.core.Keyword(null,\"line\",\"line\",212345235),(cljs.core.truth_((function (){var and__6665__auto__ = line;\nif(cljs.core.truth_(and__6665__auto__)){\nreturn !(clojure.string.blank_QMARK_(line));\n} else {\nreturn and__6665__auto__;\n}\n})())?cljs.stacktrace.parse_int(line):null),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),(0)], null);\n}\n});})(map__15414,map__15414__$1,opts,output_dir))\n;\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(process_frame,clojure.string.split.cljs$core$IFn$_invoke$arity$2(st,/\\n/))));\n}));\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"nashorn\",\"nashorn\",988299963),(function (repl_env,st,err,p__15440){\nvar map__15441 = p__15440;\nvar map__15441__$1 = ((((!((map__15441 == null)))?((((map__15441.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__15441.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15441):map__15441);\nvar opts = map__15441__$1;\nvar output_dir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15441__$1,new cljs.core.Keyword(null,\"output-dir\",\"output-dir\",-290956991));\nvar process_frame = ((function (map__15441,map__15441__$1,opts,output_dir){\nreturn (function cljs$stacktrace$process_frame(frame_str){\nif((clojure.string.blank_QMARK_(frame_str)) || (((-1) === frame_str.indexOf(\"\\tat\")))){\nreturn null;\n} else {\nvar frame_str__$1 = clojure.string.replace(frame_str,/\\s+at\\s+/,\"\");\nvar vec__15461 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(frame_str__$1,/\\s+/);\nvar function$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15461,(0),null);\nvar file_and_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15461,(1),null);\nvar vec__15464 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(file_and_line,/:/);\nvar file_part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15464,(0),null);\nvar line_part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15464,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),clojure.string.replace(file_part.substring((1)),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(output_dir),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"/\")].join(''),\"\"),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),function$,new cljs.core.Keyword(null,\"line\",\"line\",212345235),(cljs.core.truth_((function (){var and__6665__auto__ = line_part;\nif(cljs.core.truth_(and__6665__auto__)){\nreturn !(clojure.string.blank_QMARK_(line_part));\n} else {\nreturn and__6665__auto__;\n}\n})())?cljs.stacktrace.parse_int(line_part.substring((0),(cljs.core.count(line_part) - (1)))):null),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),(0)], null);\n}\n});})(map__15441,map__15441__$1,opts,output_dir))\n;\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(process_frame,clojure.string.split.cljs$core$IFn$_invoke$arity$2(st,/\\n/))));\n}));\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"nodejs\",\"nodejs\",321212524),(function (repl_env,st,err,p__15467){\nvar map__15468 = p__15467;\nvar map__15468__$1 = ((((!((map__15468 == null)))?((((map__15468.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__15468.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15468):map__15468);\nvar opts = map__15468__$1;\nvar output_dir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15468__$1,new cljs.core.Keyword(null,\"output-dir\",\"output-dir\",-290956991));\nvar parse_source_loc_info = ((function (map__15468,map__15468__$1,opts,output_dir){\nreturn (function cljs$stacktrace$parse_source_loc_info(x){\nif(cljs.core.truth_((function (){var and__6665__auto__ = x;\nif(cljs.core.truth_(and__6665__auto__)){\nreturn !(clojure.string.blank_QMARK_(x));\n} else {\nreturn and__6665__auto__;\n}\n})())){\nreturn cljs.stacktrace.parse_int(x);\n} else {\nreturn null;\n}\n});})(map__15468,map__15468__$1,opts,output_dir))\n;\nvar process_frame = ((function (map__15468,map__15468__$1,opts,output_dir){\nreturn (function cljs$stacktrace$process_frame(frame_str){\nif((clojure.string.blank_QMARK_(frame_str)) || ((cljs.core.re_find(/^\\s+at/,frame_str) == null))){\nreturn null;\n} else {\nvar frame_str__$1 = clojure.string.replace(frame_str,/\\s+at\\s+/,\"\");\nif(clojure.string.starts_with_QMARK_(frame_str__$1,\"repl:\")){\nreturn null;\n} else {\nvar parts = clojure.string.split.cljs$core$IFn$_invoke$arity$2(frame_str__$1,/\\s+/);\nvar vec__15491 = ((((2) === cljs.core.count(parts)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(parts),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.second(parts),(1),(cljs.core.count(cljs.core.second(parts)) - (1)))], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,cljs.core.first(parts)], null));\nvar function$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15491,(0),null);\nvar file_AMPERSAND_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15491,(1),null);\nvar vec__15494 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(file_AMPERSAND_line,/:/);\nvar file_part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15494,(0),null);\nvar line_part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15494,(1),null);\nvar col_part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15494,(2),null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),(cljs.core.truth_(function$)?(function (){var G__15497 = file_part;\nif(cljs.core.truth_(output_dir)){\nreturn clojure.string.replace(G__15497,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(output_dir),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"/\")].join(''),\"\");\n} else {\nreturn G__15497;\n}\n})():file_part),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),function$,new cljs.core.Keyword(null,\"line\",\"line\",212345235),parse_source_loc_info(line_part),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),parse_source_loc_info(col_part)], null);\n}\n}\n});})(map__15468,map__15468__$1,opts,output_dir))\n;\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(process_frame,clojure.string.split.cljs$core$IFn$_invoke$arity$2(st,/\\n/))));\n}));\ncljs.stacktrace.remove_ext = (function cljs$stacktrace$remove_ext(file){\nreturn clojure.string.replace(clojure.string.replace(clojure.string.replace(clojure.string.replace(file,/\\.js$/,\"\"),/\\.cljs$/,\"\"),/\\.cljc$/,\"\"),/\\.clj$/,\"\");\n});\n/**\n * Given a cljs.source-map source map data structure map a generated line\n * and column back to the original line, column, and function called.\n */\ncljs.stacktrace.mapped_line_column_call = (function cljs$stacktrace$mapped_line_column_call(sms,file,line,column){\nvar source_map = cljs.core.get.cljs$core$IFn$_invoke$arity$2(sms,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.replace(cljs.stacktrace.remove_ext(file),\"/\",\".\")));\nvar get_best_column = ((function (source_map){\nreturn (function cljs$stacktrace$mapped_line_column_call_$_get_best_column(columns,column__$1){\nreturn cljs.core.last((function (){var or__6677__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(columns,cljs.core.last(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (source_map){\nreturn (function (p1__15498_SHARP_){\nreturn (p1__15498_SHARP_ <= (column__$1 - (1)));\n});})(source_map))\n,cljs.core.sort.cljs$core$IFn$_invoke$arity$1(cljs.core.keys(columns)))));\nif(cljs.core.truth_(or__6677__auto__)){\nreturn or__6677__auto__;\n} else {\nreturn cljs.core.second(cljs.core.first(columns));\n}\n})());\n});})(source_map))\n;\nvar adjust = ((function (source_map){\nreturn (function cljs$stacktrace$mapped_line_column_call_$_adjust(mapped){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$3(((function (source_map){\nreturn (function (p1__15499_SHARP_,p2__15500_SHARP_){\nreturn (p1__15499_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15499_SHARP_.cljs$core$IFn$_invoke$arity$1(p2__15500_SHARP_) : p1__15499_SHARP_.call(null,p2__15500_SHARP_));\n});})(source_map))\n,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.inc,cljs.core.inc,cljs.core.identity], null),mapped));\n});})(source_map))\n;\nvar default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [line,column,null], null);\nvar temp__4655__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(source_map,(line - (1)));\nif(cljs.core.truth_(temp__4655__auto__)){\nvar columns = temp__4655__auto__;\nreturn adjust(cljs.core.map.cljs$core$IFn$_invoke$arity$2(get_best_column(columns,column),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"col\",\"col\",-1959363084),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)], null)));\n} else {\nreturn default$;\n}\n});\n/**\n * Given opts and a canonicalized JavaScript stacktrace frame, return the\n *   ClojureScript frame.\n */\ncljs.stacktrace.mapped_frame = (function cljs$stacktrace$mapped_frame(p__15501,sms,opts){\nvar map__15507 = p__15501;\nvar map__15507__$1 = ((((!((map__15507 == null)))?((((map__15507.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__15507.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15507):map__15507);\nvar function$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15507__$1,new cljs.core.Keyword(null,\"function\",\"function\",-2127255473));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15507__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15507__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15507__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar no_source_file_QMARK_ = ((cljs.core.not(file))?true:cljs.stacktrace.starts_with_QMARK_(file,\"<\"));\nvar vec__15509 = ((no_source_file_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [line,column,null], null):cljs.stacktrace.mapped_line_column_call(sms,file,line,column));\nvar line_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15509,(0),null);\nvar column_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15509,(1),null);\nvar call = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15509,(2),null);\nvar file_SINGLEQUOTE_ = ((no_source_file_QMARK_)?null:((cljs.stacktrace.ends_with_QMARK_(file,\".js\"))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(file,(0),(cljs.core.count(file) - (3)))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\".cljs\")].join(''):file));\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),function$,new cljs.core.Keyword(null,\"call\",\"call\",-519999866),call,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),((no_source_file_QMARK_)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"NO_SOURCE_FILE\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(file)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(\" \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(file)].join(''):null))].join(''):file_SINGLEQUOTE_),new cljs.core.Keyword(null,\"line\",\"line\",212345235),line_SINGLEQUOTE_,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column_SINGLEQUOTE_], null);\n});\n/**\n * Given a vector representing the canonicalized JavaScript stacktrace\n * return the ClojureScript stacktrace. The canonical stacktrace must be\n * in the form:\n * \n *  [{:file <string>\n *    :function <string>\n *    :line <integer>\n *    :column <integer>}*]\n * \n * :file must be a URL path (without protocol) relative to :output-dir or a\n * identifier delimited by angle brackets. The returned mapped stacktrace will\n * also contain :url entries to the original sources if it can be determined\n * from the classpath.\n */\ncljs.stacktrace.mapped_stacktrace = (function cljs$stacktrace$mapped_stacktrace(var_args){\nvar args15514 = [];\nvar len__7790__auto___15517 = arguments.length;\nvar i__7791__auto___15518 = (0);\nwhile(true){\nif((i__7791__auto___15518 < len__7790__auto___15517)){\nargs15514.push((arguments[i__7791__auto___15518]));\n\nvar G__15519 = (i__7791__auto___15518 + (1));\ni__7791__auto___15518 = G__15519;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__15516 = args15514.length;\nswitch (G__15516) {\ncase 2:\nreturn cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args15514.length)].join('')));\n\n}\n});\n\ncljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$2 = (function (stacktrace,sms){\nreturn cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$3(stacktrace,sms,null);\n});\n\ncljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$3 = (function (stacktrace,sms,opts){\nvar call__GT_function = (function cljs$stacktrace$call__GT_function(x){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"call\",\"call\",-519999866).cljs$core$IFn$_invoke$arity$1(x))){\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"function\",\"function\",-2127255473)],[new cljs.core.Keyword(null,\"call\",\"call\",-519999866).cljs$core$IFn$_invoke$arity$1(x)]);\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n});\nvar call_merge = (function cljs$stacktrace$call_merge(function$,call){\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic((function (munged_fn_name,unmunged_call_name){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(munged_fn_name,clojure.string.replace(cljs.core.munge(unmunged_call_name),\".\",\"$\"))){\nreturn unmunged_call_name;\n} else {\nreturn munged_fn_name;\n}\n}),cljs.core.array_seq([function$,call], 0));\n});\nvar mapped_frames = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.memoize((function (p1__15512_SHARP_){\nreturn cljs.stacktrace.mapped_frame(p1__15512_SHARP_,sms,opts);\n})),stacktrace);\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$3(call_merge,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (mapped_frames){\nreturn (function (p1__15513_SHARP_){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p1__15513_SHARP_,new cljs.core.Keyword(null,\"call\",\"call\",-519999866));\n});})(mapped_frames))\n,mapped_frames),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(cljs.core.map.cljs$core$IFn$_invoke$arity$2(call__GT_function,mapped_frames)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY], null))));\n});\n\ncljs.stacktrace.mapped_stacktrace.cljs$lang$maxFixedArity = 3;\n\n/**\n * Given a vector representing the canonicalized JavaScript stacktrace and a map\n *   of library names to decoded source maps, print the ClojureScript stacktrace .\n *   See mapped-stacktrace.\n */\ncljs.stacktrace.mapped_stacktrace_str = (function cljs$stacktrace$mapped_stacktrace_str(var_args){\nvar args15521 = [];\nvar len__7790__auto___15534 = arguments.length;\nvar i__7791__auto___15535 = (0);\nwhile(true){\nif((i__7791__auto___15535 < len__7790__auto___15534)){\nargs15521.push((arguments[i__7791__auto___15535]));\n\nvar G__15536 = (i__7791__auto___15535 + (1));\ni__7791__auto___15535 = G__15536;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__15523 = args15521.length;\nswitch (G__15523) {\ncase 2:\nreturn cljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args15521.length)].join('')));\n\n}\n});\n\ncljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$2 = (function (stacktrace,sms){\nreturn cljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$3(stacktrace,sms,null);\n});\n\ncljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$3 = (function (stacktrace,sms,opts){\nvar sb__7671__auto__ = (new goog.string.StringBuffer());\nvar _STAR_print_newline_STAR_15524_15538 = cljs.core._STAR_print_newline_STAR_;\nvar _STAR_print_fn_STAR_15525_15539 = cljs.core._STAR_print_fn_STAR_;\ncljs.core._STAR_print_newline_STAR_ = true;\n\ncljs.core._STAR_print_fn_STAR_ = ((function (_STAR_print_newline_STAR_15524_15538,_STAR_print_fn_STAR_15525_15539,sb__7671__auto__){\nreturn (function (x__7672__auto__){\nreturn sb__7671__auto__.append(x__7672__auto__);\n});})(_STAR_print_newline_STAR_15524_15538,_STAR_print_fn_STAR_15525_15539,sb__7671__auto__))\n;\n\ntry{var seq__15526_15540 = cljs.core.seq(cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$3(stacktrace,sms,opts));\nvar chunk__15527_15541 = null;\nvar count__15528_15542 = (0);\nvar i__15529_15543 = (0);\nwhile(true){\nif((i__15529_15543 < count__15528_15542)){\nvar map__15530_15544 = chunk__15527_15541.cljs$core$IIndexed$_nth$arity$2(null,i__15529_15543);\nvar map__15530_15545__$1 = ((((!((map__15530_15544 == null)))?((((map__15530_15544.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__15530_15544.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15530_15544):map__15530_15544);\nvar function_15546 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15530_15545__$1,new cljs.core.Keyword(null,\"function\",\"function\",-2127255473));\nvar file_15547 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15530_15545__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar line_15548 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15530_15545__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column_15549 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15530_15545__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([\"\\t\",[cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(function_15546)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(function_15546),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\" \")].join(''):null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(file_15547),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(line_15548)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(\":\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(line_15548)].join(''):null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(column_15549)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(\":\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(column_15549)].join(''):null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\")\")].join('')], 0));\n\nvar G__15550 = seq__15526_15540;\nvar G__15551 = chunk__15527_15541;\nvar G__15552 = count__15528_15542;\nvar G__15553 = (i__15529_15543 + (1));\nseq__15526_15540 = G__15550;\nchunk__15527_15541 = G__15551;\ncount__15528_15542 = G__15552;\ni__15529_15543 = G__15553;\ncontinue;\n} else {\nvar temp__4657__auto___15554 = cljs.core.seq(seq__15526_15540);\nif(temp__4657__auto___15554){\nvar seq__15526_15555__$1 = temp__4657__auto___15554;\nif(cljs.core.chunked_seq_QMARK_(seq__15526_15555__$1)){\nvar c__7496__auto___15556 = cljs.core.chunk_first(seq__15526_15555__$1);\nvar G__15557 = cljs.core.chunk_rest(seq__15526_15555__$1);\nvar G__15558 = c__7496__auto___15556;\nvar G__15559 = cljs.core.count(c__7496__auto___15556);\nvar G__15560 = (0);\nseq__15526_15540 = G__15557;\nchunk__15527_15541 = G__15558;\ncount__15528_15542 = G__15559;\ni__15529_15543 = G__15560;\ncontinue;\n} else {\nvar map__15532_15561 = cljs.core.first(seq__15526_15555__$1);\nvar map__15532_15562__$1 = ((((!((map__15532_15561 == null)))?((((map__15532_15561.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__15532_15561.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15532_15561):map__15532_15561);\nvar function_15563 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15532_15562__$1,new cljs.core.Keyword(null,\"function\",\"function\",-2127255473));\nvar file_15564 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15532_15562__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar line_15565 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15532_15562__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column_15566 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15532_15562__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([\"\\t\",[cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(function_15563)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(function_15563),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\" \")].join(''):null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"(\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(file_15564),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(line_15565)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(\":\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(line_15565)].join(''):null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(column_15566)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(\":\"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(column_15566)].join(''):null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(\")\")].join('')], 0));\n\nvar G__15567 = cljs.core.next(seq__15526_15555__$1);\nvar G__15568 = null;\nvar G__15569 = (0);\nvar G__15570 = (0);\nseq__15526_15540 = G__15567;\nchunk__15527_15541 = G__15568;\ncount__15528_15542 = G__15569;\ni__15529_15543 = G__15570;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15525_15539;\n\ncljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_15524_15538;\n}\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__7671__auto__)].join('');\n});\n\ncljs.stacktrace.mapped_stacktrace_str.cljs$lang$maxFixedArity = 3;\n\n\n//# sourceMappingURL=stacktrace.js.map","cljs/analyzer.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \",\"~$ensure\",\"~$cljs.env.macros\",\"~$disallowing-ns*\",\"~$cljs.analyzer.macros\",\"~$disallowing-recur\",\"^8\",\"~$no-warn\",\"^8\",\"~$allowing-redef\",\"^8\",\"~$wrapping-errors\",\"^8\"],\"~:excludes\",[\"~#set\",[\"^5\",\"~$js-reserved\",\"~$macroexpand-1\",\"~$ns-interns\"]],\"~:name\",\"~$cljs.analyzer\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$set\",\"~$clojure.set\",\"~$gstring\",\"~$goog.string\",\"~$cljs.tools.reader\",\"^J\",\"^I\",\"^I\",\"~$tags\",\"~$cljs.tagged-literals\",\"~$cljs.tools.reader.reader-types\",\"^M\",\"~$cljs.env\",\"^N\",\"^G\",\"^G\",\"~$readers\",\"^M\",\"^L\",\"^L\",\"~$env\",\"^N\",\"~$string\",\"~$clojure.string\",\"^R\",\"^R\",\"~$cljs.reader\",\"^S\",\"~$edn\",\"^S\",\"~$reader\",\"^J\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$type?\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"~:line\",1043,\"~:column\",7,\"~:end-line\",1043,\"~:end-column\",12,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^15\",[[\"^P\",\"~$t\"]]]]],\"~:tag\",\"~$boolean\"],\"^B\",\"~$cljs.analyzer/type?\",\"~:variadic\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",12,\"~:method-params\",[\"^15\",[[\"^P\",\"~$t\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1043,\"~:ret-tag\",\"^18\",\"^12\",1043,\"~:max-fixed-arity\",2,\"^17\",\"^18\",\"~:fn-var\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$t\"]]]]]],\"~$get-namespace\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",524,\"^11\",7,\"^12\",524,\"^13\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$key\"],[\"~$cenv\",\"^1B\"]]]]],\"~:top-fn\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^1B\"],[\"^1C\",\"^1B\"]]],\"^14\",[\"^15\",[[\"^1B\"],[\"^1C\",\"^1B\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/get-namespace\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^1B\"],[\"^1C\",\"^1B\"]]],\"^14\",[\"^15\",[[\"^1B\"],[\"^1C\",\"^1B\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^1B\"],[\"^1C\",\"^1B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",524,\"^12\",524,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[[\"^1B\"],[\"^1C\",\"^1B\"]]]],\"~$error-message\",[\"^ \",\"^B\",\"~$cljs.analyzer/error-message\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",266,\"^11\",1,\"^12\",266,\"^13\",24,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",266,\"^11\",11,\"^12\",266,\"^13\",24],\"^17\",\"~$cljs.core/MultiFn\"],\"~$elide-reader-meta\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3106,\"^11\",7,\"^12\",3106,\"^13\",24,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$m\"]]]]]],\"^B\",\"~$cljs.analyzer/elide-reader-meta\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",24,\"^1;\",[\"^15\",[[\"~$m\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3106,\"^12\",3106,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$m\"]]]]]],\"~$missing-rename?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1910,\"^11\",7,\"^12\",1910,\"^13\",22,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$sym\",\"^1C\"]]]]]],\"^B\",\"~$cljs.analyzer/missing-rename?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^1;\",[\"^15\",[[\"^1L\",\"^1C\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1910,\"^12\",1910,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1L\",\"^1C\"]]]]]],\"~$analyze-let\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1715,\"^11\",7,\"^12\",1715,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$encl-env\",[\"~$_\",\"~$bindings\",\"~$&\",\"~$exprs\",\"~:as\",\"~$form\"],\"~$is-loop\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-let\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1;\",[\"^15\",[[\"^1O\",\"~$p__12134\",\"^1T\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1715,\"^12\",1715,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1O\",[\"~$_\",\"^1P\",\"~$&\",\"^1Q\",\"^1R\",\"^1S\"],\"^1T\"]]]]]],\"~$desugar-ns-specs\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2255,\"^11\",7,\"^12\",2255,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$args\"]]]]],\"~:doc\",\"Given an original set of ns specs desugar :include-macros and :refer-macros\\n   usage into only primitive spec forms - :use, :require, :use-macros,\\n   :require-macros. If a library includes a macro file of with the same name\\n   as the namespace will also be desugared.\"],\"^B\",\"~$cljs.analyzer/desugar-ns-specs\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1;\",[\"^15\",[[\"^1X\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2255,\"^12\",2255,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1X\"]]]]],\"^1Y\",\"Given an original set of ns specs desugar :include-macros and :refer-macros\\n   usage into only primitive spec forms - :use, :require, :use-macros,\\n   :require-macros. If a library includes a macro file of with the same name\\n   as the namespace will also be desugared.\"],\"~$js-tag?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",764,\"^11\",7,\"^12\",764,\"^13\",14,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^B\",\"~$cljs.analyzer/js-tag?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",14,\"^1;\",[\"^15\",[[\"~$x\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",764,\"^12\",764,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$classify-dot-form\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2568,\"^11\",8,\"^12\",2568,\"^13\",25,\"~:private\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[[\"~$target\",\"~$member\",\"^1X\"]]]]]]],\"^22\",true,\"^B\",\"~$cljs.analyzer/classify-dot-form\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1;\",[\"^15\",[[\"~$p__12651\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2568,\"^12\",2568,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[[\"^23\",\"^24\",\"^1X\"]]]]]]],\"~$NUMBER_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/NUMBER_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",191,\"^11\",4,\"^12\",191,\"^13\",19,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",191,\"^11\",9,\"^12\",191,\"^13\",19],\"^17\",\"~$cljs.core/Symbol\"],\"~$analyze-map\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3062,\"^11\",7,\"^12\",3062,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-map\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3062,\"^12\",3062,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"~$NUMERIC_SET\",[\"^ \",\"^B\",\"~$cljs.analyzer/NUMERIC_SET\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",2724,\"^11\",1,\"^12\",2724,\"^13\",17,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2724,\"^11\",6,\"^12\",2724,\"^13\",17],\"^17\",\"~$cljs.core/ISet\"],\"~$analyze-seq*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3028,\"^11\",7,\"^12\",3028,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$op\",\"^P\",\"^1S\",\"~$name\",\"~$opts\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-seq*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^2@\",\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3028,\"^12\",3028,\"^1?\",5,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2@\",\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]]]],\"~$constants-ns-sym\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",59,\"^11\",6,\"^12\",59,\"^13\",22],\"^B\",\"~$cljs.analyzer/constants-ns-sym\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^11\",1,\"^10\",59,\"^12\",59,\"^17\",\"^29\",\"^1Y\",\"The namespace of the constants table as a symbol.\"],\"~$*cljs-dep-set*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",50,\"^11\",16,\"^12\",50,\"^13\",30,\"~:dynamic\",true],\"^B\",\"~$cljs.analyzer/*cljs-dep-set*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",30,\"^11\",1,\"^2G\",true,\"^10\",50,\"^12\",50,\"^17\",\"~$any\"],\"~$resolve-var\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",839,\"^11\",7,\"^12\",839,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"],[\"^P\",\"^1L\",\"~$confirm\"]]]]],\"^1Y\",\"Resolve a var. Accepts a side-effecting confirm fn for producing\\n   warnings about unresolved vars.\",\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"],[\"^P\",\"^1L\",\"^2K\"]]],\"^14\",[\"^15\",[[\"^P\",\"^1L\"],[\"^P\",\"^1L\",\"^2K\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/resolve-var\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"],[\"^P\",\"^1L\",\"^2K\"]]],\"^14\",[\"^15\",[[\"^P\",\"^1L\"],[\"^P\",\"^1L\",\"^2K\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^P\",\"^1L\"],[\"^P\",\"^1L\",\"^2K\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",839,\"^12\",839,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[[\"^P\",\"^1L\"],[\"^P\",\"^1L\",\"^2K\"]]],\"^1Y\",\"Resolve a var. Accepts a side-effecting confirm fn for producing\\n   warnings about unresolved vars.\"],\"~$analyze-fn-method\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1453,\"^11\",8,\"^12\",1453,\"^13\",25,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$locals\",\"^1S\",\"~$type\"]]]]]],\"^22\",true,\"^B\",\"~$cljs.analyzer/analyze-fn-method\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1;\",[\"^15\",[[\"^P\",\"^2N\",\"^1S\",\"^2O\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1453,\"^12\",1453,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^2N\",\"^1S\",\"^2O\"]]]]]],\"~$JS_STAR_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/JS_STAR_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",199,\"^11\",4,\"^12\",199,\"^13\",20,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",199,\"^11\",9,\"^12\",199,\"^13\",20],\"^17\",\"^29\"],\"~$js-star-seg\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2714,\"^11\",7,\"^12\",2714,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\"]]]]]],\"^B\",\"~$cljs.analyzer/js-star-seg\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1;\",[\"^15\",[[\"~$s\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2714,\"^12\",2714,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\"]]]]]],\"~$*passes*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3173,\"^11\",16,\"^12\",3173,\"^13\",24,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*passes*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",24,\"^11\",1,\"^2G\",true,\"^10\",3173,\"^12\",3173,\"^17\",\"~$clj-nil\"],\"~$has-extern?*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",787,\"^11\",7,\"^12\",787,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$pre\",\"~$externs\"],[\"^2Y\",\"^2Z\",\"~$top\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^2Y\",\"^2Z\"],[\"^2Y\",\"^2Z\",\"^2[\"]]],\"^14\",[\"^15\",[[\"^2Y\",\"^2Z\"],[\"^2Y\",\"^2Z\",\"^2[\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/has-extern?*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^2Y\",\"^2Z\"],[\"^2Y\",\"^2Z\",\"^2[\"]]],\"^14\",[\"^15\",[[\"^2Y\",\"^2Z\"],[\"^2Y\",\"^2Z\",\"^2[\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^2Y\",\"^2Z\"],[\"^2Y\",\"^2Z\",\"^2[\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",787,\"^12\",787,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[[\"^2Y\",\"^2Z\"],[\"^2Y\",\"^2Z\",\"^2[\"]]]],\"~$get-expander-ns\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2907,\"^11\",7,\"^12\",2907,\"^13\",22,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$nstr\"]]]]]],\"^B\",\"~$cljs.analyzer/get-expander-ns\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^1;\",[\"^15\",[[\"^P\",\"^32\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2907,\"^12\",2907,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^32\"]]]]]],\"~$message\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",630,\"^11\",7,\"^12\",630,\"^13\",14,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$s\"]]]]]],\"^B\",\"~$cljs.analyzer/message\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",14,\"^1;\",[\"^15\",[[\"^P\",\"~$s\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",630,\"^12\",630,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$s\"]]]]]],\"~$parse-invoke\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2852,\"^11\",7,\"^12\",2852,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/parse-invoke\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2852,\"^12\",2852,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"~$*cljs-warning-handlers*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",439,\"^11\",16,\"^12\",439,\"^13\",39,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*cljs-warning-handlers*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",39,\"^11\",1,\"^2G\",true,\"^10\",439,\"^12\",439,\"^17\",\"~$cljs.core/IVector\"],\"~$analyze-seq*-wrap\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3033,\"^11\",7,\"^12\",3033,\"^13\",24,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2@\",\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-seq*-wrap\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",24,\"^1;\",[\"^15\",[[\"^2@\",\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3033,\"^12\",3033,\"^1?\",5,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2@\",\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]]]],\"~$confirm-bindings\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",952,\"^11\",7,\"^12\",952,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$names\"]]]]],\"^1Y\",\"Given env, an analysis environment env, and names, a list of symbols, confirm\\n   that all correspond to declared dynamic vars.\"],\"^B\",\"~$cljs.analyzer/confirm-bindings\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1;\",[\"^15\",[[\"^P\",\"^3>\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",952,\"^12\",952,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^3>\"]]]]],\"^1Y\",\"Given env, an analysis environment env, and names, a list of symbols, confirm\\n   that all correspond to declared dynamic vars.\"],\"~$has-extern?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",813,\"^11\",7,\"^12\",813,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^2Z\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^2Z\"]]],\"^14\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^2Z\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/has-extern?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^2Z\"]]],\"^14\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^2Z\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^2Z\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",813,\"^12\",813,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^2Z\"]]]],\"~$foreign-dep?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1865,\"^11\",7,\"^12\",1865,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$dep\"]]]]],\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/foreign-dep?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^3C\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1865,\"^1>\",\"^18\",\"^12\",1865,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^3C\"]]]]]],\"~$missing-rename-macro?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1919,\"^11\",7,\"^12\",1919,\"^13\",28,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1L\"]]]]]],\"^B\",\"~$cljs.analyzer/missing-rename-macro?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",28,\"^1;\",[\"^15\",[[\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1919,\"^12\",1919,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1L\"]]]]]],\"~$missing-uses\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1926,\"^11\",7,\"^12\",1926,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$uses\",\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/missing-uses\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^3H\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1926,\"^12\",1926,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^3H\",\"^P\"]]]]]],\"~$get-macroexpand-check-var\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2958,\"^11\",12,\"^12\",2958,\"^13\",37,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"^B\",\"~$cljs.analyzer/get-macroexpand-check-var\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",37,\"^1;\",[\"^15\",[[]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",6,\"^10\",2958,\"^12\",2958,\"^1?\",0,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"~$missing-use?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1904,\"^11\",7,\"^12\",1904,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$lib\",\"^1L\",\"^1C\"]]]]]],\"^B\",\"~$cljs.analyzer/missing-use?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^3M\",\"^1L\",\"^1C\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1904,\"^12\",1904,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^3M\",\"^1L\",\"^1C\"]]]]]],\"~$hex-format\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",453,\"^11\",8,\"^12\",453,\"^13\",18,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\",\"~$pad\"]]]]]],\"^22\",true,\"^B\",\"~$cljs.analyzer/hex-format\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1;\",[\"^15\",[[\"~$s\",\"^3P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",453,\"^12\",453,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\",\"^3P\"]]]]]],\"~$NEW_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/NEW_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",205,\"^11\",4,\"^12\",205,\"^13\",16,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",205,\"^11\",9,\"^12\",205,\"^13\",16],\"^17\",\"^29\"],\"~$analyze\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3230,\"^11\",7,\"^12\",3230,\"^13\",14,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"],[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]]],\"^1Y\",\"Given an environment, a map containing {:locals (mapping of names to bindings), :context\\n  (one of :statement, :expr, :return), :ns (a symbol naming the\\n  compilation ns)}, and form, returns an expression object (a map\\n  containing at least :form, :op and :env keys). If expr has any (immediately)\\n  nested exprs, must have :children [exprs...] entry. This will\\n  facilitate code walking without knowing the details of the op set.\",\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"],[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^14\",[\"^15\",[[\"^P\",\"^1S\"],[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1=\",[\"^15\",[null,null,null]]]],\"^B\",\"~$cljs.analyzer/analyze\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",14,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"],[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^14\",[\"^15\",[[\"^P\",\"^1S\"],[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1=\",[\"^15\",[null,null,null]]],\"^1;\",[\"^15\",[[\"^P\",\"^1S\"],[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null,null]],\"^11\",1,\"^10\",3230,\"^12\",3230,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[[\"^P\",\"^1S\"],[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1Y\",\"Given an environment, a map containing {:locals (mapping of names to bindings), :context\\n  (one of :statement, :expr, :return), :ns (a symbol naming the\\n  compilation ns)}, and form, returns an expression object (a map\\n  containing at least :form, :op and :env keys). If expr has any (immediately)\\n  nested exprs, must have :children [exprs...] entry. This will\\n  facilitate code walking without knowing the details of the op set.\"],\"~$used?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2901,\"^11\",7,\"^12\",2901,\"^13\",12,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/used?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",12,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2901,\"^1>\",\"^18\",\"^12\",2901,\"^1?\",2,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]]],\"~$parse-type\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2523,\"^11\",7,\"^12\",2523,\"^13\",17,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2@\",\"^P\",[\"~$_\",\"~$tsym\",\"~$fields\",\"~$pmasks\",\"~$body\",\"^1R\",\"^1S\"]]]]]]],\"^B\",\"~$cljs.analyzer/parse-type\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",17,\"^1;\",[\"^15\",[[\"^2@\",\"^P\",\"~$p__12639\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2523,\"^12\",2523,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2@\",\"^P\",[\"~$_\",\"^3Y\",\"^3Z\",\"^3[\",\"^40\",\"^1R\",\"^1S\"]]]]]]],\"~$gets\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",167,\"^11\",7,\"^12\",167,\"^13\",11,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$m\",\"~$k0\",\"~$k1\"],[\"~$m\",\"^44\",\"^45\",\"~$k2\"],[\"~$m\",\"^44\",\"^45\",\"^46\",\"~$k3\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",5,\"^1;\",[\"^15\",[[\"~$m\",\"^44\",\"^45\"],[\"~$m\",\"^44\",\"^45\",\"^46\"],[\"~$m\",\"^44\",\"^45\",\"^46\",\"^47\"]]],\"^14\",[\"^15\",[[\"~$m\",\"^44\",\"^45\"],[\"~$m\",\"^44\",\"^45\",\"^46\"],[\"~$m\",\"^44\",\"^45\",\"^46\",\"^47\"]]],\"^1=\",[\"^15\",[null,null,null]]]],\"^B\",\"~$cljs.analyzer/gets\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",11,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",5,\"^1;\",[\"^15\",[[\"~$m\",\"^44\",\"^45\"],[\"~$m\",\"^44\",\"^45\",\"^46\"],[\"~$m\",\"^44\",\"^45\",\"^46\",\"^47\"]]],\"^14\",[\"^15\",[[\"~$m\",\"^44\",\"^45\"],[\"~$m\",\"^44\",\"^45\",\"^46\"],[\"~$m\",\"^44\",\"^45\",\"^46\",\"^47\"]]],\"^1=\",[\"^15\",[null,null,null]]],\"^1;\",[\"^15\",[[\"~$m\",\"^44\",\"^45\"],[\"~$m\",\"^44\",\"^45\",\"^46\"],[\"~$m\",\"^44\",\"^45\",\"^46\",\"^47\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null,null]],\"^11\",1,\"^10\",167,\"^12\",167,\"^1?\",5,\"^1@\",true,\"^14\",[\"^15\",[[\"~$m\",\"^44\",\"^45\"],[\"~$m\",\"^44\",\"^45\",\"^46\"],[\"~$m\",\"^44\",\"^45\",\"^46\",\"^47\"]]]],\"~$check-rename-macros-inferring-missing\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1989,\"^11\",7,\"^12\",1989,\"^13\",44,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[[\"^ \",\"~:keys\",[\"^2A\",\"~$renames\"],\"^1R\",\"~$ast\"],\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/check-rename-macros-inferring-missing\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",44,\"^1;\",[\"^15\",[[\"~$p__12357\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1989,\"^12\",1989,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[[\"^ \",\"^4:\",[\"^2A\",\"^4;\"],\"^1R\",\"^4<\"],\"^P\"]]]]]],\"~$*allow-ns*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1005,\"^11\",16,\"^12\",1005,\"^13\",26,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*allow-ns*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",26,\"^11\",1,\"^2G\",true,\"^10\",1005,\"^12\",1005,\"^17\",\"^18\"],\"~$infer-invoke\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1095,\"^11\",7,\"^12\",1095,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$e\"]]]]]],\"^B\",\"~$cljs.analyzer/infer-invoke\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^P\",\"~$e\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1095,\"^12\",1095,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$e\"]]]]]],\"~$*cljs-static-fns*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",47,\"^11\",16,\"^12\",47,\"^13\",33,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*cljs-static-fns*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",33,\"^11\",1,\"^2G\",true,\"^10\",47,\"^12\",47,\"^17\",\"^18\"],\"~$macro-ns-name\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2317,\"^11\",7,\"^12\",2317,\"^13\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2A\"]]]]]],\"^B\",\"~$cljs.analyzer/macro-ns-name\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1;\",[\"^15\",[[\"^2A\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2317,\"^12\",2317,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2A\"]]]]]],\"~$*reload-macros*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",54,\"^11\",16,\"^12\",54,\"^13\",31,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*reload-macros*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",31,\"^11\",1,\"^2G\",true,\"^10\",54,\"^12\",54,\"^17\",\"^18\"],\"~$resolve-existing-var\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",944,\"^11\",7,\"^12\",944,\"^13\",27,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^1Y\",\"Given env, an analysis environment, and sym, a symbol, resolve an existing var.\\n   Emits a warning if no such var exists.\"],\"^B\",\"~$cljs.analyzer/resolve-existing-var\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",27,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",944,\"^12\",944,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^1Y\",\"Given env, an analysis environment, and sym, a symbol, resolve an existing var.\\n   Emits a warning if no such var exists.\"],\"~$NOT_NATIVE\",[\"^ \",\"^B\",\"~$cljs.analyzer/NOT_NATIVE\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",1059,\"^11\",1,\"^12\",1059,\"^13\",16,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1059,\"^11\",6,\"^12\",1059,\"^13\",16],\"^17\",\"^2>\"],\"~$IGNORE_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/IGNORE_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",213,\"^11\",1,\"^12\",213,\"^13\",16,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",213,\"^11\",6,\"^12\",213,\"^13\",16],\"^17\",\"^29\"],\"~$parse-invoke*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2809,\"^11\",7,\"^12\",2809,\"^13\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",[\"~$f\",\"~$&\",\"^1X\",\"^1R\",\"^1S\"]]]]]]],\"^B\",\"~$cljs.analyzer/parse-invoke*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1;\",[\"^15\",[[\"^P\",\"~$p__12728\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2809,\"^12\",2809,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",[\"~$f\",\"~$&\",\"^1X\",\"^1R\",\"^1S\"]]]]]]],\"~$loaded-js-ns?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",680,\"^11\",7,\"^12\",680,\"^13\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$prefix\"]]]]],\"^1Y\",\"Check if a JavaScript namespace has been loaded. JavaScript vars are\\n  not currently checked.\",\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/loaded-js-ns?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1;\",[\"^15\",[[\"^P\",\"^4S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",680,\"^1>\",\"^18\",\"^12\",680,\"^1?\",2,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4S\"]]]]],\"^1Y\",\"Check if a JavaScript namespace has been loaded. JavaScript vars are\\n  not currently checked.\"],\"~$analyze-vector\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3078,\"^11\",7,\"^12\",3078,\"^13\",21,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-vector\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",21,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3078,\"^12\",3078,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"~$namespaces\",[\"^ \",\"^B\",\"~$cljs.analyzer/namespaces\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",510,\"^11\",1,\"^12\",510,\"^13\",16,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",510,\"^11\",6,\"^12\",510,\"^13\",16],\"^17\",\"~$cljs.analyzer/t_cljs$analyzer11721\"],\"~$ns->relpath\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",238,\"^11\",10,\"^12\",238,\"^13\",21,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$ns\"],[\"^4[\",\"~$ext\"]]]]],\"^1Y\",\"Given a namespace as a symbol return the relative path. May optionally\\n     provide the file extension, defaults to :cljs.\",\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^50\"]]],\"^14\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^50\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/ns->relpath\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",21,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^50\"]]],\"^14\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^50\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^50\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",4,\"^10\",238,\"^12\",238,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^50\"]]],\"^1Y\",\"Given a namespace as a symbol return the relative path. May optionally\\n     provide the file extension, defaults to :cljs.\"],\"~$analyze-let-body\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1710,\"^11\",7,\"^12\",1710,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$context\",\"^1Q\",\"~$recur-frames\",\"~$loop-lets\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-let-body\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1;\",[\"^15\",[[\"^P\",\"^53\",\"^1Q\",\"^54\",\"^55\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1710,\"^12\",1710,\"^1?\",5,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^53\",\"^1Q\",\"^54\",\"^55\"]]]]]],\"~$cljs-set?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",230,\"^11\",19,\"^12\",230,\"^13\",28,\"^17\",\"^18\",\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^B\",\"~$cljs.analyzer/cljs-set?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",28,\"^1;\",[\"^15\",[[\"~$x\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",4,\"^10\",230,\"^1>\",\"^18\",\"^12\",230,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$get-col\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",548,\"^11\",7,\"^12\",548,\"^13\",14,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\",\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/get-col\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",14,\"^1;\",[\"^15\",[[\"~$x\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",548,\"^12\",548,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\",\"^P\"]]]]]],\"~$basic-validate-ns-spec\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2011,\"^11\",7,\"^12\",2011,\"^13\",29,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$macros?\",\"~$spec\"]]]]]],\"^B\",\"~$cljs.analyzer/basic-validate-ns-spec\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",29,\"^1;\",[\"^15\",[[\"^P\",\"^5<\",\"^5=\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2011,\"^12\",2011,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^5<\",\"^5=\"]]]]]],\"~$*cljs-warnings*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",115,\"^11\",16,\"^12\",115,\"^13\",31,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*cljs-warnings*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",31,\"^11\",1,\"^2G\",true,\"^10\",115,\"^12\",115,\"^17\",\"~$cljs.core/IMap\"],\"~$alias->type\",[\"^ \",\"^B\",\"~$cljs.analyzer/alias->type\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",778,\"^11\",1,\"^12\",778,\"^13\",17,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",778,\"^11\",6,\"^12\",778,\"^13\",17],\"^17\",\"^5A\"],\"~$analyzed?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2794,\"^11\",8,\"^12\",2794,\"^13\",17,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\"]]]]],\"^17\",\"^18\"],\"^22\",true,\"^B\",\"~$cljs.analyzer/analyzed?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",17,\"^1;\",[\"^15\",[[\"~$f\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2794,\"^1>\",\"^18\",\"^12\",2794,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\"]]]]]],\"~$analyze-deps\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1874,\"^11\",7,\"^12\",1874,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^3M\",\"~$deps\",\"^P\"],[\"^3M\",\"^5G\",\"^P\",\"^2B\"]]]]],\"^1Y\",\"Given a lib, a namespace, deps, its dependencies, env, an analysis environment\\n   and opts, compiler options - analyze all of the dependencies. Required to\\n   correctly analyze usage of other namespaces.\",\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^3M\",\"^5G\",\"^P\"],[\"^3M\",\"^5G\",\"^P\",\"^2B\"]]],\"^14\",[\"^15\",[[\"^3M\",\"^5G\",\"^P\"],[\"^3M\",\"^5G\",\"^P\",\"^2B\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/analyze-deps\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^3M\",\"^5G\",\"^P\"],[\"^3M\",\"^5G\",\"^P\",\"^2B\"]]],\"^14\",[\"^15\",[[\"^3M\",\"^5G\",\"^P\"],[\"^3M\",\"^5G\",\"^P\",\"^2B\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^3M\",\"^5G\",\"^P\"],[\"^3M\",\"^5G\",\"^P\",\"^2B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1874,\"^12\",1874,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[[\"^3M\",\"^5G\",\"^P\"],[\"^3M\",\"^5G\",\"^P\",\"^2B\"]]],\"^1Y\",\"Given a lib, a namespace, deps, its dependencies, env, an analysis environment\\n   and opts, compiler options - analyze all of the dependencies. Required to\\n   correctly analyze usage of other namespaces.\"],\"~$*cljs-macros-is-classpath*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",49,\"^11\",16,\"^12\",49,\"^13\",42,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*cljs-macros-is-classpath*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",42,\"^11\",1,\"^2G\",true,\"^10\",49,\"^12\",49,\"^17\",\"^18\"],\"~$*allow-redef*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1004,\"^11\",16,\"^12\",1004,\"^13\",29,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*allow-redef*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",29,\"^11\",1,\"^2G\",true,\"^10\",1004,\"^12\",1004,\"^17\",\"^18\"],\"~$analyze-fn-method-body\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1449,\"^11\",7,\"^12\",1449,\"^13\",29,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\",\"^54\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-fn-method-body\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",29,\"^1;\",[\"^15\",[[\"^P\",\"^1S\",\"^54\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1449,\"^12\",1449,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\",\"^54\"]]]]]],\"~$infer-type\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3120,\"^11\",7,\"^12\",3120,\"^13\",17,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4<\",\"~$_\"]]]]]],\"^B\",\"~$cljs.analyzer/infer-type\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",17,\"^1;\",[\"^15\",[[\"^P\",\"^4<\",\"~$_\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3120,\"^12\",3120,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4<\",\"~$_\"]]]]]],\"~$parse-import-spec\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2167,\"^11\",7,\"^12\",2167,\"^13\",24,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^5G\",\"^5=\"]]]]]],\"^B\",\"~$cljs.analyzer/parse-import-spec\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",24,\"^1;\",[\"^15\",[[\"^P\",\"^5G\",\"^5=\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2167,\"^12\",2167,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^5G\",\"^5=\"]]]]]],\"~$clj-ns->cljs-ns\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2199,\"^11\",7,\"^12\",2199,\"^13\",22,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1L\"]]]]],\"^1Y\",\"Given a symbol that starts with clojure as the first segment return the\\n   same symbol with the first segment replaced with cljs\"],\"^B\",\"~$cljs.analyzer/clj-ns->cljs-ns\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^1;\",[\"^15\",[[\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2199,\"^12\",2199,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1L\"]]]]],\"^1Y\",\"Given a symbol that starts with clojure as the first segment return the\\n   same symbol with the first segment replaced with cljs\"],\"~$use->require\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2081,\"^11\",7,\"^12\",2081,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",[\"^3M\",\"~$&\",\"~$filters\",\"^1R\",\"^5=\"]]]]]]],\"^B\",\"~$cljs.analyzer/use->require\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^P\",\"~$p__12400\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2081,\"^12\",2081,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",[\"^3M\",\"~$&\",\"^5V\",\"^1R\",\"^5=\"]]]]]]],\"~$inferred-use-macros\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1942,\"^11\",7,\"^12\",1942,\"^13\",26,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$use-macros\",\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/inferred-use-macros\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",26,\"^1;\",[\"^15\",[[\"^5Z\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1942,\"^12\",1942,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^5Z\",\"^P\"]]]]]],\"~$analyze-symbol\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2856,\"^11\",7,\"^12\",2856,\"^13\",21,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^1Y\",\"Finds the var associated with sym\"],\"^B\",\"~$cljs.analyzer/analyze-symbol\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",21,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2856,\"^12\",2856,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^1Y\",\"Finds the var associated with sym\"],\"~$confirm-var-exists\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",698,\"^11\",7,\"^12\",698,\"^13\",25,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4S\",\"~$suffix\"],[\"^P\",\"^4S\",\"^63\",\"~$missing-fn\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"],[\"^P\",\"^4S\",\"^63\",\"^64\"]]],\"^14\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"],[\"^P\",\"^4S\",\"^63\",\"^64\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/confirm-var-exists\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"],[\"^P\",\"^4S\",\"^63\",\"^64\"]]],\"^14\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"],[\"^P\",\"^4S\",\"^63\",\"^64\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"],[\"^P\",\"^4S\",\"^63\",\"^64\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",698,\"^12\",698,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"],[\"^P\",\"^4S\",\"^63\",\"^64\"]]]],\"~$analyze-keyword\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1020,\"^11\",7,\"^12\",1020,\"^13\",22,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-keyword\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1020,\"^12\",1020,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]]],\"~$SENTINEL\",[\"^ \",\"^B\",\"~$cljs.analyzer/SENTINEL\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",165,\"^11\",10,\"^12\",165,\"^13\",23,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",165,\"^11\",15,\"^12\",165,\"^13\",23],\"^17\",\"~$object\"],\"~$analyze-let-bindings\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1704,\"^11\",7,\"^12\",1704,\"^13\",27,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1O\",\"^1P\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-let-bindings\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",27,\"^1;\",[\"^15\",[[\"^1O\",\"^1P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1704,\"^12\",1704,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1O\",\"^1P\"]]]]]],\"~$*loop-lets*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1003,\"^11\",16,\"^12\",1003,\"^13\",27,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*loop-lets*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",27,\"^11\",1,\"^2G\",true,\"^10\",1003,\"^12\",1003,\"^17\",\"~$cljs.core/IList\"],\"~$js-tag\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",824,\"^11\",7,\"^12\",824,\"^13\",13,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"~$tag-type\"],[\"^2Y\",\"^6A\",\"^2Z\"],[\"^2Y\",\"^6A\",\"^2Z\",\"^2[\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^6A\"],[\"^2Y\",\"^6A\",\"^2Z\"],[\"^2Y\",\"^6A\",\"^2Z\",\"^2[\"]]],\"^14\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^6A\"],[\"^2Y\",\"^6A\",\"^2Z\"],[\"^2Y\",\"^6A\",\"^2Z\",\"^2[\"]]],\"^1=\",[\"^15\",[null,null,null,null]]]],\"^B\",\"~$cljs.analyzer/js-tag\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",13,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^6A\"],[\"^2Y\",\"^6A\",\"^2Z\"],[\"^2Y\",\"^6A\",\"^2Z\",\"^2[\"]]],\"^14\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^6A\"],[\"^2Y\",\"^6A\",\"^2Z\"],[\"^2Y\",\"^6A\",\"^2Z\",\"^2[\"]]],\"^1=\",[\"^15\",[null,null,null,null]]],\"^1;\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^6A\"],[\"^2Y\",\"^6A\",\"^2Z\"],[\"^2Y\",\"^6A\",\"^2Z\",\"^2[\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null,null,null]],\"^11\",1,\"^10\",824,\"^12\",824,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[[\"^2Y\"],[\"^2Y\",\"^6A\"],[\"^2Y\",\"^6A\",\"^2Z\"],[\"^2Y\",\"^6A\",\"^2Z\",\"^2[\"]]]],\"^?\",[\"^ \",\"^B\",\"~$cljs.analyzer/js-reserved\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",149,\"^11\",1,\"^12\",149,\"^13\",17,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",149,\"^11\",6,\"^12\",149,\"^13\",17],\"^17\",\"^2>\"],\"~$*load-tests*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",52,\"^11\",16,\"^12\",52,\"^13\",28,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*load-tests*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",28,\"^11\",1,\"^2G\",true,\"^10\",52,\"^12\",52,\"^17\",\"^18\"],\"~$check-use-macros-inferring-missing\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1971,\"^11\",7,\"^12\",1971,\"^13\",41,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[[\"^ \",\"^4:\",[\"^2A\",\"^3H\",\"^5Z\"],\"^1R\",\"^4<\"],\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/check-use-macros-inferring-missing\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",41,\"^1;\",[\"^15\",[[\"~$p__12349\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1971,\"^12\",1971,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[[\"^ \",\"^4:\",[\"^2A\",\"^3H\",\"^5Z\"],\"^1R\",\"^4<\"],\"^P\"]]]]]],\"~$macroexpand-1*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2962,\"^11\",7,\"^12\",2962,\"^13\",21,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/macroexpand-1*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",21,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2962,\"^12\",2962,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"~$check-use-macros\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1958,\"^11\",7,\"^12\",1958,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^5Z\",\"^P\"],[\"^5Z\",\"^3G\",\"^P\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^5Z\",\"^P\"],[\"^5Z\",\"^3G\",\"^P\"]]],\"^14\",[\"^15\",[[\"^5Z\",\"^P\"],[\"^5Z\",\"^3G\",\"^P\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/check-use-macros\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^5Z\",\"^P\"],[\"^5Z\",\"^3G\",\"^P\"]]],\"^14\",[\"^15\",[[\"^5Z\",\"^P\"],[\"^5Z\",\"^3G\",\"^P\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^5Z\",\"^P\"],[\"^5Z\",\"^3G\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1958,\"^12\",1958,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[[\"^5Z\",\"^P\"],[\"^5Z\",\"^3G\",\"^P\"]]]],\"~$get-expander\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2946,\"^11\",7,\"^12\",2946,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1L\",\"^P\"]]]]],\"^1Y\",\"Given a sym, a symbol identifying a macro, and env, an analysis environment\\n   return the corresponding Clojure macroexpander.\"],\"^B\",\"~$cljs.analyzer/get-expander\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^1L\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2946,\"^12\",2946,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1L\",\"^P\"]]]]],\"^1Y\",\"Given a sym, a symbol identifying a macro, and env, an analysis environment\\n   return the corresponding Clojure macroexpander.\"],\"~$analyze-js-star\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2772,\"^11\",7,\"^12\",2772,\"^13\",22,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$jsform\",\"^1X\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-js-star\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^1;\",[\"^15\",[[\"^P\",\"^6P\",\"^1X\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2772,\"^12\",2772,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^6P\",\"^1X\",\"^1S\"]]]]]],\"~$cljs-map?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",222,\"^11\",19,\"^12\",222,\"^13\",28,\"^17\",\"^18\",\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^B\",\"~$cljs.analyzer/cljs-map?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",28,\"^1;\",[\"^15\",[[\"~$x\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",4,\"^10\",222,\"^1>\",\"^18\",\"^12\",222,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$t_cljs$analyzer11721\",[\"^ \",\"~:num-fields\",1,\"~:protocols\",[\"^>\",[\"~$cljs.core/IMeta\",\"~$cljs.core/IDeref\",\"~$cljs.core/IWithMeta\"]],\"^B\",\"^4Y\",\"^[\",\"out/cljs/analyzer.cljc\",\"~:type\",true,\"~:anonymous\",true,\"^11\",6,\"^10\",518,\"~:record\",false,\"~:skip-protocol-flag\",[\"^>\",[\"^6W\",\"^6X\",\"^6Y\"]]],\"~$build-dot-form\",[\"^ \",\"^B\",\"~$cljs.analyzer/build-dot-form\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",2579,\"^11\",1,\"^12\",2579,\"^13\",25,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2579,\"^11\",11,\"^12\",2579,\"^13\",25],\"^17\",\"^1H\"],\"~$register-constant!\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",482,\"^11\",8,\"^12\",482,\"^13\",26,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$val\"],[\"^P\",\"^75\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^75\"],[\"^P\",\"^75\"]]],\"^14\",[\"^15\",[[\"^75\"],[\"^P\",\"^75\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^22\",true,\"^B\",\"~$cljs.analyzer/register-constant!\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",26,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^75\"],[\"^P\",\"^75\"]]],\"^14\",[\"^15\",[[\"^75\"],[\"^P\",\"^75\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^75\"],[\"^P\",\"^75\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",482,\"^12\",482,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[[\"^75\"],[\"^P\",\"^75\"]]]],\"~$js-star-interp\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2702,\"^11\",7,\"^12\",2702,\"^13\",21,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$s\"]]]]]],\"^B\",\"~$cljs.analyzer/js-star-interp\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",21,\"^1;\",[\"^15\",[[\"^P\",\"~$s\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2702,\"^12\",2702,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$s\"]]]]]],\"~$*recur-frames*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1002,\"^11\",16,\"^12\",1002,\"^13\",30,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*recur-frames*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",30,\"^11\",1,\"^2G\",true,\"^10\",1002,\"^12\",1002,\"^17\",\"^2W\"],\"~$STRING_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/STRING_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",194,\"^11\",4,\"^12\",194,\"^13\",19,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",194,\"^11\",9,\"^12\",194,\"^13\",19],\"^17\",\"^29\"],\"~$analyze-fn-methods-pass2*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1499,\"^11\",7,\"^12\",1499,\"^13\",32,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$menv\",\"^2N\",\"^2O\",\"~$meths\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-fn-methods-pass2*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",32,\"^1;\",[\"^15\",[[\"^7>\",\"^2N\",\"^2O\",\"^7?\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1499,\"^12\",1499,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^7>\",\"^2N\",\"^2O\",\"^7?\"]]]]]],\"^@\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3020,\"^11\",7,\"^12\",3020,\"^13\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]],\"^1Y\",\"Given a env, an analysis environment, and form, a ClojureScript form,\\n   macroexpand the form once.\"],\"^B\",\"~$cljs.analyzer/macroexpand-1\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3020,\"^12\",3020,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]],\"^1Y\",\"Given a env, an analysis environment, and form, a ClojureScript form,\\n   macroexpand the form once.\"],\"~$resolve-macro-var\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",962,\"^11\",7,\"^12\",962,\"^13\",24,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^1Y\",\"Given env, an analysis environment, and sym, a symbol, resolve a macro.\"],\"^B\",\"~$cljs.analyzer/resolve-macro-var\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",24,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",962,\"^12\",962,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^1Y\",\"Given env, an analysis environment, and sym, a symbol, resolve a macro.\"],\"~$analyze-let-binding-init\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1652,\"^11\",7,\"^12\",1652,\"^13\",31,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$init\",\"^55\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-let-binding-init\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",31,\"^1;\",[\"^15\",[[\"^P\",\"^7E\",\"^55\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1652,\"^12\",1652,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^7E\",\"^55\"]]]]]],\"~$infer-tag\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1108,\"^11\",7,\"^12\",1108,\"^13\",16,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$e\"]]]]],\"^1Y\",\"Given env, an analysis environment, and e, an AST node, return the inferred\\n   type of the node\"],\"^B\",\"~$cljs.analyzer/infer-tag\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",16,\"^1;\",[\"^15\",[[\"^P\",\"~$e\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1108,\"^12\",1108,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$e\"]]]]],\"^1Y\",\"Given env, an analysis environment, and e, an AST node, return the inferred\\n   type of the node\"],\"~$canonicalize-import-specs\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2248,\"^11\",7,\"^12\",2248,\"^13\",32,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$specs\"]]]]]],\"^B\",\"~$cljs.analyzer/canonicalize-import-specs\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",32,\"^1;\",[\"^15\",[[\"^7J\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2248,\"^12\",2248,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^7J\"]]]]]],\"~$analyze-form-seq\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3507,\"^11\",7,\"^12\",3507,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$forms\"],[\"^7M\",\"^2B\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^7M\"],[\"^7M\",\"^2B\"]]],\"^14\",[\"^15\",[[\"^7M\"],[\"^7M\",\"^2B\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/analyze-form-seq\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^7M\"],[\"^7M\",\"^2B\"]]],\"^14\",[\"^15\",[[\"^7M\"],[\"^7M\",\"^2B\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^7M\"],[\"^7M\",\"^2B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3507,\"^12\",3507,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[[\"^7M\"],[\"^7M\",\"^2B\"]]]],\"~$analyze-let-body*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1707,\"^11\",7,\"^12\",1707,\"^13\",24,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^53\",\"^1Q\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-let-body*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",24,\"^1;\",[\"^15\",[[\"^P\",\"^53\",\"^1Q\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1707,\"^12\",1707,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^53\",\"^1Q\"]]]]]],\"~$analyze-js-star*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2748,\"^11\",7,\"^12\",2748,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^6P\",\"^1X\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-js-star*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1;\",[\"^15\",[[\"^P\",\"^6P\",\"^1X\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2748,\"^12\",2748,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^6P\",\"^1X\",\"^1S\"]]]]]],\"~$inferred-rename-macros\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1947,\"^11\",7,\"^12\",1947,\"^13\",29,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$rename-macros\",\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/inferred-rename-macros\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",29,\"^1;\",[\"^15\",[[\"^7T\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1947,\"^12\",1947,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^7T\",\"^P\"]]]]]],\"~$parse-ns-error-msg\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2008,\"^11\",7,\"^12\",2008,\"^13\",25,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^5=\",\"~$msg\"]]]]]],\"^B\",\"~$cljs.analyzer/parse-ns-error-msg\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1;\",[\"^15\",[[\"^5=\",\"^7W\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2008,\"^12\",2008,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^5=\",\"^7W\"]]]]]],\"~$missing-use-macro?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1915,\"^11\",7,\"^12\",1915,\"^13\",25,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^3M\",\"^1L\"]]]]]],\"^B\",\"~$cljs.analyzer/missing-use-macro?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1;\",[\"^15\",[[\"^3M\",\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1915,\"^12\",1915,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^3M\",\"^1L\"]]]]]],\"~$CLJ_NIL_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/CLJ_NIL_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",188,\"^11\",4,\"^12\",188,\"^13\",20,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",188,\"^11\",9,\"^12\",188,\"^13\",20],\"^17\",\"^29\"],\"~$resolve-symbol\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3256,\"^11\",7,\"^12\",3256,\"^13\",21,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\"]]]]]],\"^B\",\"~$cljs.analyzer/resolve-symbol\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",21,\"^1;\",[\"^15\",[[\"~$s\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3256,\"^12\",3256,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$s\"]]]]]],\"~$missing-renames\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1932,\"^11\",7,\"^12\",1932,\"^13\",22,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^4;\",\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/missing-renames\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^1;\",[\"^15\",[[\"^4;\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1932,\"^12\",1932,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^4;\",\"^P\"]]]]]],\"~$*cljs-macros-path*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",48,\"^11\",16,\"^12\",48,\"^13\",34,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*cljs-macros-path*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",34,\"^11\",1,\"^2G\",true,\"^10\",48,\"^12\",48,\"^17\",\"^Q\"],\"~$confirm-var-exist-warning\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",673,\"^11\",7,\"^12\",673,\"^13\",32,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"]]]]]],\"^B\",\"~$cljs.analyzer/confirm-var-exist-warning\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",32,\"^1;\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",673,\"^12\",673,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"]]]]]],\"~$repeat-char\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",447,\"^11\",8,\"^12\",447,\"^13\",19,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$c\",\"~$n\"]]]]]],\"^22\",true,\"^B\",\"~$cljs.analyzer/repeat-char\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"~$c\",\"~$n\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",447,\"^12\",447,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$c\",\"~$n\"]]]]]],\"~$analyze-dot\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2630,\"^11\",7,\"^12\",2630,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^23\",\"~$field\",\"~$member+\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-dot\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1;\",[\"^15\",[[\"^P\",\"^23\",\"^8<\",\"^8=\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2630,\"^12\",2630,\"^1?\",5,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^23\",\"^8<\",\"^8=\",\"^1S\"]]]]]],\"~$analyze-do-statements\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1626,\"^11\",7,\"^12\",1626,\"^13\",28,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1Q\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-do-statements\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",28,\"^1;\",[\"^15\",[[\"^P\",\"^1Q\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1626,\"^12\",1626,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1Q\"]]]]]],\"~$get-line\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",545,\"^11\",7,\"^12\",545,\"^13\",15,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\",\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/get-line\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",15,\"^1;\",[\"^15\",[[\"~$x\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",545,\"^12\",545,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\",\"^P\"]]]]]],\"~$analyze-do-statements*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1623,\"^11\",7,\"^12\",1623,\"^13\",29,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1Q\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-do-statements*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",29,\"^1;\",[\"^15\",[[\"^P\",\"^1Q\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1623,\"^12\",1623,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1Q\"]]]]]],\"~$analyze-seq\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3037,\"^11\",7,\"^12\",3037,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^14\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/analyze-seq\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^14\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3037,\"^12\",3037,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\"],[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]],\"~$all-values?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2799,\"^11\",8,\"^12\",2799,\"^13\",19,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1Q\"]]]]],\"^17\",\"^18\"],\"^22\",true,\"^B\",\"~$cljs.analyzer/all-values?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^1Q\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2799,\"^1>\",\"^18\",\"^12\",2799,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1Q\"]]]]]],\"~$find-def-clash\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2306,\"^11\",7,\"^12\",2306,\"^13\",21,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4[\",\"~$segments\"]]]]]],\"^B\",\"~$cljs.analyzer/find-def-clash\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",21,\"^1;\",[\"^15\",[[\"^P\",\"^4[\",\"^8J\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2306,\"^12\",2306,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4[\",\"^8J\"]]]]]],\"~$get-expander*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2922,\"^11\",7,\"^12\",2922,\"^13\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1L\",\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/get-expander*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1;\",[\"^15\",[[\"^1L\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2922,\"^12\",2922,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1L\",\"^P\"]]]]]],\"~$fn-name-var\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1482,\"^11\",7,\"^12\",1482,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^2N\",\"^2A\"]]]]]],\"^B\",\"~$cljs.analyzer/fn-name-var\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1;\",[\"^15\",[[\"^P\",\"^2N\",\"^2A\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1482,\"^12\",1482,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^2N\",\"^2A\"]]]]]],\"~$*load-macros*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",53,\"^11\",16,\"^12\",53,\"^13\",29,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*load-macros*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",29,\"^11\",1,\"^2G\",true,\"^10\",53,\"^12\",53,\"^17\",\"^18\"],\"~$excluded?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2895,\"^11\",7,\"^12\",2895,\"^13\",16,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/excluded?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",16,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2895,\"^1>\",\"^18\",\"^12\",2895,\"^1?\",2,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]]],\"~$empty-env\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",603,\"^11\",7,\"^12\",603,\"^13\",16,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]],\"^1Y\",\"Construct an empty analysis environment. Required to analyze forms.\"],\"^B\",\"~$cljs.analyzer/empty-env\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",16,\"^1;\",[\"^15\",[[]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",603,\"^12\",603,\"^1?\",0,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]],\"^1Y\",\"Construct an empty analysis environment. Required to analyze forms.\"],\"~$default-warning-handler\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",431,\"^11\",7,\"^12\",431,\"^13\",30,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$warning-type\",\"^P\",\"~$extra\"]]]]]],\"^B\",\"~$cljs.analyzer/default-warning-handler\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",30,\"^1;\",[\"^15\",[[\"^8W\",\"^P\",\"^8X\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",431,\"^12\",431,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^8W\",\"^P\",\"^8X\"]]]]]],\"~$resolve-ns-alias\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",724,\"^11\",7,\"^12\",724,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"~$default\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^14\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/resolve-ns-alias\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^14\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",724,\"^12\",724,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]]],\"~$intern-macros\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",551,\"^11\",7,\"^12\",551,\"^13\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^4[\"],[\"^4[\",\"~$reload\"]]]]],\"^1Y\",\"Given a Clojure namespace intern all macros into the ambient ClojureScript\\n   analysis environment.\",\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^92\"]]],\"^14\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^92\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/intern-macros\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^92\"]]],\"^14\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^92\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^92\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",551,\"^12\",551,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[[\"^4[\"],[\"^4[\",\"^92\"]]],\"^1Y\",\"Given a Clojure namespace intern all macros into the ambient ClojureScript\\n   analysis environment.\"],\"~$BOOLEAN_OR_SEQ\",[\"^ \",\"^B\",\"~$cljs.analyzer/BOOLEAN_OR_SEQ\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",1061,\"^11\",1,\"^12\",1061,\"^13\",20,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1061,\"^11\",6,\"^12\",1061,\"^13\",20],\"^17\",\"^2>\"],\"~$*macro-infer*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",55,\"^11\",16,\"^12\",55,\"^13\",29,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*macro-infer*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",29,\"^11\",1,\"^2G\",true,\"^10\",55,\"^12\",55,\"^17\",\"^18\"],\"~$DOT_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/DOT_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",202,\"^11\",4,\"^12\",202,\"^13\",16,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",202,\"^11\",9,\"^12\",202,\"^13\",16],\"^17\",\"^29\"],\"~$gen-constant-id\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",462,\"^11\",7,\"^12\",462,\"^13\",22,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$value\"]]]]]],\"^B\",\"~$cljs.analyzer/gen-constant-id\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^1;\",[\"^15\",[[\"^9;\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",462,\"^12\",462,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^9;\"]]]]]],\"~$BOOLEAN_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/BOOLEAN_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",196,\"^11\",1,\"^12\",196,\"^13\",17,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",196,\"^11\",6,\"^12\",196,\"^13\",17],\"^17\",\"^29\"],\"~$macro-autoload-ns?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2184,\"^11\",7,\"^12\",2184,\"^13\",25,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1S\"]]]]],\"^1Y\",\"Given a spec form check whether the spec namespace requires a macro file\\n   of the same name. If so return true.\",\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/macro-autoload-ns?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1;\",[\"^15\",[[\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2184,\"^1>\",\"^18\",\"^12\",2184,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1S\"]]]]],\"^1Y\",\"Given a spec form check whether the spec namespace requires a macro file\\n   of the same name. If so return true.\"],\"~$get-tag\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1025,\"^11\",7,\"^12\",1025,\"^13\",14,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$e\"]]]]]],\"^B\",\"~$cljs.analyzer/get-tag\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",14,\"^1;\",[\"^15\",[[\"~$e\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1025,\"^12\",1025,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$e\"]]]]]],\"~$implicit-nses\",[\"^ \",\"^B\",\"~$cljs.analyzer/implicit-nses\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",664,\"^11\",1,\"^12\",664,\"^13\",19,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",664,\"^11\",6,\"^12\",664,\"^13\",19],\"^17\",\"^2>\"],\"~$valid-proto\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1275,\"^11\",7,\"^12\",1275,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^B\",\"~$cljs.analyzer/valid-proto\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1;\",[\"^15\",[[\"~$x\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1275,\"^12\",1275,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$normalize-js-tag\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",769,\"^11\",7,\"^12\",769,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^B\",\"~$cljs.analyzer/normalize-js-tag\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1;\",[\"^15\",[[\"~$x\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",769,\"^12\",769,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$analyze-list\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3072,\"^11\",7,\"^12\",3072,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-list\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3072,\"^12\",3072,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"~$warning\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",637,\"^11\",7,\"^12\",637,\"^13\",14,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^8W\",\"^P\",\"^8X\"]]]]]],\"^B\",\"~$cljs.analyzer/warning\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",14,\"^1;\",[\"^15\",[[\"^8W\",\"^P\",\"^8X\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",637,\"^12\",637,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^8W\",\"^P\",\"^8X\"]]]]]],\"~$implicit-import?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",666,\"^11\",7,\"^12\",666,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"]]]]],\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/implicit-import?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1;\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",666,\"^1>\",\"^18\",\"^12\",666,\"^1?\",3,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^4S\",\"^63\"]]]]]],\"~$missing-use-macros\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1937,\"^11\",7,\"^12\",1937,\"^13\",25,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^5Z\",\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/missing-use-macros\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1;\",[\"^15\",[[\"^5Z\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1937,\"^12\",1937,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^5Z\",\"^P\"]]]]]],\"~$->t_cljs$analyzer11721\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^6[\",true,\"^6V\",[\"^>\",[\"^6W\",\"^6X\",\"^6Y\"]],\"^71\",[\"^>\",[\"^6W\",\"^6X\",\"^6Y\"]],\"~:factory\",\"~:positional\",\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$meta11722\"]]]]],\"^[\",null],\"^6V\",[\"^>\",[\"^6W\",\"^6X\",\"^6Y\"]],\"^B\",\"~$cljs.analyzer/->t_cljs$analyzer11721\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^1;\",[\"^15\",[[\"^9T\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^6[\",true,\"^11\",6,\"^9R\",\"^9S\",\"^10\",518,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^9T\"]]]]],\"^71\",[\"^>\",[\"^6W\",\"^6X\",\"^6Y\"]]],\"~$analyze*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3218,\"^11\",7,\"^12\",3218,\"^13\",15,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",15,\"^1;\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3218,\"^12\",3218,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]]]],\"~$-cljs-macros-loaded\",[\"^ \",\"^B\",\"~$cljs.analyzer/-cljs-macros-loaded\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",113,\"^11\",1,\"^12\",113,\"^13\",25,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",113,\"^11\",6,\"^12\",113,\"^13\",25],\"^17\",\"^2I\"],\"~$check-uses\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1950,\"^11\",7,\"^12\",1950,\"^13\",17,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^3H\",\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/check-uses\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",17,\"^1;\",[\"^15\",[[\"^3H\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1950,\"^12\",1950,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^3H\",\"^P\"]]]]]],\"~$find-matching-method\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1032,\"^11\",7,\"^12\",1032,\"^13\",27,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"~$params\"]]]]]],\"^B\",\"~$cljs.analyzer/find-matching-method\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",27,\"^1;\",[\"^15\",[[\"~$f\",\"^:1\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1032,\"^12\",1032,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$f\",\"^:1\"]]]]]],\"~$*cljs-file*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",45,\"^11\",16,\"^12\",45,\"^13\",27,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*cljs-file*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",27,\"^11\",1,\"^2G\",true,\"^10\",45,\"^12\",45,\"^17\",\"^2W\"],\"~$CLJS_CORE_MACROS_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/CLJS_CORE_MACROS_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",211,\"^11\",4,\"^12\",211,\"^13\",29,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",211,\"^11\",9,\"^12\",211,\"^13\",29],\"^17\",\"^29\"],\"~$*file-defs*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",57,\"^11\",16,\"^12\",57,\"^13\",27,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*file-defs*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",27,\"^11\",1,\"^2G\",true,\"^10\",57,\"^12\",57,\"^17\",\"^2W\"],\"~$infer-if\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1063,\"^11\",7,\"^12\",1063,\"^13\",15,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$e\"]]]]]],\"^B\",\"~$cljs.analyzer/infer-if\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",15,\"^1;\",[\"^15\",[[\"^P\",\"~$e\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1063,\"^12\",1063,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$e\"]]]]]],\"~$topo-sort\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",246,\"^11\",10,\"^12\",246,\"^13\",19,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\",\"~$get-deps\"],[\"~$x\",\"~$depth\",\"~$state\",\"~$memo-get-deps\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"~$x\",\"^:<\"],[\"~$x\",\"^:=\",\"^:>\",\"^:?\"]]],\"^14\",[\"^15\",[[\"~$x\",\"^:<\"],[\"~$x\",\"^:=\",\"^:>\",\"^:?\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/topo-sort\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",19,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",4,\"^1;\",[\"^15\",[[\"~$x\",\"^:<\"],[\"~$x\",\"^:=\",\"^:>\",\"^:?\"]]],\"^14\",[\"^15\",[[\"~$x\",\"^:<\"],[\"~$x\",\"^:=\",\"^:>\",\"^:?\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"~$x\",\"^:<\"],[\"~$x\",\"^:=\",\"^:>\",\"^:?\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",4,\"^10\",246,\"^12\",246,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[[\"~$x\",\"^:<\"],[\"~$x\",\"^:=\",\"^:>\",\"^:?\"]]]],\"~$*verbose*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",111,\"^11\",16,\"^12\",111,\"^13\",25,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*verbose*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^11\",1,\"^2G\",true,\"^10\",111,\"^12\",111,\"^17\",\"^18\"],\"~$analyze-js-value\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3090,\"^11\",7,\"^12\",3090,\"^13\",23,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-js-value\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",23,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3090,\"^12\",3090,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"~$source-info\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",617,\"^11\",7,\"^12\",617,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\"],[\"^2A\",\"^P\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^P\"],[\"^2A\",\"^P\"]]],\"^14\",[\"^15\",[[\"^P\"],[\"^2A\",\"^P\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/source-info\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",2,\"^1;\",[\"^15\",[[\"^P\"],[\"^2A\",\"^P\"]]],\"^14\",[\"^15\",[[\"^P\"],[\"^2A\",\"^P\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^P\"],[\"^2A\",\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",617,\"^12\",617,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[[\"^P\"],[\"^2A\",\"^P\"]]]],\"~$analyze-fn-method-param\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1423,\"^11\",7,\"^12\",1423,\"^13\",30,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-fn-method-param\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",30,\"^1;\",[\"^15\",[[\"^P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1423,\"^12\",1423,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\"]]]]]],\"~$repl-self-require?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3127,\"^11\",8,\"^12\",3127,\"^13\",26,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^5G\"]]]]]],\"^22\",true,\"^B\",\"~$cljs.analyzer/repl-self-require?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",26,\"^1;\",[\"^15\",[[\"^P\",\"^5G\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3127,\"^12\",3127,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^5G\"]]]]]],\"~$analyze-set\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3084,\"^11\",7,\"^12\",3084,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-set\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1;\",[\"^15\",[[\"^P\",\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3084,\"^12\",3084,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\"]]]]]],\"~$numeric-type?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2726,\"^11\",7,\"^12\",2726,\"^13\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$t\"]]]]],\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/numeric-type?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1;\",[\"^15\",[[\"~$t\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2726,\"^1>\",\"^18\",\"^12\",2726,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$t\"]]]]]],\"~$munge-path\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",234,\"^11\",10,\"^12\",234,\"^13\",20,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$ss\"]]]]]],\"^B\",\"~$cljs.analyzer/munge-path\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1;\",[\"^15\",[[\"^:P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",4,\"^10\",234,\"^12\",234,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^:P\"]]]]]],\"~$ast?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",261,\"^11\",7,\"^12\",261,\"^13\",11,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]],\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/ast?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",11,\"^1;\",[\"^15\",[[\"~$x\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",261,\"^1>\",\"^18\",\"^12\",261,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$parse-require-spec\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2115,\"^11\",7,\"^12\",2115,\"^13\",25,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^5<\",\"^5G\",\"~$aliases\",\"^5=\"]]]]]],\"^B\",\"~$cljs.analyzer/parse-require-spec\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1;\",[\"^15\",[[\"^P\",\"^5<\",\"^5G\",\"^:U\",\"^5=\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2115,\"^12\",2115,\"^1?\",5,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^5<\",\"^5G\",\"^:U\",\"^5=\"]]]]]],\"~$analyze-wrap-meta\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3109,\"^11\",7,\"^12\",3109,\"^13\",24,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$expr\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-wrap-meta\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",24,\"^1;\",[\"^15\",[[\"^:X\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",3109,\"^12\",3109,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^:X\"]]]]]],\"~$ANY_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/ANY_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",215,\"^11\",1,\"^12\",215,\"^13\",13,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",215,\"^11\",6,\"^12\",215,\"^13\",13],\"^17\",\"^29\"],\"~$property-symbol?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2566,\"^11\",16,\"^12\",2566,\"^13\",32,\"^22\",true],\"^22\",true,\"^B\",\"~$cljs.analyzer/property-symbol?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",32,\"^1;\",[\"^15\",[[\"~$p1__12650#\"]]],\"^1<\",null,\"^1=\",[\"^15\",[]],\"^11\",1,\"^10\",2566,\"^12\",2566,\"^1?\",1,\"^1@\",true,\"^14\",null],\"~$cljs-seq?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",218,\"^11\",19,\"^12\",218,\"^13\",28,\"^17\",\"^18\",\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^B\",\"~$cljs.analyzer/cljs-seq?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",28,\"^1;\",[\"^15\",[[\"~$x\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",4,\"^10\",218,\"^1>\",\"^18\",\"^12\",218,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$get-js-tag\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2695,\"^11\",7,\"^12\",2695,\"^13\",17,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1S\"]]]]]],\"^B\",\"~$cljs.analyzer/get-js-tag\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",17,\"^1;\",[\"^15\",[[\"^1S\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2695,\"^12\",2695,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1S\"]]]]]],\"~$parse\",[\"^ \",\"^B\",\"~$cljs.analyzer/parse\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",1135,\"^11\",1,\"^12\",1135,\"^13\",16,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1135,\"^11\",11,\"^12\",1135,\"^13\",16],\"^17\",\"^1H\"],\"~$*analyze-deps*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",51,\"^11\",16,\"^12\",51,\"^13\",30,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*analyze-deps*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",30,\"^11\",1,\"^2G\",true,\"^10\",51,\"^12\",51,\"^17\",\"^18\"],\"~$analyze-let-bindings*\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1663,\"^11\",7,\"^12\",1663,\"^13\",28,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1O\",\"^1P\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-let-bindings*\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",28,\"^1;\",[\"^15\",[[\"^1O\",\"^1P\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1663,\"^12\",1663,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^1O\",\"^1P\"]]]]]],\"~$analysis-error?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",649,\"^11\",7,\"^12\",649,\"^13\",22,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$ex\"]]]]],\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/analysis-error?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^1;\",[\"^15\",[[\"^;>\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",649,\"^1>\",\"^18\",\"^12\",649,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^;>\"]]]]]],\"~$valid-arity?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2804,\"^11\",8,\"^12\",2804,\"^13\",20,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$argc\",\"~$method-params\"]]]]],\"^17\",\"^18\"],\"^22\",true,\"^B\",\"~$cljs.analyzer/valid-arity?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",20,\"^1;\",[\"^15\",[[\"^;A\",\"^;B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2804,\"^1>\",\"^18\",\"^12\",2804,\"^1?\",2,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^;A\",\"^;B\"]]]]]],\"~$parse-ns-excludes\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2041,\"^11\",7,\"^12\",2041,\"^13\",24,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1X\"]]]]]],\"^B\",\"~$cljs.analyzer/parse-ns-excludes\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",24,\"^1;\",[\"^15\",[[\"^P\",\"^1X\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2041,\"^12\",2041,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1X\"]]]]]],\"~$analyze-fn-methods-pass2\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1502,\"^11\",7,\"^12\",1502,\"^13\",31,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^7>\",\"^2N\",\"^2O\",\"^7?\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-fn-methods-pass2\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",31,\"^1;\",[\"^15\",[[\"^7>\",\"^2N\",\"^2O\",\"^7?\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1502,\"^12\",1502,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^7>\",\"^2N\",\"^2O\",\"^7?\"]]]]]],\"~$core-name?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",753,\"^11\",7,\"^12\",753,\"^13\",17,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^1Y\",\"Is sym visible from core in the current compilation namespace?\",\"^17\",\"^18\"],\"^B\",\"~$cljs.analyzer/core-name?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",17,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",753,\"^1>\",\"^18\",\"^12\",753,\"^1?\",2,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]],\"^1Y\",\"Is sym visible from core in the current compilation namespace?\"],\"~$get-let-tag\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1656,\"^11\",7,\"^12\",1656,\"^13\",18,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2A\",\"~$init-expr\"]]]]]],\"^B\",\"~$cljs.analyzer/get-let-tag\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",18,\"^1;\",[\"^15\",[[\"^2A\",\"^;K\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1656,\"^12\",1656,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^2A\",\"^;K\"]]]]]],\"~$specials\",[\"^ \",\"^B\",\"~$cljs.analyzer/specials\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",999,\"^11\",1,\"^12\",999,\"^13\",14,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",999,\"^11\",6,\"^12\",999,\"^13\",14],\"^17\",\"^2>\"],\"~$resolve-macro-ns-alias\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",731,\"^11\",7,\"^12\",731,\"^13\",29,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^14\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/resolve-macro-ns-alias\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",29,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^14\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",731,\"^12\",731,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[[\"^P\",\"^2A\"],[\"^P\",\"^2A\",\"^8[\"]]]],\"~$confirm-ns\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",738,\"^11\",7,\"^12\",738,\"^13\",17,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"~$ns-sym\"]]]]],\"^1Y\",\"Given env, an analysis environment, and ns-sym, a symbol identifying a\\n   namespace, confirm that the namespace exists. Warn if not found.\"],\"^B\",\"~$cljs.analyzer/confirm-ns\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",17,\"^1;\",[\"^15\",[[\"^P\",\"^;R\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",738,\"^12\",738,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^;R\"]]]]],\"^1Y\",\"Given env, an analysis environment, and ns-sym, a symbol identifying a\\n   namespace, confirm that the namespace exists. Warn if not found.\"],\"~$default-namespaces\",[\"^ \",\"^B\",\"~$cljs.analyzer/default-namespaces\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",502,\"^11\",1,\"^12\",502,\"^13\",24,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",502,\"^11\",6,\"^12\",502,\"^13\",24],\"^17\",\"^5A\"],\"~$CLJS_CORE_SYM\",[\"^ \",\"^B\",\"~$cljs.analyzer/CLJS_CORE_SYM\",\"^[\",\"out/cljs/analyzer.cljc\",\"^10\",208,\"^11\",4,\"^12\",208,\"^13\",22,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",208,\"^11\",9,\"^12\",208,\"^13\",22],\"^17\",\"^29\"],\"~$canonicalize-specs\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2240,\"^11\",7,\"^12\",2240,\"^13\",25,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^7J\"]]]]]],\"^B\",\"~$cljs.analyzer/canonicalize-specs\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1;\",[\"^15\",[[\"^7J\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2240,\"^12\",2240,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^7J\"]]]]]],\"~$build-method-call\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",2593,\"^11\",8,\"^12\",2593,\"^13\",25,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^23\",\"~$meth\",\"^1X\"]]]]],\"^1Y\",\"Builds the intermediate method call map used to reason about the parsed form during\\n  compilation.\"],\"^22\",true,\"^B\",\"~$cljs.analyzer/build-method-call\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^1;\",[\"^15\",[[\"^23\",\"^;[\",\"^1X\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",2593,\"^12\",2593,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^23\",\"^;[\",\"^1X\"]]]]],\"^1Y\",\"Builds the intermediate method call map used to reason about the parsed form during\\n  compilation.\"],\"~$confirm-var-exists-throw\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",718,\"^11\",7,\"^12\",718,\"^13\",31,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"^B\",\"~$cljs.analyzer/confirm-var-exists-throw\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",31,\"^1;\",[\"^15\",[[]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",718,\"^12\",718,\"^1?\",0,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[]]]]]],\"~$js-module-exists?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",690,\"^11\",7,\"^12\",690,\"^13\",24,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$module\"]]]]]],\"^B\",\"~$cljs.analyzer/js-module-exists?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",24,\"^1;\",[\"^15\",[[\"^<4\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",690,\"^12\",690,\"^1?\",1,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^<4\"]]]]]],\"~$analyze-form\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",3198,\"^11\",10,\"^12\",3198,\"^13\",22,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]]]],\"^B\",\"~$cljs.analyzer/analyze-form\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",22,\"^1;\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",4,\"^10\",3198,\"^12\",3198,\"^1?\",4,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1S\",\"^2A\",\"^2B\"]]]]]],\"~$var-ast\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",1137,\"^11\",8,\"^12\",1137,\"^13\",15,\"^22\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]]],\"^22\",true,\"^B\",\"~$cljs.analyzer/var-ast\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",15,\"^1;\",[\"^15\",[[\"^P\",\"^1L\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",1137,\"^12\",1137,\"^1?\",2,\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^1L\"]]]]]],\"~$error\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",641,\"^11\",7,\"^12\",641,\"^13\",12,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"^P\",\"^7W\"],[\"^P\",\"^7W\",\"~$cause\"]]]]],\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^P\",\"^7W\"],[\"^P\",\"^7W\",\"^<;\"]]],\"^14\",[\"^15\",[[\"^P\",\"^7W\"],[\"^P\",\"^7W\",\"^<;\"]]],\"^1=\",[\"^15\",[null,null]]]],\"^B\",\"~$cljs.analyzer/error\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",12,\"^1D\",[\"^ \",\"^1:\",false,\"^1?\",3,\"^1;\",[\"^15\",[[\"^P\",\"^7W\"],[\"^P\",\"^7W\",\"^<;\"]]],\"^14\",[\"^15\",[[\"^P\",\"^7W\"],[\"^P\",\"^7W\",\"^<;\"]]],\"^1=\",[\"^15\",[null,null]]],\"^1;\",[\"^15\",[[\"^P\",\"^7W\"],[\"^P\",\"^7W\",\"^<;\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",1,\"^10\",641,\"^12\",641,\"^1?\",3,\"^1@\",true,\"^14\",[\"^15\",[[\"^P\",\"^7W\"],[\"^P\",\"^7W\",\"^<;\"]]]],\"~$cljs-vector?\",[\"^ \",\"^Y\",null,\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",226,\"^11\",19,\"^12\",226,\"^13\",31,\"^17\",\"^18\",\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"^B\",\"~$cljs.analyzer/cljs-vector?\",\"^1:\",false,\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",31,\"^1;\",[\"^15\",[[\"~$x\"]]],\"^1<\",null,\"^1=\",[\"^15\",[null,null]],\"^11\",4,\"^10\",226,\"^1>\",\"^18\",\"^12\",226,\"^1?\",1,\"^17\",\"^18\",\"^1@\",true,\"^14\",[\"^15\",[\"^16\",[\"^15\",[[\"~$x\"]]]]]],\"~$*cljs-ns*\",[\"^ \",\"^Z\",[\"^ \",\"^[\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer.cljc\",\"^10\",44,\"^11\",16,\"^12\",44,\"^13\",25,\"^2G\",true],\"^B\",\"~$cljs.analyzer/*cljs-ns*\",\"^[\",\"out/cljs/analyzer.cljc\",\"^13\",25,\"^11\",1,\"^2G\",true,\"^10\",44,\"^12\",44,\"^17\",\"^29\"]],\"~:require-macros\",[\"^ \",\"^8\",\"^8\",\"^6\",\"^6\",\"^T\",\"^S\",\"^S\",\"^S\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^>\",[\"~:args\",\"~:invoke-ctor\",\"~$&\",\"~$seq\",\"~:ns*\",\"^0\",\"~$console\",\"^1\",\"~$case*\",\"~:extending-base-js-type\",\"~$Window\",\"~:cljs.analyzer/namespaces\",\"~:unsupported-preprocess-value\",\"~$defrecord*\",\"~:argc\",\"~:finally\",\"~:statement\",\"~$js/Function\",\"~:suffix\",\"^9T\",\"~$cljs.core/PersistentHashMap\",\"~$try\",\"~:fns\",\"~$Object\",\"~:ret\",\"~:redef\",\"~:fexpr\",\"~:children\",\"~:var-special\",\"~:exclude\",\"~$cljs.core/when\",\"~:ctor\",\"~:recurs\",\"~:js\",\"~:fname\",\"~$clj\",\"^18\",\"~:js-shadowed-by-local\",\"^3:\",\"~$location\",\"~:let\",\"~:v\",\"^Y\",\"~:fn\",\"~:unsupported-js-module-type\",\"^6:\",\"~:goog\",\"~:only\",\"~:invalid-protocol-symbol\",\"~:done\",\"~:group\",\"^Z\",\"~:ev\",\"~$cljs.core$macros\",\"~:frame\",\"^6?\",\"~$Symbol\",\"^2\",\"~:fn-scope\",\"~:do\",\"~$String\",\"~:macros-ns\",\"~:pmasks\",\"~:init\",\"~:cljs.analyzer/property\",\"~:numeric\",\"~:exprs\",\"~:else\",\"~:protocol-duped-method\",\"~:protocol-symbol\",\"~:cblocks\",\"^2I\",\"~:protocol\",\"~:cljs.analyzer/symbol\",\"~$*warn-on-infer*\",\"~:cljs.analyzer/externs\",\"~$ns*\",\"~:if\",\"~$escape\",\"^4\",\"^=\",\"~:macros\",\"~:locals\",\"~:tests\",\"~:js-globals\",\"~:return\",\"~$finally\",\"~$cljs.core/Keyword\",\"~:method\",\"~:use\",\"~:segs\",\"~$Function\",\"~:default\",\"~:repl-env\",\"^6U\",\"^I\",\"~:cljs.analyzer/call\",\"~:new\",\"~:cljs.analyzer/set-warn-on-infer\",\"~$loop*\",\"~:property\",\"^6V\",\"~:ns\",\"~:bindings\",\"~:def-emits-var\",\"^B\",\"~:munged-namespace\",\"~:binding-form?\",\"^1R\",\"~$cljs.core/Object\",\"~$Array\",\"^1:\",\"~:flag\",\"~:constant\",\"~:loop-lets\",\"~:unchecked\",\"~$cljs.core.constants\",\"~$cljs.core\",\"^[\",\"~:fields\",\"~$js\",\"^2>\",\"~:undeclared-macros-ns\",\"~$long\",\"~$double\",\"^13\",\"~:single-segment-namespace\",\"~$__hash\",\"~:start\",\"~$screen\",\"~:fn-arity\",\"^1D\",\"~:require\",\"~:params\",\"~:macro-present?\",\"~$goog\",\"~:js-value\",\"~:dblock\",\"~:js-module-index\",\"~:fn-self-name\",\"~:deftype*\",\"~$js/Boolean\",\"~:val\",\"~:recur\",\"~:field\",\"^6Z\",\"~$.-cljs$lang$test\",\"~$goog.object\",\"~$js/String\",\"~$do\",\"~$__meta\",\"~:state\",\"^1;\",\"~:rename\",\"~$number\",\"~:vals\",\"~:js-dependency-index\",\"~:ns-name\",\"^1<\",\"~:op\",\"~:current-symbol\",\"~:source\",\"~:js-provide\",\"~:env\",\"~:cljs.analyzer/type\",\"~:letfn\",\"~:infer-warning\",\"~:vector\",\"~:variadic-max-arity\",\"~$letfn*\",\"~:export\",\"~:cljs.analyzer/analyzed\",\"~:protocol-with-variadic-method\",\"~$if\",\"~:js-type\",\"^1=\",\"~:array\",\"^D\",\"~:cljs.analyzer/protocol-inline\",\"~$global\",\"~:cljs.analyzer/constant-table\",\"~$new\",\"~:fn-deprecated\",\"^4[\",\"~$symbol\",\"~:sym\",\"~:no-op\",\"~:catches\",\"~:prefix\",\"^11\",\"~$unquote\",\"~:types\",\"~:cljs.analyzer/protocol-impl\",\"~:loop\",\"~:dot-action\",\"~:undeclared-var\",\"~:internal-ctor\",\"~:module-type\",\"~$cljs.core/List\",\"~:root-source-info\",\"~$cljs.core/let\",\"~$process\",\"~:cljs.analyzer/expr\",\"~:include-macros\",\"^E\",\"~:preamble-missing\",\"~$require\",\"~$cljs.core/cond\",\"~:cljs.analyzer/set-unchecked-if\",\"~:unsynchronized-mutable\",\"~:const\",\"~:js-fn-var\",\"~:cljs.analyzer/access\",\"^4:\",\"~$deftype*\",\"~$let*\",\"~$js/Array\",\"~:thens\",\"~:set!\",\"~:methods\",\"~$not-native\",\"~$js*\",\"~:undeclared-protocol-symbol\",\"~$alert\",\"~:build-options\",\"^<C\",\"^2G\",\"^10\",\"~:expr\",\"~$Boolean\",\"~:list\",\"~:var\",\"~$history\",\"~$fn*\",\"~:cljs/analysis-error\",\"~:protocol-info\",\"~$recur\",\"~:macro\",\"~:unprovided\",\"~:deprecation-nowarn\",\"~$Math\",\"~:ns-var-clash\",\"~:deprecated\",\"^V\",\"~:undeclared-ns\",\"~:preprocess\",\"~:catch\",\"~:recur-frames\",\"~$window\",\"^70\",\"~$array\",\"^W\",\"^Q\",\"~:quoted?\",\"~:declared\",\"~:cljs.analyzer/not-found\",\"~:lib\",\"^<4\",\"~:info\",\"~:code\",\"^1>\",\"~:cljs.analyzer/error\",\"~$function\",\"~:then\",\"~$ignore\",\"~:def-var\",\"^12\",\"~:cljs.analyzer/no-resolve\",\"~:js-op\",\"~$exports\",\"~:var-ast\",\"~:context\",\"~$Number\",\"~:invoke\",\"~:throw\",\"~:reload\",\"~:undeclared-ns-form\",\"~:order\",\"~:f\",\"~:no-such-method\",\"~:refer-clojure\",\"~$document\",\"~:def\",\"~:reload-all\",\"^<A\",\"^1?\",\"~:t\",\"~:case*\",\"~:options\",\"~$set!\",\"~:form\",\"~:missing\",\"^17\",\"~:invalid-arithmetic\",\"~:cljc\",\"~:dot\",\"~:protocol-deprecated\",\"~:target\",\"~$cljs.repl\",\"~$.\",\"~$var\",\"~:mutable\",\"~:reloads\",\"^16\",\"^<B\",\"~:try\",\"^29\",\"~:set\",\"~:items\",\"~$prototype\",\"^1@\",\"~:defrecord*\",\"^14\",\"~:volatile-mutable\",\"~:import\",\"~$macroexpand-check\",\"~:impls\",\"~:hierarchy\",\"~$catch\",\"~:shadow\",\"~$js/Object\",\"~:body\",\"~:ns-sym\",\"^1Y\",\"~$cljs.spec.alpha\",\"~:overload-arity\",\"~:local\",\"~:closure-lib\",\"~:cljs.analyzer/numeric\",\"~$goog.array\",\"~:protocol-multiple-impls\",\"~$navigator\",\"~:jsdoc\",\"~$js/Number\",\"~:redef-in-file\",\"~:clj\",\"~:protocol-invalid-method\",\"~:invalid-arity\",\"~:cljs\",\"~:extend-type-invalid-method-shape\",\"~:suggested-symbol\",\"~:map\",\"~$__extmap\",\"~:cljs.analyzer/list\",\"~:object\",\"~:test\",\"~:foreign\",\"~:multiple-variadic-overloads\",\"~:warn-type\",\"~$*unchecked-if*\",\"~$throw\",\"~:forms\",\"~:fblock\",\"^5A\",\"~:dep-path\",\"^2W\",\"~$cljs.core/instance?\",\"~:deps\",\"~:refer\",\"~:statements\",\"~$def\",\"~:refer-macros\",\"~$cljs.user\",\"~$unescape\"]],\"^AQ\",[\"^C@\",\"^C9\",\"^>K\",\"^<E\",\"^<J\",\"^<M\",\"^<Y\",\"^=8\",\"^=<\",\"^=?\",\"^=P\",\"^>C\",\"^>R\",\"^>V\",\"^?J\",\"^?L\",\"^?P\",\"^?X\",\"^@7\",\"^@@\",\"^@P\",\"^2G\",\"^A1\",\"^A4\",\"^A6\",\"^AP\",\"^B0\",\"^B3\",\"^1@\",\"^BI\",\"^BN\",\"^BR\",\"^BT\",\"^BW\",\"^C3\",\"^2W\",\"^??\",\"^Q\",\"^18\",\"^@O\",\"~$.\",\"^?W\",\"^>L\",\"^=C\",\"^AE\",\"^2I\",\"^BV\",\"^?C\",\"^BB\",\"^>9\",\"^A[\",\"^>Y\",\"^@1\",\"^<S\",\"^BG\",\"^?F\",\"^B1\",\"^>O\",\"^BS\",\"^B\",\"^?Z\",\"^>@\",\"^?B\",\"^10\",\"^<O\",\"^=3\",\"^A@\",\"^<Z\",\"^6Z\",\"^A?\",\"^=S\",\"^AR\",\"^=6\",\"^BU\",\"^?D\",\"^BX\",\"^AH\",\"^@3\",\"^@V\",\"^>5\",\"^@9\",\"^[\",\"^A7\",\"^C4\",\"^AZ\",\"^>?\",\"^=O\",\"^?V\",\"^<L\",\"^<B\",\"^<C\",\"^AQ\",\"^9T\",\"^11\",\"^=Z\",\"^A0\",\"^AK\",\"^=[\",\"^=F\",\"^>1\",\"^<Q\",\"^@Q\",\"^A:\",\"^AT\",\"^<H\",\"^=Y\",\"^CA\",\"^>U\",\"^=9\",\"^BO\",\"^@W\",\"^?U\",\"^@=\",\"^@A\",\"^<4\",\"^AI\",\"^@;\",\"^17\",\"^@Y\",\"^=H\",\"^I\",\"^>Z\",\"^?9\",\"^A3\",\"^BM\",\"^E\",\"^D\",\"^?1\",\"^@2\",\"^W\",\"^<A\",\"^=\",\"^>N\",\"^B<\",\"^6:\",\"^A;\",\"^AC\",\"^?Y\",\"^<W\",\"^AL\",\"^>F\",\"^>8\",\"^@T\",\"^=E\",\"^<K\",\"^=V\",\"^2\",\"^1>\",\"^@F\",\"^V\",\"^1\",\"^AG\",\"^=B\",\"^4\",\"^0\",\"~$&\",\"^<I\",\"^<N\",\"^<U\",\"^=W\",\"^>>\",\"^?;\",\"^?M\",\"^?Q\",\"^4[\",\"^@H\",\"^@I\",\"^@X\",\"^@[\",\"^AY\",\"^B6\",\"^16\",\"^C6\",\"^C>\",\"^?G\",\"^>H\",\"^>4\",\"^@M\",\"^1?\",\"^1:\",\"^=Q\",\"^<T\",\"^@:\",\"^=7\",\"^@N\",\"^<F\",\"^C1\",\"^AD\",\"~:f\",\"^<D\",\"^@S\",\"^<X\",\"^=K\",\"^Z\",\"^1Y\",\"^=2\",\"^?8\",\"^14\",\"^1=\",\"^=0\",\"^>J\",\"^<[\",\"^=X\",\"^@E\",\"~:v\",\"^>0\",\"^@K\",\"^AW\",\"^AN\",\"^>2\",\"^BC\",\"^>3\",\"^?=\",\"^C7\",\"^BF\",\"^=R\",\"^?0\",\"^C8\",\"^>T\",\"^@0\",\"^<P\",\"^=@\",\"^@<\",\"^@B\",\"^C:\",\"^B9\",\"^A8\",\"^A=\",\"^=;\",\"^?N\",\"^BA\",\"^@Z\",\"^>X\",\"^1<\",\"^Y\",\"^1D\",\"^1;\",\"^BP\",\"^AU\",\"^AF\",\"^>B\",\"^AJ\",\"^>D\",\"^BD\",\"^>G\",\"^=4\",\"^?2\",\"^?H\",\"^@4\",\"^?T\",\"^>I\",\"^A9\",\"^BJ\",\"^>A\",\"^?I\",\"^C=\",\"^=G\",\"^@5\",\"^=:\",\"^?6\",\"^=D\",\"^=N\",\"^A<\",\"^70\",\"^@8\",\"^6U\",\"^><\",\"^BE\",\"^?:\",\"^@J\",\"^BQ\",\"^<R\",\"^?4\",\"^C5\",\"^@C\",\"^=U\",\"^>=\",\"^?7\",\"^B7\",\"^@D\",\"^B>\",\"^?[\",\"^B4\",\"^?5\",\"^@L\",\"^?A\",\"^C2\",\"^AX\",\"^A>\",\"^=A\",\"^==\",\"^BK\",\"^1R\",\"^?>\",\"^C<\",\"^AS\",\"^=1\",\"^=>\",\"^>W\",\"^>6\",\"^<V\",\"^B?\",\"^@?\",\"^C?\",\"^AO\",\"^AV\",\"^=I\",\"^C;\",\"^B8\",\"^<G\",\"^B=\",\"^?<\",\"^BZ\",\"^>S\",\"^6V\",\"~:t\",\"^>M\",\"^=J\",\"^>E\",\"^?3\",\"^AB\",\"^@>\",\"^=L\",\"^=T\",\"^B[\",\"^@6\",\"^@G\",\"^>;\",\"^C0\",\"^B2\",\"^=M\",\"^>P\",\"^>Q\",\"^>7\",\"^=5\",\"^AA\",\"^?O\",\"^A5\",\"^A2\",\"^AM\",\"^29\",\"^B5\",\"^BH\",\"^B@\",\"^BL\",\"^4:\",\"^?@\",\"^BY\",\"^5A\",\"^B;\",\"^@U\",\"^6?\",\"^?K\",\"^3:\",\"^B:\",\"^2>\",\"^?R\",\"^>[\",\"^?S\",\"^13\",\"^12\",\"^?E\",\"^>:\",\"^@R\"]],\"^1Y\",null]","clojure/test/check.js":"// Compiled by ClojureScript 1.9.542\ngoog.provide(\"clojure.test.check\");\n\nclojure.test.check.make_rng = (function clojure$test$check$make_rng(seed){\nif(cljs.core.truth_(seed)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [seed,clojure.test.check.random.make_random.call(null,seed)], null);\n} else {\nvar non_nil_seed = clojure.test.check.impl.get_current_time_millis.call(null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [non_nil_seed,clojure.test.check.random.make_random.call(null,non_nil_seed)], null);\n}\n});\nclojure.test.check.complete = (function clojure$test$check$complete(property,num_trials,seed,reporter_fn){\nreporter_fn.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"type\",\"type\",(1174270348)),new cljs.core.Keyword(null,\"complete\",\"complete\",(-500388775)),new cljs.core.Keyword(null,\"property\",\"property\",(-1114278232)),property,new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)),true,new cljs.core.Keyword(null,\"num-tests\",\"num-tests\",(2050041354)),num_trials,new cljs.core.Keyword(null,\"seed\",\"seed\",(68613327)),seed], null));\n\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)),true,new cljs.core.Keyword(null,\"num-tests\",\"num-tests\",(2050041354)),num_trials,new cljs.core.Keyword(null,\"seed\",\"seed\",(68613327)),seed], null);\n});\n/**\n * Tests `property` `num-tests` times.\n * \n *   Takes several optional keys:\n * \n *   `:seed`\n *  Can be used to re-run previous tests, as the seed used is returned\n *  after a test is run.\n * \n *   `:max-size`.\n *  can be used to control the 'size' of generated values. The size will\n *  start at 0, and grow up to max-size, as the number of tests increases.\n *  Generators will use the size parameter to bound their growth. This\n *  prevents, for example, generating a five-thousand element vector on\n *  the very first test.\n * \n *   `:reporter-fn`\n *  A callback function that will be called at various points in the test\n *  run, with a map like:\n * \n *    ;; called after a passing trial\n *    {:type      :trial\n *     :property  #<...>\n *     :so-far    <number of tests run so far>\n *     :num-tests <total number of tests>}\n * \n *    ;; called after each failing trial\n *    {:type         :failure\n *     :property     #<...>\n *     :result       ...\n *     :trial-number <tests ran before failure found>\n *     :failing-args [...]}\n * \n *  It will also be called on :complete, :shrink-step and :shrunk.\n * \n *   Examples:\n * \n *    (def p (for-all [a gen/pos-int] (> (* a a) a)))\n * \n *    (quick-check 100 p)\n *    (quick-check 200 p\n *                 :seed 42\n *                 :max-size 50\n *                 :reporter-fn (fn [m]\n *                                (when (= :failure (:type m))\n *                                  (println \"Uh oh...\"))))\n */\nclojure.test.check.quick_check = (function clojure$test$check$quick_check(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___458 = arguments.length;\nvar i__21021__auto___459 = (0);\nwhile(true){\nif((i__21021__auto___459 < len__21020__auto___458)){\nargs__21023__auto__.push((arguments[i__21021__auto___459]));\n\nvar G__460 = (i__21021__auto___459 + (1));\ni__21021__auto___459 = G__460;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn clojure.test.check.quick_check.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n});\n\nclojure.test.check.quick_check.cljs$core$IFn$_invoke$arity$variadic = (function (num_tests,property,p__446){\nvar map__447 = p__446;\nvar map__447__$1 = ((((!((map__447 == null)))?((((map__447.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__447.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__447):map__447);\nvar seed = cljs.core.get.call(null,map__447__$1,new cljs.core.Keyword(null,\"seed\",\"seed\",(68613327)));\nvar max_size = cljs.core.get.call(null,map__447__$1,new cljs.core.Keyword(null,\"max-size\",\"max-size\",(-874966132)),(200));\nvar reporter_fn = cljs.core.get.call(null,map__447__$1,new cljs.core.Keyword(null,\"reporter-fn\",\"reporter-fn\",(1280520247)),cljs.core.constantly.call(null,null));\nvar vec__449 = clojure.test.check.make_rng.call(null,seed);\nvar created_seed = cljs.core.nth.call(null,vec__449,(0),null);\nvar rng = cljs.core.nth.call(null,vec__449,(1),null);\nvar size_seq = clojure.test.check.generators.make_size_range_seq.call(null,max_size);\nvar so_far = (0);\nvar size_seq__$1 = size_seq;\nvar rstate = rng;\nwhile(true){\nif((so_far === num_tests)){\nreturn clojure.test.check.complete.call(null,property,num_tests,created_seed,reporter_fn);\n} else {\nvar vec__452 = size_seq__$1;\nvar seq__453 = cljs.core.seq.call(null,vec__452);\nvar first__454 = cljs.core.first.call(null,seq__453);\nvar seq__453__$1 = cljs.core.next.call(null,seq__453);\nvar size = first__454;\nvar rest_size_seq = seq__453__$1;\nvar vec__455 = clojure.test.check.random.split.call(null,rstate);\nvar r1 = cljs.core.nth.call(null,vec__455,(0),null);\nvar r2 = cljs.core.nth.call(null,vec__455,(1),null);\nvar result_map_rose = clojure.test.check.generators.call_gen.call(null,property,r1,size);\nvar result_map = clojure.test.check.rose_tree.root.call(null,result_map_rose);\nvar result = new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)).cljs$core$IFn$_invoke$arity$1(result_map);\nvar args = new cljs.core.Keyword(null,\"args\",\"args\",(1315556576)).cljs$core$IFn$_invoke$arity$1(result_map);\nvar so_far__$1 = (so_far + (1));\nif(cljs.core.truth_(clojure.test.check.results.passing_QMARK_.call(null,result))){\nreporter_fn.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",(1174270348)),new cljs.core.Keyword(null,\"trial\",\"trial\",(-677458347)),new cljs.core.Keyword(null,\"property\",\"property\",(-1114278232)),property,new cljs.core.Keyword(null,\"so-far\",\"so-far\",(-1973642241)),so_far__$1,new cljs.core.Keyword(null,\"num-tests\",\"num-tests\",(2050041354)),num_tests], null));\n\nvar G__461 = so_far__$1;\nvar G__462 = rest_size_seq;\nvar G__463 = r2;\nso_far = G__461;\nsize_seq__$1 = G__462;\nrstate = G__463;\ncontinue;\n} else {\nreturn clojure.test.check.failure.call(null,property,result_map_rose,so_far__$1,size,created_seed,reporter_fn);\n}\n}\nbreak;\n}\n});\n\nclojure.test.check.quick_check.cljs$lang$maxFixedArity = (2);\n\nclojure.test.check.quick_check.cljs$lang$applyTo = (function (seq443){\nvar G__444 = cljs.core.first.call(null,seq443);\nvar seq443__$1 = cljs.core.next.call(null,seq443);\nvar G__445 = cljs.core.first.call(null,seq443__$1);\nvar seq443__$2 = cljs.core.next.call(null,seq443__$1);\nreturn clojure.test.check.quick_check.cljs$core$IFn$_invoke$arity$variadic(G__444,G__445,seq443__$2);\n});\n\nclojure.test.check.smallest_shrink = (function clojure$test$check$smallest_shrink(total_nodes_visited,depth,smallest){\nvar map__466 = smallest;\nvar map__466__$1 = ((((!((map__466 == null)))?((((map__466.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__466.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__466):map__466);\nvar result = cljs.core.get.call(null,map__466__$1,new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)));\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"total-nodes-visited\",\"total-nodes-visited\",(-620132443)),total_nodes_visited,new cljs.core.Keyword(null,\"depth\",\"depth\",(1768663640)),depth,new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)),clojure.test.check.results.passing_QMARK_.call(null,result),new cljs.core.Keyword(null,\"result-data\",\"result-data\",(-1724248844)),clojure.test.check.results.result_data.call(null,result),new cljs.core.Keyword(null,\"smallest\",\"smallest\",(-152623883)),new cljs.core.Keyword(null,\"args\",\"args\",(1315556576)).cljs$core$IFn$_invoke$arity$1(smallest)], null);\n});\n/**\n * Shrinking a value produces a sequence of smaller values of the same type.\n *   Each of these values can then be shrunk. Think of this as a tree. We do a\n *   modified depth-first search of the tree:\n * \n *   Do a non-exhaustive search for a deeper (than the root) failing example.\n *   Additional rules added to depth-first search:\n *   * If a node passes the property, you may continue searching at this depth,\n *   but not backtrack\n *   * If a node fails the property, search its children\n *   The value returned is the left-most failing example at the depth where a\n *   passing example was found.\n * \n *   Calls reporter-fn on every shrink step.\n */\nclojure.test.check.shrink_loop = (function clojure$test$check$shrink_loop(rose_tree,reporter_fn){\nvar shrinks_this_depth = clojure.test.check.rose_tree.children.call(null,rose_tree);\nvar nodes = shrinks_this_depth;\nvar current_smallest = clojure.test.check.rose_tree.root.call(null,rose_tree);\nvar total_nodes_visited = (0);\nvar depth = (0);\nwhile(true){\nif(cljs.core.empty_QMARK_.call(null,nodes)){\nreturn clojure.test.check.smallest_shrink.call(null,total_nodes_visited,depth,current_smallest);\n} else {\nvar head = cljs.core.first.call(null,nodes);\nvar tail = cljs.core.rest.call(null,nodes);\nvar result = new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)).cljs$core$IFn$_invoke$arity$1(clojure.test.check.rose_tree.root.call(null,head));\nvar args = new cljs.core.Keyword(null,\"args\",\"args\",(1315556576)).cljs$core$IFn$_invoke$arity$1(clojure.test.check.rose_tree.root.call(null,head));\nvar shrink_step_map = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",(1174270348)),new cljs.core.Keyword(null,\"shrink-step\",\"shrink-step\",(-541828120)),new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)),result,new cljs.core.Keyword(null,\"args\",\"args\",(1315556576)),args], null);\nif(cljs.core.truth_(clojure.test.check.results.passing_QMARK_.call(null,result))){\nreporter_fn.call(null,cljs.core.merge.call(null,shrink_step_map,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pass?\",\"pass?\",(-424635753)),true,new cljs.core.Keyword(null,\"current-smallest\",\"current-smallest\",(1840631643)),current_smallest], null)));\n\nvar G__468 = tail;\nvar G__469 = current_smallest;\nvar G__470 = (total_nodes_visited + (1));\nvar G__471 = depth;\nnodes = G__468;\ncurrent_smallest = G__469;\ntotal_nodes_visited = G__470;\ndepth = G__471;\ncontinue;\n} else {\nvar new_smallest = clojure.test.check.rose_tree.root.call(null,head);\nreporter_fn.call(null,cljs.core.merge.call(null,shrink_step_map,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pass?\",\"pass?\",(-424635753)),false,new cljs.core.Keyword(null,\"current-smallest\",\"current-smallest\",(1840631643)),new_smallest], null)));\n\nvar temp__19412__auto__ = cljs.core.seq.call(null,clojure.test.check.rose_tree.children.call(null,head));\nif(temp__19412__auto__){\nvar children = temp__19412__auto__;\nvar G__472 = children;\nvar G__473 = new_smallest;\nvar G__474 = (total_nodes_visited + (1));\nvar G__475 = (depth + (1));\nnodes = G__472;\ncurrent_smallest = G__473;\ntotal_nodes_visited = G__474;\ndepth = G__475;\ncontinue;\n} else {\nvar G__476 = tail;\nvar G__477 = new_smallest;\nvar G__478 = (total_nodes_visited + (1));\nvar G__479 = depth;\nnodes = G__476;\ncurrent_smallest = G__477;\ntotal_nodes_visited = G__478;\ndepth = G__479;\ncontinue;\n}\n}\n}\nbreak;\n}\n});\nclojure.test.check.failure = (function clojure$test$check$failure(property,failing_rose_tree,trial_number,size,seed,reporter_fn){\nvar root = clojure.test.check.rose_tree.root.call(null,failing_rose_tree);\nvar result = new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)).cljs$core$IFn$_invoke$arity$1(root);\nvar failing_args = new cljs.core.Keyword(null,\"args\",\"args\",(1315556576)).cljs$core$IFn$_invoke$arity$1(root);\nreporter_fn.call(null,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"type\",\"type\",(1174270348)),new cljs.core.Keyword(null,\"failure\",\"failure\",(720415879)),new cljs.core.Keyword(null,\"property\",\"property\",(-1114278232)),property,new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)),clojure.test.check.results.passing_QMARK_.call(null,result),new cljs.core.Keyword(null,\"result-data\",\"result-data\",(-1724248844)),clojure.test.check.results.result_data.call(null,result),new cljs.core.Keyword(null,\"trial-number\",\"trial-number\",(1762056689)),trial_number,new cljs.core.Keyword(null,\"failing-args\",\"failing-args\",(-890623811)),failing_args], null));\n\nvar shrunk = clojure.test.check.shrink_loop.call(null,failing_rose_tree,((function (root,result,failing_args){\nreturn (function (p1__42_SHARP_){\nreturn reporter_fn.call(null,cljs.core.assoc.call(null,p1__42_SHARP_,new cljs.core.Keyword(null,\"property\",\"property\",(-1114278232)),property));\n});})(root,result,failing_args))\n);\nreporter_fn.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"type\",\"type\",(1174270348)),new cljs.core.Keyword(null,\"shrunk\",\"shrunk\",(-2041664412)),new cljs.core.Keyword(null,\"property\",\"property\",(-1114278232)),property,new cljs.core.Keyword(null,\"trial-number\",\"trial-number\",(1762056689)),trial_number,new cljs.core.Keyword(null,\"failing-args\",\"failing-args\",(-890623811)),failing_args,new cljs.core.Keyword(null,\"shrunk\",\"shrunk\",(-2041664412)),shrunk], null));\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)),clojure.test.check.results.passing_QMARK_.call(null,result),new cljs.core.Keyword(null,\"result-data\",\"result-data\",(-1724248844)),clojure.test.check.results.result_data.call(null,result),new cljs.core.Keyword(null,\"seed\",\"seed\",(68613327)),seed,new cljs.core.Keyword(null,\"failing-size\",\"failing-size\",(-429562538)),size,new cljs.core.Keyword(null,\"num-tests\",\"num-tests\",(2050041354)),trial_number,new cljs.core.Keyword(null,\"fail\",\"fail\",(1706214930)),cljs.core.vec.call(null,failing_args),new cljs.core.Keyword(null,\"shrunk\",\"shrunk\",(-2041664412)),shrunk], null);\n});\n","cljs/analyzer/api.js":"// Compiled by ClojureScript 1.9.542 {:static-fns true, :optimize-constants false}\ngoog.provide('cljs.analyzer.api');\ngoog.require('cljs.core');\ngoog.require('cljs.env');\ngoog.require('cljs.analyzer');\n/**\n * Creates an empty compilation state Atom<Map>.\n */\ncljs.analyzer.api.empty_state = (function cljs$analyzer$api$empty_state(){\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();\n});\nvar ret__7829__auto___24031 = /**\n * Run the body with the given compilation state Atom<Map>.\n */\ncljs.analyzer.api.with_state = (function cljs$analyzer$api$with_state(_AMPERSAND_form,_AMPERSAND_env,state,body){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.env\",\"with-compiler-env\",\"cljs.env/with-compiler-env\",-1219561832,null)),(function (){var x__7519__auto__ = state;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__7519__auto__);\n})(),cljs.core.array_seq([body], 0))));\n});\ncljs.analyzer.api.with_state.cljs$lang$macro = true;\n\n/**\n * Creates an empty analysis environment.\n */\ncljs.analyzer.api.empty_env = (function cljs$analyzer$api$empty_env(){\nreturn cljs.analyzer.empty_env();\n});\nvar ret__7829__auto___24035 = (function (){\n/**\n * Disable analyzer warnings for any analysis executed in body.\n */\ncljs.analyzer.api.no_warn = (function cljs$analyzer$api$no_warn(var_args){\nvar args__7797__auto__ = [];\nvar len__7790__auto___24036 = arguments.length;\nvar i__7791__auto___24037 = (0);\nwhile(true){\nif((i__7791__auto___24037 < len__7790__auto___24036)){\nargs__7797__auto__.push((arguments[i__7791__auto___24037]));\n\nvar G__24038 = (i__7791__auto___24037 + (1));\ni__7791__auto___24037 = G__24038;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__7798__auto__ = ((((2) < args__7797__auto__.length))?(new cljs.core.IndexedSeq(args__7797__auto__.slice((2)),(0),null)):null);\nreturn cljs.analyzer.api.no_warn.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__7798__auto__);\n});\n\ncljs.analyzer.api.no_warn.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){\nvar no_warnings = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",2050379843,null)),(function (){var x__7519__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-warnings*\",\"cljs.analyzer/*cljs-warnings*\",-289667730,null)),(function (){var x__7519__auto__ = no_warnings;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__7519__auto__);\n})()))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__7519__auto__);\n})(),cljs.core.array_seq([body], 0))));\n});\n\ncljs.analyzer.api.no_warn.cljs$lang$maxFixedArity = (2);\n\ncljs.analyzer.api.no_warn.cljs$lang$applyTo = (function (seq24032){\nvar G__24033 = cljs.core.first(seq24032);\nvar seq24032__$1 = cljs.core.next(seq24032);\nvar G__24034 = cljs.core.first(seq24032__$1);\nvar seq24032__$2 = cljs.core.next(seq24032__$1);\nreturn cljs.analyzer.api.no_warn.cljs$core$IFn$_invoke$arity$variadic(G__24033,G__24034,seq24032__$2);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.api.no_warn.cljs$lang$macro = true;\n\n/**\n * Test if the given warning-type is enabled.\n */\ncljs.analyzer.api.warning_enabled_QMARK_ = (function cljs$analyzer$api$warning_enabled_QMARK_(warning_type){\nreturn (cljs.analyzer._STAR_cljs_warnings_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer._STAR_cljs_warnings_STAR_.cljs$core$IFn$_invoke$arity$1(warning_type) : cljs.analyzer._STAR_cljs_warnings_STAR_.call(null,warning_type));\n});\n/**\n * The default warning handler.\n * \n * Outputs the warning messages to *err*.\n */\ncljs.analyzer.api.default_warning_handler = (function cljs$analyzer$api$default_warning_handler(warning_type,env,extra){\nreturn cljs.analyzer.default_warning_handler(warning_type,env,extra);\n});\n/**\n * Return the compiler options from compiler state.\n */\ncljs.analyzer.api.get_options = (function cljs$analyzer$api$get_options(var_args){\nvar args24039 = [];\nvar len__7790__auto___24042 = arguments.length;\nvar i__7791__auto___24043 = (0);\nwhile(true){\nif((i__7791__auto___24043 < len__7790__auto___24042)){\nargs24039.push((arguments[i__7791__auto___24043]));\n\nvar G__24044 = (i__7791__auto___24043 + (1));\ni__7791__auto___24043 = G__24044;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24041 = args24039.length;\nswitch (G__24041) {\ncase 0:\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24039.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\n});\n\ncljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1 = (function (state){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null,state)),new cljs.core.Keyword(null,\"options\",\"options\",99638489));\n});\n\ncljs.analyzer.api.get_options.cljs$lang$maxFixedArity = 1;\n\n/**\n * Return the currently computed Google Closure js dependency index from the\n *   compiler state.\n */\ncljs.analyzer.api.get_js_index = (function cljs$analyzer$api$get_js_index(var_args){\nvar args24046 = [];\nvar len__7790__auto___24049 = arguments.length;\nvar i__7791__auto___24050 = (0);\nwhile(true){\nif((i__7791__auto___24050 < len__7790__auto___24049)){\nargs24046.push((arguments[i__7791__auto___24050]));\n\nvar G__24051 = (i__7791__auto___24050 + (1));\ni__7791__auto___24050 = G__24051;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24048 = args24046.length;\nswitch (G__24048) {\ncase 0:\nreturn cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24046.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\n});\n\ncljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$1 = (function (state){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null,state)),new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131));\n});\n\ncljs.analyzer.api.get_js_index.cljs$lang$maxFixedArity = 1;\n\n/**\n * Given an analysis environment resolve a var. Analogous to\n * clojure.core/resolve\n */\ncljs.analyzer.api.resolve = (function cljs$analyzer$api$resolve(env,sym){\nif(cljs.core.map_QMARK_(env)){\n} else {\nthrow (new Error(\"Assert failed: (map? env)\"));\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? sym)\"));\n}\n\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists_throw());\n}catch (e24054){var e = e24054;\nreturn cljs.analyzer.resolve_macro_var(env,sym);\n}});\n/**\n * Return all namespaces. Analagous to clojure.core/all-ns but\n *   returns symbols identifying namespaces not Namespace instances.\n */\ncljs.analyzer.api.all_ns = (function cljs$analyzer$api$all_ns(var_args){\nvar args24055 = [];\nvar len__7790__auto___24058 = arguments.length;\nvar i__7791__auto___24059 = (0);\nwhile(true){\nif((i__7791__auto___24059 < len__7790__auto___24058)){\nargs24055.push((arguments[i__7791__auto___24059]));\n\nvar G__24060 = (i__7791__auto___24059 + (1));\ni__7791__auto___24059 = G__24060;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24057 = args24055.length;\nswitch (G__24057) {\ncase 0:\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24055.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\n});\n\ncljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1 = (function (state){\nreturn cljs.core.keys(cljs.core.get.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null,state)),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927)));\n});\n\ncljs.analyzer.api.all_ns.cljs$lang$maxFixedArity = 1;\n\n/**\n * Given a namespace return the corresponding namespace analysis map. Analagous\n *   to clojure.core/find-ns.\n */\ncljs.analyzer.api.find_ns = (function cljs$analyzer$api$find_ns(var_args){\nvar args24062 = [];\nvar len__7790__auto___24065 = arguments.length;\nvar i__7791__auto___24066 = (0);\nwhile(true){\nif((i__7791__auto___24066 < len__7790__auto___24065)){\nargs24062.push((arguments[i__7791__auto___24066]));\n\nvar G__24067 = (i__7791__auto___24066 + (1));\ni__7791__auto___24066 = G__24067;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24064 = args24062.length;\nswitch (G__24064) {\ncase 1:\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24062.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1 = (function (sym){\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,sym);\n});\n\ncljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2 = (function (state,sym){\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? sym)\"));\n}\n\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null,state)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),sym], null));\n});\n\ncljs.analyzer.api.find_ns.cljs$lang$maxFixedArity = 2;\n\n/**\n * Given a namespace return all the var analysis maps. Analagous to\n *   clojure.core/ns-interns but returns var analysis maps not vars.\n */\ncljs.analyzer.api.ns_interns = (function cljs$analyzer$api$ns_interns(var_args){\nvar args24069 = [];\nvar len__7790__auto___24072 = arguments.length;\nvar i__7791__auto___24073 = (0);\nwhile(true){\nif((i__7791__auto___24073 < len__7790__auto___24072)){\nargs24069.push((arguments[i__7791__auto___24073]));\n\nvar G__24074 = (i__7791__auto___24073 + (1));\ni__7791__auto___24073 = G__24074;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24071 = args24069.length;\nswitch (G__24071) {\ncase 1:\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24069.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\n});\n\ncljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\nif((ns instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null,state)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null,state)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null))], 0));\n});\n\ncljs.analyzer.api.ns_interns.cljs$lang$maxFixedArity = 2;\n\n/**\n * Given a namespace return all the public var analysis maps. Analagous to\n *   clojure.core/ns-publics but returns var analysis maps not vars.\n */\ncljs.analyzer.api.ns_publics = (function cljs$analyzer$api$ns_publics(var_args){\nvar args24076 = [];\nvar len__7790__auto___24083 = arguments.length;\nvar i__7791__auto___24084 = (0);\nwhile(true){\nif((i__7791__auto___24084 < len__7790__auto___24083)){\nargs24076.push((arguments[i__7791__auto___24084]));\n\nvar G__24085 = (i__7791__auto___24084 + (1));\ni__7791__auto___24084 = G__24085;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24078 = args24076.length;\nswitch (G__24078) {\ncase 1:\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24076.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\n});\n\ncljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\nif((ns instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\n}\n\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__24079){\nvar vec__24080 = p__24079;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24080,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24080,(1),null);\nreturn new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(v);\n}),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null,state)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null,state)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null))], 0))));\n});\n\ncljs.analyzer.api.ns_publics.cljs$lang$maxFixedArity = 2;\n\n/**\n * Given a namespace and a symbol return the corresponding var analysis map.\n *   Analagous to clojure.core/ns-resolve but returns var analysis map not Var.\n */\ncljs.analyzer.api.ns_resolve = (function cljs$analyzer$api$ns_resolve(var_args){\nvar args24087 = [];\nvar len__7790__auto___24090 = arguments.length;\nvar i__7791__auto___24091 = (0);\nwhile(true){\nif((i__7791__auto___24091 < len__7790__auto___24090)){\nargs24087.push((arguments[i__7791__auto___24091]));\n\nvar G__24092 = (i__7791__auto___24091 + (1));\ni__7791__auto___24091 = G__24092;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24089 = args24087.length;\nswitch (G__24089) {\ncase 2:\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24087.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$2 = (function (ns,sym){\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3(cljs.env._STAR_compiler_STAR_,ns,sym);\n});\n\ncljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3 = (function (state,ns,sym){\nif((ns instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? sym)\"));\n}\n\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null,state)),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\n});\n\ncljs.analyzer.api.ns_resolve.cljs$lang$maxFixedArity = 3;\n\n/**\n * Removes the namespace named by the symbol.\n */\ncljs.analyzer.api.remove_ns = (function cljs$analyzer$api$remove_ns(var_args){\nvar args24094 = [];\nvar len__7790__auto___24097 = arguments.length;\nvar i__7791__auto___24098 = (0);\nwhile(true){\nif((i__7791__auto___24098 < len__7790__auto___24097)){\nargs24094.push((arguments[i__7791__auto___24098]));\n\nvar G__24099 = (i__7791__auto___24098 + (1));\ni__7791__auto___24098 = G__24099;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__24096 = args24094.length;\nswitch (G__24096) {\ncase 1:\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args24094.length)].join('')));\n\n}\n});\n\ncljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\n});\n\ncljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\nif((ns instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\"Assert failed: (symbol? ns)\"));\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927)], null),cljs.core.dissoc,cljs.core.array_seq([ns], 0));\n});\n\ncljs.analyzer.api.remove_ns.cljs$lang$maxFixedArity = 2;\n\nvar ret__7829__auto___24105 = (function (){\n/**\n * Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n *   environment atom and runs body.\n */\ncljs.analyzer.api.in_cljs_user = (function cljs$analyzer$api$in_cljs_user(var_args){\nvar args__7797__auto__ = [];\nvar len__7790__auto___24106 = arguments.length;\nvar i__7791__auto___24107 = (0);\nwhile(true){\nif((i__7791__auto___24107 < len__7790__auto___24106)){\nargs__7797__auto__.push((arguments[i__7791__auto___24107]));\n\nvar G__24108 = (i__7791__auto___24107 + (1));\ni__7791__auto___24107 = G__24108;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__7798__auto__ = ((((3) < args__7797__auto__.length))?(new cljs.core.IndexedSeq(args__7797__auto__.slice((3)),(0),null)):null);\nreturn cljs.analyzer.api.in_cljs_user.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__7798__auto__);\n});\n\ncljs.analyzer.api.in_cljs_user.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,env,body){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",2050379843,null)),(function (){var x__7519__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-ns*\",\"cljs.analyzer/*cljs-ns*\",1242529789,null)),(function (){var x__7519__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs\",\"user\",\"cljs/user\",-1293320483,null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__7519__auto__);\n})()))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__7519__auto__);\n})(),cljs.core.array_seq([(function (){var x__7519__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.env\",\"with-compiler-env\",\"cljs.env/with-compiler-env\",-1219561832,null)),(function (){var x__7519__auto__ = env;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__7519__auto__);\n})(),cljs.core.array_seq([body], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__7519__auto__);\n})()], 0))));\n});\n\ncljs.analyzer.api.in_cljs_user.cljs$lang$maxFixedArity = (3);\n\ncljs.analyzer.api.in_cljs_user.cljs$lang$applyTo = (function (seq24101){\nvar G__24102 = cljs.core.first(seq24101);\nvar seq24101__$1 = cljs.core.next(seq24101);\nvar G__24103 = cljs.core.first(seq24101__$1);\nvar seq24101__$2 = cljs.core.next(seq24101__$1);\nvar G__24104 = cljs.core.first(seq24101__$2);\nvar seq24101__$3 = cljs.core.next(seq24101__$2);\nreturn cljs.analyzer.api.in_cljs_user.cljs$core$IFn$_invoke$arity$variadic(G__24102,G__24103,G__24104,seq24101__$3);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.api.in_cljs_user.cljs$lang$macro = true;\n\n\n//# sourceMappingURL=api.js.map","clojure/test/check/properties.js":"// Compiled by ClojureScript 1.9.542\ngoog.provide(\"clojure.test.check.properties\");\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {clojure.test.check.results.Result}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nclojure.test.check.properties.ErrorResult = (function (error,__meta,__extmap,__hash){\nthis.error = error;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = -2065299702;\nthis.cljs$lang$protocol_mask$partition1$ = 8192;\n})\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__20340__auto__,k__20341__auto__){\nvar self__ = this;\nvar this__20340__auto____$1 = this;\nreturn this__20340__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__20341__auto__,null);\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__20342__auto__,k444,else__20343__auto__){\nvar self__ = this;\nvar this__20342__auto____$1 = this;\nvar G__446 = k444;\nvar G__446__$1 = (((G__446 instanceof cljs.core.Keyword))?G__446.fqn:null);\nswitch (G__446__$1) {\ncase \"error\":\nreturn self__.error;\n\nbreak;\ndefault:\nreturn cljs.core.get.call(null,self__.__extmap,k444,else__20343__auto__);\n\n}\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__20354__auto__,writer__20355__auto__,opts__20356__auto__){\nvar self__ = this;\nvar this__20354__auto____$1 = this;\nvar pr_pair__20357__auto__ = ((function (this__20354__auto____$1){\nreturn (function (keyval__20358__auto__){\nreturn cljs.core.pr_sequential_writer.call(null,writer__20355__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__20356__auto__,keyval__20358__auto__);\n});})(this__20354__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer.call(null,writer__20355__auto__,pr_pair__20357__auto__,\"#clojure.test.check.properties.ErrorResult{\",\", \",\"}\",opts__20356__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,(2),(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"error\",\"error\",(-978969032)),self__.error],null))], null),self__.__extmap));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__443){\nvar self__ = this;\nvar G__443__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__443__$1,(1),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"error\",\"error\",(-978969032))], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator.call(null,self__.__extmap):cljs.core.nil_iter.call(null))));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__20338__auto__){\nvar self__ = this;\nvar this__20338__auto____$1 = this;\nreturn self__.__meta;\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__20334__auto__){\nvar self__ = this;\nvar this__20334__auto____$1 = this;\nreturn (new clojure.test.check.properties.ErrorResult(self__.error,self__.__meta,self__.__extmap,self__.__hash));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__20344__auto__){\nvar self__ = this;\nvar this__20344__auto____$1 = this;\nreturn ((1) + cljs.core.count.call(null,self__.__extmap));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__20335__auto__){\nvar self__ = this;\nvar this__20335__auto____$1 = this;\nvar h__20043__auto__ = self__.__hash;\nif(!((h__20043__auto__ == null))){\nreturn h__20043__auto__;\n} else {\nvar h__20043__auto____$1 = cljs.core.hash_imap.call(null,this__20335__auto____$1);\nself__.__hash = h__20043__auto____$1;\n\nreturn h__20043__auto____$1;\n}\n});\n\nclojure.test.check.properties.ErrorResult.prototype.clojure$test$check$results$Result$ = cljs.core.PROTOCOL_SENTINEL;\n\nclojure.test.check.properties.ErrorResult.prototype.clojure$test$check$results$Result$passing_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn false;\n});\n\nclojure.test.check.properties.ErrorResult.prototype.clojure$test$check$results$Result$result_data$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.test.check.properties\",\"error\",\"clojure.test.check.properties/error\",(483933635)),self__.error], null);\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__20336__auto__,other__20337__auto__){\nvar self__ = this;\nvar this__20336__auto____$1 = this;\nif(cljs.core.truth_((function (){var and__19647__auto__ = other__20337__auto__;\nif(cljs.core.truth_(and__19647__auto__)){\nreturn ((this__20336__auto____$1.constructor === other__20337__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__20336__auto____$1,other__20337__auto__));\n} else {\nreturn and__19647__auto__;\n}\n})())){\nreturn true;\n} else {\nreturn false;\n}\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__20349__auto__,k__20350__auto__){\nvar self__ = this;\nvar this__20349__auto____$1 = this;\nif(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",(-978969032)),null], null), null),k__20350__auto__)){\nreturn cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__20349__auto____$1),self__.__meta),k__20350__auto__);\n} else {\nreturn (new clojure.test.check.properties.ErrorResult(self__.error,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__20350__auto__)),null));\n}\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__20347__auto__,k__20348__auto__,G__443){\nvar self__ = this;\nvar this__20347__auto____$1 = this;\nvar pred__447 = cljs.core.keyword_identical_QMARK_;\nvar expr__448 = k__20348__auto__;\nif(cljs.core.truth_(pred__447.call(null,new cljs.core.Keyword(null,\"error\",\"error\",(-978969032)),expr__448))){\nreturn (new clojure.test.check.properties.ErrorResult(G__443,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new clojure.test.check.properties.ErrorResult(self__.error,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__20348__auto__,G__443),null));\n}\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__20352__auto__){\nvar self__ = this;\nvar this__20352__auto____$1 = this;\nreturn cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,(2),(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"error\",\"error\",(-978969032)),self__.error],null))], null),self__.__extmap));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__20339__auto__,G__443){\nvar self__ = this;\nvar this__20339__auto____$1 = this;\nreturn (new clojure.test.check.properties.ErrorResult(self__.error,G__443,self__.__extmap,self__.__hash));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__20345__auto__,entry__20346__auto__){\nvar self__ = this;\nvar this__20345__auto____$1 = this;\nif(cljs.core.vector_QMARK_.call(null,entry__20346__auto__)){\nreturn this__20345__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.call(null,entry__20346__auto__,(0)),cljs.core._nth.call(null,entry__20346__auto__,(1)));\n} else {\nreturn cljs.core.reduce.call(null,cljs.core._conj,this__20345__auto____$1,entry__20346__auto__);\n}\n});\n\nclojure.test.check.properties.ErrorResult.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"error\",\"error\",(661562495),null)], null);\n});\n\nclojure.test.check.properties.ErrorResult.cljs$lang$type = true;\n\nclojure.test.check.properties.ErrorResult.cljs$lang$ctorPrSeq = (function (this__20365__auto__){\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,\"clojure.test.check.properties/ErrorResult\");\n});\n\nclojure.test.check.properties.ErrorResult.cljs$lang$ctorPrWriter = (function (this__20365__auto__,writer__20366__auto__){\nreturn cljs.core._write.call(null,writer__20366__auto__,\"clojure.test.check.properties/ErrorResult\");\n});\n\nclojure.test.check.properties.__GT_ErrorResult = (function clojure$test$check$properties$__GT_ErrorResult(error){\nreturn (new clojure.test.check.properties.ErrorResult(error,null,null,null));\n});\n\nclojure.test.check.properties.map__GT_ErrorResult = (function clojure$test$check$properties$map__GT_ErrorResult(G__445){\nreturn (new clojure.test.check.properties.ErrorResult(new cljs.core.Keyword(null,\"error\",\"error\",(-978969032)).cljs$core$IFn$_invoke$arity$1(G__445),null,cljs.core.dissoc.call(null,G__445,new cljs.core.Keyword(null,\"error\",\"error\",(-978969032))),null));\n});\n\nclojure.test.check.properties.exception_QMARK_ = (function clojure$test$check$properties$exception_QMARK_(x){\nreturn (x instanceof Error);\n});\nclojure.test.check.properties.apply_gen = (function clojure$test$check$properties$apply_gen(function$){\nreturn (function (args){\nvar result = (function (){try{var ret = cljs.core.apply.call(null,function$,args);\nif(cljs.core.truth_(clojure.test.check.properties.exception_QMARK_.call(null,ret))){\nthrow ret;\n} else {\nreturn ret;\n}\n}catch (e452){var ex = e452;\nreturn clojure.test.check.properties.__GT_ErrorResult.call(null,ex);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"result\",\"result\",(1415092211)),result,new cljs.core.Keyword(null,\"function\",\"function\",(-2127255473)),function$,new cljs.core.Keyword(null,\"args\",\"args\",(1315556576)),args], null);\n});\n});\n/**\n * Creates a property (properties are also generators). A property\n *   is a generator that generates the result of applying the function\n *   under test with the realized arguments. Once realized, the arguments\n *   will be applied to `function` with `apply`.\n * \n *   Example:\n * \n *   (for-all* [gen/int gen/int] (fn [a b] (>= (+ a b) a)))\n *   \n */\nclojure.test.check.properties.for_all_STAR_ = (function clojure$test$check$properties$for_all_STAR_(args,function$){\nreturn clojure.test.check.generators.fmap.call(null,clojure.test.check.properties.apply_gen.call(null,function$),cljs.core.apply.call(null,clojure.test.check.generators.tuple,args));\n});\nclojure.test.check.properties.binding_vars = (function clojure$test$check$properties$binding_vars(bindings){\nreturn cljs.core.map.call(null,cljs.core.first,cljs.core.partition.call(null,(2),bindings));\n});\nclojure.test.check.properties.binding_gens = (function clojure$test$check$properties$binding_gens(bindings){\nreturn cljs.core.map.call(null,cljs.core.second,cljs.core.partition.call(null,(2),bindings));\n});\nvar ret__21071__auto___457 = (function (){\n/**\n * Macro sugar for `for-all*`. `for-all` lets you name the parameter\n *   and use them in expression, without wrapping them in a lambda. Like\n *   `for-all*`, it returns a property.\n * \n *   Examples\n * \n *   (for-all [a gen/int\n *          b gen/int]\n *  (>= (+ a b) a))\n *   \n */\nclojure.test.check.properties.for_all = (function clojure$test$check$properties$for_all(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___458 = arguments.length;\nvar i__21021__auto___459 = (0);\nwhile(true){\nif((i__21021__auto___459 < len__21020__auto___458)){\nargs__21023__auto__.push((arguments[i__21021__auto___459]));\n\nvar G__460 = (i__21021__auto___459 + (1));\ni__21021__auto___459 = G__460;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn clojure.test.check.properties.for_all.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\nclojure.test.check.properties.for_all.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,bindings,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"clojure.test.check.properties\",\"for-all*\",\"clojure.test.check.properties/for-all*\",(67088845),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,clojure.test.check.properties.binding_gens.call(null,bindings));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,clojure.test.check.properties.binding_vars.call(null,bindings))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\nclojure.test.check.properties.for_all.cljs$lang$maxFixedArity = (3);\n\nclojure.test.check.properties.for_all.cljs$lang$applyTo = (function (seq453){\nvar G__454 = cljs.core.first.call(null,seq453);\nvar seq453__$1 = cljs.core.next.call(null,seq453);\nvar G__455 = cljs.core.first.call(null,seq453__$1);\nvar seq453__$2 = cljs.core.next.call(null,seq453__$1);\nvar G__456 = cljs.core.first.call(null,seq453__$2);\nvar seq453__$3 = cljs.core.next.call(null,seq453__$2);\nreturn clojure.test.check.properties.for_all.cljs$core$IFn$_invoke$arity$variadic(G__454,G__455,G__456,seq453__$3);\n});\n\nreturn null;\n})()\n;\nclojure.test.check.properties.for_all.cljs$lang$macro = true;\n\n","clojure/test/check/random.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Date\",[\"^ \",\"~$prototype\",[\"^ \",\"~$valueOf\",[\"^ \"]]],\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$+\",\"~$*\",\"~$bit-xor\",\"~$bit-or\",\"~$bit-count\",\"~$unsigned-bit-shift-right\"]],\"~:name\",\"~$clojure.test.check.random\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$doubles\",\"~$clojure.test.check.random.doubles\",\"^C\",\"^C\",\"~$longs\",\"~$clojure.test.check.random.longs\",\"^E\",\"^E\"],\"~:uses\",[\"^ \",\"^<\",\"^E\",\"^:\",\"^E\",\"^=\",\"^E\",\"~$*\",\"^E\",\"^;\",\"^E\",\"~$+\",\"^E\"],\"~:defs\",[\"^ \",\"~$mix-gamma-const-1\",[\"^ \",\"~:meta\",[\"^ \",\"~:file\",\"^?\",\"~:line\",71,\"~:column\",16,\"~:end-line\",71,\"~:end-column\",33,\"~:private\",true],\"^O\",true,\"^>\",\"~$clojure.test.check.random/mix-gamma-const-1\",\"^J\",\"clojure/test/check/random.cljs\",\"^N\",33,\"^L\",1,\"^K\",71,\"^M\",71,\"~:tag\",\"~$any\"],\"~$make-java-util-splittable-random\",[\"^ \",\"~:protocol-inline\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",123,\"^L\",7,\"^M\",123,\"^N\",39,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^V\",[[\"~$seed\"]]]]]],\"^>\",\"~$clojure.test.check.random/make-java-util-splittable-random\",\"~:variadic\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",39,\"~:method-params\",[\"^V\",[[\"^X\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^V\",[null,null]],\"^L\",1,\"^K\",123,\"^M\",123,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"^X\"]]]]]],\"~$rand-long\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",20,\"^L\",4,\"^M\",20,\"^N\",13,\"~:protocol\",\"~$clojure.test.check.random/IRandom\",\"~:doc\",\"Returns a random goog.math.Long based on the given immutable RNG.\\n\\n  Note: to maintain independence you should not call more than one\\n  function in the IRandom protocol with the same argument\",\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$rng\"]]]]]],\"^15\",\"^16\",\"^>\",\"~$clojure.test.check.random/rand-long\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",13,\"^[\",[\"^V\",[[\"^18\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^K\",19,\"^M\",20,\"^12\",1,\"^13\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"^18\"]]]]],\"^17\",\"Returns a random goog.math.Long based on the given immutable RNG.\\n\\n  Note: to maintain independence you should not call more than one\\n  function in the IRandom protocol with the same argument\"],\"~$mix-64\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",62,\"^L\",17,\"^M\",62,\"^N\",23,\"^O\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$n\"]]]]]],\"^O\",true,\"^>\",\"~$clojure.test.check.random/mix-64\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",23,\"^[\",[\"^V\",[[\"~$n\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^K\",62,\"^M\",62,\"^12\",1,\"^13\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$n\"]]]]]],\"~$golden-gamma\",[\"^ \",\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",120,\"^L\",16,\"^M\",120,\"^N\",28,\"^O\",true],\"^O\",true,\"^>\",\"~$clojure.test.check.random/golden-gamma\",\"^J\",\"clojure/test/check/random.cljs\",\"^N\",28,\"^L\",1,\"^K\",120,\"^M\",120,\"^Q\",\"^R\"],\"~$mix-gamma-const-2\",[\"^ \",\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",72,\"^L\",16,\"^M\",72,\"^N\",33,\"^O\",true],\"^O\",true,\"^>\",\"~$clojure.test.check.random/mix-gamma-const-2\",\"^J\",\"clojure/test/check/random.cljs\",\"^N\",33,\"^L\",1,\"^K\",72,\"^M\",72,\"^Q\",\"^R\"],\"~$mix-64-const-2\",[\"^ \",\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",60,\"^L\",16,\"^M\",60,\"^N\",30,\"^O\",true],\"^O\",true,\"^>\",\"~$clojure.test.check.random/mix-64-const-2\",\"^J\",\"clojure/test/check/random.cljs\",\"^N\",30,\"^L\",1,\"^K\",60,\"^M\",60,\"^Q\",\"^R\"],\"~$bxoubsr\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",54,\"^L\",17,\"^M\",54,\"^N\",24,\"^O\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$x\",\"~$n\"]]]]],\"^17\",\"Performs (-> x (unsigned-bit-shift-right n) (bit-xor x)).\"],\"^O\",true,\"^>\",\"~$clojure.test.check.random/bxoubsr\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",24,\"^[\",[\"^V\",[[\"~$x\",\"~$n\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^K\",54,\"^M\",54,\"^12\",2,\"^13\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$x\",\"~$n\"]]]]],\"^17\",\"Performs (-> x (unsigned-bit-shift-right n) (bit-xor x)).\"],\"~$make-random\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",139,\"^L\",7,\"^M\",139,\"^N\",18,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[],[\"^X\"]]]]],\"^17\",\"Given an optional integer (or goog.math.Long) seed, returns an\\n  implementation of the IRandom protocol.\",\"~:top-fn\",[\"^ \",\"^Z\",false,\"^12\",1,\"^[\",[\"^V\",[[],[\"^X\"]]],\"^U\",[\"^V\",[[],[\"^X\"]]],\"^11\",[\"^V\",[null,null]]]],\"^>\",\"~$clojure.test.check.random/make-random\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",18,\"^1E\",[\"^ \",\"^Z\",false,\"^12\",1,\"^[\",[\"^V\",[[],[\"^X\"]]],\"^U\",[\"^V\",[[],[\"^X\"]]],\"^11\",[\"^V\",[null,null]]],\"^[\",[\"^V\",[[],[\"^X\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^K\",139,\"^M\",139,\"^12\",1,\"^13\",true,\"^U\",[\"^V\",[[],[\"^X\"]]],\"^17\",\"Given an optional integer (or goog.math.Long) seed, returns an\\n  implementation of the IRandom protocol.\"],\"~$mix-gamma\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",75,\"^L\",17,\"^M\",75,\"^N\",26,\"^O\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$n\"]]]]]],\"^O\",true,\"^>\",\"~$clojure.test.check.random/mix-gamma\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",26,\"^[\",[\"^V\",[[\"~$n\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^K\",75,\"^M\",75,\"^12\",1,\"^13\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$n\"]]]]]],\"~$mix-gamma-const-3\",[\"^ \",\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",73,\"^L\",16,\"^M\",73,\"^N\",33,\"^O\",true],\"^O\",true,\"^>\",\"~$clojure.test.check.random/mix-gamma-const-3\",\"^J\",\"clojure/test/check/random.cljs\",\"^N\",33,\"^L\",1,\"^K\",73,\"^M\",73,\"^Q\",\"^R\"],\"~$split-n\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",37,\"^L\",4,\"^M\",37,\"^N\",11,\"^15\",\"^16\",\"^17\",\"Returns a collection of `n` RNGs, which should generate\\n  sufficiently independent random data.\\n\\n  Note: to maintain independence you should not call more than one\\n  function in the IRandom protocol with the same argument\",\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"^18\",\"~$n\"]]]]]],\"^15\",\"^16\",\"^>\",\"~$clojure.test.check.random/split-n\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",11,\"^[\",[\"^V\",[[\"^18\",\"~$n\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^K\",19,\"^M\",37,\"^12\",2,\"^13\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"^18\",\"~$n\"]]]]],\"^17\",\"Returns a collection of `n` RNGs, which should generate\\n  sufficiently independent random data.\\n\\n  Note: to maintain independence you should not call more than one\\n  function in the IRandom protocol with the same argument\"],\"~$next-rng\",[\"^ \",\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",130,\"^L\",16,\"^M\",130,\"^N\",24,\"^O\",true],\"^O\",true,\"^>\",\"~$clojure.test.check.random/next-rng\",\"^J\",\"clojure/test/check/random.cljs\",\"^N\",24,\"^L\",1,\"^K\",130,\"^M\",130,\"^Q\",\"~$function\"],\"~$hex-long\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",49,\"^L\",17,\"^M\",49,\"^N\",25,\"^O\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$s\"]]]]],\"^17\",\"Helper for defining constants.\"],\"^O\",true,\"^>\",\"~$clojure.test.check.random/hex-long\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",25,\"^[\",[\"^V\",[[\"~$s\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^K\",49,\"^M\",49,\"^12\",1,\"^13\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$s\"]]]]],\"^17\",\"Helper for defining constants.\"],\"~$rand-double\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",25,\"^L\",4,\"^M\",25,\"^N\",15,\"^15\",\"^16\",\"^17\",\"Returns a random double between 0.0 (inclusive) and 1.0 (exclusive)\\n  based on the given immutable RNG.\\n\\n  Note: to maintain independence you should not call more than one\\n  function in the IRandom protocol with the same argument\",\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"^18\"]]]]]],\"^15\",\"^16\",\"^>\",\"~$clojure.test.check.random/rand-double\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",15,\"^[\",[\"^V\",[[\"^18\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^K\",19,\"^M\",25,\"^12\",1,\"^13\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"^18\"]]]]],\"^17\",\"Returns a random double between 0.0 (inclusive) and 1.0 (exclusive)\\n  based on the given immutable RNG.\\n\\n  Note: to maintain independence you should not call more than one\\n  function in the IRandom protocol with the same argument\"],\"~$mix-64-const-1\",[\"^ \",\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",59,\"^L\",16,\"^M\",59,\"^N\",30,\"^O\",true],\"^O\",true,\"^>\",\"~$clojure.test.check.random/mix-64-const-1\",\"^J\",\"clojure/test/check/random.cljs\",\"^N\",30,\"^L\",1,\"^K\",59,\"^M\",59,\"^Q\",\"^R\"],\"~$split\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^J\",\"^?\",\"^K\",31,\"^L\",4,\"^M\",31,\"^N\",9,\"^15\",\"^16\",\"^17\",\"Returns two new RNGs [rng1 rng2], which should generate\\n  sufficiently independent random data.\\n\\n  Note: to maintain independence you should not call more than one\\n  function in the IRandom protocol with the same argument\",\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"^18\"]]]]]],\"^15\",\"^16\",\"^>\",\"~$clojure.test.check.random/split\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",9,\"^[\",[\"^V\",[[\"^18\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^K\",19,\"^M\",31,\"^12\",1,\"^13\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"^18\"]]]]],\"^17\",\"Returns two new RNGs [rng1 rng2], which should generate\\n  sufficiently independent random data.\\n\\n  Note: to maintain independence you should not call more than one\\n  function in the IRandom protocol with the same argument\"],\"~$JavaUtilSplittableRandom\",[\"^ \",\"~:num-fields\",2,\"~:protocols\",[\"^9\",[\"^16\"]],\"^>\",\"~$clojure.test.check.random/JavaUtilSplittableRandom\",\"^J\",\"clojure/test/check/random.cljs\",\"^N\",34,\"~:type\",true,\"^L\",10,\"^K\",91,\"~:record\",false,\"^M\",91,\"~:skip-protocol-flag\",null],\"~$IRandom\",[\"^ \",\"^I\",[\"^ \",\"~:protocol-symbol\",true,\"^J\",\"^?\",\"^N\",21,\"^L\",14,\"^K\",19,\"~:protocol-info\",[\"^ \",\"~:methods\",[\"^ \",\"^14\",[[\"^18\"]],\"^1R\",[[\"^18\"]],\"^1V\",[[\"^18\"]],\"^1K\",[[\"^18\",\"~$n\"]]]],\"^M\",19,\"^17\",null,\"~:jsdoc\",[\"^V\",[\"@interface\"]]],\"^24\",true,\"^>\",\"^16\",\"^J\",\"clojure/test/check/random.cljs\",\"^N\",21,\"^L\",1,\"^K\",19,\"^25\",[\"^ \",\"^26\",[\"^ \",\"^14\",[[\"^18\"]],\"^1R\",[[\"^18\"]],\"^1V\",[[\"^18\"]],\"^1K\",[[\"^18\",\"~$n\"]]]],\"~:info\",null,\"^M\",19,\"^Q\",\"^R\",\"~:impls\",[\"^9\",[\"^1[\"]],\"^17\",null,\"^27\",[\"^V\",[\"@interface\"]]],\"~$->JavaUtilSplittableRandom\",[\"^ \",\"^T\",null,\"^I\",[\"^ \",\"^1Z\",[\"^9\",[\"^16\"]],\"^J\",\"^?\",\"^N\",34,\"^L\",10,\"~:factory\",\"~:positional\",\"^K\",91,\"^M\",91,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"~$gamma\",\"~$state\"]]]]],\"^22\",null],\"^1Z\",[\"^9\",[\"^16\"]],\"^>\",\"~$clojure.test.check.random/->JavaUtilSplittableRandom\",\"^Z\",false,\"^J\",\"clojure/test/check/random.cljs\",\"^N\",34,\"^[\",[\"^V\",[[\"^2=\",\"^2>\"]]],\"^10\",null,\"^11\",[\"^V\",[null,null]],\"^L\",1,\"^2;\",\"^2<\",\"^K\",91,\"^M\",91,\"^12\",2,\"^13\",true,\"^U\",[\"^V\",[\"^W\",[\"^V\",[[\"^2=\",\"^2>\"]]]]],\"^22\",null]],\"~:require-macros\",[\"^ \"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^9\",[\"^2=\",\"^2>\",\"~:seed\",\"~:state\",\"~:returned\"]],\"~:order\",[\"^2=\",\"^2>\",\"^2C\",\"^2D\",\"^2E\"]],\"^17\",\"Purely functional and splittable pseudo-random number generators.\"]","clojure/walk.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$clojure.walk\",\"~:imports\",null,\"~:requires\",null,\"~:uses\",null,\"~:defs\",[\"^ \",\"~$walk\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/walk.cljs\",\"~:line\",37,\"~:column\",7,\"~:end-line\",37,\"~:end-column\",11,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^D\",[[\"~$inner\",\"~$outer\",\"~$form\"]]]]],\"~:doc\",\"Traverses form, an arbitrary data structure.  inner and outer are\\n  functions.  Applies inner to each element of form, building up a\\n  data structure of the same type, then applies outer to the result.\\n  Recognizes all Clojure data structures. Consumes seqs as with doall.\",\"~:added\",\"1.1\"],\"^J\",\"1.1\",\"^5\",\"~$clojure.walk/walk\",\"~:variadic\",false,\"^>\",\"out/clojure/walk.cljs\",\"^B\",11,\"~:method-params\",[\"^D\",[[\"^F\",\"^G\",\"^H\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^D\",[null,null]],\"^@\",1,\"^?\",37,\"^A\",37,\"~:max-fixed-arity\",3,\"~:fn-var\",true,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"^F\",\"^G\",\"^H\"]]]]],\"^I\",\"Traverses form, an arbitrary data structure.  inner and outer are\\n  functions.  Applies inner to each element of form, building up a\\n  data structure of the same type, then applies outer to the result.\\n  Recognizes all Clojure data structures. Consumes seqs as with doall.\"],\"~$postwalk\",[\"^ \",\"^<\",null,\"^=\",[\"^ \",\"^>\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/walk.cljs\",\"^?\",52,\"^@\",7,\"^A\",52,\"^B\",15,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"~$f\",\"^H\"]]]]],\"^I\",\"Performs a depth-first, post-order traversal of form.  Calls f on\\n  each sub-form, uses f's return value in place of the original.\\n  Recognizes all Clojure data structures. Consumes seqs as with doall.\",\"^J\",\"1.1\"],\"^J\",\"1.1\",\"^5\",\"~$clojure.walk/postwalk\",\"^L\",false,\"^>\",\"out/clojure/walk.cljs\",\"^B\",15,\"^M\",[\"^D\",[[\"~$f\",\"^H\"]]],\"^N\",null,\"^O\",[\"^D\",[null,null]],\"^@\",1,\"^?\",52,\"^A\",52,\"^P\",2,\"^Q\",true,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"~$f\",\"^H\"]]]]],\"^I\",\"Performs a depth-first, post-order traversal of form.  Calls f on\\n  each sub-form, uses f's return value in place of the original.\\n  Recognizes all Clojure data structures. Consumes seqs as with doall.\"],\"~$prewalk\",[\"^ \",\"^<\",null,\"^=\",[\"^ \",\"^>\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/walk.cljs\",\"^?\",60,\"^@\",7,\"^A\",60,\"^B\",14,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"~$f\",\"^H\"]]]]],\"^I\",\"Like postwalk, but does pre-order traversal.\",\"^J\",\"1.1\"],\"^J\",\"1.1\",\"^5\",\"~$clojure.walk/prewalk\",\"^L\",false,\"^>\",\"out/clojure/walk.cljs\",\"^B\",14,\"^M\",[\"^D\",[[\"~$f\",\"^H\"]]],\"^N\",null,\"^O\",[\"^D\",[null,null]],\"^@\",1,\"^?\",60,\"^A\",60,\"^P\",2,\"^Q\",true,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"~$f\",\"^H\"]]]]],\"^I\",\"Like postwalk, but does pre-order traversal.\"],\"~$keywordize-keys\",[\"^ \",\"^<\",null,\"^=\",[\"^ \",\"^>\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/walk.cljs\",\"^?\",66,\"^@\",7,\"^A\",66,\"^B\",22,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"~$m\"]]]]],\"^I\",\"Recursively transforms all map keys from strings to keywords.\",\"^J\",\"1.1\"],\"^J\",\"1.1\",\"^5\",\"~$clojure.walk/keywordize-keys\",\"^L\",false,\"^>\",\"out/clojure/walk.cljs\",\"^B\",22,\"^M\",[\"^D\",[[\"~$m\"]]],\"^N\",null,\"^O\",[\"^D\",[null,null]],\"^@\",1,\"^?\",66,\"^A\",66,\"^P\",1,\"^Q\",true,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"~$m\"]]]]],\"^I\",\"Recursively transforms all map keys from strings to keywords.\"],\"~$stringify-keys\",[\"^ \",\"^<\",null,\"^=\",[\"^ \",\"^>\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/walk.cljs\",\"^?\",74,\"^@\",7,\"^A\",74,\"^B\",21,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"~$m\"]]]]],\"^I\",\"Recursively transforms all map keys from keywords to strings.\",\"^J\",\"1.1\"],\"^J\",\"1.1\",\"^5\",\"~$clojure.walk/stringify-keys\",\"^L\",false,\"^>\",\"out/clojure/walk.cljs\",\"^B\",21,\"^M\",[\"^D\",[[\"~$m\"]]],\"^N\",null,\"^O\",[\"^D\",[null,null]],\"^@\",1,\"^?\",74,\"^A\",74,\"^P\",1,\"^Q\",true,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"~$m\"]]]]],\"^I\",\"Recursively transforms all map keys from keywords to strings.\"],\"~$prewalk-replace\",[\"^ \",\"^<\",null,\"^=\",[\"^ \",\"^>\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/walk.cljs\",\"^?\",82,\"^@\",7,\"^A\",82,\"^B\",22,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"~$smap\",\"^H\"]]]]],\"^I\",\"Recursively transforms form by replacing keys in smap with their\\n  values.  Like clojure/replace but works on any data structure.  Does\\n  replacement at the root of the tree first.\",\"^J\",\"1.1\"],\"^J\",\"1.1\",\"^5\",\"~$clojure.walk/prewalk-replace\",\"^L\",false,\"^>\",\"out/clojure/walk.cljs\",\"^B\",22,\"^M\",[\"^D\",[[\"^[\",\"^H\"]]],\"^N\",null,\"^O\",[\"^D\",[null,null]],\"^@\",1,\"^?\",82,\"^A\",82,\"^P\",2,\"^Q\",true,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"^[\",\"^H\"]]]]],\"^I\",\"Recursively transforms form by replacing keys in smap with their\\n  values.  Like clojure/replace but works on any data structure.  Does\\n  replacement at the root of the tree first.\"],\"~$postwalk-replace\",[\"^ \",\"^<\",null,\"^=\",[\"^ \",\"^>\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/walk.cljs\",\"^?\",90,\"^@\",7,\"^A\",90,\"^B\",23,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"^[\",\"^H\"]]]]],\"^I\",\"Recursively transforms form by replacing keys in smap with their\\n  values.  Like clojure/replace but works on any data structure.  Does\\n  replacement at the leaves of the tree first.\",\"^J\",\"1.1\"],\"^J\",\"1.1\",\"^5\",\"~$clojure.walk/postwalk-replace\",\"^L\",false,\"^>\",\"out/clojure/walk.cljs\",\"^B\",23,\"^M\",[\"^D\",[[\"^[\",\"^H\"]]],\"^N\",null,\"^O\",[\"^D\",[null,null]],\"^@\",1,\"^?\",90,\"^A\",90,\"^P\",2,\"^Q\",true,\"^C\",[\"^D\",[\"^E\",[\"^D\",[[\"^[\",\"^H\"]]]]],\"^I\",\"Recursively transforms form by replacing keys in smap with their\\n  values.  Like clojure/replace but works on any data structure.  Does\\n  replacement at the leaves of the tree first.\"]],\"~:require-macros\",null,\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^4\",[\"~:else\"]],\"~:order\",[\"^16\"]],\"^I\",\"This file defines a generic tree walker for Clojure data\\nstructures.  It takes any data structure (list, vector, map, set,\\nseq), calls a function on every element, and uses the return value\\nof the function in place of the original.  This makes it fairly\\neasy to write recursive search-and-replace functions, as shown in\\nthe examples.\\n\\nNote: \\\"walk\\\" supports all Clojure data structures EXCEPT maps\\ncreated with sorted-map-by.  There is no (obvious) way to retrieve\\nthe sorting function.\"]","cljs/analyzer/macros$macros.js":"goog.provide('cljs.analyzer.macros');\ngoog.require('cljs.core');\nvar ret__21071__auto___558 = (function (){\ncljs.analyzer.macros.with_warning_handlers = (function cljs$analyzer$macros$with_warning_handlers(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___559 = arguments.length;\nvar i__21021__auto___560 = (0);\nwhile(true){\nif((i__21021__auto___560 < len__21020__auto___559)){\nargs__21023__auto__.push((arguments[i__21021__auto___560]));\n\nvar G__561 = (i__21021__auto___560 + (1));\ni__21021__auto___560 = G__561;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.analyzer.macros.with_warning_handlers.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.analyzer.macros.with_warning_handlers.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,handlers,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-warning-handlers*\",\"cljs.analyzer/*cljs-warning-handlers*\",(882579751),null)),(function (){var x__20731__auto__ = handlers;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\n});\n\ncljs.analyzer.macros.with_warning_handlers.cljs$lang$maxFixedArity = (3);\n\ncljs.analyzer.macros.with_warning_handlers.cljs$lang$applyTo = (function (seq554){\nvar G__555 = cljs.core.first.call(null,seq554);\nvar seq554__$1 = cljs.core.next.call(null,seq554);\nvar G__556 = cljs.core.first.call(null,seq554__$1);\nvar seq554__$2 = cljs.core.next.call(null,seq554__$1);\nvar G__557 = cljs.core.first.call(null,seq554__$2);\nvar seq554__$3 = cljs.core.next.call(null,seq554__$2);\nreturn cljs.analyzer.macros.with_warning_handlers.cljs$core$IFn$_invoke$arity$variadic(G__555,G__556,G__557,seq554__$3);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.macros.with_warning_handlers.cljs$lang$macro = true;\n\nvar ret__21071__auto___565 = (function (){\ncljs.analyzer.macros.no_warn = (function cljs$analyzer$macros$no_warn(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___566 = arguments.length;\nvar i__21021__auto___567 = (0);\nwhile(true){\nif((i__21021__auto___567 < len__21020__auto___566)){\nargs__21023__auto__.push((arguments[i__21021__auto___567]));\n\nvar G__568 = (i__21021__auto___567 + (1));\ni__21021__auto___567 = G__568;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.analyzer.macros.no_warn.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n});\n\ncljs.analyzer.macros.no_warn.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-warnings*\",\"cljs.analyzer/*cljs-warnings*\",(-289667730),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"zipmap\",\"cljs.core/zipmap\",(-1902130674),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"keys\",\"cljs.core/keys\",(-927561820),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-warnings*\",\"cljs.analyzer/*cljs-warnings*\",(-289667730),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"repeat\",\"cljs.core/repeat\",(-89455077),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,false)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\n});\n\ncljs.analyzer.macros.no_warn.cljs$lang$maxFixedArity = (2);\n\ncljs.analyzer.macros.no_warn.cljs$lang$applyTo = (function (seq562){\nvar G__563 = cljs.core.first.call(null,seq562);\nvar seq562__$1 = cljs.core.next.call(null,seq562);\nvar G__564 = cljs.core.first.call(null,seq562__$1);\nvar seq562__$2 = cljs.core.next.call(null,seq562__$1);\nreturn cljs.analyzer.macros.no_warn.cljs$core$IFn$_invoke$arity$variadic(G__563,G__564,seq562__$2);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.macros.no_warn.cljs$lang$macro = true;\n\nvar ret__21071__auto___573 = (function (){\ncljs.analyzer.macros.with_core_macros = (function cljs$analyzer$macros$with_core_macros(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___574 = arguments.length;\nvar i__21021__auto___575 = (0);\nwhile(true){\nif((i__21021__auto___575 < len__21020__auto___574)){\nargs__21023__auto__.push((arguments[i__21021__auto___575]));\n\nvar G__576 = (i__21021__auto___575 + (1));\ni__21021__auto___575 = G__576;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.analyzer.macros.with_core_macros.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.analyzer.macros.with_core_macros.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,path,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",(120293186),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"not=\",\"cljs.core/not=\",(1017572457),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-macros-path*\",\"cljs.analyzer/*cljs-macros-path*\",(-1737616995),null)),(function (){var x__20731__auto__ = path;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"reset!\",\"cljs.core/reset!\",(657404621),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"-cljs-macros-loaded\",\"cljs.analyzer/-cljs-macros-loaded\",(1918493478),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,false)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-macros-path*\",\"cljs.analyzer/*cljs-macros-path*\",(-1737616995),null)),(function (){var x__20731__auto__ = path;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.analyzer.macros.with_core_macros.cljs$lang$maxFixedArity = (3);\n\ncljs.analyzer.macros.with_core_macros.cljs$lang$applyTo = (function (seq569){\nvar G__570 = cljs.core.first.call(null,seq569);\nvar seq569__$1 = cljs.core.next.call(null,seq569);\nvar G__571 = cljs.core.first.call(null,seq569__$1);\nvar seq569__$2 = cljs.core.next.call(null,seq569__$1);\nvar G__572 = cljs.core.first.call(null,seq569__$2);\nvar seq569__$3 = cljs.core.next.call(null,seq569__$2);\nreturn cljs.analyzer.macros.with_core_macros.cljs$core$IFn$_invoke$arity$variadic(G__570,G__571,G__572,seq569__$3);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.macros.with_core_macros.cljs$lang$macro = true;\n\nvar ret__21071__auto___581 = (function (){\ncljs.analyzer.macros.with_core_macros_file = (function cljs$analyzer$macros$with_core_macros_file(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___582 = arguments.length;\nvar i__21021__auto___583 = (0);\nwhile(true){\nif((i__21021__auto___583 < len__21020__auto___582)){\nargs__21023__auto__.push((arguments[i__21021__auto___583]));\n\nvar G__584 = (i__21021__auto___583 + (1));\ni__21021__auto___583 = G__584;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.analyzer.macros.with_core_macros_file.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.analyzer.macros.with_core_macros_file.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,path,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",(120293186),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"not=\",\"cljs.core/not=\",(1017572457),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-macros-path*\",\"cljs.analyzer/*cljs-macros-path*\",(-1737616995),null)),(function (){var x__20731__auto__ = path;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"reset!\",\"cljs.core/reset!\",(657404621),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"-cljs-macros-loaded\",\"cljs.analyzer/-cljs-macros-loaded\",(1918493478),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,false)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-macros-path*\",\"cljs.analyzer/*cljs-macros-path*\",(-1737616995),null)),(function (){var x__20731__auto__ = path;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*cljs-macros-is-classpath*\",\"cljs.analyzer/*cljs-macros-is-classpath*\",(1674023778),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,false))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.analyzer.macros.with_core_macros_file.cljs$lang$maxFixedArity = (3);\n\ncljs.analyzer.macros.with_core_macros_file.cljs$lang$applyTo = (function (seq577){\nvar G__578 = cljs.core.first.call(null,seq577);\nvar seq577__$1 = cljs.core.next.call(null,seq577);\nvar G__579 = cljs.core.first.call(null,seq577__$1);\nvar seq577__$2 = cljs.core.next.call(null,seq577__$1);\nvar G__580 = cljs.core.first.call(null,seq577__$2);\nvar seq577__$3 = cljs.core.next.call(null,seq577__$2);\nreturn cljs.analyzer.macros.with_core_macros_file.cljs$core$IFn$_invoke$arity$variadic(G__578,G__579,G__580,seq577__$3);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.macros.with_core_macros_file.cljs$lang$macro = true;\n\nvar ret__21071__auto___589 = (function (){\ncljs.analyzer.macros.wrapping_errors = (function cljs$analyzer$macros$wrapping_errors(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___590 = arguments.length;\nvar i__21021__auto___591 = (0);\nwhile(true){\nif((i__21021__auto___591 < len__21020__auto___590)){\nargs__21023__auto__.push((arguments[i__21021__auto___591]));\n\nvar G__592 = (i__21021__auto___591 + (1));\ni__21021__auto___591 = G__592;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.analyzer.macros.wrapping_errors.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.analyzer.macros.wrapping_errors.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,env,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"try\",\"try\",(-1273693247),null)),body,(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"catch\",\"catch\",(-1616370245),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"default\",\"default\",(-1987822328))),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"err__57__auto__\",\"err__57__auto__\",(1539494531),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"analysis-error?\",\"cljs.analyzer/analysis-error?\",(-1824961346),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"err__57__auto__\",\"err__57__auto__\",(1539494531),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"throw\",\"throw\",(595905694),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"err__57__auto__\",\"err__57__auto__\",(1539494531),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"throw\",\"throw\",(595905694),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",(1575241885),null)),(function (){var x__20731__auto__ = env;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\".-message\",\".-message\",(-1827250821),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"err__57__auto__\",\"err__57__auto__\",(1539494531),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"err__57__auto__\",\"err__57__auto__\",(1539494531),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.analyzer.macros.wrapping_errors.cljs$lang$maxFixedArity = (3);\n\ncljs.analyzer.macros.wrapping_errors.cljs$lang$applyTo = (function (seq585){\nvar G__586 = cljs.core.first.call(null,seq585);\nvar seq585__$1 = cljs.core.next.call(null,seq585);\nvar G__587 = cljs.core.first.call(null,seq585__$1);\nvar seq585__$2 = cljs.core.next.call(null,seq585__$1);\nvar G__588 = cljs.core.first.call(null,seq585__$2);\nvar seq585__$3 = cljs.core.next.call(null,seq585__$2);\nreturn cljs.analyzer.macros.wrapping_errors.cljs$core$IFn$_invoke$arity$variadic(G__586,G__587,G__588,seq585__$3);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.macros.wrapping_errors.cljs$lang$macro = true;\n\nvar ret__21071__auto___596 = (function (){\ncljs.analyzer.macros.disallowing_recur = (function cljs$analyzer$macros$disallowing_recur(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___597 = arguments.length;\nvar i__21021__auto___598 = (0);\nwhile(true){\nif((i__21021__auto___598 < len__21020__auto___597)){\nargs__21023__auto__.push((arguments[i__21021__auto___598]));\n\nvar G__599 = (i__21021__auto___598 + (1));\ni__21021__auto___598 = G__599;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.analyzer.macros.disallowing_recur.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n});\n\ncljs.analyzer.macros.disallowing_recur.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*recur-frames*\",\"cljs.analyzer/*recur-frames*\",(-431441741),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"cons\",\"cljs.core/cons\",(96507417),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,null),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*recur-frames*\",\"cljs.analyzer/*recur-frames*\",(-431441741),null))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\n});\n\ncljs.analyzer.macros.disallowing_recur.cljs$lang$maxFixedArity = (2);\n\ncljs.analyzer.macros.disallowing_recur.cljs$lang$applyTo = (function (seq593){\nvar G__594 = cljs.core.first.call(null,seq593);\nvar seq593__$1 = cljs.core.next.call(null,seq593);\nvar G__595 = cljs.core.first.call(null,seq593__$1);\nvar seq593__$2 = cljs.core.next.call(null,seq593__$1);\nreturn cljs.analyzer.macros.disallowing_recur.cljs$core$IFn$_invoke$arity$variadic(G__594,G__595,seq593__$2);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.macros.disallowing_recur.cljs$lang$macro = true;\n\nvar ret__21071__auto___603 = (function (){\ncljs.analyzer.macros.allowing_redef = (function cljs$analyzer$macros$allowing_redef(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___604 = arguments.length;\nvar i__21021__auto___605 = (0);\nwhile(true){\nif((i__21021__auto___605 < len__21020__auto___604)){\nargs__21023__auto__.push((arguments[i__21021__auto___605]));\n\nvar G__606 = (i__21021__auto___605 + (1));\ni__21021__auto___605 = G__606;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.analyzer.macros.allowing_redef.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n});\n\ncljs.analyzer.macros.allowing_redef.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*allow-redef*\",\"cljs.analyzer/*allow-redef*\",(-501091249),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,true))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\n});\n\ncljs.analyzer.macros.allowing_redef.cljs$lang$maxFixedArity = (2);\n\ncljs.analyzer.macros.allowing_redef.cljs$lang$applyTo = (function (seq600){\nvar G__601 = cljs.core.first.call(null,seq600);\nvar seq600__$1 = cljs.core.next.call(null,seq600);\nvar G__602 = cljs.core.first.call(null,seq600__$1);\nvar seq600__$2 = cljs.core.next.call(null,seq600__$1);\nreturn cljs.analyzer.macros.allowing_redef.cljs$core$IFn$_invoke$arity$variadic(G__601,G__602,seq600__$2);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.macros.allowing_redef.cljs$lang$macro = true;\n\nvar ret__21071__auto___610 = (function (){\ncljs.analyzer.macros.disallowing_ns_STAR_ = (function cljs$analyzer$macros$disallowing_ns_STAR_(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___611 = arguments.length;\nvar i__21021__auto___612 = (0);\nwhile(true){\nif((i__21021__auto___612 < len__21020__auto___611)){\nargs__21023__auto__.push((arguments[i__21021__auto___612]));\n\nvar G__613 = (i__21021__auto___612 + (1));\ni__21021__auto___612 = G__613;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.analyzer.macros.disallowing_ns_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n});\n\ncljs.analyzer.macros.disallowing_ns_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.analyzer\",\"*allow-ns*\",\"cljs.analyzer/*allow-ns*\",(-141648458),null)),cljs.core._conj.call(null,cljs.core.List.EMPTY,false))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\n});\n\ncljs.analyzer.macros.disallowing_ns_STAR_.cljs$lang$maxFixedArity = (2);\n\ncljs.analyzer.macros.disallowing_ns_STAR_.cljs$lang$applyTo = (function (seq607){\nvar G__608 = cljs.core.first.call(null,seq607);\nvar seq607__$1 = cljs.core.next.call(null,seq607);\nvar G__609 = cljs.core.first.call(null,seq607__$1);\nvar seq607__$2 = cljs.core.next.call(null,seq607__$1);\nreturn cljs.analyzer.macros.disallowing_ns_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__608,G__609,seq607__$2);\n});\n\nreturn null;\n})()\n;\ncljs.analyzer.macros.disallowing_ns_STAR_.cljs$lang$macro = true;\n\n","clojure/test/check/rose_tree.js":"// Compiled by ClojureScript 1.9.542\ngoog.provide(\"clojure.test.check.rose_tree\");\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n*/\nclojure.test.check.rose_tree.RoseTree = (function (root,children){\nthis.root = root;\nthis.children = children;\nthis.cljs$lang$protocol_mask$partition0$ = 16;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n})\nclojure.test.check.rose_tree.RoseTree.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (this$,i){\nvar self__ = this;\nvar this$__$1 = this;\nif(cljs.core._EQ_.call(null,i,(0))){\nreturn self__.root;\n} else {\nif(cljs.core._EQ_.call(null,i,(1))){\nreturn self__.children;\n} else {\nthrow (new Error(\"Index out of bounds in rose tree\"));\n\n}\n}\n});\n\nclojure.test.check.rose_tree.RoseTree.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (this$,i,not_found){\nvar self__ = this;\nvar this$__$1 = this;\nif(cljs.core._EQ_.call(null,i,(0))){\nreturn self__.root;\n} else {\nif(cljs.core._EQ_.call(null,i,(1))){\nreturn self__.children;\n} else {\nreturn not_found;\n\n}\n}\n});\n\nclojure.test.check.rose_tree.RoseTree.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"root\",\"root\",(1191874074),null),new cljs.core.Symbol(null,\"children\",\"children\",(699969545),null)], null);\n});\n\nclojure.test.check.rose_tree.RoseTree.cljs$lang$type = true;\n\nclojure.test.check.rose_tree.RoseTree.cljs$lang$ctorStr = \"clojure.test.check.rose-tree/RoseTree\";\n\nclojure.test.check.rose_tree.RoseTree.cljs$lang$ctorPrWriter = (function (this__20318__auto__,writer__20319__auto__,opt__20320__auto__){\nreturn cljs.core._write.call(null,writer__20319__auto__,\"clojure.test.check.rose-tree/RoseTree\");\n});\n\nclojure.test.check.rose_tree.__GT_RoseTree = (function clojure$test$check$rose_tree$__GT_RoseTree(root,children){\nreturn (new clojure.test.check.rose_tree.RoseTree(root,children));\n});\n\n/**\n * Returns the root of a Rose tree.\n */\nclojure.test.check.rose_tree.root = (function clojure$test$check$rose_tree$root(rose){\nreturn rose.root;\n});\n/**\n * Returns the children of the root of the Rose tree.\n */\nclojure.test.check.rose_tree.children = (function clojure$test$check$rose_tree$children(rose){\nreturn rose.children;\n});\nclojure.test.check.rose_tree.make_rose = (function clojure$test$check$rose_tree$make_rose(root,children){\nreturn (new clojure.test.check.rose_tree.RoseTree(root,children));\n});\n/**\n * Exclude the nth value in a collection.\n */\nclojure.test.check.rose_tree.exclude_nth = (function clojure$test$check$rose_tree$exclude_nth(n,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__19472__auto__ = cljs.core.seq.call(null,coll);\nif(temp__19472__auto__){\nvar s = temp__19472__auto__;\nif((n === (0))){\nreturn cljs.core.rest.call(null,coll);\n} else {\nreturn cljs.core.cons.call(null,cljs.core.first.call(null,s),clojure.test.check.rose_tree.exclude_nth.call(null,(n - (1)),cljs.core.rest.call(null,s)));\n}\n} else {\nreturn null;\n}\n}),null,null));\n});\n/**\n * Turn a tree of trees into a single tree. Does this by concatenating\n *   children of the inner and outer trees.\n */\nclojure.test.check.rose_tree.join = (function clojure$test$check$rose_tree$join(rose){\nvar outer_root = clojure.test.check.rose_tree.root.call(null,rose);\nvar outer_children = clojure.test.check.rose_tree.children.call(null,rose);\nvar inner_root = clojure.test.check.rose_tree.root.call(null,outer_root);\nvar inner_children = clojure.test.check.rose_tree.children.call(null,outer_root);\nreturn clojure.test.check.rose_tree.make_rose.call(null,inner_root,cljs.core.concat.call(null,cljs.core.map.call(null,clojure.test.check.rose_tree.join,outer_children),inner_children));\n});\n/**\n * Puts a value `x` into a Rose tree, with no children.\n */\nclojure.test.check.rose_tree.pure = (function clojure$test$check$rose_tree$pure(x){\nreturn clojure.test.check.rose_tree.make_rose.call(null,x,cljs.core.PersistentVector.EMPTY);\n});\n/**\n * Applies functions `f` to all values in the tree.\n */\nclojure.test.check.rose_tree.fmap = (function clojure$test$check$rose_tree$fmap(f,rose){\nreturn clojure.test.check.rose_tree.make_rose.call(null,f.call(null,clojure.test.check.rose_tree.root.call(null,rose)),cljs.core.map.call(null,(function (p1__1_SHARP_){\nreturn clojure.test.check.rose_tree.fmap.call(null,f,p1__1_SHARP_);\n}),clojure.test.check.rose_tree.children.call(null,rose)));\n});\n/**\n * Takes a Rose tree (m) and a function (k) from\n *   values to Rose tree and returns a new Rose tree.\n *   This is the monadic bind (>>=) for Rose trees.\n */\nclojure.test.check.rose_tree.bind = (function clojure$test$check$rose_tree$bind(m,k){\nreturn clojure.test.check.rose_tree.join.call(null,clojure.test.check.rose_tree.fmap.call(null,k,m));\n});\n/**\n * Returns a new Rose tree whose values pass `pred`. Values who\n *   do not pass `pred` have their children cut out as well.\n *   Takes a list of roses, not a rose\n */\nclojure.test.check.rose_tree.filter = (function clojure$test$check$rose_tree$filter(pred,rose){\nreturn clojure.test.check.rose_tree.make_rose.call(null,clojure.test.check.rose_tree.root.call(null,rose),cljs.core.map.call(null,(function (p1__2_SHARP_){\nreturn clojure.test.check.rose_tree.filter.call(null,pred,p1__2_SHARP_);\n}),cljs.core.filter.call(null,(function (p1__3_SHARP_){\nreturn pred.call(null,clojure.test.check.rose_tree.root.call(null,p1__3_SHARP_));\n}),clojure.test.check.rose_tree.children.call(null,rose))));\n});\n/**\n * Create a seq of vectors, where each rose in turn, has been replaced\n *   by its children.\n */\nclojure.test.check.rose_tree.permutations = (function clojure$test$check$rose_tree$permutations(roses){\nvar iter__20525__auto__ = (function clojure$test$check$rose_tree$permutations_$_iter__61(s__62){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__62__$1 = s__62;\nwhile(true){\nvar temp__19472__auto__ = cljs.core.seq.call(null,s__62__$1);\nif(temp__19472__auto__){\nvar xs__19460__auto__ = temp__19472__auto__;\nvar vec__70 = cljs.core.first.call(null,xs__19460__auto__);\nvar rose = cljs.core.nth.call(null,vec__70,(0),null);\nvar index = cljs.core.nth.call(null,vec__70,(1),null);\nvar iterys__20521__auto__ = ((function (s__62__$1,vec__70,rose,index,xs__19460__auto__,temp__19472__auto__){\nreturn (function clojure$test$check$rose_tree$permutations_$_iter__61_$_iter__63(s__64){\nreturn (new cljs.core.LazySeq(null,((function (s__62__$1,vec__70,rose,index,xs__19460__auto__,temp__19472__auto__){\nreturn (function (){\nvar s__64__$1 = s__64;\nwhile(true){\nvar temp__19472__auto____$1 = cljs.core.seq.call(null,s__64__$1);\nif(temp__19472__auto____$1){\nvar s__64__$2 = temp__19472__auto____$1;\nif(cljs.core.chunked_seq_QMARK_.call(null,s__64__$2)){\nvar c__20523__auto__ = cljs.core.chunk_first.call(null,s__64__$2);\nvar size__20524__auto__ = cljs.core.count.call(null,c__20523__auto__);\nvar b__66 = cljs.core.chunk_buffer.call(null,size__20524__auto__);\nif((function (){var i__65 = (0);\nwhile(true){\nif((i__65 < size__20524__auto__)){\nvar child = cljs.core._nth.call(null,c__20523__auto__,i__65);\ncljs.core.chunk_append.call(null,b__66,cljs.core.assoc.call(null,roses,index,child));\n\nvar G__73 = (i__65 + (1));\ni__65 = G__73;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__66),clojure$test$check$rose_tree$permutations_$_iter__61_$_iter__63.call(null,cljs.core.chunk_rest.call(null,s__64__$2)));\n} else {\nreturn cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__66),null);\n}\n} else {\nvar child = cljs.core.first.call(null,s__64__$2);\nreturn cljs.core.cons.call(null,cljs.core.assoc.call(null,roses,index,child),clojure$test$check$rose_tree$permutations_$_iter__61_$_iter__63.call(null,cljs.core.rest.call(null,s__64__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(s__62__$1,vec__70,rose,index,xs__19460__auto__,temp__19472__auto__))\n,null,null));\n});})(s__62__$1,vec__70,rose,index,xs__19460__auto__,temp__19472__auto__))\n;\nvar fs__20522__auto__ = cljs.core.seq.call(null,iterys__20521__auto__.call(null,clojure.test.check.rose_tree.children.call(null,rose)));\nif(fs__20522__auto__){\nreturn cljs.core.concat.call(null,fs__20522__auto__,clojure$test$check$rose_tree$permutations_$_iter__61.call(null,cljs.core.rest.call(null,s__62__$1)));\n} else {\nvar G__74 = cljs.core.rest.call(null,s__62__$1);\ns__62__$1 = G__74;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__20525__auto__.call(null,cljs.core.map.call(null,cljs.core.vector,roses,cljs.core.range.call(null)));\n});\n/**\n * Apply `f` to the sequence of Rose trees `roses`.\n */\nclojure.test.check.rose_tree.zip = (function clojure$test$check$rose_tree$zip(f,roses){\nreturn clojure.test.check.rose_tree.make_rose.call(null,cljs.core.apply.call(null,f,cljs.core.map.call(null,clojure.test.check.rose_tree.root,roses)),cljs.core.map.call(null,(function (p1__4_SHARP_){\nreturn clojure.test.check.rose_tree.zip.call(null,f,p1__4_SHARP_);\n}),clojure.test.check.rose_tree.permutations.call(null,roses)));\n});\nclojure.test.check.rose_tree.remove = (function clojure$test$check$rose_tree$remove(roses){\nreturn cljs.core.concat.call(null,cljs.core.map_indexed.call(null,(function (index,_){\nreturn clojure.test.check.rose_tree.exclude_nth.call(null,index,roses);\n}),roses),clojure.test.check.rose_tree.permutations.call(null,cljs.core.vec.call(null,roses)));\n});\n/**\n * Returns an equivalent lazy seq that is not chunked.\n */\nclojure.test.check.rose_tree.unchunk = (function clojure$test$check$rose_tree$unchunk(a_lazy_seq){\nreturn cljs.core.take.call(null,Infinity,a_lazy_seq);\n});\nclojure.test.check.rose_tree.shrink = (function clojure$test$check$rose_tree$shrink(f,roses){\nif(cljs.core.seq.call(null,roses)){\nreturn clojure.test.check.rose_tree.make_rose.call(null,cljs.core.apply.call(null,f,cljs.core.map.call(null,clojure.test.check.rose_tree.root,roses)),cljs.core.map.call(null,(function (p1__5_SHARP_){\nreturn clojure.test.check.rose_tree.shrink.call(null,f,p1__5_SHARP_);\n}),clojure.test.check.rose_tree.remove.call(null,clojure.test.check.rose_tree.unchunk.call(null,roses))));\n} else {\nreturn clojure.test.check.rose_tree.make_rose.call(null,f.call(null),cljs.core.PersistentVector.EMPTY);\n}\n});\n/**\n * Returns a sequence of rose trees representing shrinks that discard\n *   half of the vector of roses.\n */\nclojure.test.check.rose_tree.bifurcate = (function clojure$test$check$rose_tree$bifurcate(f,roses){\nif(((4) <= cljs.core.count.call(null,roses))){\nvar left_count = cljs.core.quot.call(null,cljs.core.count.call(null,roses),(2));\nreturn (new cljs.core.LazySeq(null,((function (left_count){\nreturn (function (){\nreturn cljs.core.cons.call(null,clojure.test.check.rose_tree.shrink_vector_STAR_.call(null,f,cljs.core.subvec.call(null,roses,(0),left_count)),(new cljs.core.LazySeq(null,((function (left_count){\nreturn (function (){\nvar x__20731__auto__ = clojure.test.check.rose_tree.shrink_vector_STAR_.call(null,f,cljs.core.subvec.call(null,roses,left_count));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n});})(left_count))\n,null,null)));\n});})(left_count))\n,null,null));\n} else {\nreturn null;\n}\n});\nclojure.test.check.rose_tree.shrink_vector_STAR_ = (function clojure$test$check$rose_tree$shrink_vector_STAR_(f,roses){\nvar thing = clojure.test.check.rose_tree.shrink.call(null,f,roses);\nreturn clojure.test.check.rose_tree.make_rose.call(null,clojure.test.check.rose_tree.root.call(null,thing),cljs.core.concat.call(null,clojure.test.check.rose_tree.bifurcate.call(null,f,roses),clojure.test.check.rose_tree.children.call(null,thing)));\n});\nclojure.test.check.rose_tree.shrink_vector = (function clojure$test$check$rose_tree$shrink_vector(f,roses){\nif(cljs.core.vector_QMARK_.call(null,roses)){\n} else {\nthrow (new Error(\"Assert failed: (vector? roses)\"));\n}\n\nvar rose = clojure.test.check.rose_tree.shrink_vector_STAR_.call(null,f,roses);\nvar empty_rose = clojure.test.check.rose_tree.make_rose.call(null,f.call(null),cljs.core.PersistentVector.EMPTY);\nif(cljs.core.empty_QMARK_.call(null,roses)){\nreturn rose;\n} else {\nreturn clojure.test.check.rose_tree.make_rose.call(null,clojure.test.check.rose_tree.root.call(null,rose),cljs.core.cons.call(null,empty_rose,clojure.test.check.rose_tree.children.call(null,rose)));\n}\n});\n/**\n * Return a new rose-tree whose depth-one children\n *   are the children from depth one _and_ two of the input\n *   tree.\n */\nclojure.test.check.rose_tree.collapse = (function clojure$test$check$rose_tree$collapse(rose){\nreturn clojure.test.check.rose_tree.make_rose.call(null,clojure.test.check.rose_tree.root.call(null,rose),(function (){var the_children = clojure.test.check.rose_tree.children.call(null,rose);\nreturn cljs.core.concat.call(null,cljs.core.map.call(null,clojure.test.check.rose_tree.collapse,the_children),cljs.core.map.call(null,clojure.test.check.rose_tree.collapse,cljs.core.mapcat.call(null,clojure.test.check.rose_tree.children,the_children)));\n})());\n});\nclojure.test.check.rose_tree.make_stack = (function clojure$test$check$rose_tree$make_stack(children,stack){\nvar temp__19412__auto__ = cljs.core.seq.call(null,children);\nif(temp__19412__auto__){\nvar s = temp__19412__auto__;\nreturn cljs.core.cons.call(null,children,stack);\n} else {\nreturn stack;\n}\n});\n/**\n * Create a lazy-seq of all of the (unique) nodes in a shrink-tree.\n *   This assumes that two nodes with the same value have the same children.\n *   While it's not common, it's possible to create trees that don't\n *   fit that description. This function is significantly faster than\n *   brute-force enumerating all of the nodes in a tree, as there will\n *   be many duplicates.\n */\nclojure.test.check.rose_tree.seq = (function clojure$test$check$rose_tree$seq(rose){\nvar helper = (function clojure$test$check$rose_tree$seq_$_helper(rose__$1,seen,stack){\nvar node = clojure.test.check.rose_tree.root.call(null,rose__$1);\nvar the_children = clojure.test.check.rose_tree.children.call(null,rose__$1);\nreturn (new cljs.core.LazySeq(null,((function (node,the_children){\nreturn (function (){\nif(cljs.core.not.call(null,seen.call(null,node))){\nreturn cljs.core.cons.call(null,node,((cljs.core.seq.call(null,the_children))?clojure$test$check$rose_tree$seq_$_helper.call(null,cljs.core.first.call(null,the_children),cljs.core.conj.call(null,seen,node),clojure.test.check.rose_tree.make_stack.call(null,cljs.core.rest.call(null,the_children),stack)):(function (){var temp__19472__auto__ = cljs.core.seq.call(null,stack);\nif(temp__19472__auto__){\nvar s = temp__19472__auto__;\nvar f = cljs.core.ffirst.call(null,s);\nvar r = cljs.core.rest.call(null,cljs.core.first.call(null,s));\nreturn clojure$test$check$rose_tree$seq_$_helper.call(null,f,cljs.core.conj.call(null,seen,node),clojure.test.check.rose_tree.make_stack.call(null,r,cljs.core.rest.call(null,s)));\n} else {\nreturn null;\n}\n})()));\n} else {\nvar temp__19472__auto__ = cljs.core.seq.call(null,stack);\nif(temp__19472__auto__){\nvar s = temp__19472__auto__;\nvar f = cljs.core.ffirst.call(null,s);\nvar r = cljs.core.rest.call(null,cljs.core.first.call(null,s));\nreturn clojure$test$check$rose_tree$seq_$_helper.call(null,f,seen,clojure.test.check.rose_tree.make_stack.call(null,r,cljs.core.rest.call(null,s)));\n} else {\nreturn null;\n}\n}\n});})(node,the_children))\n,null,null));\n});\nreturn helper.call(null,rose,cljs.core.PersistentHashSet.EMPTY,cljs.core.List.EMPTY);\n});\n","cljs/pprint.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"],\"~$Object\",[\"^ \",\"~$exec\",[\"^ \"],\"~$index\",[\"^ \"]],\"~$Infinity\",[\"^ \"],\"~$String\",[\"^ \"],\"~$parseInt\",[\"^ \"],\"~$isNaN\",[\"^ \"],\"~$parseFloat\",[\"^ \"],\"~$Number\",[\"^ \"],\"~$RegExp\",[\"^ \",\"~$prototype\",[\"^ \",\"^5\",[\"^ \"],\"~$lastIndex\",[\"^ \"]]]],\"~:use-macros\",[\"^ \",\"~$deftype\",\"~$cljs.pprint\",\"~$print-length-loop\",\"^B\",\"~$defdirectives\",\"^B\",\"~$getf\",\"^B\",\"~$pprint-logical-block\",\"^B\",\"~$formatter-out\",\"^B\",\"~$with-pretty-writer\",\"^B\",\"~$setf\",\"^B\"],\"~:excludes\",[\"~#set\",[\"~$pr\",\"~$float?\",\"^A\",\"~$prn\",\"~$println\",\"~$print\"]],\"~:name\",\"^B\",\"~:imports\",[\"^ \",\"~$StringBuffer\",\"~$goog.string.StringBuffer\"],\"~:requires\",[\"^ \",\"~$cljs.core\",\"^V\",\"~$string\",\"~$clojure.string\",\"^X\",\"^X\",\"~$gstring\",\"~$goog.string\",\"^Z\",\"^Z\",\"^S\",\"^T\"],\"~:uses\",[\"^ \",\"~$IWriter\",\"^V\",\"~$IDeref\",\"^V\"],\"~:defs\",[\"^ \",\"~$indent-t\",[\"^ \",\"~:num-fields\",6,\"~:protocols\",[\"^K\",[\"~$cljs.core/IRecord\",\"~$cljs.core/IEquiv\",\"~$cljs.core/IHash\",\"~$cljs.core/ICollection\",\"~$cljs.core/ICounted\",\"~$cljs.core/ISeqable\",\"~$cljs.core/IMeta\",\"~$cljs.core/ICloneable\",\"~$cljs.core/IPrintWithWriter\",\"~$cljs.core/IIterable\",\"~$cljs.core/IWithMeta\",\"~$cljs.core/IAssociative\",\"~$cljs.core/IMap\",\"~$cljs.core/ILookup\"]],\"^Q\",\"~$cljs.pprint/indent-t\",\"~:file\",\"out/cljs/pprint.cljs\",\"~:end-column\",18,\"~:type\",true,\"~:column\",10,\"~:internal-ctor\",true,\"~:line\",259,\"~:record\",true,\"~:end-line\",259,\"~:skip-protocol-flag\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]]],\"~$write-token-string\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",399,\"^1H\",8,\"^1L\",399,\"^1F\",26,\"~:private\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^1S\",[[\"~$this\",\"~$tokens\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/write-token-string\",\"~:variadic\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"~:method-params\",[\"^1S\",[[\"^1U\",\"^1V\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",399,\"^1L\",399,\"~:max-fixed-arity\",2,\"~:fn-var\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^1V\"]]]]]],\"~$process-nesting\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2659,\"^1H\",8,\"^1L\",2659,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$format\"]]]]],\"~:doc\",\"Take a linearly compiled format and process the bracket directives to give it\\n   the appropriate tree structure\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/process-nesting\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^23\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2659,\"^1L\",2659,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^23\"]]]]],\"^24\",\"Take a linearly compiled format and process the bracket directives to give it\\n   the appropriate tree structure\"],\"~$init-cap-writer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2009,\"^1H\",8,\"^1L\",2009,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$writer\"]]]]],\"^24\",\"Returns a proxy that wraps writer, capitalizing the first word\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/init-cap-writer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^27\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2009,\"^1L\",2009,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"]]]]],\"^24\",\"Returns a proxy that wraps writer, capitalizing the first word\"],\"~$check-enumerated-arg\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",835,\"^1H\",8,\"^1L\",835,\"^1F\",28,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$arg\",\"~$choices\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/check-enumerated-arg\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",28,\"^1Y\",[\"^1S\",[[\"^2:\",\"^2;\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",835,\"^1L\",835,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2:\",\"^2;\"]]]]]],\"~$brackets\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2929,\"^1H\",8,\"^1L\",2929,\"^1F\",16,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$form\"]]]]],\"^24\",\"Figure out which kind of brackets to use\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/brackets\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1Y\",[\"^1S\",[[\"^2>\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2929,\"^1L\",2929,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2>\"]]]]],\"^24\",\"Figure out which kind of brackets to use\"],\"~$get-section\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",358,\"^1H\",8,\"^1L\",358,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$buffer\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-section\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^2A\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",358,\"^1L\",358,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2A\"]]]]]],\"~$readable-character\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1361,\"^1H\",8,\"^1L\",1361,\"^1F\",26,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$params\",\"~$navigator\",\"~$offsets\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/readable-character\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1361,\"^1L\",1361,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$linear-nl?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",324,\"^1H\",8,\"^1L\",324,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$lb\",\"~$section\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/linear-nl?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^1U\",\"^2I\",\"^2J\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",324,\"^1L\",324,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^2I\",\"^2J\"]]]]]],\"~$base-str\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1089,\"^1H\",8,\"^1L\",1089,\"^1F\",16,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$base\",\"~$val\"]]]]],\"^24\",\"Return val as a string in the given base\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/base-str\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1Y\",[\"^1S\",[[\"^2M\",\"^2N\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1089,\"^1L\",1089,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2M\",\"^2N\"]]]]],\"^24\",\"Return val as a string in the given base\"],\"~$buffer-length\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",243,\"^1H\",8,\"^1L\",243,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$l\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/buffer-length\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"~$l\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",243,\"^1L\",243,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$l\"]]]]]],\"~$->t_cljs$pprint23064\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"~:anonymous\",true,\"^15\",[\"^K\",[\"~$cljs.core/IWriter\",\"^1<\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"~:factory\",\"~:positional\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"~$capped\",\"~$meta23065\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint23064\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^2W\",\"^2X\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",5,\"^2U\",\"^2V\",\"^1J\",2013,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^2W\",\"^2X\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$integral?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1067,\"^1H\",8,\"^1L\",1067,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$x\"]]]]],\"^24\",\"returns true if a number is actually an integer (that is, has no fractional part)\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/integral?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"~$x\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1067,\"^1L\",1067,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$x\"]]]]],\"^24\",\"returns true if a number is actually an integer (that is, has no fractional part)\"],\"~$*print-circle*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",649,\"^1H\",1,\"^1L\",649,\"^1F\",15,\"^1Q\",true,\"^24\",\"Mark circular structures (N.B. This is not yet used)\",\"~:dynamic\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/*print-circle*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",15,\"^1H\",1,\"^31\",true,\"^1J\",646,\"^1L\",649,\"~:tag\",\"~$clj-nil\",\"^24\",\"Mark circular structures (N.B. This is not yet used)\"],\"~$param-pattern\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2449,\"^1H\",6,\"^1L\",2449,\"^1F\",19,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/param-pattern\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1H\",1,\"^1J\",2448,\"^1L\",2449,\"^33\",\"~$any\"],\"~$boolean-conditional\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1703,\"^1H\",8,\"^1L\",1703,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"~$arg-navigator\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/boolean-conditional\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^2D\",\"^39\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1703,\"^1L\",1703,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^39\",\"^2F\"]]]]]],\"~$add-english-scales\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1198,\"^1H\",8,\"^1L\",1198,\"^1F\",26,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$parts\",\"~$offset\"]]]]],\"^24\",\"Take a sequence of parts, add scale numbers (e.g., million) and combine into a string\\n  offset is a factor of 10^3 to multiply by\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/add-english-scales\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[\"^3<\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1198,\"^1L\",1198,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3<\",\"^3=\"]]]]],\"^24\",\"Take a sequence of parts, add scale numbers (e.g., million) and combine into a string\\n  offset is a factor of 10^3 to multiply by\"],\"~$pprint\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",813,\"^1H\",7,\"^1L\",813,\"^1F\",13,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$object\"],[\"^3@\",\"^27\"]]]]],\"~:top-fn\",[\"^ \",\"^1X\",false,\"^20\",2,\"^1Y\",[\"^1S\",[[\"^3@\"],[\"^3@\",\"^27\"]]],\"^1R\",[\"^1S\",[[\"^3@\"],[\"^3@\",\"^27\"]]],\"^1[\",[\"^1S\",[null,null]]]],\"^Q\",\"~$cljs.pprint/pprint\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",13,\"^3A\",[\"^ \",\"^1X\",false,\"^20\",2,\"^1Y\",[\"^1S\",[[\"^3@\"],[\"^3@\",\"^27\"]]],\"^1R\",[\"^1S\",[[\"^3@\"],[\"^3@\",\"^27\"]]],\"^1[\",[\"^1S\",[null,null]]],\"^1Y\",[\"^1S\",[[\"^3@\"],[\"^3@\",\"^27\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",813,\"^1L\",813,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[[\"^3@\"],[\"^3@\",\"^27\"]]]],\"~$iterate-main-sublists\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1804,\"^1H\",8,\"^1L\",1804,\"^1F\",29,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/iterate-main-sublists\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",29,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1804,\"^1L\",1804,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$simple-dispatch\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2904,\"^1H\",11,\"^1L\",2904,\"^1F\",26,\"^24\",\"The pretty print dispatch function for simple data structure format.\"],\"^Q\",\"~$cljs.pprint/simple-dispatch\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1H\",1,\"^1J\",2904,\"^1L\",2904,\"^33\",\"~$cljs.core/MultiFn\",\"^24\",\"The pretty print dispatch function for simple data structure format.\"],\"^L\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",20,\"^3A\",[\"^ \",\"^1X\",true,\"^20\",0,\"^1Y\",[[\"^1S\",[\"~$more\"]]],\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]],\"^1[\",[\"^1S\",[null]]],\"^1H\",18,\"^31\",true,\"^1J\",43,\"^1L\",43,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$&\",\"^3H\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pr\",\"^1X\",true,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^3A\",[\"^ \",\"^1X\",true,\"^20\",0,\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]],\"^1[\",[\"^1S\",[null]]],\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null]],\"^1H\",1,\"^31\",true,\"^1J\",43,\"^1L\",43,\"^20\",0,\"^21\",true,\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]]],\"~$needs-pretty\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2694,\"^1H\",8,\"^1L\",2694,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^23\"]]]]],\"^24\",\"determine whether a given compiled format has any directives that depend on the\\ncolumn number or pretty printing\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/needs-pretty\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^23\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2694,\"^1L\",2694,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^23\"]]]]],\"^24\",\"determine whether a given compiled format has any directives that depend on the\\ncolumn number or pretty printing\"],\"~$get-column\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",159,\"^1H\",8,\"^1L\",159,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-column\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",159,\"^1L\",159,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$pprint-let\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3063,\"^1H\",8,\"^1L\",3063,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$alis\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-let\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3063,\"^1L\",3063,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"~$english-cardinal-tens\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1160,\"^1H\",6,\"^1L\",1160,\"^1F\",27,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/english-cardinal-tens\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1H\",1,\"^1J\",1159,\"^1L\",1160,\"^33\",\"~$cljs.core/IVector\"],\"~$special-chars\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1345,\"^1H\",6,\"^1L\",1345,\"^1F\",19,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/special-chars\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1H\",1,\"^1J\",1344,\"^1L\",1345,\"^33\",\"^1B\"],\"~$justify-clauses\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1863,\"^1H\",8,\"^1L\",1863,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/justify-clauses\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1863,\"^1L\",1863,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$write-line\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",423,\"^1H\",8,\"^1L\",423,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/write-line\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",423,\"^1L\",423,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$get-pretty-writer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2054,\"^1H\",7,\"^1L\",2054,\"^1F\",24,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"]]]]],\"^24\",\"Returns the IWriter passed in wrapped in a pretty writer proxy, unless it's\\nalready a pretty writer. Generally, it is unnecessary to call this function, since pprint,\\nwrite, and cl-format all call it if they need to. However if you want the state to be\\npreserved across calls, you will want to wrap them with this.\\n\\nFor example, when you want to generate column-aware output with multiple calls to cl-format,\\ndo it like in this example:\\n\\n    (defn print-table [aseq column-width]\\n      (binding [*out* (get-pretty-writer *out*)]\\n        (doseq [row aseq]\\n          (doseq [col row]\\n            (cl-format true \\\"~4D~7,vT\\\" col column-width))\\n          (prn))))\\n\\nNow when you run:\\n\\n    user> (print-table (map #(vector % (* % %) (* % % %)) (range 1 11)) 8)\\n\\nIt prints a table of squares and cubes for the numbers from 1 to 10:\\n\\n       1      1       1\\n       2      4       8\\n       3      9      27\\n       4     16      64\\n       5     25     125\\n       6     36     216\\n       7     49     343\\n       8     64     512\\n       9     81     729\\n      10    100    1000\"],\"^Q\",\"~$cljs.pprint/get-pretty-writer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",24,\"^1Y\",[\"^1S\",[[\"^27\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2054,\"^1L\",2054,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"]]]]],\"^24\",\"Returns the IWriter passed in wrapped in a pretty writer proxy, unless it's\\nalready a pretty writer. Generally, it is unnecessary to call this function, since pprint,\\nwrite, and cl-format all call it if they need to. However if you want the state to be\\npreserved across calls, you will want to wrap them with this.\\n\\nFor example, when you want to generate column-aware output with multiple calls to cl-format,\\ndo it like in this example:\\n\\n    (defn print-table [aseq column-width]\\n      (binding [*out* (get-pretty-writer *out*)]\\n        (doseq [row aseq]\\n          (doseq [col row]\\n            (cl-format true \\\"~4D~7,vT\\\" col column-width))\\n          (prn))))\\n\\nNow when you run:\\n\\n    user> (print-table (map #(vector % (* % %) (* % % %)) (range 1 11)) 8)\\n\\nIt prints a table of squares and cubes for the numbers from 1 to 10:\\n\\n       1      1       1\\n       2      4       8\\n       3      9      27\\n       4     16      64\\n       5     25     125\\n       6     36     216\\n       7     49     343\\n       8     64     512\\n       9     81     729\\n      10    100    1000\"],\"~$*print-suppress-namespaces*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",661,\"^1H\",1,\"^1L\",661,\"^1F\",28,\"^24\",\"Don't print namespaces with symbols. This is particularly useful when\\npretty printing the results of macro expansions\",\"~:added\",\"1.2\",\"^31\",true],\"^41\",\"1.2\",\"^Q\",\"~$cljs.pprint/*print-suppress-namespaces*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",28,\"^1H\",1,\"^31\",true,\"^1J\",657,\"^1L\",661,\"^33\",\"^34\",\"^24\",\"Don't print namespaces with symbols. This is particularly useful when\\npretty printing the results of macro expansions\"],\"~$level-exceeded\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",840,\"^1H\",8,\"^1L\",840,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/level-exceeded\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",840,\"^1L\",840,\"^20\",0,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[]]]]]],\"~$logical-block\",[\"^ \",\"^1Q\",true,\"^14\",10,\"^15\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]],\"^Q\",\"~$cljs.pprint/logical-block\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",42,\"^1G\",true,\"^1H\",29,\"^1I\",true,\"^1J\",230,\"^1K\",true,\"^1L\",230,\"^1M\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]]],\"~$make-nl-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$type\",\"^45\",\"~$start-pos\",\"~$end-pos\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/make-nl-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^48\",\"^45\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",253,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^48\",\"^45\",\"^49\",\"^4:\"]]]]]],\"~$map->nl-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",253,\"^1H\",10,\"^1L\",253,\"^1F\",14,\"^1I\",true,\"^2U\",\"~:map\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$G__22126\"]]]]]],\"^Q\",\"~$cljs.pprint/map->nl-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",14,\"^1Y\",[\"^1S\",[[\"^4>\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",253,\"^1L\",253,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4>\"]]]]]],\"~$dollar-float\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1665,\"^1H\",8,\"^1L\",1665,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/dollar-float\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1665,\"^1L\",1665,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$write-initial-lines\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",453,\"^1H\",8,\"^1L\",453,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$s\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/write-initial-lines\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^1U\",\"~$s\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",453,\"^1L\",453,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$s\"]]]]]],\"~$indent-t?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$x__21752__auto__\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/indent-t?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^4E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",259,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4E\"]]]]]],\"~$char-code\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",62,\"^1H\",7,\"^1L\",62,\"^1F\",16,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$c\"]]]]],\"^24\",\"Convert char to int\"],\"^Q\",\"~$cljs.pprint/char-code\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1Y\",[\"^1S\",[[\"~$c\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",62,\"^1L\",62,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$c\"]]]]],\"^24\",\"Convert char to int\"],\"~$insert-scaled-decimal\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1508,\"^1H\",8,\"^1L\",1508,\"^1F\",29,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$k\"]]]]],\"^24\",\"Insert the decimal point at the right spot in the number to match an exponent\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/insert-scaled-decimal\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",29,\"^1Y\",[\"^1S\",[[\"~$m\",\"~$k\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1508,\"^1L\",1508,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$k\"]]]]],\"^24\",\"Insert the decimal point at the right spot in the number to match an exponent\"],\"~$add-padding\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3297,\"^1H\",8,\"^1L\",3297,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$width\",\"~$s\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/add-padding\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^4L\",\"~$s\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3297,\"^1L\",3297,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4L\",\"~$s\"]]]]]],\"^39\",[\"^ \",\"^1Q\",true,\"^14\",3,\"^15\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]],\"^Q\",\"~$cljs.pprint/arg-navigator\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1G\",true,\"^1H\",3,\"^1I\",true,\"^1J\",946,\"^1K\",true,\"^1L\",946,\"^1M\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]]],\"~$map->compiled-directive\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",21,\"^1H\",3,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",990,\"^1L\",990,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$G__22611\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/map->compiled-directive\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^4P\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",989,\"^1L\",990,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4P\"]]]]]],\"~$*current-length*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",684,\"^1H\",33,\"^1L\",684,\"^1F\",49,\"^1Q\",true,\"^31\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/*current-length*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",49,\"^1H\",1,\"^31\",true,\"^1J\",684,\"^1L\",684,\"^33\",\"^34\"],\"~$round-str\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1441,\"^1H\",8,\"^1L\",1441,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$e\",\"~$d\",\"~$w\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/round-str\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"~$m\",\"~$e\",\"~$d\",\"~$w\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1441,\"^1L\",1441,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$e\",\"~$d\",\"~$w\"]]]]]],\"~$*print-pretty*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",617,\"^1H\",2,\"^1L\",617,\"^1F\",16,\"^24\",\"Bind to true if you want write to use pretty printing\",\"^31\",true],\"^Q\",\"~$cljs.pprint/*print-pretty*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1H\",1,\"^31\",true,\"^1J\",615,\"^1L\",617,\"^33\",\"~$boolean\",\"^24\",\"Bind to true if you want write to use pretty printing\"],\"~$*print-pprint-dispatch*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",623,\"^1H\",2,\"^1L\",623,\"^1F\",25,\"^24\",\"The pretty print dispatch function. Use with-pprint-dispatch or\\nset-pprint-dispatch to modify.\",\"^41\",\"1.2\",\"^31\",true],\"^41\",\"1.2\",\"^Q\",\"~$cljs.pprint/*print-pprint-dispatch*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",25,\"^1H\",1,\"^31\",true,\"^1J\",619,\"^1L\",623,\"^33\",\"^34\",\"^24\",\"The pretty print dispatch function. Use with-pprint-dispatch or\\nset-pprint-dispatch to modify.\"],\"~$pp-newline\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",261,\"^1H\",16,\"^1L\",261,\"^1F\",26,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pp-newline\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[]]],\"^1Z\",null,\"^1[\",[\"^1S\",[]],\"^1H\",1,\"^1J\",261,\"^1L\",261,\"^20\",0,\"^21\",true,\"^1R\",null],\"~$upcase-writer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1939,\"^1H\",8,\"^1L\",1939,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"]]]]],\"^24\",\"Returns a proxy that wraps writer, converting all characters to upper case\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/upcase-writer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^27\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1939,\"^1L\",1939,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"]]]]],\"^24\",\"Returns a proxy that wraps writer, converting all characters to upper case\"],\"~$start-block-t\",[\"^ \",\"^14\",4,\"^15\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]],\"^Q\",\"~$cljs.pprint/start-block-t\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1G\",true,\"^1H\",10,\"^1I\",true,\"^1J\",255,\"^1K\",true,\"^1L\",255,\"^1M\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]]],\"~$execute-sub-format\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1381,\"^1H\",8,\"^1L\",1381,\"^1F\",26,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^23\",\"~$args\",\"~$base-args\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/execute-sub-format\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[\"^23\",\"^56\",\"^57\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1381,\"^1L\",1381,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^23\",\"^56\",\"^57\"]]]]]],\"~$end-block-t?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4E\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/end-block-t?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^4E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",257,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4E\"]]]]]],\"~$nl-t\",[\"^ \",\"^14\",5,\"^15\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]],\"^Q\",\"~$cljs.pprint/nl-t\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",14,\"^1G\",true,\"^1H\",10,\"^1I\",true,\"^1J\",253,\"^1K\",true,\"^1L\",253,\"^1M\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]]],\"~$conditional-newline\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2154,\"^1H\",8,\"^1L\",2154,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/conditional-newline\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2154,\"^1L\",2154,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$make-buffer-blob\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$data\",\"~$trailing-white-space\",\"^49\",\"^4:\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/make-buffer-blob\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^5@\",\"^5A\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",250,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^5@\",\"^5A\",\"^49\",\"^4:\"]]]]]],\"~$pprint-newline\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",843,\"^1H\",7,\"^1L\",843,\"^1F\",21,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$kind\"]]]]],\"^24\",\"Print a conditional newline to a pretty printing stream. kind specifies if the\\n  newline is :linear, :miser, :fill, or :mandatory.\\n\\n  This function is intended for use when writing custom dispatch functions.\\n\\n  Output is sent to *out* which must be a pretty printing writer.\"],\"^Q\",\"~$cljs.pprint/pprint-newline\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^5D\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",843,\"^1L\",843,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^5D\"]]]]],\"^24\",\"Print a conditional newline to a pretty printing stream. kind specifies if the\\n  newline is :linear, :miser, :fill, or :mandatory.\\n\\n  This function is intended for use when writing custom dispatch functions.\\n\\n  Output is sent to *out* which must be a pretty printing writer.\"],\"~$float-parts-base\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1399,\"^1H\",8,\"^1L\",1399,\"^1F\",24,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$f\"]]]]],\"^24\",\"Produce string parts for the mantissa (normalize 1-9) and exponent\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/float-parts-base\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",24,\"^1Y\",[\"^1S\",[[\"~$f\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1399,\"^1L\",1399,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$f\"]]]]],\"^24\",\"Produce string parts for the mantissa (normalize 1-9) and exponent\"],\"~$rtrim\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",112,\"^1H\",8,\"^1L\",112,\"^1F\",13,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"~$c\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/rtrim\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",13,\"^1Y\",[\"^1S\",[[\"~$s\",\"~$c\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",112,\"^1L\",112,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"~$c\"]]]]]],\"~$collect-clauses\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2610,\"^1H\",8,\"^1L\",2610,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$bracket-info\",\"^3=\",\"~$remainder\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/collect-clauses\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^5K\",\"^3=\",\"^5L\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2610,\"^1L\",2610,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^5K\",\"^3=\",\"^5L\"]]]]]],\"~$->t_cljs$pprint23036\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"~$meta23037\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint23036\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^5O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",3,\"^2U\",\"^2V\",\"^1J\",1942,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^5O\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$pprint-vector\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2828,\"^1H\",8,\"^1L\",2828,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$avec\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-vector\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^5R\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2828,\"^1L\",2828,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^5R\"]]]]]],\"~$compile-raw-string\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2564,\"^1H\",8,\"^1L\",2564,\"^1F\",26,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"^3=\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/compile-raw-string\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[\"~$s\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2564,\"^1L\",2564,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"^3=\"]]]]]],\"~$code-dispatch\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3203,\"^1H\",3,\"^1L\",3203,\"^1F\",16,\"^41\",\"1.2\",\"^1R\",[\"^1S\",[\"^1T\",[[\"^3@\"]]]],\"^24\",\"The pretty print dispatch function for pretty printing Clojure code.\"],\"^41\",\"1.2\",\"^Q\",\"~$cljs.pprint/code-dispatch\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1H\",1,\"^1J\",3202,\"^1L\",3203,\"^33\",\"^3G\",\"^1R\",[\"^1S\",[\"^1T\",[[\"^3@\"]]]],\"^24\",\"The pretty print dispatch function for pretty printing Clojure code.\"],\"~$end-block-t\",[\"^ \",\"^14\",4,\"^15\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]],\"^Q\",\"~$cljs.pprint/end-block-t\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1G\",true,\"^1H\",10,\"^1I\",true,\"^1J\",257,\"^1K\",true,\"^1L\",257,\"^1M\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]]],\"~$emit-nl?\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",335,\"^1H\",28,\"^1L\",335,\"^1F\",36,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/emit-nl?\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",36,\"^1H\",1,\"^1J\",335,\"^1L\",335,\"^33\",\"^3G\"],\"~$get-max-column\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",165,\"^1H\",8,\"^1L\",165,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-max-column\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",165,\"^1L\",165,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$set-max-column\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",168,\"^1H\",8,\"^1L\",168,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$new-max\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/set-max-column\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"^1U\",\"^63\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",168,\"^1L\",168,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^63\"]]]]]],\"~$->t_cljs$pprint23030\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"~$meta23031\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint23030\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^66\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",3,\"^2U\",\"^2V\",\"^1J\",1942,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^66\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$cached-compile\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2757,\"^1H\",23,\"^1L\",2757,\"^1F\",37,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/cached-compile\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",37,\"^1H\",1,\"^1J\",2757,\"^1L\",2757,\"^33\",\"^37\"],\"~$c-write-char\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",176,\"^1H\",8,\"^1L\",176,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$c\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/c-write-char\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^1U\",\"~$c\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",176,\"^1L\",176,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$c\"]]]]]],\"~$pprint-array\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2838,\"^1H\",23,\"^1L\",2838,\"^1F\",35,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-array\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",35,\"^1H\",1,\"^1J\",2838,\"^1L\",2838,\"^33\",\"~$function\"],\"~$general-float\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1642,\"^1H\",8,\"^1L\",1642,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/general-float\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1642,\"^1L\",1642,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$->t_cljs$pprint23053\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"~$last-was-whitespace?\",\"~$meta23054\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint23053\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^6B\",\"^6C\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",5,\"^2U\",\"^2V\",\"^1J\",1987,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^6B\",\"^6C\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$write-buffered-output\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",439,\"^1H\",8,\"^1L\",439,\"^1F\",29,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/write-buffered-output\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",29,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",439,\"^1L\",439,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$realize-parameter-list\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1016,\"^1H\",8,\"^1L\",1016,\"^1F\",30,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$parameter-map\",\"^2E\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/realize-parameter-list\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",30,\"^1Y\",[\"^1S\",[[\"^6H\",\"^2E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1016,\"^1L\",1016,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^6H\",\"^2E\"]]]]]],\"~$process-clause\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2586,\"^1H\",8,\"^1L\",2586,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^5K\",\"^3=\",\"^5L\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/process-clause\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"^5K\",\"^3=\",\"^5L\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2586,\"^1L\",2586,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^5K\",\"^3=\",\"^5L\"]]]]]],\"~$update-nl-state\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",373,\"^1H\",8,\"^1L\",373,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2I\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/update-nl-state\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^2I\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",373,\"^1L\",373,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2I\"]]]]]],\"~$javascript-base-formats\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1105,\"^1H\",3,\"^1L\",1105,\"^1F\",26,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/javascript-base-formats\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1H\",1,\"^1J\",1104,\"^1L\",1105,\"^33\",\"^1B\"],\"~$write-token\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",265,\"^1H\",28,\"^1L\",265,\"^1F\",39,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/write-token\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",39,\"^1H\",1,\"^1J\",265,\"^1L\",265,\"^33\",\"^3G\"],\"~$t_cljs$pprint23024\",[\"^ \",\"^14\",2,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/t_cljs$pprint23024\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",3,\"^1J\",1921,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$pprint-ns\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2970,\"^1H\",8,\"^1L\",2970,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]],\"^24\",\"The pretty print dispatch chunk for the ns macro\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-ns\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2970,\"^1L\",2970,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]],\"^24\",\"The pretty print dispatch chunk for the ns macro\"],\"~$t_cljs$pprint23042\",[\"^ \",\"^14\",3,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/t_cljs$pprint23042\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",5,\"^1J\",1987,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"^M\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",54,\"^1H\",16,\"^1L\",54,\"^1F\",22,\"^33\",\"^4X\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$n\"]]]]],\"^24\",\"Returns true if n is an float.\"],\"^Q\",\"~$cljs.pprint/float?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"~$n\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",54,\"~:ret-tag\",\"^4X\",\"^1L\",54,\"^20\",1,\"^33\",\"^4X\",\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$n\"]]]]],\"^24\",\"Returns true if n is an float.\"],\"~$iterate-list-of-sublists\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1757,\"^1H\",8,\"^1L\",1757,\"^1F\",32,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/iterate-list-of-sublists\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",32,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1757,\"^1L\",1757,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$logical-block-or-justify\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1838,\"^1H\",8,\"^1L\",1838,\"^1F\",32,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/logical-block-or-justify\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",32,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1838,\"^1L\",1838,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$opt-base-str\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1107,\"^1H\",8,\"^1L\",1107,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2M\",\"^2N\"]]]]],\"^24\",\"Return val as a string in the given base. No cljs format, so no improved performance.\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/opt-base-str\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^2M\",\"^2N\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1107,\"^1L\",1107,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2M\",\"^2N\"]]]]],\"^24\",\"Return val as a string in the given base. No cljs format, so no improved performance.\"],\"~$compiled-directive\",[\"^ \",\"^1Q\",true,\"^14\",4,\"^15\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]],\"^Q\",\"~$cljs.pprint/compiled-directive\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1G\",true,\"^1H\",3,\"^1I\",true,\"^1J\",990,\"^1K\",true,\"^1L\",990,\"^1M\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]]],\"~$get-format-arg\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",969,\"^1H\",8,\"^1L\",969,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-format-arg\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"^2E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",969,\"^1L\",969,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\"]]]]]],\"~$split-at-newline\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",393,\"^1H\",8,\"^1L\",393,\"^1F\",24,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1V\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/split-at-newline\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",24,\"^1Y\",[\"^1S\",[[\"^1V\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",393,\"^1L\",393,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1V\"]]]]]],\"~$special-params\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2452,\"^1H\",6,\"^1L\",2452,\"^1F\",20,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/special-params\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1H\",1,\"^1J\",2451,\"^1L\",2452,\"^33\",\"~$cljs.core/ISet\"],\"~$*symbol-map*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3119,\"^1H\",33,\"^1L\",3119,\"^1F\",45,\"^1Q\",true,\"^31\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/*symbol-map*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",45,\"^1H\",1,\"^31\",true,\"^1J\",3119,\"^1L\",3119,\"^33\",\"^1B\"],\"~$pprint-ns-reference\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2936,\"^1H\",8,\"^1L\",2936,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$reference\"]]]]],\"^24\",\"Pretty print a single reference (import, use, etc.) from a namespace decl\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-ns-reference\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^7@\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2936,\"^1L\",2936,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^7@\"]]]]],\"^24\",\"Pretty print a single reference (import, use, etc.) from a namespace decl\"],\"~$else-separator?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2571,\"^1H\",8,\"^1L\",2571,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/else-separator?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2571,\"^1L\",2571,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$get-miser-width\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",603,\"^1H\",8,\"^1L\",603,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-miser-width\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",603,\"^1L\",603,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$group-by*\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1112,\"^1H\",8,\"^1L\",1112,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$unit\",\"~$lis\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/group-by*\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"^7G\",\"^7H\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1112,\"^1L\",1112,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^7G\",\"^7H\"]]]]]],\"~$init-navigator\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",22,\"~:skip-wiki\",true,\"^1H\",8,\"^1J\",948,\"^1L\",948,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\"]]]]],\"^24\",\"Create a new arg-navigator from the sequence with the position set to 0\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/init-navigator\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"~$s\"]]],\"^1Z\",null,\"^7K\",true,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",948,\"^1L\",948,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\"]]]]],\"^24\",\"Create a new arg-navigator from the sequence with the position set to 0\"],\"~$write-white-space\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",446,\"^1H\",8,\"^1L\",446,\"^1F\",25,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/write-white-space\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",25,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",446,\"^1L\",446,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$*print-shared*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",655,\"^1H\",1,\"^1L\",655,\"^1F\",15,\"^1Q\",true,\"^24\",\"Mark repeated structures rather than repeat them (N.B. This is not yet used)\",\"^31\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/*print-shared*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",15,\"^1H\",1,\"^31\",true,\"^1J\",652,\"^1L\",655,\"^33\",\"^34\",\"^24\",\"Mark repeated structures rather than repeat them (N.B. This is not yet used)\"],\"~$*code-table*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3172,\"^1H\",33,\"^1L\",3172,\"^1F\",45,\"^1Q\",true,\"^31\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/*code-table*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",45,\"^1H\",1,\"^31\",true,\"^1J\",3172,\"^1L\",3172,\"^33\",\"^37\"],\"~$insert-decimal\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1497,\"^1H\",8,\"^1L\",1497,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$e\"]]]]],\"^24\",\"Insert the decimal point at the right spot in the number to match an exponent\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/insert-decimal\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"~$m\",\"~$e\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1497,\"^1L\",1497,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$e\"]]]]],\"^24\",\"Insert the decimal point at the right spot in the number to match an exponent\"],\"~$indent\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",591,\"^1H\",8,\"^1L\",591,\"^1F\",14,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$relative-to\",\"^3=\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/indent\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",14,\"^1Y\",[\"^1S\",[[\"^1U\",\"^7V\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",591,\"^1L\",591,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^7V\",\"^3=\"]]]]]],\"~$ltrim\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",123,\"^1H\",8,\"^1L\",123,\"^1F\",13,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"~$c\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/ltrim\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",13,\"^1Y\",[\"^1S\",[[\"~$s\",\"~$c\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",123,\"^1L\",123,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"~$c\"]]]]]],\"~$multi-defn\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3017,\"^1H\",8,\"^1L\",3017,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\",\"~$has-doc-str?\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/multi-defn\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^3O\",\"^7[\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3017,\"^1L\",3017,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\",\"^7[\"]]]]]],\"~$pprint-binding-form\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3048,\"^1H\",8,\"^1L\",3048,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$binding-vec\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-binding-form\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^82\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3048,\"^1L\",3048,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^82\"]]]]]],\"~$pprint-code-symbol\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3195,\"^1H\",8,\"^1L\",3195,\"^1F\",26,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$sym\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-code-symbol\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[\"^85\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3195,\"^1L\",3195,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^85\"]]]]]],\"~$realize-parameter\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1000,\"^1H\",8,\"^1L\",1000,\"^1F\",25,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[[\"~$param\",[\"~$raw-val\",\"^3=\"]],\"^2E\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/realize-parameter\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",25,\"^1Y\",[\"^1S\",[[\"~$p__22625\",\"^2E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1000,\"^1L\",1000,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[[\"^88\",[\"^89\",\"^3=\"]],\"^2E\"]]]]]],\"~$->arg-navigator\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",16,\"^1H\",3,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",946,\"^1L\",946,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$seq\",\"~$rest\",\"~$pos\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/->arg-navigator\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1Y\",[\"^1S\",[[\"^8=\",\"^8>\",\"^8?\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",945,\"^1L\",946,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^8=\",\"^8>\",\"^8?\"]]]]]],\"~$next-arg\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",956,\"^1H\",8,\"^1L\",956,\"^1F\",16,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/next-arg\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1Y\",[\"^1S\",[[\"^2E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",956,\"^1L\",956,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\"]]]]]],\"~$column-writer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",184,\"^1H\",8,\"^1L\",184,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"],[\"^27\",\"~$max-columns\"]]]]],\"^3A\",[\"^ \",\"^1X\",false,\"^20\",2,\"^1Y\",[\"^1S\",[[\"^27\"],[\"^27\",\"^8D\"]]],\"^1R\",[\"^1S\",[[\"^27\"],[\"^27\",\"^8D\"]]],\"^1[\",[\"^1S\",[null,null]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/column-writer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^3A\",[\"^ \",\"^1X\",false,\"^20\",2,\"^1Y\",[\"^1S\",[[\"^27\"],[\"^27\",\"^8D\"]]],\"^1R\",[\"^1S\",[[\"^27\"],[\"^27\",\"^8D\"]]],\"^1[\",[\"^1S\",[null,null]]],\"^1Y\",[\"^1S\",[[\"^27\"],[\"^27\",\"^8D\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",184,\"^1L\",184,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[[\"^27\"],[\"^27\",\"^8D\"]]]],\"~$check-flags\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2501,\"^1H\",8,\"^1L\",2501,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$def\",\"~$flags\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/check-flags\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^8G\",\"^8H\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2501,\"^1L\",2501,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^8G\",\"^8H\"]]]]]],\"~$get-sub-section\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",365,\"^1H\",8,\"^1L\",365,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2A\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-sub-section\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^2A\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",365,\"^1L\",365,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2A\"]]]]]],\"~$pretty-writer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",494,\"^1H\",8,\"^1L\",494,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^8D\",\"~$miser-width\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pretty-writer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^27\",\"^8D\",\"^8M\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",494,\"^1L\",494,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^8D\",\"^8M\"]]]]]],\"~$type-dispatcher\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2892,\"^1H\",8,\"^1L\",2892,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$obj\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/type-dispatcher\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^8P\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2892,\"^1L\",2892,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^8P\"]]]]]],\"~$execute-format\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",22,\"^3A\",[\"^ \",\"^1X\",false,\"^20\",3,\"^1Y\",[\"^1S\",[[\"~$stream\",\"^23\",\"^56\"],[\"^23\",\"^56\"]]],\"^1R\",[\"^1S\",[[\"^8S\",\"^23\",\"^56\"],[\"^23\",\"^56\"]]],\"^1[\",[\"^1S\",[null,null]]],\"^7K\",true,\"^1H\",8,\"^1J\",2719,\"^1L\",2719,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^8S\",\"^23\",\"^56\"],[\"^23\",\"^56\"]]]]],\"^24\",\"Executes the format with the arguments.\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/execute-format\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^3A\",[\"^ \",\"^1X\",false,\"^20\",3,\"^1Y\",[\"^1S\",[[\"^8S\",\"^23\",\"^56\"],[\"^23\",\"^56\"]]],\"^1R\",[\"^1S\",[[\"^8S\",\"^23\",\"^56\"],[\"^23\",\"^56\"]]],\"^1[\",[\"^1S\",[null,null]]],\"^1Y\",[\"^1S\",[[\"^8S\",\"^23\",\"^56\"],[\"^23\",\"^56\"]]],\"^1Z\",null,\"^7K\",true,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2719,\"^1L\",2719,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[[\"^8S\",\"^23\",\"^56\"],[\"^23\",\"^56\"]]],\"^24\",\"Executes the format with the arguments.\"],\"~$special-radix-markers\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1032,\"^1H\",3,\"^1L\",1032,\"^1F\",24,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/special-radix-markers\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",24,\"^1H\",1,\"^1J\",1031,\"^1L\",1032,\"^33\",\"^1B\"],\"~$inc-s\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1425,\"^1H\",8,\"^1L\",1425,\"^1F\",13,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\"]]]]],\"^24\",\"Assumption: The input string consists of one or more decimal digits,\\n  and no other characters. Return a string containing one or more\\n  decimal digits containing a decimal number one larger than the input\\n  string. The output string will always be the same length as the input\\n  string, or one character longer.\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/inc-s\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",13,\"^1Y\",[\"^1S\",[[\"~$s\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1425,\"^1L\",1425,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\"]]]]],\"^24\",\"Assumption: The input string consists of one or more decimal digits,\\n  and no other characters. Return a string containing one or more\\n  decimal digits containing a decimal number one larger than the input\\n  string. The output string will always be the same length as the input\\n  string, or one character longer.\"],\"~$english-scale-numbers\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1173,\"^1H\",6,\"^1L\",1173,\"^1F\",27,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/english-scale-numbers\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1H\",1,\"^1J\",1172,\"^1L\",1173,\"^33\",\"^3S\"],\"~$t_cljs$pprint23064\",[\"^ \",\"^14\",3,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/t_cljs$pprint23064\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",5,\"^1J\",2013,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$pprint-tab\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",868,\"^1H\",7,\"^1L\",868,\"^1F\",17,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^5D\",\"~$colnum\",\"~$colinc\"]]]]],\"^24\",\"Tab at this point in the pretty printing stream. kind specifies whether the tab\\nis :line, :section, :line-relative, or :section-relative.\\n\\nColnum and colinc specify the target column and the increment to move the target\\nforward if the output is already past the original target.\\n\\nThis function is intended for use when writing custom dispatch functions.\\n\\nOutput is sent to *out* which must be a pretty printing writer.\\n\\nTHIS FUNCTION IS NOT YET IMPLEMENTED.\",\"^41\",\"1.2\"],\"^41\",\"1.2\",\"^Q\",\"~$cljs.pprint/pprint-tab\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"^5D\",\"^92\",\"^93\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",868,\"^1L\",868,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^5D\",\"^92\",\"^93\"]]]]],\"^24\",\"Tab at this point in the pretty printing stream. kind specifies whether the tab\\nis :line, :section, :line-relative, or :section-relative.\\n\\nColnum and colinc specify the target column and the increment to move the target\\nforward if the output is already past the original target.\\n\\nThis function is intended for use when writing custom dispatch functions.\\n\\nOutput is sent to *out* which must be a pretty printing writer.\\n\\nTHIS FUNCTION IS NOT YET IMPLEMENTED.\"],\"~$unzip-map\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",101,\"^1H\",8,\"^1L\",101,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/unzip-map\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"~$m\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",101,\"^1L\",101,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\"]]]]]],\"~$format-integer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1117,\"^1H\",8,\"^1L\",1117,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2M\",\"^2D\",\"^39\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-integer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"^2M\",\"^2D\",\"^39\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1117,\"^1L\",1117,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2M\",\"^2D\",\"^39\",\"^2F\"]]]]]],\"~$next-arg-or-nil\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",962,\"^1H\",8,\"^1L\",962,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/next-arg-or-nil\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^2E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",962,\"^1L\",962,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\"]]]]]],\"~$map->logical-block\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",42,\"^1H\",29,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",230,\"^1L\",230,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$G__22079\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/map->logical-block\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",42,\"^1Y\",[\"^1S\",[[\"^9<\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",230,\"^1L\",230,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9<\"]]]]]],\"~$pprint-cond\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3079,\"^1H\",8,\"^1L\",3079,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-cond\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3079,\"^1L\",3079,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"~$iterate-main-list\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1780,\"^1H\",8,\"^1L\",1780,\"^1F\",25,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/iterate-main-list\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",25,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1780,\"^1L\",1780,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$pprint-list\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2823,\"^1H\",8,\"^1L\",2823,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-list\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2823,\"^1L\",2823,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"~$pprint-hold-first\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3001,\"^1H\",23,\"^1L\",3001,\"^1F\",40,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-hold-first\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",40,\"^1H\",1,\"^1J\",3001,\"^1L\",3001,\"^33\",\"^6>\"],\"~$fixed-float\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1521,\"^1H\",8,\"^1L\",1521,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/fixed-float\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1521,\"^1L\",1521,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$map-passing-context\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",74,\"^1H\",8,\"^1L\",74,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$func\",\"~$initial-context\",\"^7H\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/map-passing-context\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^9I\",\"^9J\",\"^7H\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",74,\"^1L\",74,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9I\",\"^9J\",\"^7H\"]]]]]],\"^N\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",46,\"^1H\",8,\"^1L\",46,\"^1F\",11,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$&\",\"^3H\"]]]]],\"^3A\",[\"^ \",\"^1X\",true,\"^20\",0,\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]],\"^1[\",[\"^1S\",[null]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/prn\",\"^1X\",true,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",11,\"^3A\",[\"^ \",\"^1X\",true,\"^20\",0,\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]],\"^1[\",[\"^1S\",[null]]],\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null]],\"^1H\",1,\"^1J\",46,\"^1L\",46,\"^20\",0,\"^21\",true,\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]]],\"~$write-tokens\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",301,\"^1H\",8,\"^1L\",301,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^1V\",\"~$force-trailing-whitespace\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/write-tokens\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^1U\",\"^1V\",\"^9N\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",301,\"^1L\",301,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^1V\",\"^9N\"]]]]]],\"~$pprint-ideref\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2879,\"^1H\",8,\"^1L\",2879,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$o\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-ideref\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"~$o\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2879,\"^1L\",2879,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$o\"]]]]]],\"~$t_cljs$pprint23070\",[\"^ \",\"^14\",3,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/t_cljs$pprint23070\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",5,\"^1J\",2013,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$format-simple-ordinal\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1238,\"^1H\",8,\"^1L\",1238,\"^1F\",29,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$num\"]]]]],\"^24\",\"Convert a number less than 1000 to a ordinal english string\\n  Note this should only be used for the last one in the sequence\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-simple-ordinal\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",29,\"^1Y\",[\"^1S\",[[\"^9U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1238,\"^1L\",1238,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9U\"]]]]],\"^24\",\"Convert a number less than 1000 to a ordinal english string\\n  Note this should only be used for the last one in the sequence\"],\"~$end-block\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",571,\"^1H\",8,\"^1L\",571,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/end-block\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",571,\"^1L\",571,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$start-block-t?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4E\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/start-block-t?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^4E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",255,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4E\"]]]]]],\"~$t_cljs$pprint23018\",[\"^ \",\"^14\",2,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/t_cljs$pprint23018\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",3,\"^1J\",1921,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$pprint-set\",[\"^ \",\"^Q\",\"~$cljs.pprint/pprint-set\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1J\",2866,\"^1H\",1,\"^1L\",2866,\"^1F\",16,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2866,\"^1H\",6,\"^1L\",2866,\"^1F\",16],\"^33\",\"^6>\"],\"~$->start-block-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",255,\"^1H\",10,\"^1L\",255,\"^1F\",23,\"^1I\",true,\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$type-tag\",\"^45\",\"^49\",\"^4:\"]]]]]],\"^Q\",\"~$cljs.pprint/->start-block-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^:4\",\"^45\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",255,\"^1L\",255,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:4\",\"^45\",\"^49\",\"^4:\"]]]]]],\"~$print-table\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^41\",\"1.3\",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",18,\"^3A\",[\"^ \",\"^1X\",false,\"^20\",2,\"^1Y\",[\"^1S\",[[\"~$ks\",\"~$rows\"],[\"^:8\"]]],\"^1R\",[\"^1S\",[[\"^:7\",\"^:8\"],[\"^:8\"]]],\"^1[\",[\"^1S\",[null,null]]],\"^1H\",7,\"^1J\",3301,\"^1L\",3301,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:7\",\"^:8\"],[\"^:8\"]]]]],\"^24\",\"Prints a collection of maps in a textual table. Prints table headings\\n   ks, and then a line of output for each row, corresponding to the keys\\n   in ks. If ks are not specified, use the keys of the first item in rows.\"],\"^41\",\"1.3\",\"^Q\",\"~$cljs.pprint/print-table\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^3A\",[\"^ \",\"^1X\",false,\"^20\",2,\"^1Y\",[\"^1S\",[[\"^:7\",\"^:8\"],[\"^:8\"]]],\"^1R\",[\"^1S\",[[\"^:7\",\"^:8\"],[\"^:8\"]]],\"^1[\",[\"^1S\",[null,null]]],\"^1Y\",[\"^1S\",[[\"^:7\",\"^:8\"],[\"^:8\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3301,\"^1L\",3301,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[[\"^:7\",\"^:8\"],[\"^:8\"]]],\"^24\",\"Prints a collection of maps in a textual table. Prints table headings\\n   ks, and then a line of output for each row, corresponding to the keys\\n   in ks. If ks are not specified, use the keys of the first item in rows.\"],\"~$relative-reposition\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",983,\"^1H\",8,\"^1L\",983,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\",\"~$position\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/relative-reposition\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^2E\",\"^:;\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",983,\"^1L\",983,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\",\"^:;\"]]]]]],\"~$pprint-anon-func\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3121,\"^1H\",8,\"^1L\",3121,\"^1F\",24,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-anon-func\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",24,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3121,\"^1L\",3121,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"~$capitalize-string\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1960,\"^1H\",8,\"^1L\",1960,\"^1F\",25,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"~$first?\"]]]]],\"^24\",\"Capitalizes the words in a string. If first? is false, don't capitalize the\\n                                      first character of the string even if it's a letter.\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/capitalize-string\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",25,\"^1Y\",[\"^1S\",[[\"~$s\",\"^:@\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1960,\"^1L\",1960,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"^:@\"]]]]],\"^24\",\"Capitalizes the words in a string. If first? is false, don't capitalize the\\n                                      first character of the string even if it's a letter.\"],\"~$start-block\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",551,\"^1H\",8,\"^1L\",551,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$prefix\",\"~$per-line-prefix\",\"~$suffix\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/start-block\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^1U\",\"^:C\",\"^:D\",\"^:E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",551,\"^1L\",551,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^:C\",\"^:D\",\"^:E\"]]]]]],\"~$relative-tabulation\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2115,\"^1H\",8,\"^1L\",2115,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/relative-tabulation\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2115,\"^1L\",2115,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$set-pprint-dispatch\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",826,\"^1H\",7,\"^1L\",826,\"^1F\",26,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^6>\"]]]]]],\"^Q\",\"~$cljs.pprint/set-pprint-dispatch\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[\"^6>\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",826,\"^1L\",826,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^6>\"]]]]]],\"~$remainders\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1077,\"^1H\",8,\"^1L\",1077,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2M\",\"^2N\"]]]]],\"^24\",\"Return the list of remainders (essentially the 'digits') of val in the given base\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/remainders\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^2M\",\"^2N\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1077,\"^1L\",1077,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2M\",\"^2N\"]]]]],\"^24\",\"Return the list of remainders (essentially the 'digits') of val in the given base\"],\"~$fresh-line\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2095,\"^1H\",7,\"^1L\",2095,\"^1F\",17,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[]]]]],\"^24\",\"Make a newline if *out* is not already at the beginning of the line. If *out* is\\nnot a pretty writer (which keeps track of columns), this function always outputs a newline.\"],\"^Q\",\"~$cljs.pprint/fresh-line\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2095,\"^1L\",2095,\"^20\",0,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[]]]]],\"^24\",\"Make a newline if *out* is not already at the beginning of the line. If *out* is\\nnot a pretty writer (which keeps track of columns), this function always outputs a newline.\"],\"~$->logical-block\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",42,\"^1H\",29,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",230,\"^1L\",230,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$parent\",\"^2J\",\"~$start-col\",\"^7U\",\"~$done-nl\",\"~$intra-block-nl\",\"^:C\",\"^:D\",\"^:E\",\"~$logical-block-callback\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/->logical-block\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",42,\"^1Y\",[\"^1S\",[[\"^:P\",\"^2J\",\"^:Q\",\"^7U\",\"^:R\",\"^:S\",\"^:C\",\"^:D\",\"^:E\",\"^:T\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",230,\"^1L\",230,\"^20\",10,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:P\",\"^2J\",\"^:Q\",\"^7U\",\"^:R\",\"^:S\",\"^:C\",\"^:D\",\"^:E\",\"^:T\"]]]]]],\"~$get-field\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",153,\"^1H\",8,\"^1L\",153,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^85\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-field\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"^1U\",\"^85\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",153,\"^1L\",153,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^85\"]]]]]],\"~$pprint-indent\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",854,\"^1H\",7,\"^1L\",854,\"^1F\",20,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^7V\",\"~$n\"]]]]],\"^24\",\"Create an indent at this point in the pretty printing stream. This defines how\\nfollowing lines are indented. relative-to can be either :block or :current depending\\nwhether the indent should be computed relative to the start of the logical block or\\nthe current column position. n is an offset.\\n\\nThis function is intended for use when writing custom dispatch functions.\\n\\nOutput is sent to *out* which must be a pretty printing writer.\"],\"^Q\",\"~$cljs.pprint/pprint-indent\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^7V\",\"~$n\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",854,\"^1L\",854,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^7V\",\"~$n\"]]]]],\"^24\",\"Create an indent at this point in the pretty printing stream. This defines how\\nfollowing lines are indented. relative-to can be either :block or :current depending\\nwhether the indent should be computed relative to the start of the logical block or\\nthe current column position. n is an offset.\\n\\nThis function is intended for use when writing custom dispatch functions.\\n\\nOutput is sent to *out* which must be a pretty printing writer.\"],\"~$process-bracket\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2577,\"^1H\",8,\"^1L\",2577,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^5L\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/process-bracket\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^1U\",\"^5L\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2577,\"^1L\",2577,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^5L\"]]]]]],\"~$map->buffer-blob\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",250,\"^1H\",10,\"^1L\",250,\"^1F\",21,\"^1I\",true,\"^2U\",\"^4=\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$G__22108\"]]]]]],\"^Q\",\"~$cljs.pprint/map->buffer-blob\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^;1\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",250,\"^1L\",250,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^;1\"]]]]]],\"~$format-old-roman\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1334,\"^1H\",8,\"^1L\",1334,\"^1F\",24,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-old-roman\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",24,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1334,\"^1L\",1334,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$format-error\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",934,\"^1H\",8,\"^1L\",934,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$message\",\"^3=\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-error\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^;6\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",934,\"^1L\",934,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^;6\",\"^3=\"]]]]]],\"~$*print-radix*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",670,\"^1H\",1,\"^1L\",670,\"^1F\",14,\"^24\",\"Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* \",\"^41\",\"1.2\",\"^31\",true],\"^41\",\"1.2\",\"^Q\",\"~$cljs.pprint/*print-radix*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",14,\"^1H\",1,\"^31\",true,\"^1J\",665,\"^1L\",670,\"^33\",\"^34\",\"^24\",\"Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* \"],\"~$set-indent\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2148,\"^1H\",8,\"^1L\",2148,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/set-indent\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2148,\"^1L\",2148,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$map->arg-navigator\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",16,\"^1H\",3,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",946,\"^1L\",946,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$G__22587\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/map->arg-navigator\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1Y\",[\"^1S\",[[\"^;=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",945,\"^1L\",946,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^;=\"]]]]]],\"~$IPrettyFlush\",[\"^ \",\"^1P\",[\"^ \",\"~:protocol-symbol\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",26,\"^1H\",14,\"^1J\",144,\"~:protocol-info\",[\"^ \",\"~:methods\",[\"^ \",\"~$-ppflush\",[[\"~$pp\"]]]],\"^1L\",144,\"^24\",null,\"~:jsdoc\",[\"^1S\",[\"@interface\"]]],\"^;@\",true,\"^Q\",\"~$cljs.pprint/IPrettyFlush\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1H\",1,\"^1J\",144,\"^;A\",[\"^ \",\"^;B\",[\"^ \",\"^;C\",[[\"^;D\"]]]],\"~:info\",null,\"^1L\",144,\"^33\",\"^37\",\"~:impls\",[\"^K\",[\"~$cljs.pprint/t_cljs$pprint22448\",\"~$cljs.pprint/t_cljs$pprint22435\"]],\"^24\",null,\"^;E\",[\"^1S\",[\"@interface\"]]],\"~$pretty-character\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1347,\"^1H\",8,\"^1L\",1347,\"^1F\",24,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pretty-character\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",24,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1347,\"^1L\",1347,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^O\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",28,\"^1H\",8,\"^1L\",28,\"^1F\",15,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$&\",\"^3H\"]]]]],\"^3A\",[\"^ \",\"^1X\",true,\"^20\",0,\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]],\"^1[\",[\"^1S\",[null]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/println\",\"^1X\",true,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",15,\"^3A\",[\"^ \",\"^1X\",true,\"^20\",0,\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]],\"^1[\",[\"^1S\",[null]]],\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null]],\"^1H\",1,\"^1J\",28,\"^1L\",28,\"^20\",0,\"^21\",true,\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]]],\"~$prefix-count\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",133,\"^1H\",8,\"^1L\",133,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$aseq\",\"^2N\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/prefix-count\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^;O\",\"^2N\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",133,\"^1L\",133,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^;O\",\"^2N\"]]]]]],\"~$compile-format\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2674,\"^1H\",8,\"^1L\",2674,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$format-str\"]]]]],\"^24\",\"Compiles format-str into a compiled format which can be used as an argument\\nto cl-format just like a plain format string. Use this function for improved\\nperformance when you're using the same format string repeatedly\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/compile-format\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"^;R\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2674,\"^1L\",2674,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^;R\"]]]]],\"^24\",\"Compiles format-str into a compiled format which can be used as an argument\\nto cl-format just like a plain format string. Use this function for improved\\nperformance when you're using the same format string repeatedly\"],\"~$separator?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2569,\"^1H\",8,\"^1L\",2569,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/separator?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2569,\"^1L\",2569,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$consume\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",85,\"^1H\",8,\"^1L\",85,\"^1F\",15,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9I\",\"^9J\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/consume\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",15,\"^1Y\",[\"^1S\",[[\"^9I\",\"^9J\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",85,\"^1L\",85,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9I\",\"^9J\"]]]]]],\"~$modify-case\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2044,\"^1H\",8,\"^1L\",2044,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$make-writer\",\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/modify-case\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^;Y\",\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2044,\"^1L\",2044,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^;Y\",\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$translate-param\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2471,\"^1H\",8,\"^1L\",2471,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[[\"~$p\",\"^3=\"]]]]]],\"^24\",\"Translate the string representation of a param to the internalized\\n                                      representation\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/translate-param\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"~$p__23184\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2471,\"^1L\",2471,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[[\"~$p\",\"^3=\"]]]]]],\"^24\",\"Translate the string representation of a param to the internalized\\n                                      representation\"],\"~$cl-format\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",16,\"^3A\",[\"^ \",\"^1X\",true,\"^20\",2,\"^1Y\",[[\"^1S\",[\"^27\",\"~$format-in\",\"^56\"]]],\"^1R\",[\"^1S\",[[\"^27\",\"^<3\",\"~$&\",\"^56\"]]],\"^1[\",[\"^1S\",[null]]],\"^1H\",7,\"^1J\",895,\"^1L\",895,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^<3\",\"~$&\",\"^56\"]]]]],\"~:see-also\",[[\"http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html#SECTION002633000000000000000\",\"Common Lisp the Language\"],[\"http://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm\",\"Common Lisp HyperSpec\"]],\"^24\",\"An implementation of a Common Lisp compatible format function. cl-format formats its\\narguments to an output stream or string based on the format control string given. It\\nsupports sophisticated formatting of structured data.\\n\\nWriter satisfies IWriter, true to output via *print-fn* or nil to output\\nto a string, format-in is the format control string and the remaining arguments\\nare the data to be formatted.\\n\\nThe format control string is a string to be output with embedded 'format directives'\\ndescribing how to format the various arguments passed in.\\n\\nIf writer is nil, cl-format returns the formatted result string. Otherwise, cl-format\\nreturns nil.\\n\\nFor example:\\n (let [results [46 38 22]]\\n        (cl-format true \\\"There ~[are~;is~:;are~]~:* ~d result~:p: ~{~d~^, ~}~%\\\"\\n                   (count results) results))\\n\\nPrints via *print-fn*:\\n There are 3 results: 46, 38, 22\\n\\nDetailed documentation on format control strings is available in the \\\"Common Lisp the\\nLanguage, 2nd edition\\\", Chapter 22 (available online at:\\nhttp://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html#SECTION002633000000000000000)\\nand in the Common Lisp HyperSpec at\\nhttp://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm\"],\"^Q\",\"~$cljs.pprint/cl-format\",\"^1X\",true,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^3A\",[\"^ \",\"^1X\",true,\"^20\",2,\"^1Y\",[[\"^1S\",[\"^27\",\"^<3\",\"^56\"]]],\"^1R\",[\"^1S\",[[\"^27\",\"^<3\",\"~$&\",\"^56\"]]],\"^1[\",[\"^1S\",[null]]],\"^1Y\",[[\"^1S\",[\"^27\",\"^<3\",\"^56\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null]],\"^1H\",1,\"^1J\",895,\"^1L\",895,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[[\"^27\",\"^<3\",\"~$&\",\"^56\"]]],\"^<4\",[[\"http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html#SECTION002633000000000000000\",\"Common Lisp the Language\"],[\"http://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm\",\"Common Lisp HyperSpec\"]],\"^24\",\"An implementation of a Common Lisp compatible format function. cl-format formats its\\narguments to an output stream or string based on the format control string given. It\\nsupports sophisticated formatting of structured data.\\n\\nWriter satisfies IWriter, true to output via *print-fn* or nil to output\\nto a string, format-in is the format control string and the remaining arguments\\nare the data to be formatted.\\n\\nThe format control string is a string to be output with embedded 'format directives'\\ndescribing how to format the various arguments passed in.\\n\\nIf writer is nil, cl-format returns the formatted result string. Otherwise, cl-format\\nreturns nil.\\n\\nFor example:\\n (let [results [46 38 22]]\\n        (cl-format true \\\"There ~[are~;is~:;are~]~:* ~d result~:p: ~{~d~^, ~}~%\\\"\\n                   (count results) results))\\n\\nPrints via *print-fn*:\\n There are 3 results: 46, 38, 22\\n\\nDetailed documentation on format control strings is available in the \\\"Common Lisp the\\nLanguage, 2nd edition\\\", Chapter 22 (available online at:\\nhttp://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html#SECTION002633000000000000000)\\nand in the Common Lisp HyperSpec at\\nhttp://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm\"],\"~$pprint-reader-macro\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2796,\"^1H\",8,\"^1L\",2796,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-reader-macro\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2796,\"^1L\",2796,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"~$format-logical-block\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2130,\"^1H\",8,\"^1L\",2130,\"^1F\",28,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-logical-block\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",28,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2130,\"^1L\",2130,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$english-ordinal-units\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1154,\"^1H\",6,\"^1L\",1154,\"^1F\",27,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/english-ordinal-units\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1H\",1,\"^1J\",1153,\"^1L\",1154,\"^33\",\"^3S\"],\"~$directive-table\",[\"^ \",\"^Q\",\"~$cljs.pprint/directive-table\",\"^1P\",[\"^ \",\"^1E\",null],\"^1E\",\"out/cljs/pprint.cljs\",\"^1J\",2166,\"^1H\",1,\"^33\",\"~$cljs.core/PersistentHashMap\"],\"~$*format-str*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",932,\"^1H\",33,\"^1L\",932,\"^1F\",45,\"^1Q\",true,\"^31\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/*format-str*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",45,\"^1H\",1,\"^31\",true,\"^1J\",932,\"^1L\",932,\"^33\",\"^34\"],\"~$->nl-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",253,\"^1H\",10,\"^1L\",253,\"^1F\",14,\"^1I\",true,\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:4\",\"^48\",\"^45\",\"^49\",\"^4:\"]]]]]],\"^Q\",\"~$cljs.pprint/->nl-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",14,\"^1Y\",[\"^1S\",[[\"^:4\",\"^48\",\"^45\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",253,\"^1L\",253,\"^20\",5,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:4\",\"^48\",\"^45\",\"^49\",\"^4:\"]]]]]],\"~$t_cljs$pprint22067\",[\"^ \",\"^14\",4,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"~$cljs.core/IDeref\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/t_cljs$pprint22067\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",6,\"^1J\",188,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]]],\"~$compile-directive\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2544,\"^1H\",8,\"^1L\",2544,\"^1F\",25,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"^3=\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/compile-directive\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",25,\"^1Y\",[\"^1S\",[[\"~$s\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2544,\"^1L\",2544,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"^3=\"]]]]]],\"~$two-forms\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3156,\"^1H\",8,\"^1L\",3156,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$amap\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/two-forms\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"^<I\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3156,\"^1L\",3156,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^<I\"]]]]]],\"~$*current-level*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",682,\"^1H\",33,\"^1L\",682,\"^1F\",48,\"^1Q\",true,\"^31\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/*current-level*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",48,\"^1H\",1,\"^31\",true,\"^1J\",682,\"^1L\",682,\"^33\",\"~$number\"],\"~$add-core-ns\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3163,\"^1H\",8,\"^1L\",3163,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^<I\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/add-core-ns\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^<I\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3163,\"^1L\",3163,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^<I\"]]]]]],\"~$*print-lines*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",643,\"^1H\",1,\"^1L\",643,\"^1F\",14,\"^1Q\",true,\"^24\",\"Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)\",\"^31\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/*print-lines*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",14,\"^1H\",1,\"^31\",true,\"^1J\",640,\"^1L\",643,\"^33\",\"^34\",\"^24\",\"Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)\"],\"~$render-clauses\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1847,\"^1H\",8,\"^1L\",1847,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$clauses\",\"^2E\",\"~$base-navigator\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/render-clauses\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"^<S\",\"^2E\",\"^<T\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1847,\"^1L\",1847,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^<S\",\"^2E\",\"^<T\"]]]]]],\"~$format-ascii\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1044,\"^1H\",8,\"^1L\",1044,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$print-func\",\"^2D\",\"^39\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-ascii\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^<W\",\"^2D\",\"^39\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1044,\"^1L\",1044,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^<W\",\"^2D\",\"^39\",\"^2F\"]]]]]],\"~$format-simple-cardinal\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1180,\"^1H\",8,\"^1L\",1180,\"^1F\",30,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9U\"]]]]],\"^24\",\"Convert a number less than 1000 to a cardinal english string\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-simple-cardinal\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",30,\"^1Y\",[\"^1S\",[[\"^9U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1180,\"^1L\",1180,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9U\"]]]]],\"^24\",\"Convert a number less than 1000 to a cardinal english string\"],\"~$->t_cljs$pprint22067\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^8D\",\"~$fields\",\"~$meta22068\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint22067\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^8D\",\"^=0\",\"^=1\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",6,\"^2U\",\"^2V\",\"^1J\",188,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^8D\",\"^=0\",\"^=1\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]]],\"~$->buffer-blob\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",250,\"^1H\",10,\"^1L\",250,\"^1F\",21,\"^1I\",true,\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:4\",\"^5@\",\"^5A\",\"^49\",\"^4:\"]]]]]],\"^Q\",\"~$cljs.pprint/->buffer-blob\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^:4\",\"^5@\",\"^5A\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",250,\"^1L\",250,\"^20\",5,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:4\",\"^5@\",\"^5A\",\"^49\",\"^4:\"]]]]]],\"~$map->end-block-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",257,\"^1H\",10,\"^1L\",257,\"^1F\",21,\"^1I\",true,\"^2U\",\"^4=\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$G__22160\"]]]]]],\"^Q\",\"~$cljs.pprint/map->end-block-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^=6\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",257,\"^1L\",257,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^=6\"]]]]]],\"~$map->start-block-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",255,\"^1H\",10,\"^1L\",255,\"^1F\",23,\"^1I\",true,\"^2U\",\"^4=\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$G__22144\"]]]]]],\"^Q\",\"~$cljs.pprint/map->start-block-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^=9\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",255,\"^1L\",255,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^=9\"]]]]]],\"~$*print-miser-width*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",637,\"^1H\",2,\"^1L\",637,\"^1F\",21,\"^24\",\"The column at which to enter miser style. Depending on the dispatch table,\\nmiser style add newlines in more places to try to keep lines short allowing for further\\nlevels of nesting.\",\"^41\",\"1.2\",\"^31\",true],\"^41\",\"1.2\",\"^Q\",\"~$cljs.pprint/*print-miser-width*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1H\",1,\"^31\",true,\"^1J\",632,\"^1L\",637,\"^33\",\"^<M\",\"^24\",\"The column at which to enter miser style. Depending on the dispatch table,\\nmiser style add newlines in more places to try to keep lines short allowing for further\\nlevels of nesting.\"],\"~$old-roman-table\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1297,\"^1H\",6,\"^1L\",1297,\"^1F\",21,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/old-roman-table\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1H\",1,\"^1J\",1296,\"^1L\",1297,\"^33\",\"^3S\"],\"~$pprint-pqueue\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2890,\"^1H\",23,\"^1L\",2890,\"^1F\",36,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-pqueue\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",36,\"^1H\",1,\"^1J\",2890,\"^1L\",2890,\"^33\",\"^6>\"],\"~$get-line\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",162,\"^1H\",8,\"^1L\",162,\"^1F\",16,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-line\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",162,\"^1L\",162,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$pprint-map\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2841,\"^1H\",8,\"^1L\",2841,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^<I\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-map\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^<I\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2841,\"^1L\",2841,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^<I\"]]]]]],\"~$->end-block-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",257,\"^1H\",10,\"^1L\",257,\"^1F\",21,\"^1I\",true,\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:4\",\"^45\",\"^49\",\"^4:\"]]]]]],\"^Q\",\"~$cljs.pprint/->end-block-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^:4\",\"^45\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",257,\"^1L\",257,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:4\",\"^45\",\"^49\",\"^4:\"]]]]]],\"~$expand-fixed\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1487,\"^1H\",8,\"^1L\",1487,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$e\",\"~$d\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/expand-fixed\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"~$m\",\"~$e\",\"~$d\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1487,\"^1L\",1487,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$e\",\"~$d\"]]]]]],\"~$format-simple-number\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1034,\"^1H\",8,\"^1L\",1034,\"^1F\",28,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$n\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-simple-number\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",28,\"^1Y\",[\"^1S\",[[\"~$n\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1034,\"^1L\",1034,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$n\"]]]]]],\"~$->t_cljs$pprint22435\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^;F\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^8D\",\"^8M\",\"^2I\",\"^=0\",\"~$meta22436\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^;F\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint22435\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^8D\",\"^8M\",\"^2I\",\"^=0\",\"^=L\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",5,\"^2U\",\"^2V\",\"^1J\",509,\"^20\",6,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^8D\",\"^8M\",\"^2I\",\"^=0\",\"^=L\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]]],\"~$->t_cljs$pprint23042\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^6B\",\"~$meta23043\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint23042\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^6B\",\"^=O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",5,\"^2U\",\"^2V\",\"^1J\",1987,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^6B\",\"^=O\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$format-roman\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1310,\"^1H\",8,\"^1L\",1310,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$table\",\"^2D\",\"^2E\",\"^2F\"]]]]],\"^24\",\"Format a roman numeral using the specified look-up table\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-roman\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^=R\",\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1310,\"^1L\",1310,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^=R\",\"^2D\",\"^2E\",\"^2F\"]]]]],\"^24\",\"Format a roman numeral using the specified look-up table\"],\"~$emit-nl\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",382,\"^1H\",8,\"^1L\",382,\"^1F\",15,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$nl\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/emit-nl\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",15,\"^1Y\",[\"^1S\",[[\"^1U\",\"^=U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",382,\"^1L\",382,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^=U\"]]]]]],\"~$pprint-simple-code-list\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3143,\"^1H\",8,\"^1L\",3143,\"^1F\",31,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-simple-code-list\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",31,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3143,\"^1L\",3143,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^P\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",25,\"^1H\",8,\"^1L\",25,\"^1F\",13,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$&\",\"^3H\"]]]]],\"^3A\",[\"^ \",\"^1X\",true,\"^20\",0,\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]],\"^1[\",[\"^1S\",[null]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/print\",\"^1X\",true,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",13,\"^3A\",[\"^ \",\"^1X\",true,\"^20\",0,\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]],\"^1[\",[\"^1S\",[null]]],\"^1Y\",[[\"^1S\",[\"^3H\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null]],\"^1H\",1,\"^1J\",25,\"^1L\",25,\"^20\",0,\"^21\",true,\"^1R\",[\"^1S\",[[\"~$&\",\"^3H\"]]]],\"~$pprint-code-list\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3189,\"^1H\",8,\"^1L\",3189,\"^1F\",24,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-code-list\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",24,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3189,\"^1L\",3189,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"~$make-pretty-writer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",721,\"^1H\",8,\"^1L\",721,\"^1F\",26,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$base-writer\",\"~$right-margin\",\"^8M\"]]]]],\"^24\",\"Wrap base-writer in a PrettyWriter with the specified right-margin and miser-width\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/make-pretty-writer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[\"^>1\",\"^>2\",\"^8M\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",721,\"^1L\",721,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^>1\",\"^>2\",\"^8M\"]]]]],\"^24\",\"Wrap base-writer in a PrettyWriter with the specified right-margin and miser-width\"],\"~$new-roman-table\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1304,\"^1H\",6,\"^1L\",1304,\"^1F\",21,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/new-roman-table\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1H\",1,\"^1J\",1303,\"^1L\",1304,\"^33\",\"^3S\"],\"~$pprint-simple-default\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2862,\"^1H\",8,\"^1L\",2862,\"^1F\",29,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^8P\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-simple-default\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",29,\"^1Y\",[\"^1S\",[[\"^8P\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2862,\"^1L\",2862,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^8P\"]]]]]],\"~$->t_cljs$pprint23024\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"~$meta23025\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint23024\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^>9\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",3,\"^2U\",\"^2V\",\"^1J\",1921,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^>9\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$t_cljs$pprint23030\",[\"^ \",\"^14\",2,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/t_cljs$pprint23030\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",3,\"^1J\",1942,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$float-parts\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1413,\"^1H\",8,\"^1L\",1413,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$f\"]]]]],\"^24\",\"Take care of leading and trailing zeros in decomposed floats\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/float-parts\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"~$f\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1413,\"^1L\",1413,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$f\"]]]]],\"^24\",\"Take care of leading and trailing zeros in decomposed floats\"],\"~$nl-t?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4E\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/nl-t?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^4E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",253,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4E\"]]]]]],\"~$->t_cljs$pprint22448\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^;F\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^8D\",\"^8M\",\"^2I\",\"^=0\",\"~$meta22449\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^;F\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint22448\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^8D\",\"^8M\",\"^2I\",\"^=0\",\"^>B\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",5,\"^2U\",\"^2V\",\"^1J\",509,\"^20\",6,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^8D\",\"^8M\",\"^2I\",\"^=0\",\"^>B\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]]],\"~$write\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",750,\"^1H\",7,\"^1L\",750,\"^1F\",12,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3@\",\"~$&\",\"~$kw-args\"]]]]],\"^24\",\"Write an object subject to the current bindings of the printer control variables.\\nUse the kw-args argument to override individual variables for this call (and any\\nrecursive calls). Returns the string result if :stream is nil or nil otherwise.\\n\\nThe following keyword arguments can be passed with values:\\n  Keyword              Meaning                              Default value\\n  :stream              Writer for output or nil             true (indicates *out*)\\n  :base                Base to use for writing rationals    Current value of *print-base*\\n  :circle*             If true, mark circular structures    Current value of *print-circle*\\n  :length              Maximum elements to show in sublists Current value of *print-length*\\n  :level               Maximum depth                        Current value of *print-level*\\n  :lines*              Maximum lines of output              Current value of *print-lines*\\n  :miser-width         Width to enter miser mode            Current value of *print-miser-width*\\n  :dispatch            The pretty print dispatch function   Current value of *print-pprint-dispatch*\\n  :pretty              If true, do pretty printing          Current value of *print-pretty*\\n  :radix               If true, prepend a radix specifier   Current value of *print-radix*\\n  :readably*           If true, print readably              Current value of *print-readably*\\n  :right-margin        The column for the right margin      Current value of *print-right-margin*\\n  :suppress-namespaces If true, no namespaces in symbols    Current value of *print-suppress-namespaces*\\n\\n  * = not yet supported\\n\",\"^3A\",[\"^ \",\"^1X\",true,\"^20\",1,\"^1Y\",[[\"^1S\",[\"^3@\",\"^>E\"]]],\"^1R\",[\"^1S\",[[\"^3@\",\"~$&\",\"^>E\"]]],\"^1[\",[\"^1S\",[null]]]],\"^Q\",\"~$cljs.pprint/write\",\"^1X\",true,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",12,\"^3A\",[\"^ \",\"^1X\",true,\"^20\",1,\"^1Y\",[[\"^1S\",[\"^3@\",\"^>E\"]]],\"^1R\",[\"^1S\",[[\"^3@\",\"~$&\",\"^>E\"]]],\"^1[\",[\"^1S\",[null]]],\"^1Y\",[[\"^1S\",[\"^3@\",\"^>E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null]],\"^1H\",1,\"^1J\",750,\"^1L\",750,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[[\"^3@\",\"~$&\",\"^>E\"]]],\"^24\",\"Write an object subject to the current bindings of the printer control variables.\\nUse the kw-args argument to override individual variables for this call (and any\\nrecursive calls). Returns the string result if :stream is nil or nil otherwise.\\n\\nThe following keyword arguments can be passed with values:\\n  Keyword              Meaning                              Default value\\n  :stream              Writer for output or nil             true (indicates *out*)\\n  :base                Base to use for writing rationals    Current value of *print-base*\\n  :circle*             If true, mark circular structures    Current value of *print-circle*\\n  :length              Maximum elements to show in sublists Current value of *print-length*\\n  :level               Maximum depth                        Current value of *print-level*\\n  :lines*              Maximum lines of output              Current value of *print-lines*\\n  :miser-width         Width to enter miser mode            Current value of *print-miser-width*\\n  :dispatch            The pretty print dispatch function   Current value of *print-pprint-dispatch*\\n  :pretty              If true, do pretty printing          Current value of *print-pretty*\\n  :radix               If true, prepend a radix specifier   Current value of *print-radix*\\n  :readably*           If true, print readably              Current value of *print-readably*\\n  :right-margin        The column for the right margin      Current value of *print-right-margin*\\n  :suppress-namespaces If true, no namespaces in symbols    Current value of *print-suppress-namespaces*\\n\\n  * = not yet supported\\n\"],\"~$single-defn\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3008,\"^1H\",8,\"^1L\",3008,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\",\"^7[\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/single-defn\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^3O\",\"^7[\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3008,\"^1L\",3008,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\",\"^7[\"]]]]]],\"~$pprint-condp\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3099,\"^1H\",8,\"^1L\",3099,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-condp\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3099,\"^1L\",3099,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"~$right-bracket\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2567,\"^1H\",8,\"^1L\",2567,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/right-bracket\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2567,\"^1L\",2567,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$set-field\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",156,\"^1H\",8,\"^1L\",156,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^85\",\"~$new-val\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/set-field\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"^1U\",\"^85\",\"^>N\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",156,\"^1L\",156,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^85\",\"^>N\"]]]]]],\"~$get-writer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",172,\"^1H\",8,\"^1L\",172,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-writer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^1U\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",172,\"^1L\",172,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\"]]]]]],\"~$->indent-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",259,\"^1H\",10,\"^1L\",259,\"^1F\",18,\"^1I\",true,\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:4\",\"^45\",\"^7V\",\"^3=\",\"^49\",\"^4:\"]]]]]],\"^Q\",\"~$cljs.pprint/->indent-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^:4\",\"^45\",\"^7V\",\"^3=\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",259,\"^1L\",259,\"^20\",6,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:4\",\"^45\",\"^7V\",\"^3=\",\"^49\",\"^4:\"]]]]]],\"~$english-ordinal-tens\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1164,\"^1H\",6,\"^1L\",1164,\"^1F\",26,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/english-ordinal-tens\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1H\",1,\"^1J\",1163,\"^1L\",1164,\"^33\",\"^3S\"],\"^=U\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",586,\"^1H\",8,\"^1L\",586,\"^1F\",10,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^48\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/nl\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",10,\"^1Y\",[\"^1S\",[[\"^1U\",\"^48\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",586,\"^1L\",586,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^48\"]]]]]],\"~$choice-conditional\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1691,\"^1H\",8,\"^1L\",1691,\"^1F\",26,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^39\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/choice-conditional\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[\"^2D\",\"^39\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1691,\"^1L\",1691,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^39\",\"^2F\"]]]]]],\"~$check-arg-conditional\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1715,\"^1H\",8,\"^1L\",1715,\"^1F\",29,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^39\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/check-arg-conditional\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",29,\"^1Y\",[\"^1S\",[[\"^2D\",\"^39\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1715,\"^1L\",1715,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^39\",\"^2F\"]]]]]],\"~$reader-macros\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2788,\"^1H\",23,\"^1L\",2788,\"^1F\",36,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/reader-macros\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",36,\"^1H\",1,\"^1J\",2788,\"^1L\",2788,\"^33\",\"^1B\"],\"~$format-cardinal-english\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1221,\"^1H\",8,\"^1L\",1221,\"^1F\",31,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-cardinal-english\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",31,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1221,\"^1L\",1221,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$extract-param\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2454,\"^1H\",8,\"^1L\",2454,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[[\"~$s\",\"^3=\",\"~$saw-comma\"]]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/extract-param\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"~$p__23177\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2454,\"^1L\",2454,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[[\"~$s\",\"^3=\",\"^?4\"]]]]]]],\"~$t_cljs$pprint23053\",[\"^ \",\"^14\",3,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/t_cljs$pprint23053\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",5,\"^1J\",1987,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$get-fixed\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1505,\"^1H\",8,\"^1L\",1505,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$e\",\"~$d\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/get-fixed\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"~$m\",\"~$e\",\"~$d\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1505,\"^1L\",1505,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$e\",\"~$d\"]]]]]],\"~$make-indent-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^45\",\"^7V\",\"^3=\",\"^49\",\"^4:\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/make-indent-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^45\",\"^7V\",\"^3=\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",259,\"^20\",5,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^45\",\"^7V\",\"^3=\",\"^49\",\"^4:\"]]]]]],\"~$flag-defs\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2484,\"^1H\",6,\"^1L\",2484,\"^1F\",15,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/flag-defs\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",15,\"^1H\",1,\"^1J\",2483,\"^1L\",2484,\"^33\",\"^1B\"],\"^;C\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",145,\"^1H\",4,\"^1L\",145,\"^1F\",12,\"~:protocol\",\"^;F\",\"^24\",null,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^;D\"]]]]]],\"^??\",\"^;F\",\"^Q\",\"~$cljs.pprint/-ppflush\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",12,\"^1Y\",[\"^1S\",[[\"^;D\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",144,\"^1L\",145,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^;D\"]]]]],\"^24\",null],\"~$miser-nl?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",328,\"^1H\",8,\"^1L\",328,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^2I\",\"^2J\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/miser-nl?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"^1U\",\"^2I\",\"^2J\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",328,\"^1L\",328,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^2I\",\"^2J\"]]]]]],\"~$iterate-sublist\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1732,\"^1H\",8,\"^1L\",1732,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/iterate-sublist\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1732,\"^1L\",1732,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$*print-right-margin*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",630,\"^1H\",2,\"^1L\",630,\"^1F\",22,\"^24\",\"Pretty printing will try to avoid anything going beyond this column.\\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\\nnon-mandatory newlines.\",\"^41\",\"1.2\",\"^31\",true],\"^41\",\"1.2\",\"^Q\",\"~$cljs.pprint/*print-right-margin*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1H\",1,\"^31\",true,\"^1J\",625,\"^1L\",630,\"^33\",\"^<M\",\"^24\",\"Pretty printing will try to avoid anything going beyond this column.\\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\\nnon-mandatory newlines.\"],\"~$abort?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1376,\"^1H\",8,\"^1L\",1376,\"^1F\",14,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$context\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/abort?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",14,\"^1Y\",[\"^1S\",[[\"^?H\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1376,\"^1L\",1376,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^?H\"]]]]]],\"~$t_cljs$pprint22448\",[\"^ \",\"^14\",6,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^;F\",\"^1@\"]],\"^Q\",\"^;I\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",5,\"^1J\",509,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]]],\"~$map->indent-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",259,\"^1H\",10,\"^1L\",259,\"^1F\",18,\"^1I\",true,\"^2U\",\"^4=\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$G__22176\"]]]]]],\"^Q\",\"~$cljs.pprint/map->indent-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^?L\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^4=\",\"^1J\",259,\"^1L\",259,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^?L\"]]]]]],\"~$type-map\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2869,\"^1H\",1,\"^1L\",2869,\"^1F\",9,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/type-map\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",9,\"^1H\",1,\"^1J\",2868,\"^1L\",2869,\"^33\",\"^1B\"],\"~$buffer-blob\",[\"^ \",\"^14\",5,\"^15\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]],\"^Q\",\"~$cljs.pprint/buffer-blob\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1G\",true,\"^1H\",10,\"^1I\",true,\"^1J\",250,\"^1K\",true,\"^1L\",250,\"^1M\",[\"^K\",[\"^16\",\"^17\",\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1@\",\"^1A\",\"^1B\",\"^1C\"]]],\"~$->t_cljs$pprint23070\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^2W\",\"~$meta23071\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint23070\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^2W\",\"^?S\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",5,\"^2U\",\"^2V\",\"^1J\",2013,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^2W\",\"^?S\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$capitalize-word-writer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1983,\"^1H\",8,\"^1L\",1983,\"^1F\",30,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"]]]]],\"^24\",\"Returns a proxy that wraps writer, capitalizing all words\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/capitalize-word-writer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",30,\"^1Y\",[\"^1S\",[[\"^27\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1983,\"^1L\",1983,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"]]]]],\"^24\",\"Returns a proxy that wraps writer, capitalizing all words\"],\"~$write-out\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",726,\"^1H\",7,\"^1L\",726,\"^1F\",16,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3@\"]]]]],\"^24\",\"Write an object to *out* subject to the current bindings of the printer control\\nvariables. Use the kw-args argument to override individual variables for this call (and\\nany recursive calls).\\n\\n*out* must be a PrettyWriter if pretty printing is enabled. This is the responsibility\\nof the caller.\\n\\nThis method is primarily intended for use by pretty print dispatch functions that\\nalready know that the pretty printer will have set up their environment appropriately.\\nNormal library clients should use the standard \\\"write\\\" interface. \"],\"^Q\",\"~$cljs.pprint/write-out\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",16,\"^1Y\",[\"^1S\",[[\"^3@\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",726,\"^1L\",726,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3@\"]]]]],\"^24\",\"Write an object to *out* subject to the current bindings of the printer control\\nvariables. Use the kw-args argument to override individual variables for this call (and\\nany recursive calls).\\n\\n*out* must be a PrettyWriter if pretty printing is enabled. This is the responsibility\\nof the caller.\\n\\nThis method is primarily intended for use by pretty print dispatch functions that\\nalready know that the pretty printer will have set up their environment appropriately.\\nNormal library clients should use the standard \\\"write\\\" interface. \"],\"~$->t_cljs$pprint23018\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^2S\",true,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^2U\",\"^2V\",\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"~$meta23019\"]]]]],\"^1E\",null],\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/->t_cljs$pprint23018\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^27\",\"^?Z\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^2S\",true,\"^1H\",3,\"^2U\",\"^2V\",\"^1J\",1921,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\",\"^?Z\"]]]]],\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$exponential-float\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1568,\"^1H\",8,\"^1L\",1568,\"^1F\",25,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^3=\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/exponential-float\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",25,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1568,\"^1L\",1568,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^3=\"]]]]]],\"~$format-ordinal-english\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1260,\"^1H\",8,\"^1L\",1260,\"^1F\",30,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-ordinal-english\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",30,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1260,\"^1L\",1260,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$convert-ratio\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1516,\"^1H\",8,\"^1L\",1516,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$x\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/convert-ratio\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"~$x\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1516,\"^1L\",1516,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$x\"]]]]]],\"~$ancestor?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",236,\"^1H\",8,\"^1L\",236,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:P\",\"~$child\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/ancestor?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"^:P\",\"^@7\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",236,\"^1L\",236,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^:P\",\"^@7\"]]]]]],\"~$plain-character\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1369,\"^1H\",8,\"^1L\",1369,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/plain-character\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1369,\"^1L\",1369,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$format-new-roman\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1337,\"^1H\",8,\"^1L\",1337,\"^1F\",24,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/format-new-roman\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",24,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1337,\"^1L\",1337,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$print-char\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",32,\"^1H\",8,\"^1L\",32,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$c\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/print-char\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"~$c\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",32,\"^1L\",32,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$c\"]]]]]],\"~$map-params\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2514,\"^1H\",8,\"^1L\",2514,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^8G\",\"^2D\",\"^8H\",\"^3=\"]]]]],\"^24\",\"Takes a directive definition and the list of actual parameters and\\na map of flags and returns a map of the parameters and flags with defaults\\nfilled in. We check to make sure that there are the right types and number\\nof parameters as well.\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/map-params\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^8G\",\"^2D\",\"^8H\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2514,\"^1L\",2514,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^8G\",\"^2D\",\"^8H\",\"^3=\"]]]]],\"^24\",\"Takes a directive definition and the list of actual parameters and\\na map of flags and returns a map of the parameters and flags with defaults\\nfilled in. We check to make sure that there are the right types and number\\nof parameters as well.\"],\"~$consume-while\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",93,\"^1H\",8,\"^1L\",93,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9I\",\"^9J\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/consume-while\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^9I\",\"^9J\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",93,\"^1L\",93,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9I\",\"^9J\"]]]]]],\"~$t_cljs$pprint22435\",[\"^ \",\"^14\",6,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^;F\",\"^1@\"]],\"^Q\",\"^;J\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",5,\"^1J\",509,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^<D\",\"^1@\"]]],\"~$t_cljs$pprint23036\",[\"^ \",\"^14\",2,\"^15\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]],\"^Q\",\"~$cljs.pprint/t_cljs$pprint23036\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1G\",true,\"^2S\",true,\"^1H\",3,\"^1J\",1942,\"^1K\",false,\"^1M\",[\"^K\",[\"^2T\",\"^1<\",\"^1@\"]]],\"~$buffer-blob?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4E\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/buffer-blob?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^4E\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",250,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^4E\"]]]]]],\"~$english-cardinal-units\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1148,\"^1H\",6,\"^1L\",1148,\"^1F\",28,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/english-cardinal-units\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",28,\"^1H\",1,\"^1J\",1147,\"^1L\",1148,\"^33\",\"^3S\"],\"~$absolute-reposition\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",978,\"^1H\",8,\"^1L\",978,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\",\"^:;\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/absolute-reposition\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^2E\",\"^:;\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",978,\"^1L\",978,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2E\",\"^:;\"]]]]]],\"~$*default-page-width*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",151,\"^1H\",33,\"^1L\",151,\"^1F\",53,\"^1Q\",true,\"^31\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/*default-page-width*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",53,\"^1H\",1,\"^31\",true,\"^1J\",151,\"^1L\",151,\"^33\",\"^<M\"],\"~$make-start-block-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^45\",\"^49\",\"^4:\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/make-start-block-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^45\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",255,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^45\",\"^49\",\"^4:\"]]]]]],\"~$p-write-char\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",478,\"^1H\",8,\"^1L\",478,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$c\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/p-write-char\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^1U\",\"~$c\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",478,\"^1L\",478,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$c\"]]]]]],\"~$tokens-fit?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",318,\"^1H\",8,\"^1L\",318,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^1V\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/tokens-fit?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^1U\",\"^1V\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",318,\"^1L\",318,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^1V\"]]]]]],\"~$use-method\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2763,\"^1H\",8,\"^1L\",2763,\"^1F\",18,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$multifn\",\"~$dispatch-val\",\"^9I\"]]]]],\"^24\",\"Installs a function as a new method of multimethod associated with dispatch-value. \"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/use-method\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",18,\"^1Y\",[\"^1S\",[[\"^@U\",\"^@V\",\"^9I\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2763,\"^1L\",2763,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^@U\",\"^@V\",\"^9I\"]]]]],\"^24\",\"Installs a function as a new method of multimethod associated with dispatch-value. \"],\"~$pprint-simple-list\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2813,\"^1H\",8,\"^1L\",2813,\"^1F\",26,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-simple-list\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",26,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2813,\"^1L\",2813,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"~$->compiled-directive\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1F\",21,\"^1H\",3,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",990,\"^1L\",990,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9I\",\"^8G\",\"^2D\",\"^3=\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/->compiled-directive\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^9I\",\"^8G\",\"^2D\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1I\",true,\"^2U\",\"^2V\",\"^1J\",989,\"^1L\",990,\"^20\",4,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^9I\",\"^8G\",\"^2D\",\"^3=\"]]]]]],\"~$pprint-if\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3077,\"^1H\",23,\"^1L\",3077,\"^1F\",32,\"^1Q\",true],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-if\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",32,\"^1H\",1,\"^1J\",3077,\"^1L\",3077,\"^33\",\"^6>\"],\"~$add-to-buffer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",433,\"^1H\",8,\"^1L\",433,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"~$token\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/add-to-buffer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"^1U\",\"^A3\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",433,\"^1L\",433,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^1U\",\"^A3\"]]]]]],\"~$absolute-tabulation\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2104,\"^1H\",8,\"^1L\",2104,\"^1F\",27,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/absolute-tabulation\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",27,\"^1Y\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2104,\"^1L\",2104,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^2D\",\"^2E\",\"^2F\"]]]]]],\"~$extract-flags\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2486,\"^1H\",8,\"^1L\",2486,\"^1F\",21,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"^3=\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/extract-flags\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",21,\"^1Y\",[\"^1S\",[[\"~$s\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2486,\"^1L\",2486,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"^3=\"]]]]]],\"~$map-ref-type\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2872,\"^1H\",8,\"^1L\",2872,\"^1F\",20,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$name\"]]]]],\"^24\",\"Map ugly type names to something simpler\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/map-ref-type\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",20,\"^1Y\",[\"^1S\",[[\"^A:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2872,\"^1L\",2872,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^A:\"]]]]],\"^24\",\"Map ugly type names to something simpler\"],\"~$extract-params\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",2468,\"^1H\",8,\"^1L\",2468,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"^3=\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/extract-params\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"~$s\",\"^3=\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",2468,\"^1L\",2468,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$s\",\"^3=\"]]]]]],\"~$make-end-block-t\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^45\",\"^49\",\"^4:\"]]]]],\"^1E\",null],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/make-end-block-t\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1Y\",[\"^1S\",[[\"^45\",\"^49\",\"^4:\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",257,\"^20\",3,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^45\",\"^49\",\"^4:\"]]]]]],\"~$tuple-map\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",108,\"^1H\",8,\"^1L\",108,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"~$v1\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/tuple-map\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"~$m\",\"^AA\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",108,\"^1L\",108,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$m\",\"^AA\"]]]]]],\"~$*print-base*\",[\"^ \",\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",675,\"^1H\",1,\"^1L\",675,\"^1F\",13,\"^24\",\"The base to use for printing integers and rationals.\",\"^41\",\"1.2\",\"^31\",true],\"^41\",\"1.2\",\"^Q\",\"~$cljs.pprint/*print-base*\",\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",13,\"^1H\",1,\"^31\",true,\"^1J\",672,\"^1L\",675,\"^33\",\"^<M\",\"^24\",\"The base to use for printing integers and rationals.\"],\"~$table-ize\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",712,\"^1H\",8,\"^1L\",712,\"^1F\",17,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$t\",\"~$m\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/table-ize\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",17,\"^1Y\",[\"^1S\",[[\"~$t\",\"~$m\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",712,\"^1L\",712,\"^20\",2,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$t\",\"~$m\"]]]]]],\"~$pretty-writer?\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",717,\"^1H\",8,\"^1L\",717,\"^1F\",22,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$x\"]]]]],\"^24\",\"Return true iff x is a PrettyWriter\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pretty-writer?\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",22,\"^1Y\",[\"^1S\",[[\"~$x\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",717,\"^1L\",717,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"~$x\"]]]]],\"^24\",\"Return true iff x is a PrettyWriter\"],\"~$pprint-defn\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",3023,\"^1H\",8,\"^1L\",3023,\"^1F\",19,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/pprint-defn\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",19,\"^1Y\",[\"^1S\",[[\"^3O\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",3023,\"^1L\",3023,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^3O\"]]]]]],\"~$downcase-writer\",[\"^ \",\"^1O\",null,\"^1P\",[\"^ \",\"^1E\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/pprint.cljs\",\"^1J\",1918,\"^1H\",8,\"^1L\",1918,\"^1F\",23,\"^1Q\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"]]]]],\"^24\",\"Returns a proxy that wraps writer, converting all characters to lower case\"],\"^1Q\",true,\"^Q\",\"~$cljs.pprint/downcase-writer\",\"^1X\",false,\"^1E\",\"out/cljs/pprint.cljs\",\"^1F\",23,\"^1Y\",[\"^1S\",[[\"^27\"]]],\"^1Z\",null,\"^1[\",[\"^1S\",[null,null]],\"^1H\",1,\"^1J\",1918,\"^1L\",1918,\"^20\",1,\"^21\",true,\"^1R\",[\"^1S\",[\"^1T\",[\"^1S\",[[\"^27\"]]]]],\"^24\",\"Returns a proxy that wraps writer, converting all characters to lower case\"]],\"~:require-macros\",[\"^ \",\"~$m\",\"^B\",\"^B\",\"^B\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^K\",[\"~:mandatory\",\"^8=\",\"~:logical-blocks\",\"~$cljs.core/unquote\",\"~$when-first\",\"^>B\",\"~:arg3\",\"^:T\",\"^>9\",\"~:suffix\",\"^:S\",\"~:selector\",\"~:else-params\",\"~:block\",\"~:allows-separator\",\"^6B\",\"~:indent\",\"^45\",\"~:miser-width\",\"~$struct\",\"^8>\",\"~$..\",\"^:4\",\"~:buffer-block\",\"^?S\",\"^8D\",\"~:arg2\",\"~:commainterval\",\"~:pretty-writer\",\"^49\",\"~:parent\",\"~:sections\",\"^1Q\",\"^5@\",\"~:else\",\"~:miser\",\"~:right-margin\",\"~$if-not\",\"~$cljs.core/deref\",\"~:offset\",\"~$doseq\",\"~:cur\",\"~:queue\",\"~:default\",\"^:E\",\"~$when-let\",\"~:func\",\"~:ns\",\"~:symbol\",\"~:generator-fn\",\"^Q\",\"~:n\",\"~:w\",\"~:not-delivered\",\"~:remaining-arg-count\",\"~:fill\",\"~$cljs.core/lift-ns\",\"~:section\",\"^V\",\"^8M\",\"~$let\",\"^1E\",\"~$->\",\"~:end-pos\",\"~:circle\",\"^7U\",\"^1F\",\"^5O\",\"^?Z\",\"~:mode\",\"~:start\",\"~:lines\",\"~:params\",\"~$fn\",\"~:max-iterations\",\"~:pos\",\"~:writing\",\"^1G\",\"^:P\",\"~:parameter-from-args\",\"~:done-nl\",\"~$when-not\",\"~:suppress-namespaces\",\"~$when\",\"~:relative-to\",\"^2X\",\"~:string\",\"~:vector\",\"~$defn\",\"^=1\",\"^2W\",\"^3=\",\"~:e\",\"~$if\",\"~:char-format\",\"~:start-col\",\"^=O\",\"~:radix\",\"^9I\",\"~:colon-up-arrow\",\"~$ns\",\"~:k\",\"~:prefix\",\"^1H\",\"~:colon\",\"~:stream\",\"~:level\",\"~:readably\",\"~$m\",\"~:right-bracket\",\"~:dispatch\",\"^=0\",\"^4:\",\"^2J\",\"^2D\",\"~$struct-map\",\"~:padchar\",\"~$dotimes\",\"~:buffer-blob\",\"~:buffering\",\"^1J\",\"^:R\",\"^8?\",\"~$with-open\",\"~:list\",\"~$fn*\",\"~:right-params\",\"~$defonce\",\"^48\",\"~$defn-\",\"~:max\",\"~:trailing-white-space\",\"^7V\",\"~:mincol\",\"~$clojure.core/deref\",\"~:minpad\",\"~:current\",\"~:at\",\"~:deref\",\"~:count\",\"~:per-line-prefix\",\"~:colnum\",\"~$lift-ns\",\"^:C\",\"~:length\",\"~$loop\",\"^:Q\",\"~$clojure.core/unquote\",\"~:overflowchar\",\"^6C\",\"^1L\",\"~$condp\",\"~:right\",\"~:colinc\",\"~$cond\",\"~:both\",\"~:d\",\"~$binding\",\"~$with-local-vars\",\"~:def\",\"~$defmacro\",\"^66\",\"~:clauses\",\"~:indent-t\",\"~:linear\",\"~:seq\",\"~$locking\",\"~$.\",\"~:first\",\"~$var\",\"^1T\",\"^=L\",\"~:bracket-info\",\"~:set\",\"~:base-args\",\"~:pretty\",\"^2I\",\"~:end\",\"~:logical-block-callback\",\"~:base\",\"^1R\",\"~$if-let\",\"~:hierarchy\",\"~:buffer-level\",\"~:intra-block-nl\",\"~:line-relative\",\"~:separator\",\"~:flags\",\"^27\",\"^5A\",\"^24\",\"~:directive\",\"~:section-relative\",\"~:logical-block\",\"^:D\",\"~:last\",\"~:up-arrow\",\"~:type-tag\",\"^4=\",\"~:min-remaining\",\"~:test\",\"~:rest\",\"~:arg1\",\"~:nl-t\",\"~:buffer\",\"~:start-pos\",\"~:max-columns\",\"~:start-block-t\",\"~:exponentchar\",\"~:end-block-t\",\"^8G\",\"~:data\",\"~:commachar\"]],\"~:order\",[\"^B8\",\"^B?\",\"^1J\",\"^CM\",\"^DG\",\"^27\",\"^8D\",\"^=0\",\"^=1\",\"^B6\",\"^BK\",\"^C7\",\"^AZ\",\"^BY\",\"^DK\",\"^C;\",\"^CV\",\"^AU\",\"^DF\",\"^:P\",\"^2J\",\"^:Q\",\"^7U\",\"^:R\",\"^:S\",\"^:C\",\"^:D\",\"^:E\",\"^:T\",\"^BN\",\"^D[\",\"^DT\",\"^E4\",\"^CN\",\"^:4\",\"^5@\",\"^5A\",\"^49\",\"^4:\",\"^CE\",\"^1G\",\"^DQ\",\"^48\",\"^45\",\"^DY\",\"^E1\",\"^E3\",\"^C1\",\"^B=\",\"^7V\",\"^3=\",\"^D;\",\"^DI\",\"^BA\",\"^BQ\",\"^DE\",\"^AX\",\"^CR\",\"^AP\",\"^BI\",\"^D<\",\"^B9\",\"^DZ\",\"^AQ\",\"^CF\",\"^BP\",\"^BV\",\"^BW\",\"^A[\",\"^B2\",\"^B5\",\"^B7\",\"^DJ\",\"^8M\",\"^2I\",\"^=L\",\"^>B\",\"^C=\",\"^BO\",\"^CY\",\"^C>\",\"^BR\",\"^CA\",\"^DD\",\"^C8\",\"^C?\",\"^B:\",\"^B[\",\"^DL\",\"^DP\",\"^D=\",\"^DW\",\"^8=\",\"^8>\",\"^8?\",\"^BC\",\"^D8\",\"^BS\",\"^9I\",\"^8G\",\"^2D\",\"^C<\",\"^CS\",\"^BX\",\"^BH\",\"^CQ\",\"^CO\",\"^D3\",\"^CC\",\"^B4\",\"^E5\",\"^C6\",\"^DS\",\"^C9\",\"^DC\",\"~:w\",\"~:d\",\"~:k\",\"^D0\",\"~:e\",\"^E2\",\"~:n\",\"^AV\",\"^D:\",\"^BU\",\"^CJ\",\"^AW\",\"^DU\",\"^E0\",\"^?Z\",\"^>9\",\"^66\",\"^5O\",\"^6B\",\"^=O\",\"^6C\",\"^2W\",\"^2X\",\"^?S\",\"^CW\",\"^C2\",\"^DO\",\"^DN\",\"^DA\",\"^BF\",\"^D5\",\"^CU\",\"^D2\",\"^AY\",\"^DR\",\"^DM\",\"^D?\",\"^DX\",\"^B3\",\"^AT\",\"^C@\",\"^1T\",\"^D@\",\"^CP\",\"^C[\",\"^B<\",\"^AR\",\"^BJ\",\"^1Q\",\"^BD\",\"^Q\",\"^1E\",\"^1F\",\"^1H\",\"^1L\",\"^1R\",\"^24\",\"^DV\",\"^V\",\"^CX\",\"~$m\",\"^BG\",\"^B@\",\"^CT\",\"^BE\",\"^CH\",\"^4=\",\"^C3\",\"^DB\",\"~$.\",\"^CI\",\"^AS\",\"^C5\",\"^D1\",\"^B1\",\"^D9\",\"^C4\",\"^CZ\",\"^B0\",\"^B>\",\"^B;\",\"^BZ\",\"^C0\",\"^CG\",\"^D7\",\"^CK\",\"^BB\",\"^C:\",\"^CD\",\"^D4\",\"^BL\",\"^BT\",\"^CL\",\"^D>\",\"^BM\",\"^DH\",\"^D6\",\"^CB\"]],\"^24\",null]","cljs/analyzer/api.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$find-ns\",\"~$remove-ns\",\"~$ns-publics\",\"~$ns-resolve\",\"~$ns-interns\",\"~$all-ns\",\"~$resolve\"]],\"~:name\",\"~$cljs.analyzer.api\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$env\",\"~$cljs.env\",\"^C\",\"^C\",\"~$ana\",\"~$cljs.analyzer\",\"^E\",\"^E\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$with-state\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"~:line\",25,\"~:column\",11,\"~:end-line\",25,\"~:end-column\",21,\"~:macro\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^R\",[[\"~$state\",\"~$body\"]]]]],\"~:doc\",\"Run the body with the given compilation state Atom<Map>.\"],\"^>\",\"~$cljs.analyzer.api/with-state\",\"~:variadic\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",21,\"~:method-params\",[\"^R\",[[\"~$&form\",\"~$&env\",\"^T\",\"^U\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^R\",[null,null]],\"^M\",1,\"^L\",25,\"^P\",true,\"^N\",25,\"~:max-fixed-arity\",4,\"~:fn-var\",false,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^T\",\"^U\"]]]]],\"^V\",\"Run the body with the given compilation state Atom<Map>.\"],\"^7\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",163,\"^M\",7,\"^N\",163,\"^O\",14,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"~$sym\"],[\"^T\",\"^14\"]]]]],\"^V\",\"Given a namespace return the corresponding namespace analysis map. Analagous\\n  to clojure.core/find-ns.\",\"~:top-fn\",[\"^ \",\"^X\",false,\"^12\",2,\"^Y\",[\"^R\",[[\"^14\"],[\"^T\",\"^14\"]]],\"^Q\",[\"^R\",[[\"^14\"],[\"^T\",\"^14\"]]],\"^11\",[\"^R\",[null,null]]]],\"^>\",\"~$cljs.analyzer.api/find-ns\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",14,\"^15\",[\"^ \",\"^X\",false,\"^12\",2,\"^Y\",[\"^R\",[[\"^14\"],[\"^T\",\"^14\"]]],\"^Q\",[\"^R\",[[\"^14\"],[\"^T\",\"^14\"]]],\"^11\",[\"^R\",[null,null]]],\"^Y\",[\"^R\",[[\"^14\"],[\"^T\",\"^14\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",163,\"^N\",163,\"^12\",2,\"^13\",true,\"^Q\",[\"^R\",[[\"^14\"],[\"^T\",\"^14\"]]],\"^V\",\"Given a namespace return the corresponding namespace analysis map. Analagous\\n  to clojure.core/find-ns.\"],\"^8\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",205,\"^M\",7,\"^N\",205,\"^O\",16,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"~$ns\"],[\"^T\",\"^17\"]]]]],\"^V\",\"Removes the namespace named by the symbol.\",\"^15\",[\"^ \",\"^X\",false,\"^12\",2,\"^Y\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^Q\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^11\",[\"^R\",[null,null]]]],\"^>\",\"~$cljs.analyzer.api/remove-ns\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",16,\"^15\",[\"^ \",\"^X\",false,\"^12\",2,\"^Y\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^Q\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^11\",[\"^R\",[null,null]]],\"^Y\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",205,\"^N\",205,\"^12\",2,\"^13\",true,\"^Q\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^V\",\"Removes the namespace named by the symbol.\"],\"^9\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",183,\"^M\",7,\"^N\",183,\"^O\",17,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]]]],\"^V\",\"Given a namespace return all the public var analysis maps. Analagous to\\n  clojure.core/ns-publics but returns var analysis maps not vars.\",\"^15\",[\"^ \",\"^X\",false,\"^12\",2,\"^Y\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^Q\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^11\",[\"^R\",[null,null]]]],\"^>\",\"~$cljs.analyzer.api/ns-publics\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",17,\"^15\",[\"^ \",\"^X\",false,\"^12\",2,\"^Y\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^Q\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^11\",[\"^R\",[null,null]]],\"^Y\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",183,\"^N\",183,\"^12\",2,\"^13\",true,\"^Q\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^V\",\"Given a namespace return all the public var analysis maps. Analagous to\\n  clojure.core/ns-publics but returns var analysis maps not vars.\"],\"~$get-options\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",55,\"^M\",7,\"^N\",55,\"^O\",18,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[],[\"^T\"]]]]],\"^V\",\"Return the compiler options from compiler state.\",\"^15\",[\"^ \",\"^X\",false,\"^12\",1,\"^Y\",[\"^R\",[[],[\"^T\"]]],\"^Q\",[\"^R\",[[],[\"^T\"]]],\"^11\",[\"^R\",[null,null]]]],\"^>\",\"~$cljs.analyzer.api/get-options\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",18,\"^15\",[\"^ \",\"^X\",false,\"^12\",1,\"^Y\",[\"^R\",[[],[\"^T\"]]],\"^Q\",[\"^R\",[[],[\"^T\"]]],\"^11\",[\"^R\",[null,null]]],\"^Y\",[\"^R\",[[],[\"^T\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",55,\"^N\",55,\"^12\",1,\"^13\",true,\"^Q\",[\"^R\",[[],[\"^T\"]]],\"^V\",\"Return the compiler options from compiler state.\"],\"~$in-cljs-user\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^O\",23,\"^15\",[\"^ \",\"^X\",true,\"^12\",3,\"^Y\",[[\"^R\",[\"^Z\",\"^[\",\"^B\",\"^U\"]]],\"^Q\",[\"^R\",[[\"^Z\",\"^[\",\"^B\",\"~$&\",\"^U\"]]],\"^11\",[\"^R\",[null]]],\"^M\",11,\"^L\",213,\"^P\",true,\"^N\",213,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^B\",\"~$&\",\"^U\"]]]]],\"^V\",\"Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\\n  environment atom and runs body.\"],\"^>\",\"~$cljs.analyzer.api/in-cljs-user\",\"^X\",true,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",23,\"^15\",[\"^ \",\"^X\",true,\"^12\",3,\"^Y\",[[\"^R\",[\"^Z\",\"^[\",\"^B\",\"^U\"]]],\"^Q\",[\"^R\",[[\"^Z\",\"^[\",\"^B\",\"~$&\",\"^U\"]]],\"^11\",[\"^R\",[null]]],\"^Y\",[[\"^R\",[\"^Z\",\"^[\",\"^B\",\"^U\"]]],\"^10\",null,\"^11\",[\"^R\",[null]],\"^M\",1,\"^L\",213,\"^P\",true,\"^N\",213,\"^12\",3,\"^13\",false,\"^Q\",[\"^R\",[[\"^Z\",\"^[\",\"^B\",\"~$&\",\"^U\"]]],\"^V\",\"Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\\n  environment atom and runs body.\"],\"~$warning-enabled?\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",43,\"^M\",7,\"^N\",43,\"^O\",23,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"~$warning-type\"]]]]],\"^V\",\"Test if the given warning-type is enabled.\"],\"^>\",\"~$cljs.analyzer.api/warning-enabled?\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",23,\"^Y\",[\"^R\",[[\"^1?\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",43,\"^N\",43,\"^12\",1,\"^13\",true,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^1?\"]]]]],\"^V\",\"Test if the given warning-type is enabled.\"],\"^:\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",196,\"^M\",7,\"^N\",196,\"^O\",17,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^17\",\"^14\"],[\"^T\",\"^17\",\"^14\"]]]]],\"^V\",\"Given a namespace and a symbol return the corresponding var analysis map.\\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.\",\"^15\",[\"^ \",\"^X\",false,\"^12\",3,\"^Y\",[\"^R\",[[\"^17\",\"^14\"],[\"^T\",\"^17\",\"^14\"]]],\"^Q\",[\"^R\",[[\"^17\",\"^14\"],[\"^T\",\"^17\",\"^14\"]]],\"^11\",[\"^R\",[null,null]]]],\"^>\",\"~$cljs.analyzer.api/ns-resolve\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",17,\"^15\",[\"^ \",\"^X\",false,\"^12\",3,\"^Y\",[\"^R\",[[\"^17\",\"^14\"],[\"^T\",\"^17\",\"^14\"]]],\"^Q\",[\"^R\",[[\"^17\",\"^14\"],[\"^T\",\"^17\",\"^14\"]]],\"^11\",[\"^R\",[null,null]]],\"^Y\",[\"^R\",[[\"^17\",\"^14\"],[\"^T\",\"^17\",\"^14\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",196,\"^N\",196,\"^12\",3,\"^13\",true,\"^Q\",[\"^R\",[[\"^17\",\"^14\"],[\"^T\",\"^17\",\"^14\"]]],\"^V\",\"Given a namespace and a symbol return the corresponding var analysis map.\\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.\"],\"~$empty-state\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",20,\"^M\",7,\"^N\",20,\"^O\",18,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[]]]]],\"^V\",\"Creates an empty compilation state Atom<Map>.\"],\"^>\",\"~$cljs.analyzer.api/empty-state\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",18,\"^Y\",[\"^R\",[[]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",20,\"^N\",20,\"^12\",0,\"^13\",true,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[]]]]],\"^V\",\"Creates an empty compilation state Atom<Map>.\"],\"~$no-warn\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^O\",18,\"^15\",[\"^ \",\"^X\",true,\"^12\",2,\"^Y\",[[\"^R\",[\"^Z\",\"^[\",\"^U\"]]],\"^Q\",[\"^R\",[[\"^Z\",\"^[\",\"~$&\",\"^U\"]]],\"^11\",[\"^R\",[null]]],\"^M\",11,\"^L\",36,\"^P\",true,\"^N\",36,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"~$&\",\"^U\"]]]]],\"^V\",\"Disable analyzer warnings for any analysis executed in body.\"],\"^>\",\"~$cljs.analyzer.api/no-warn\",\"^X\",true,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",18,\"^15\",[\"^ \",\"^X\",true,\"^12\",2,\"^Y\",[[\"^R\",[\"^Z\",\"^[\",\"^U\"]]],\"^Q\",[\"^R\",[[\"^Z\",\"^[\",\"~$&\",\"^U\"]]],\"^11\",[\"^R\",[null]]],\"^Y\",[[\"^R\",[\"^Z\",\"^[\",\"^U\"]]],\"^10\",null,\"^11\",[\"^R\",[null]],\"^M\",1,\"^L\",36,\"^P\",true,\"^N\",36,\"^12\",2,\"^13\",false,\"^Q\",[\"^R\",[[\"^Z\",\"^[\",\"~$&\",\"^U\"]]],\"^V\",\"Disable analyzer warnings for any analysis executed in body.\"],\"~$empty-env\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",31,\"^M\",7,\"^N\",31,\"^O\",16,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[]]]]],\"^V\",\"Creates an empty analysis environment.\"],\"^>\",\"~$cljs.analyzer.api/empty-env\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",16,\"^Y\",[\"^R\",[[]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",31,\"^N\",31,\"^12\",0,\"^13\",true,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[]]]]],\"^V\",\"Creates an empty analysis environment.\"],\"~$default-warning-handler\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",48,\"^M\",7,\"^N\",48,\"^O\",30,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^1?\",\"^B\",\"~$extra\"]]]]],\"^V\",\"The default warning handler.\\n\\n   Outputs the warning messages to *err*.\"],\"^>\",\"~$cljs.analyzer.api/default-warning-handler\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",30,\"^Y\",[\"^R\",[[\"^1?\",\"^B\",\"^1I\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",48,\"^N\",48,\"^12\",3,\"^13\",true,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^1?\",\"^B\",\"^1I\"]]]]],\"^V\",\"The default warning handler.\\n\\n   Outputs the warning messages to *err*.\"],\"^;\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",172,\"^M\",7,\"^N\",172,\"^O\",17,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]]]],\"^V\",\"Given a namespace return all the var analysis maps. Analagous to\\n  clojure.core/ns-interns but returns var analysis maps not vars.\",\"^15\",[\"^ \",\"^X\",false,\"^12\",2,\"^Y\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^Q\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^11\",[\"^R\",[null,null]]]],\"^>\",\"~$cljs.analyzer.api/ns-interns\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",17,\"^15\",[\"^ \",\"^X\",false,\"^12\",2,\"^Y\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^Q\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^11\",[\"^R\",[null,null]]],\"^Y\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",172,\"^N\",172,\"^12\",2,\"^13\",true,\"^Q\",[\"^R\",[[\"^17\"],[\"^T\",\"^17\"]]],\"^V\",\"Given a namespace return all the var analysis maps. Analagous to\\n  clojure.core/ns-interns but returns var analysis maps not vars.\"],\"^<\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",155,\"^M\",7,\"^N\",155,\"^O\",13,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[],[\"^T\"]]]]],\"^V\",\"Return all namespaces. Analagous to clojure.core/all-ns but\\n  returns symbols identifying namespaces not Namespace instances.\",\"^15\",[\"^ \",\"^X\",false,\"^12\",1,\"^Y\",[\"^R\",[[],[\"^T\"]]],\"^Q\",[\"^R\",[[],[\"^T\"]]],\"^11\",[\"^R\",[null,null]]]],\"^>\",\"~$cljs.analyzer.api/all-ns\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",13,\"^15\",[\"^ \",\"^X\",false,\"^12\",1,\"^Y\",[\"^R\",[[],[\"^T\"]]],\"^Q\",[\"^R\",[[],[\"^T\"]]],\"^11\",[\"^R\",[null,null]]],\"^Y\",[\"^R\",[[],[\"^T\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",155,\"^N\",155,\"^12\",1,\"^13\",true,\"^Q\",[\"^R\",[[],[\"^T\"]]],\"^V\",\"Return all namespaces. Analagous to clojure.core/all-ns but\\n  returns symbols identifying namespaces not Namespace instances.\"],\"^=\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",144,\"^M\",7,\"^N\",144,\"^O\",14,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^B\",\"^14\"]]]]],\"^V\",\"Given an analysis environment resolve a var. Analogous to\\n   clojure.core/resolve\"],\"^>\",\"~$cljs.analyzer.api/resolve\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",14,\"^Y\",[\"^R\",[[\"^B\",\"^14\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",144,\"^N\",144,\"^12\",2,\"^13\",true,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[\"^B\",\"^14\"]]]]],\"^V\",\"Given an analysis environment resolve a var. Analogous to\\n   clojure.core/resolve\"],\"~$get-js-index\",[\"^ \",\"^I\",null,\"^J\",[\"^ \",\"^K\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/analyzer/api.cljc\",\"^L\",61,\"^M\",7,\"^N\",61,\"^O\",19,\"^Q\",[\"^R\",[\"^S\",[\"^R\",[[],[\"^T\"]]]]],\"^V\",\"Return the currently computed Google Closure js dependency index from the\\n  compiler state.\",\"^15\",[\"^ \",\"^X\",false,\"^12\",1,\"^Y\",[\"^R\",[[],[\"^T\"]]],\"^Q\",[\"^R\",[[],[\"^T\"]]],\"^11\",[\"^R\",[null,null]]]],\"^>\",\"~$cljs.analyzer.api/get-js-index\",\"^X\",false,\"^K\",\"out/cljs/analyzer/api.cljc\",\"^O\",19,\"^15\",[\"^ \",\"^X\",false,\"^12\",1,\"^Y\",[\"^R\",[[],[\"^T\"]]],\"^Q\",[\"^R\",[[],[\"^T\"]]],\"^11\",[\"^R\",[null,null]]],\"^Y\",[\"^R\",[[],[\"^T\"]]],\"^10\",null,\"^11\",[\"^R\",[null,null]],\"^M\",1,\"^L\",61,\"^N\",61,\"^12\",1,\"^13\",true,\"^Q\",[\"^R\",[[],[\"^T\"]]],\"^V\",\"Return the currently computed Google Closure js dependency index from the\\n  compiler state.\"]],\"~:require-macros\",null,\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^6\",[\"~:cljs.analyzer/namespaces\",\"~$cljs.core/binding\",\"~:private\",\"~:macros\",\"~:js-dependency-index\",\"~$cljs.analyzer/*cljs-warnings*\",\"^G\",\"~$cljs.env/with-compiler-env\",\"~:options\",\"^S\",\"~$cljs/user\",\"~$cljs.analyzer/*cljs-ns*\"]],\"~:order\",[\"^1Y\",\"^1T\",\"^1X\",\"^1Z\",\"^1W\",\"^1S\",\"^1V\",\"^G\",\"^1U\",\"^20\",\"^S\",\"^1[\"]],\"^V\",\"This is intended to be a stable api for those who need programmatic access\\n  to the analyzer.\"]","clojure/test/check/results.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$clojure.test.check.results\",\"~:imports\",null,\"~:requires\",null,\"~:uses\",null,\"~:defs\",[\"^ \",\"~$Result\",[\"^ \",\"~:meta\",[\"^ \",\"~:protocol-symbol\",true,\"~:file\",\"^6\",\"~:end-column\",20,\"~:column\",14,\"~:line\",14,\"~:protocol-info\",[\"^ \",\"~:methods\",[\"^ \",\"~$passing?\",[[\"~$result\"]],\"~$result-data\",[[\"^E\"]]]],\"~:end-line\",14,\"~:doc\",null,\"~:jsdoc\",[\"~#list\",[\"@interface\"]]],\"^=\",true,\"^5\",\"~$clojure.test.check.results/Result\",\"^>\",\"clojure/test/check/results.cljc\",\"^?\",20,\"^@\",1,\"^A\",14,\"^B\",[\"^ \",\"^C\",[\"^ \",\"^D\",[[\"^E\"]],\"^F\",[[\"^E\"]]]],\"~:info\",null,\"^G\",14,\"~:tag\",\"~$any\",\"~:impls\",[\"^4\",[\"~$default\",null,\"~$clojure.test.check.properties/ErrorResult\"]],\"^H\",null,\"^I\",[\"^J\",[\"@interface\"]]],\"^D\",[\"^ \",\"~:protocol-inline\",null,\"^<\",[\"^ \",\"^>\",\"^6\",\"^A\",15,\"^@\",4,\"^G\",15,\"^?\",12,\"~:protocol\",\"^K\",\"^H\",null,\"~:arglists\",[\"^J\",[\"~$quote\",[\"^J\",[[\"^E\"]]]]]],\"^S\",\"^K\",\"^5\",\"~$clojure.test.check.results/passing?\",\"~:variadic\",false,\"^>\",\"clojure/test/check/results.cljc\",\"^?\",12,\"~:method-params\",[\"^J\",[[\"^E\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^J\",[null,null]],\"^@\",1,\"^A\",14,\"^G\",15,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^T\",[\"^J\",[\"^U\",[\"^J\",[[\"^E\"]]]]],\"^H\",null],\"^F\",[\"^ \",\"^R\",null,\"^<\",[\"^ \",\"^>\",\"^6\",\"^A\",16,\"^@\",4,\"^G\",16,\"^?\",15,\"^S\",\"^K\",\"^H\",\"A map of data about the trial.\",\"^T\",[\"^J\",[\"^U\",[\"^J\",[[\"^E\"]]]]]],\"^S\",\"^K\",\"^5\",\"~$clojure.test.check.results/result-data\",\"^W\",false,\"^>\",\"clojure/test/check/results.cljc\",\"^?\",15,\"^X\",[\"^J\",[[\"^E\"]]],\"^Y\",null,\"^Z\",[\"^J\",[null,null]],\"^@\",1,\"^A\",14,\"^G\",16,\"^[\",1,\"^10\",true,\"^T\",[\"^J\",[\"^U\",[\"^J\",[[\"^E\"]]]]],\"^H\",\"A map of data about the trial.\"]],\"~:require-macros\",[\"^ \"],\"^H\",\"A protocol and helper functions for trial results.\"]","cljs/tools/reader/impl/utils.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$char\"]],\"~:name\",\"~$cljs.tools.reader.impl.utils\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$string\",\"~$clojure.string\",\"^;\",\"^;\",\"~$gstring\",\"~$goog.string\",\"^=\",\"^=\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$reader-conditional\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"~:line\",29,\"~:column\",7,\"~:end-line\",29,\"~:end-column\",25,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^I\",[[\"~$form\",\"~$splicing?\"]]]]],\"~:doc\",\"Construct a data representation of a reader conditional.\\n  If true, splicing? indicates read-cond-splicing.\"],\"^6\",\"~$cljs.tools.reader.impl.utils/reader-conditional\",\"~:variadic\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",25,\"~:method-params\",[\"^I\",[[\"^K\",\"^L\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^I\",[null,null]],\"^E\",1,\"^D\",29,\"^F\",29,\"~:max-fixed-arity\",2,\"~:fn-var\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^K\",\"^L\"]]]]],\"^M\",\"Construct a data representation of a reader conditional.\\n  If true, splicing? indicates read-cond-splicing.\"],\"~$whitespace?\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",43,\"^E\",16,\"^F\",43,\"^G\",27,\"~:tag\",\"~$boolean\",\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$ch\"]]]]],\"^M\",\"Checks whether a given character is whitespace\"],\"^6\",\"~$cljs.tools.reader.impl.utils/whitespace?\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",27,\"^P\",[\"^I\",[[\"^X\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",43,\"~:ret-tag\",\"^W\",\"^F\",43,\"^S\",1,\"^V\",\"^W\",\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^X\"]]]]],\"^M\",\"Checks whether a given character is whitespace\"],\"~$last-id\",[\"^ \",\"^6\",\"~$cljs.tools.reader.impl.utils/last-id\",\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^D\",73,\"^E\",1,\"^F\",73,\"^G\",13,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",73,\"^E\",6,\"^F\",73,\"^G\",13],\"^V\",\"~$any\"],\"^5\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",15,\"^E\",7,\"^F\",15,\"^G\",11,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$x\"]]]]]],\"^6\",\"~$cljs.tools.reader.impl.utils/char\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",11,\"^P\",[\"^I\",[[\"~$x\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",15,\"^F\",15,\"^S\",1,\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$x\"]]]]]],\"~$numeric?\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",51,\"^E\",16,\"^F\",51,\"^G\",24,\"^V\",\"^W\",\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^X\"]]]]],\"^M\",\"Checks whether a given character is numeric\"],\"^6\",\"~$cljs.tools.reader.impl.utils/numeric?\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",24,\"^P\",[\"^I\",[[\"^X\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",51,\"^Z\",\"^W\",\"^F\",51,\"^S\",1,\"^V\",\"^W\",\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^X\"]]]]],\"^M\",\"Checks whether a given character is numeric\"],\"~$ReaderConditional\",[\"^ \",\"~:num-fields\",2,\"~:protocols\",[\"^4\",[\"~$cljs.core/IRecord\",\"~$cljs.core/IEquiv\",\"~$cljs.core/IHash\",\"~$cljs.core/ICollection\",\"~$cljs.core/ICounted\",\"~$cljs.core/ISeqable\",\"~$cljs.core/IMeta\",\"~$cljs.core/ICloneable\",\"~$cljs.core/IPrintWithWriter\",\"~$cljs.core/IIterable\",\"~$cljs.core/IWithMeta\",\"~$cljs.core/IAssociative\",\"~$cljs.core/IMap\",\"~$cljs.core/ILookup\"]],\"^6\",\"~$cljs.tools.reader.impl.utils/ReaderConditional\",\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",29,\"~:type\",true,\"^E\",12,\"~:internal-ctor\",true,\"^D\",22,\"~:record\",true,\"^F\",22,\"~:skip-protocol-flag\",[\"^4\",[\"^18\",\"^19\",\"^1:\",\"^1;\",\"^1<\",\"^1=\",\"^1>\",\"^1?\",\"^1@\",\"^1B\",\"^1C\",\"^1D\",\"^1E\"]]],\"~$second'\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",96,\"^E\",7,\"^F\",96,\"^G\",14,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[[\"~$a\",\"~$b\"]]]]]]],\"^6\",\"~$cljs.tools.reader.impl.utils/second'\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",14,\"^P\",[\"^I\",[[\"~$p__10707\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",96,\"^F\",96,\"^S\",1,\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[[\"~$a\",\"~$b\"]]]]]]],\"~$desugar-meta\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",64,\"^E\",7,\"^F\",64,\"^G\",19,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$f\"]]]]],\"^M\",\"Resolves syntactical sugar in metadata\"],\"^6\",\"~$cljs.tools.reader.impl.utils/desugar-meta\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",19,\"^P\",[\"^I\",[[\"~$f\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",64,\"^F\",64,\"^S\",1,\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$f\"]]]]],\"^M\",\"Resolves syntactical sugar in metadata\"],\"~$->ReaderConditional\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",22,\"^E\",12,\"^F\",22,\"^G\",29,\"^1H\",true,\"~:factory\",\"~:positional\",\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^L\",\"^K\"]]]]]],\"^6\",\"~$cljs.tools.reader.impl.utils/->ReaderConditional\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",29,\"^P\",[\"^I\",[[\"^L\",\"^K\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^1H\",true,\"^1Q\",\"^1R\",\"^D\",22,\"^F\",22,\"^S\",2,\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^L\",\"^K\"]]]]]],\"~$next-id\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",75,\"^E\",7,\"^F\",75,\"^G\",14,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[]]]]]],\"^6\",\"~$cljs.tools.reader.impl.utils/next-id\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",14,\"^P\",[\"^I\",[[]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",75,\"^F\",75,\"^S\",0,\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[]]]]]],\"~$map->ReaderConditional\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",22,\"^E\",12,\"^F\",22,\"^G\",29,\"^1H\",true,\"^1Q\",\"~:map\",\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$G__10660\"]]]]]],\"^6\",\"~$cljs.tools.reader.impl.utils/map->ReaderConditional\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",29,\"^P\",[\"^I\",[[\"^1X\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^1H\",true,\"^1Q\",\"^1W\",\"^D\",22,\"^F\",22,\"^S\",1,\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^1X\"]]]]]],\"~$ex-info?\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",19,\"^E\",16,\"^F\",19,\"^G\",24,\"^V\",\"^W\",\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$ex\"]]]]]],\"^6\",\"~$cljs.tools.reader.impl.utils/ex-info?\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",24,\"^P\",[\"^I\",[[\"^1[\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",19,\"^Z\",\"^W\",\"^F\",19,\"^S\",1,\"^V\",\"^W\",\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^1[\"]]]]]],\"~$reader-conditional?\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",24,\"^E\",16,\"^F\",24,\"^G\",35,\"^V\",\"^W\",\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$value\"]]]]],\"^M\",\"Return true if the value is the data representation of a reader conditional\"],\"^6\",\"~$cljs.tools.reader.impl.utils/reader-conditional?\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",35,\"^P\",[\"^I\",[[\"^22\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",24,\"^Z\",\"^W\",\"^F\",24,\"^S\",1,\"^V\",\"^W\",\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^22\"]]]]],\"^M\",\"Return true if the value is the data representation of a reader conditional\"],\"~$newline?\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",57,\"^E\",16,\"^F\",57,\"^G\",24,\"^V\",\"^W\",\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$c\"]]]]],\"^M\",\"Checks whether the character is a newline\"],\"^6\",\"~$cljs.tools.reader.impl.utils/newline?\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",24,\"^P\",[\"^I\",[[\"~$c\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",57,\"^Z\",\"^W\",\"^F\",57,\"^S\",1,\"^V\",\"^W\",\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$c\"]]]]],\"^M\",\"Checks whether the character is a newline\"],\"~$namespace-keys\",[\"^ \",\"^A\",null,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",79,\"^E\",7,\"^F\",79,\"^G\",21,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"~$ns\",\"~$keys\"]]]]]],\"^6\",\"~$cljs.tools.reader.impl.utils/namespace-keys\",\"^O\",false,\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^G\",21,\"^P\",[\"^I\",[[\"^27\",\"^28\"]]],\"^Q\",null,\"^R\",[\"^I\",[null,null]],\"^E\",1,\"^D\",79,\"^F\",79,\"^S\",2,\"^T\",true,\"^H\",[\"^I\",[\"^J\",[\"^I\",[[\"^27\",\"^28\"]]]]]],\"~$ws-rx\",[\"^ \",\"^6\",\"~$cljs.tools.reader.impl.utils/ws-rx\",\"^C\",\"out/cljs/tools/reader/impl/utils.cljs\",\"^D\",41,\"^E\",1,\"^F\",41,\"^G\",11,\"^B\",[\"^ \",\"^C\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/utils.cljs\",\"^D\",41,\"^E\",6,\"^F\",41,\"^G\",11],\"^V\",\"^11\"]],\"~:require-macros\",null,\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^4\",[\"^K\",\"~:else\",\"~:splicing?\",\"^L\",\"~:form\",\"^V\"]],\"~:order\",[\"^2@\",\"^2A\",\"^L\",\"^K\",\"^V\",\"^2?\"]],\"^M\",null]","clojure/test/check.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$clojure.test.check\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$clojure.test.check.results\",\"^9\",\"~$rose\",\"~$clojure.test.check.rose-tree\",\"~$results\",\"^9\",\"~$clojure.test.check.impl\",\"^=\",\"^;\",\"^;\",\"~$clojure.test.check.generators\",\"^>\",\"~$gen\",\"^>\",\"~$clojure.test.check.random\",\"^@\",\"~$random\",\"^@\"],\"~:uses\",[\"^ \",\"~$exception-like?\",\"^=\",\"~$get-current-time-millis\",\"^=\"],\"~:defs\",[\"^ \",\"~$shrink-loop\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"^6\",\"~:line\",117,\"~:column\",8,\"~:end-line\",117,\"~:end-column\",19,\"~:private\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^P\",[[\"~$rose-tree\",\"~$reporter-fn\"]]]]],\"~:doc\",\"Shrinking a value produces a sequence of smaller values of the same type.\\n  Each of these values can then be shrunk. Think of this as a tree. We do a\\n  modified depth-first search of the tree:\\n\\n  Do a non-exhaustive search for a deeper (than the root) failing example.\\n  Additional rules added to depth-first search:\\n  * If a node passes the property, you may continue searching at this depth,\\n  but not backtrack\\n  * If a node fails the property, search its children\\n  The value returned is the left-most failing example at the depth where a\\n  passing example was found.\\n\\n  Calls reporter-fn on every shrink step.\"],\"^N\",true,\"^5\",\"~$clojure.test.check/shrink-loop\",\"~:variadic\",false,\"^I\",\"clojure/test/check.cljc\",\"^M\",19,\"~:method-params\",[\"^P\",[[\"^R\",\"^S\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^P\",[null,null]],\"^K\",1,\"^J\",117,\"^L\",117,\"~:max-fixed-arity\",2,\"~:fn-var\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^R\",\"^S\"]]]]],\"^T\",\"Shrinking a value produces a sequence of smaller values of the same type.\\n  Each of these values can then be shrunk. Think of this as a tree. We do a\\n  modified depth-first search of the tree:\\n\\n  Do a non-exhaustive search for a deeper (than the root) failing example.\\n  Additional rules added to depth-first search:\\n  * If a node passes the property, you may continue searching at this depth,\\n  but not backtrack\\n  * If a node fails the property, search its children\\n  The value returned is the left-most failing example at the depth where a\\n  passing example was found.\\n\\n  Calls reporter-fn on every shrink step.\"],\"~$failure\",[\"^ \",\"^G\",null,\"^H\",[\"^ \",\"^I\",\"^6\",\"^J\",165,\"^K\",8,\"^L\",165,\"^M\",15,\"^N\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$property\",\"~$failing-rose-tree\",\"~$trial-number\",\"~$size\",\"~$seed\",\"^S\"]]]]]],\"^N\",true,\"^5\",\"~$clojure.test.check/failure\",\"^V\",false,\"^I\",\"clojure/test/check.cljc\",\"^M\",15,\"^W\",[\"^P\",[[\"^11\",\"^12\",\"^13\",\"^14\",\"^15\",\"^S\"]]],\"^X\",null,\"^Y\",[\"^P\",[null,null]],\"^K\",1,\"^J\",165,\"^L\",165,\"^Z\",6,\"^[\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^11\",\"^12\",\"^13\",\"^14\",\"^15\",\"^S\"]]]]]],\"~$make-rng\",[\"^ \",\"^G\",null,\"^H\",[\"^ \",\"^I\",\"^6\",\"^J\",20,\"^K\",8,\"^L\",20,\"^M\",16,\"^N\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^15\"]]]]]],\"^N\",true,\"^5\",\"~$clojure.test.check/make-rng\",\"^V\",false,\"^I\",\"clojure/test/check.cljc\",\"^M\",16,\"^W\",[\"^P\",[[\"^15\"]]],\"^X\",null,\"^Y\",[\"^P\",[null,null]],\"^K\",1,\"^J\",20,\"^L\",20,\"^Z\",1,\"^[\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^15\"]]]]]],\"~$complete\",[\"^ \",\"^G\",null,\"^H\",[\"^ \",\"^I\",\"^6\",\"^J\",27,\"^K\",8,\"^L\",27,\"^M\",16,\"^N\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^11\",\"~$num-trials\",\"^15\",\"^S\"]]]]]],\"^N\",true,\"^5\",\"~$clojure.test.check/complete\",\"^V\",false,\"^I\",\"clojure/test/check.cljc\",\"^M\",16,\"^W\",[\"^P\",[[\"^11\",\"^1:\",\"^15\",\"^S\"]]],\"^X\",null,\"^Y\",[\"^P\",[null,null]],\"^K\",1,\"^J\",27,\"^L\",27,\"^Z\",4,\"^[\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^11\",\"^1:\",\"^15\",\"^S\"]]]]]],\"~$quick-check\",[\"^ \",\"^G\",null,\"^H\",[\"^ \",\"^I\",\"^6\",\"^J\",37,\"^K\",7,\"^L\",37,\"^M\",18,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$num-tests\",\"^11\",\"~$&\",[\"^ \",\"~:keys\",[\"^15\",\"~$max-size\",\"^S\"],\"~:or\",[\"^ \",\"^1?\",200,\"^S\",[\"^P\",[\"~$constantly\",null]]]]]]]]],\"^T\",\"Tests `property` `num-tests` times.\\n\\n  Takes several optional keys:\\n\\n  `:seed`\\n    Can be used to re-run previous tests, as the seed used is returned\\n    after a test is run.\\n\\n  `:max-size`.\\n    can be used to control the 'size' of generated values. The size will\\n    start at 0, and grow up to max-size, as the number of tests increases.\\n    Generators will use the size parameter to bound their growth. This\\n    prevents, for example, generating a five-thousand element vector on\\n    the very first test.\\n\\n  `:reporter-fn`\\n    A callback function that will be called at various points in the test\\n    run, with a map like:\\n\\n      ;; called after a passing trial\\n      {:type      :trial\\n       :property  #<...>\\n       :so-far    <number of tests run so far>\\n       :num-tests <total number of tests>}\\n\\n      ;; called after each failing trial\\n      {:type         :failure\\n       :property     #<...>\\n       :result       ...\\n       :trial-number <tests ran before failure found>\\n       :failing-args [...]}\\n\\n    It will also be called on :complete, :shrink-step and :shrunk.\\n\\n  Examples:\\n\\n      (def p (for-all [a gen/pos-int] (> (* a a) a)))\\n\\n      (quick-check 100 p)\\n      (quick-check 200 p\\n                   :seed 42\\n                   :max-size 50\\n                   :reporter-fn (fn [m]\\n                                  (when (= :failure (:type m))\\n                                    (println \\\"Uh oh...\\\"))))\",\"~:top-fn\",[\"^ \",\"^V\",true,\"^Z\",2,\"^W\",[[\"^P\",[\"^1=\",\"^11\",[\"^ \",\"^1>\",[\"^15\",\"^1?\",\"^S\"],\"^1@\",[\"^ \",\"^1?\",200,\"^S\",[\"^P\",[\"^1A\",null]]]]]]],\"^O\",[\"^P\",[[\"^1=\",\"^11\",\"~$&\",[\"^ \",\"^1>\",[\"^15\",\"^1?\",\"^S\"],\"^1@\",[\"^ \",\"^1?\",200,\"^S\",[\"^P\",[\"^1A\",null]]]]]]],\"^Y\",[\"^P\",[null]]]],\"^5\",\"~$clojure.test.check/quick-check\",\"^V\",true,\"^I\",\"clojure/test/check.cljc\",\"^M\",18,\"^1B\",[\"^ \",\"^V\",true,\"^Z\",2,\"^W\",[[\"^P\",[\"^1=\",\"^11\",[\"^ \",\"^1>\",[\"^15\",\"^1?\",\"^S\"],\"^1@\",[\"^ \",\"^1?\",200,\"^S\",[\"^P\",[\"^1A\",null]]]]]]],\"^O\",[\"^P\",[[\"^1=\",\"^11\",\"~$&\",[\"^ \",\"^1>\",[\"^15\",\"^1?\",\"^S\"],\"^1@\",[\"^ \",\"^1?\",200,\"^S\",[\"^P\",[\"^1A\",null]]]]]]],\"^Y\",[\"^P\",[null]]],\"^W\",[[\"^P\",[\"^1=\",\"^11\",[\"^ \",\"^1>\",[\"^15\",\"^1?\",\"^S\"],\"^1@\",[\"^ \",\"^1?\",200,\"^S\",[\"^P\",[\"^1A\",null]]]]]]],\"^X\",null,\"^Y\",[\"^P\",[null]],\"^K\",1,\"^J\",37,\"^L\",37,\"^Z\",2,\"^[\",true,\"^O\",[\"^P\",[[\"^1=\",\"^11\",\"~$&\",[\"^ \",\"^1>\",[\"^15\",\"^1?\",\"^S\"],\"^1@\",[\"^ \",\"^1?\",200,\"^S\",[\"^P\",[\"^1A\",null]]]]]]],\"^T\",\"Tests `property` `num-tests` times.\\n\\n  Takes several optional keys:\\n\\n  `:seed`\\n    Can be used to re-run previous tests, as the seed used is returned\\n    after a test is run.\\n\\n  `:max-size`.\\n    can be used to control the 'size' of generated values. The size will\\n    start at 0, and grow up to max-size, as the number of tests increases.\\n    Generators will use the size parameter to bound their growth. This\\n    prevents, for example, generating a five-thousand element vector on\\n    the very first test.\\n\\n  `:reporter-fn`\\n    A callback function that will be called at various points in the test\\n    run, with a map like:\\n\\n      ;; called after a passing trial\\n      {:type      :trial\\n       :property  #<...>\\n       :so-far    <number of tests run so far>\\n       :num-tests <total number of tests>}\\n\\n      ;; called after each failing trial\\n      {:type         :failure\\n       :property     #<...>\\n       :result       ...\\n       :trial-number <tests ran before failure found>\\n       :failing-args [...]}\\n\\n    It will also be called on :complete, :shrink-step and :shrunk.\\n\\n  Examples:\\n\\n      (def p (for-all [a gen/pos-int] (> (* a a) a)))\\n\\n      (quick-check 100 p)\\n      (quick-check 200 p\\n                   :seed 42\\n                   :max-size 50\\n                   :reporter-fn (fn [m]\\n                                  (when (= :failure (:type m))\\n                                    (println \\\"Uh oh...\\\"))))\"],\"~$smallest-shrink\",[\"^ \",\"^G\",null,\"^H\",[\"^ \",\"^I\",\"^6\",\"^J\",108,\"^K\",8,\"^L\",108,\"^M\",23,\"^N\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$total-nodes-visited\",\"~$depth\",\"~$smallest\"]]]]]],\"^N\",true,\"^5\",\"~$clojure.test.check/smallest-shrink\",\"^V\",false,\"^I\",\"clojure/test/check.cljc\",\"^M\",23,\"^W\",[\"^P\",[[\"^1E\",\"^1F\",\"^1G\"]]],\"^X\",null,\"^Y\",[\"^P\",[null,null]],\"^K\",1,\"^J\",108,\"^L\",108,\"^Z\",3,\"^[\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1E\",\"^1F\",\"^1G\"]]]]]]],\"~:require-macros\",[\"^ \"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^4\",[\"~:args\",\"~:shrunk\",\"~:total-nodes-visited\",\"~:failure\",\"~:property\",\"~:shrink-step\",\"~:num-tests\",\"~:type\",\"~:max-size\",\"~:seed\",\"~:trial-number\",\"~:fail\",\"~:result\",\"~:result-data\",\"~:smallest\",\"~:trial\",\"~:failing-size\",\"~:reporter-fn\",\"~:pass?\",\"~:depth\",\"~:complete\",\"~:current-smallest\",\"~:failing-args\",\"~:so-far\"]],\"~:order\",[\"^1S\",\"^1P\",\"^1X\",\"^1R\",\"^1U\",\"^24\",\"^1T\",\"^21\",\"^1L\",\"^27\",\"^1[\",\"^1N\",\"^23\",\"^1Y\",\"^1Z\",\"^1Q\",\"^22\",\"^25\",\"^1V\",\"^26\",\"^1O\",\"^1M\",\"^20\",\"^1W\"]],\"^T\",null]","cljs/source_map/base64_vlq.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$cljs.source-map.base64-vlq\",\"~:imports\",[\"^ \",\"~$StringBuffer\",\"~$goog.string.StringBuffer\"],\"~:requires\",[\"^ \",\"~$string\",\"~$clojure.string\",\"^>\",\"^>\",\"~$base64\",\"~$cljs.source-map.base64\",\"^@\",\"^@\",\"^:\",\"^;\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$encode-val\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64_vlq.cljs\",\"~:line\",31,\"~:column\",7,\"~:end-line\",31,\"~:end-column\",17,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^L\",[[\"~$n\"]]]]]],\"^7\",\"~$cljs.source-map.base64-vlq/encode-val\",\"~:variadic\",false,\"^F\",\"out/cljs/source_map/base64_vlq.cljs\",\"^J\",17,\"~:method-params\",[\"^L\",[[\"~$n\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^L\",[null,null]],\"^H\",1,\"^G\",31,\"^I\",31,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$n\"]]]]]],\"~$encode\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64_vlq.cljs\",\"^G\",44,\"^H\",7,\"^I\",44,\"^J\",13,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$v\"]]]]]],\"^7\",\"~$cljs.source-map.base64-vlq/encode\",\"^O\",false,\"^F\",\"out/cljs/source_map/base64_vlq.cljs\",\"^J\",13,\"^P\",[\"^L\",[[\"~$v\"]]],\"^Q\",null,\"^R\",[\"^L\",[null,null]],\"^H\",1,\"^G\",44,\"^I\",44,\"^S\",1,\"^T\",true,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$v\"]]]]]],\"~$vlq-continuation-bit\",[\"^ \",\"^E\",[\"^ \",\"^F\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64_vlq.cljs\",\"^G\",17,\"^H\",14,\"^I\",17,\"^J\",34,\"~:const\",true],\"^7\",\"~$cljs.source-map.base64-vlq/vlq-continuation-bit\",\"^F\",\"out/cljs/source_map/base64_vlq.cljs\",\"^J\",34,\"^H\",1,\"^X\",true,\"^G\",17,\"^I\",17,\"~:tag\",\"~$number\"],\"~$vlq-base-mask\",[\"^ \",\"^E\",[\"^ \",\"^F\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64_vlq.cljs\",\"^G\",16,\"^H\",14,\"^I\",16,\"^J\",27,\"^X\",true],\"^7\",\"~$cljs.source-map.base64-vlq/vlq-base-mask\",\"^F\",\"out/cljs/source_map/base64_vlq.cljs\",\"^J\",27,\"^H\",1,\"^X\",true,\"^G\",16,\"^I\",16,\"^Z\",\"^[\"],\"~$decode\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64_vlq.cljs\",\"^G\",47,\"^H\",7,\"^I\",47,\"^J\",13,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$s\"]]]]]],\"^7\",\"~$cljs.source-map.base64-vlq/decode\",\"^O\",false,\"^F\",\"out/cljs/source_map/base64_vlq.cljs\",\"^J\",13,\"^P\",[\"^L\",[[\"~$s\"]]],\"^Q\",null,\"^R\",[\"^L\",[null,null]],\"^H\",1,\"^G\",47,\"^I\",47,\"^S\",1,\"^T\",true,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$s\"]]]]]],\"~$vlq-base-shift\",[\"^ \",\"^E\",[\"^ \",\"^F\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64_vlq.cljs\",\"^G\",14,\"^H\",14,\"^I\",14,\"^J\",28,\"^X\",true],\"^7\",\"~$cljs.source-map.base64-vlq/vlq-base-shift\",\"^F\",\"out/cljs/source_map/base64_vlq.cljs\",\"^J\",28,\"^H\",1,\"^X\",true,\"^G\",14,\"^I\",14,\"^Z\",\"^[\"],\"~$from-vlq-signed\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64_vlq.cljs\",\"^G\",24,\"^H\",7,\"^I\",24,\"^J\",22,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$v\"]]]]]],\"^7\",\"~$cljs.source-map.base64-vlq/from-vlq-signed\",\"^O\",false,\"^F\",\"out/cljs/source_map/base64_vlq.cljs\",\"^J\",22,\"^P\",[\"^L\",[[\"~$v\"]]],\"^Q\",null,\"^R\",[\"^L\",[null,null]],\"^H\",1,\"^G\",24,\"^I\",24,\"^S\",1,\"^T\",true,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$v\"]]]]]],\"~$to-vlq-signed\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64_vlq.cljs\",\"^G\",19,\"^H\",7,\"^I\",19,\"^J\",20,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$v\"]]]]]],\"^7\",\"~$cljs.source-map.base64-vlq/to-vlq-signed\",\"^O\",false,\"^F\",\"out/cljs/source_map/base64_vlq.cljs\",\"^J\",20,\"^P\",[\"^L\",[[\"~$v\"]]],\"^Q\",null,\"^R\",[\"^L\",[null,null]],\"^H\",1,\"^G\",19,\"^I\",19,\"^S\",1,\"^T\",true,\"^K\",[\"^L\",[\"^M\",[\"^L\",[[\"~$v\"]]]]]],\"~$vlq-base\",[\"^ \",\"^E\",[\"^ \",\"^F\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/source_map/base64_vlq.cljs\",\"^G\",15,\"^H\",14,\"^I\",15,\"^J\",22,\"^X\",true],\"^7\",\"~$cljs.source-map.base64-vlq/vlq-base\",\"^F\",\"out/cljs/source_map/base64_vlq.cljs\",\"^J\",22,\"^H\",1,\"^X\",true,\"^G\",15,\"^I\",15,\"^Z\",\"^[\"]],\"~:require-macros\",null,\"~:doc\",null]","cljs/spec/test/alpha$macros.js":"// Compiled by ClojureScript 1.9.542 {:static-fns true}\ngoog.provide(\"cljs.spec.test.alpha$macros\");\nif(typeof cljs.spec.test.alpha$macros.instrumented_vars !== 'undefined'){\n} else {\n(function (){\ncljs.spec.test.alpha$macros.instrumented_vars = (function (){var G__604 = cljs.core.PersistentHashSet.EMPTY;\nreturn (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__604) : cljs.core.atom.call(null,G__604));\n})(); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.instrumented_vars;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"instrumented-vars\",\"cljs.spec.test.alpha$macros/instrumented-vars\",(171411477),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"instrumented-vars\",\"instrumented-vars\",(1838047655),null),\"cljs/spec/test/alpha.cljc\",(37),(1),(17),(17),cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.spec.test.alpha$macros.instrumented_vars)?cljs.spec.test.alpha$macros.instrumented_vars.cljs$lang$test:null)])));})()\n;\n}\n(function (){\ncljs.spec.test.alpha$macros.collectionize = (function cljs$spec$test$alpha$macros$collectionize(x){\nif((x instanceof cljs.core.Symbol)){\nvar x__20731__auto__ = x;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n} else {\nreturn x;\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.collectionize;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"collectionize\",\"cljs.spec.test.alpha$macros/collectionize\",(1591877749),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"collectionize\",\"collectionize\",(2042394887),null),\"cljs/spec/test/alpha.cljc\",(21),(1),(19),(19),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"x\",\"x\",(-555367584),null)], null)),null,(cljs.core.truth_(cljs.spec.test.alpha$macros.collectionize)?cljs.spec.test.alpha$macros.collectionize.cljs$lang$test:null)])));})()\n;\n(function (){\ncljs.spec.test.alpha$macros.fn_spec_name_QMARK_ = (function cljs$spec$test$alpha$macros$fn_spec_name_QMARK_(s){\nreturn (s instanceof cljs.core.Symbol);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.fn_spec_name_QMARK_;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"fn-spec-name?\",\"cljs.spec.test.alpha$macros/fn-spec-name?\",(1333080444),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"fn-spec-name?\",\"fn-spec-name?\",(883935438),null),\"cljs/spec/test/alpha.cljc\",(21),(1),(25),(25),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"s\",\"s\",(-948495851),null)], null)),null,(cljs.core.truth_(cljs.spec.test.alpha$macros.fn_spec_name_QMARK_)?cljs.spec.test.alpha$macros.fn_spec_name_QMARK_.cljs$lang$test:null)])));})()\n;\nvar ret__21071__auto___608 = (function (){\n/**\n * Disables instrument's checking of calls, within a scope.\n */\n(function (){\ncljs.spec.test.alpha$macros.with_instrument_disabled = (function cljs$spec$test$alpha$macros$with_instrument_disabled(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___609 = arguments.length;\nvar i__21021__auto___610 = (0);\nwhile(true){\nif((i__21021__auto___610 < len__21020__auto___609)){\nargs__21023__auto__.push((arguments[i__21021__auto___610]));\n\nvar G__611 = (i__21021__auto___610 + (1));\ni__21021__auto___610 = G__611;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((2) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((2)),(0),null)):null);\nreturn cljs.spec.test.alpha$macros.with_instrument_disabled.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__21024__auto__);\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.with_instrument_disabled;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"with-instrument-disabled\",\"cljs.spec.test.alpha$macros/with-instrument-disabled\",(752913964),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"with-instrument-disabled\",\"with-instrument-disabled\",(910775730),null),\"cljs/spec/test/alpha.cljc\",(35),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(29),true,(29),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null)], null)),\"Disables instrument's checking of calls, within a scope.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.with_instrument_disabled)?cljs.spec.test.alpha$macros.with_instrument_disabled.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.test.alpha$macros.with_instrument_disabled.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"binding\",\"cljs.core/binding\",(2050379843),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"*instrument-enabled*\",\"cljs.spec.test.alpha/*instrument-enabled*\",(-856303648),null)),cljs.core._conj(cljs.core.List.EMPTY,null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([body], 0)));\n});\n\ncljs.spec.test.alpha$macros.with_instrument_disabled.cljs$lang$maxFixedArity = (2);\n\ncljs.spec.test.alpha$macros.with_instrument_disabled.cljs$lang$applyTo = (function (seq605){\nvar G__606 = cljs.core.first(seq605);\nvar seq605__$1 = cljs.core.next(seq605);\nvar G__607 = cljs.core.first(seq605__$1);\nvar seq605__$2 = cljs.core.next(seq605__$1);\nreturn cljs.spec.test.alpha$macros.with_instrument_disabled.cljs$core$IFn$_invoke$arity$variadic(G__606,G__607,seq605__$2);\n});\n\nreturn new cljs.core.Var(function(){return cljs.spec.test.alpha$macros.with_instrument_disabled;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"with-instrument-disabled\",\"cljs.spec.test.alpha$macros/with-instrument-disabled\",(752913964),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"with-instrument-disabled\",\"with-instrument-disabled\",(910775730),null),\"cljs/spec/test/alpha.cljc\",(35),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),true,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(2),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null))], null),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null)], null),(1),(29),true,(29),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"&\",\"&\",(-2144855648),null),new cljs.core.Symbol(null,\"body\",\"body\",(-408674142),null)], null)),\"Disables instrument's checking of calls, within a scope.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.with_instrument_disabled)?cljs.spec.test.alpha$macros.with_instrument_disabled.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.test.alpha$macros.with_instrument_disabled.cljs$lang$macro = true;\n\nvar ret__21071__auto___619 = (function (){\ncljs.spec.test.alpha$macros.instrument_1 = (function cljs$spec$test$alpha$macros$instrument_1(_AMPERSAND_form,_AMPERSAND_env,p__612,opts){\nvar vec__616 = p__612;\nvar quote = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__616,(0),null);\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__616,(1),null);\nvar temp__19472__auto__ = cljs.analyzer.api.resolve(_AMPERSAND_env,s);\nif(cljs.core.truth_(temp__19472__auto__)){\nvar v = temp__19472__auto__;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.spec.test.alpha$macros.instrumented_vars,cljs.core.conj,new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)).cljs$core$IFn$_invoke$arity$1(v));\n\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"checked__50__auto__\",\"checked__50__auto__\",(1613675174),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"instrument-1*\",\"cljs.spec.test.alpha/instrument-1*\",(756550473),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"var\",\"var\",(870848730),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = opts;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",(120293186),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"checked__50__auto__\",\"checked__50__auto__\",(1613675174),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"set!\",\"set!\",(250714521),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"checked__50__auto__\",\"checked__50__auto__\",(1613675174),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)).cljs$core$IFn$_invoke$arity$1(v);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n} else {\nreturn null;\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.instrument_1;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"instrument-1\",\"cljs.spec.test.alpha$macros/instrument-1\",(1440093477),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"instrument-1\",\"instrument-1\",(856670099),null),\"cljs/spec/test/alpha.cljc\",(23),(1),(35),true,(35),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null),new cljs.core.Symbol(null,\"s\",\"s\",(-948495851),null)], null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),null,(cljs.core.truth_(cljs.spec.test.alpha$macros.instrument_1)?cljs.spec.test.alpha$macros.instrument_1.cljs$lang$test:null)])));})()\n;\ncljs.spec.test.alpha$macros.instrument_1.cljs$lang$macro = true;\n\nvar ret__21071__auto___627 = (function (){\ncljs.spec.test.alpha$macros.unstrument_1 = (function cljs$spec$test$alpha$macros$unstrument_1(_AMPERSAND_form,_AMPERSAND_env,p__620){\nvar vec__624 = p__620;\nvar quote = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__624,(0),null);\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__624,(1),null);\nvar temp__19472__auto__ = cljs.analyzer.api.resolve(_AMPERSAND_env,s);\nif(cljs.core.truth_(temp__19472__auto__)){\nvar v = temp__19472__auto__;\nif(cljs.core.truth_((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.spec.test.alpha$macros.instrumented_vars) : cljs.core.deref.call(null,cljs.spec.test.alpha$macros.instrumented_vars)).call(null,new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)).cljs$core$IFn$_invoke$arity$1(v)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.spec.test.alpha$macros.instrumented_vars,cljs.core.disj,new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)).cljs$core$IFn$_invoke$arity$1(v));\n\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"raw__51__auto__\",\"raw__51__auto__\",(-520735882),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"unstrument-1*\",\"cljs.spec.test.alpha/unstrument-1*\",(1286793190),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"var\",\"var\",(870848730),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",(120293186),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"raw__51__auto__\",\"raw__51__auto__\",(-520735882),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"set!\",\"set!\",(250714521),null)),(function (){var x__20731__auto__ = s;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"raw__51__auto__\",\"raw__51__auto__\",(-520735882),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)).cljs$core$IFn$_invoke$arity$1(v);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.unstrument_1;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"unstrument-1\",\"cljs.spec.test.alpha$macros/unstrument-1\",(1404283549),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"unstrument-1\",\"unstrument-1\",(1947799819),null),\"cljs/spec/test/alpha.cljc\",(23),(1),(43),true,(43),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null),new cljs.core.Symbol(null,\"s\",\"s\",(-948495851),null)], null)], null)),null,(cljs.core.truth_(cljs.spec.test.alpha$macros.unstrument_1)?cljs.spec.test.alpha$macros.unstrument_1.cljs$lang$test:null)])));})()\n;\ncljs.spec.test.alpha$macros.unstrument_1.cljs$lang$macro = true;\n\n(function (){\ncljs.spec.test.alpha$macros.sym_or_syms__GT_syms = (function cljs$spec$test$alpha$macros$sym_or_syms__GT_syms(sym_or_syms){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((function (sym){\nif(cljs.core.truth_((function (){var and__19647__auto__ = clojure.string.includes_QMARK_([cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(''),\".\");\nif(and__19647__auto__){\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1(sym);\n} else {\nreturn and__19647__auto__;\n}\n})())){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (name_sym){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),cljs.core.name(name_sym));\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__52_SHARP_){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)).cljs$core$IFn$_invoke$arity$1(p1__52_SHARP_));\n}),cljs.core.vals(cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1(sym)))));\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym], null);\n}\n})),cljs.spec.test.alpha$macros.collectionize(sym_or_syms));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.sym_or_syms__GT_syms;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"sym-or-syms->syms\",\"cljs.spec.test.alpha$macros/sym-or-syms->syms\",(1945731633),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"private\",\"private\",(-558947994)),new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[true,new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"sym-or-syms->syms\",\"sym-or-syms->syms\",(1509958863),null),\"cljs/spec/test/alpha.cljc\",(25),(1),(52),(52),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null)),null,(cljs.core.truth_(cljs.spec.test.alpha$macros.sym_or_syms__GT_syms)?cljs.spec.test.alpha$macros.sym_or_syms__GT_syms.cljs$lang$test:null)])));})()\n;\nvar ret__21071__auto___631 = (function (){\n/**\n * Instruments the vars named by sym-or-syms, a symbol or collection\n * of symbols, or all instrumentable vars if sym-or-syms is not\n * specified. If a symbol identifies a namespace then all symbols in that\n * namespace will be enumerated.\n * \n * If a var has an :args fn-spec, sets the var's root binding to a\n * fn that checks arg conformance (throwing an exception on failure)\n * before delegating to the original fn.\n * \n * The opts map can be used to override registered specs, and/or to\n * replace fn implementations entirely. Opts for symbols not included\n * in sym-or-syms are ignored. This facilitates sharing a common\n * options map across many different calls to instrument.\n * \n * The opts map may have the following keys:\n * \n *   :spec     a map from var-name symbols to override specs\n *   :stub     a set of var-name symbols to be replaced by stubs\n *   :gen      a map from spec names to generator overrides\n *   :replace  a map from var-name symbols to replacement fns\n * \n * :spec overrides registered fn-specs with specs your provide. Use\n * :spec overrides to provide specs for libraries that do not have\n * them, or to constrain your own use of a fn to a subset of its\n * spec'ed contract.\n * \n * :stub replaces a fn with a stub that checks :args, then uses the\n * :ret spec to generate a return value.\n * \n * :gen overrides are used only for :stub generation.\n * \n * :replace replaces a fn with a fn that checks args conformance, then\n * invokes the fn you provide, enabling arbitrary stubbing and mocking.\n * \n * :spec can be used in combination with :stub or :replace.\n * \n * Returns a collection of syms naming the vars instrumented.\n */\n(function (){\ncljs.spec.test.alpha$macros.instrument = (function cljs$spec$test$alpha$macros$instrument(var_args){\nvar args628 = [];\nvar len__21020__auto___632 = arguments.length;\nvar i__21021__auto___633 = (0);\nwhile(true){\nif((i__21021__auto___633 < len__21020__auto___632)){\nargs628.push((arguments[i__21021__auto___633]));\n\nvar G__634 = (i__21021__auto___633 + (1));\ni__21021__auto___633 = G__634;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__630 = args628.length;\nswitch (G__630) {\ncase (2):\nreturn cljs.spec.test.alpha$macros.instrument.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn cljs.spec.test.alpha$macros.instrument.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase (4):\nreturn cljs.spec.test.alpha$macros.instrument.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((args628.length - (2)))].join('')));\n\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.instrument;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"instrument\",\"cljs.spec.test.alpha$macros/instrument\",(335525625),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"instrument\",\"instrument\",(679832683),null),\"cljs/spec/test/alpha.cljc\",(21),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"xs\",\"xs\",(-2004992428),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"xs\",\"xs\",(-2004992428),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null,null)], null),(1),(67),true,(67),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"xs\",\"xs\",(-2004992428),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Instruments the vars named by sym-or-syms, a symbol or collection\\nof symbols, or all instrumentable vars if sym-or-syms is not\\nspecified. If a symbol identifies a namespace then all symbols in that\\nnamespace will be enumerated.\\n\\nIf a var has an :args fn-spec, sets the var's root binding to a\\nfn that checks arg conformance (throwing an exception on failure)\\nbefore delegating to the original fn.\\n\\nThe opts map can be used to override registered specs, and/or to\\nreplace fn implementations entirely. Opts for symbols not included\\nin sym-or-syms are ignored. This facilitates sharing a common\\noptions map across many different calls to instrument.\\n\\nThe opts map may have the following keys:\\n\\n  :spec     a map from var-name symbols to override specs\\n  :stub     a set of var-name symbols to be replaced by stubs\\n  :gen      a map from spec names to generator overrides\\n  :replace  a map from var-name symbols to replacement fns\\n\\n:spec overrides registered fn-specs with specs your provide. Use\\n:spec overrides to provide specs for libraries that do not have\\nthem, or to constrain your own use of a fn to a subset of its\\nspec'ed contract.\\n\\n:stub replaces a fn with a stub that checks :args, then uses the\\n:ret spec to generate a return value.\\n\\n:gen overrides are used only for :stub generation.\\n\\n:replace replaces a fn with a fn that checks args conformance, then\\ninvokes the fn you provide, enabling arbitrary stubbing and mocking.\\n\\n:spec can be used in combination with :stub or :replace.\\n\\nReturns a collection of syms naming the vars instrumented.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.instrument)?cljs.spec.test.alpha$macros.instrument.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.test.alpha$macros.instrument.cljs$core$IFn$_invoke$arity$2 = (function (_AMPERSAND_form,_AMPERSAND_env){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"instrument\",\"cljs.spec.test.alpha/instrument\",(1447464690),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha$macros.speced_vars())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.spec.test.alpha$macros.instrument.cljs$core$IFn$_invoke$arity$3 = (function (_AMPERSAND_form,_AMPERSAND_env,xs){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"instrument\",\"cljs.spec.test.alpha/instrument\",(1447464690),null)),(function (){var x__20731__auto__ = xs;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n});\n\ncljs.spec.test.alpha$macros.instrument.cljs$core$IFn$_invoke$arity$4 = (function (_AMPERSAND_form,_AMPERSAND_env,sym_or_syms,opts){\nvar syms = cljs.spec.test.alpha$macros.sym_or_syms__GT_syms((cljs.spec.test.alpha$macros.eval.cljs$core$IFn$_invoke$arity$1 ? cljs.spec.test.alpha$macros.eval.cljs$core$IFn$_invoke$arity$1(sym_or_syms) : cljs.spec.test.alpha$macros.eval.call(null,sym_or_syms)));\nvar opts_sym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"opts\");\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((function (){var x__20731__auto__ = opts_sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = opts;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"reduce\",\"cljs.core/reduce\",(2025430439),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"ret__54__auto__\",\"ret__54__auto__\",(7725202),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"___55__auto__\",\"___55__auto__\",(1305500913),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"f__56__auto__\",\"f__56__auto__\",(789269665),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"sym__57__auto__\",\"sym__57__auto__\",(-764776309),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"f__56__auto__\",\"f__56__auto__\",(789269665),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"cond->\",\"cljs.core/cond->\",(-113941356),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"ret__54__auto__\",\"ret__54__auto__\",(7725202),null)),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"sym__57__auto__\",\"sym__57__auto__\",(-764776309),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"conj\",\"cljs.core/conj\",(-460750931),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"sym__57__auto__\",\"sym__57__auto__\",(-764776309),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"->>\",\"cljs.core/->>\",(-1207871206),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"zipmap\",\"cljs.core/zipmap\",(-1902130674),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = syms;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (syms,opts_sym){\nreturn (function (sym){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"instrument-1\",\"cljs.spec.test.alpha/instrument-1\",(-1984881348),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = opts_sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});})(syms,opts_sym))\n,syms))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"filter\",\"cljs.core/filter\",(-251894204),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__53__58__auto__\",\"p1__53__58__auto__\",(-1008805193),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"instrumentable-syms\",\"cljs.spec.test.alpha/instrumentable-syms\",(1088645904),null)),(function (){var x__20731__auto__ = opts_sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"first\",\"cljs.core/first\",(-752535972),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"p1__53__58__auto__\",\"p1__53__58__auto__\",(-1008805193),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"distinct-by\",\"cljs.spec.test.alpha/distinct-by\",(-1374292576),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"first\",\"cljs.core/first\",(-752535972),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.test.alpha$macros.instrument.cljs$lang$maxFixedArity = (4);\n\nreturn new cljs.core.Var(function(){return cljs.spec.test.alpha$macros.instrument;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"instrument\",\"cljs.spec.test.alpha$macros/instrument\",(335525625),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"instrument\",\"instrument\",(679832683),null),\"cljs/spec/test/alpha.cljc\",(21),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"xs\",\"xs\",(-2004992428),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"xs\",\"xs\",(-2004992428),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null,null)], null),(1),(67),true,(67),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"xs\",\"xs\",(-2004992428),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Instruments the vars named by sym-or-syms, a symbol or collection\\nof symbols, or all instrumentable vars if sym-or-syms is not\\nspecified. If a symbol identifies a namespace then all symbols in that\\nnamespace will be enumerated.\\n\\nIf a var has an :args fn-spec, sets the var's root binding to a\\nfn that checks arg conformance (throwing an exception on failure)\\nbefore delegating to the original fn.\\n\\nThe opts map can be used to override registered specs, and/or to\\nreplace fn implementations entirely. Opts for symbols not included\\nin sym-or-syms are ignored. This facilitates sharing a common\\noptions map across many different calls to instrument.\\n\\nThe opts map may have the following keys:\\n\\n  :spec     a map from var-name symbols to override specs\\n  :stub     a set of var-name symbols to be replaced by stubs\\n  :gen      a map from spec names to generator overrides\\n  :replace  a map from var-name symbols to replacement fns\\n\\n:spec overrides registered fn-specs with specs your provide. Use\\n:spec overrides to provide specs for libraries that do not have\\nthem, or to constrain your own use of a fn to a subset of its\\nspec'ed contract.\\n\\n:stub replaces a fn with a stub that checks :args, then uses the\\n:ret spec to generate a return value.\\n\\n:gen overrides are used only for :stub generation.\\n\\n:replace replaces a fn with a fn that checks args conformance, then\\ninvokes the fn you provide, enabling arbitrary stubbing and mocking.\\n\\n:spec can be used in combination with :stub or :replace.\\n\\nReturns a collection of syms naming the vars instrumented.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.instrument)?cljs.spec.test.alpha$macros.instrument.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.test.alpha$macros.instrument.cljs$lang$macro = true;\n\nvar ret__21071__auto___639 = (function (){\n/**\n * Undoes instrument on the vars named by sym-or-syms, specified\n * as in instrument. With no args, unstruments all instrumented vars.\n * Returns a collection of syms naming the vars unstrumented.\n */\n(function (){\ncljs.spec.test.alpha$macros.unstrument = (function cljs$spec$test$alpha$macros$unstrument(var_args){\nvar args636 = [];\nvar len__21020__auto___640 = arguments.length;\nvar i__21021__auto___641 = (0);\nwhile(true){\nif((i__21021__auto___641 < len__21020__auto___640)){\nargs636.push((arguments[i__21021__auto___641]));\n\nvar G__642 = (i__21021__auto___641 + (1));\ni__21021__auto___641 = G__642;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__638 = args636.length;\nswitch (G__638) {\ncase (2):\nreturn cljs.spec.test.alpha$macros.unstrument.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn cljs.spec.test.alpha$macros.unstrument.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((args636.length - (2)))].join('')));\n\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.unstrument;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"unstrument\",\"cljs.spec.test.alpha$macros/unstrument\",(636783929),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"unstrument\",\"unstrument\",(1328490411),null),\"cljs/spec/test/alpha.cljc\",(21),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(127),true,(127),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null)),\"Undoes instrument on the vars named by sym-or-syms, specified\\nas in instrument. With no args, unstruments all instrumented vars.\\nReturns a collection of syms naming the vars unstrumented.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.unstrument)?cljs.spec.test.alpha$macros.unstrument.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.test.alpha$macros.unstrument.cljs$core$IFn$_invoke$arity$2 = (function (_AMPERSAND_form,_AMPERSAND_env){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"unstrument\",\"cljs.spec.test.alpha/unstrument\",(-512915776),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.spec.test.alpha$macros.instrumented_vars) : cljs.core.deref.call(null,cljs.spec.test.alpha$macros.instrumented_vars)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.spec.test.alpha$macros.unstrument.cljs$core$IFn$_invoke$arity$3 = (function (_AMPERSAND_form,_AMPERSAND_env,sym_or_syms){\nvar syms = cljs.spec.test.alpha$macros.sym_or_syms__GT_syms((cljs.spec.test.alpha$macros.eval.cljs$core$IFn$_invoke$arity$1 ? cljs.spec.test.alpha$macros.eval.cljs$core$IFn$_invoke$arity$1(sym_or_syms) : cljs.spec.test.alpha$macros.eval.call(null,sym_or_syms)));\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"reduce\",\"cljs.core/reduce\",(2025430439),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"ret__59__auto__\",\"ret__59__auto__\",(1912039972),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"f__60__auto__\",\"f__60__auto__\",(1196804108),null)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"sym__61__auto__\",\"sym__61__auto__\",(-206185619),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"f__60__auto__\",\"f__60__auto__\",(1196804108),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"cond->\",\"cljs.core/cond->\",(-113941356),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"ret__59__auto__\",\"ret__59__auto__\",(1912039972),null)),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"sym__61__auto__\",\"sym__61__auto__\",(-206185619),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"conj\",\"cljs.core/conj\",(-460750931),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"sym__61__auto__\",\"sym__61__auto__\",(-206185619),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (syms){\nreturn (function (sym){\nif((sym instanceof cljs.core.Symbol)){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",(-1065745098),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"unstrument-1\",\"cljs.spec.test.alpha/unstrument-1\",(-1370180972),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n} else {\nreturn null;\n}\n});})(syms))\n,syms)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.test.alpha$macros.unstrument.cljs$lang$maxFixedArity = (3);\n\nreturn new cljs.core.Var(function(){return cljs.spec.test.alpha$macros.unstrument;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"unstrument\",\"cljs.spec.test.alpha$macros/unstrument\",(636783929),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"unstrument\",\"unstrument\",(1328490411),null),\"cljs/spec/test/alpha.cljc\",(21),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(127),true,(127),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null)),\"Undoes instrument on the vars named by sym-or-syms, specified\\nas in instrument. With no args, unstruments all instrumented vars.\\nReturns a collection of syms naming the vars unstrumented.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.unstrument)?cljs.spec.test.alpha$macros.unstrument.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.test.alpha$macros.unstrument.cljs$lang$macro = true;\n\nvar ret__21071__auto___655 = (function (){\ncljs.spec.test.alpha$macros.check_1 = (function cljs$spec$test$alpha$macros$check_1(_AMPERSAND_form,_AMPERSAND_env,p__644,f,spec,opts){\nvar vec__650 = p__644;\nvar quote = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__650,(0),null);\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__650,(1),null);\nvar qs = vec__650;\nvar map__653 = (cljs.core.truth_(qs)?cljs.analyzer.api.resolve(_AMPERSAND_env,s):null);\nvar map__653__$1 = ((((!((map__653 == null)))?((((map__653.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__653.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__653):map__653);\nvar v = map__653__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__653__$1,new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)));\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"s__62__auto__\",\"s__62__auto__\",(158399329),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = name;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"opts__63__auto__\",\"opts__63__auto__\",(-306808634),null)),(function (){var x__20731__auto__ = opts;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"v__64__auto__\",\"v__64__auto__\",(-514016632),null)),(function (){var x__20731__auto__ = (cljs.core.truth_(v)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"var\",\"var\",(870848730),null)),(function (){var x__20731__auto__ = name;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())):null);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"spec__65__auto__\",\"spec__65__auto__\",(-1278658585),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",(1201033885),null)),(function (){var x__20731__auto__ = spec;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = (cljs.core.truth_(v)?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.alpha\",\"get-spec\",\"cljs.spec.alpha/get-spec\",(785931985),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"var\",\"var\",(870848730),null)),(function (){var x__20731__auto__ = name;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())):null);\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"re-inst?__66__auto__\",\"re-inst?__66__auto__\",(-1746606611),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",(-6692549),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"v__64__auto__\",\"v__64__auto__\",(-514016632),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"seq\",\"cljs.core/seq\",(-1649497689),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"unstrument\",\"cljs.spec.test.alpha/unstrument\",(-512915776),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = name;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,true)], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"f__67__auto__\",\"f__67__auto__\",(-52782781),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"or\",\"cljs.core/or\",(1201033885),null)),(function (){var x__20731__auto__ = f;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",(120293186),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"v__64__auto__\",\"v__64__auto__\",(-514016632),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"deref\",\"cljs.core/deref\",(1901963335),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"v__64__auto__\",\"v__64__auto__\",(-514016632),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"try\",\"try\",(-1273693247),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"cond\",\"cljs.core/cond\",(2005388338),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",(945071861),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"f__67__auto__\",\"f__67__auto__\",(-52782781),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"failure\",\"failure\",(720415879))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"ex-info\",\"cljs.core/ex-info\",(-409744395),null)),cljs.core._conj(cljs.core.List.EMPTY,\"No fn to spec\"),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",(188258592))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"no-fn\",\"no-fn\",(-353517111))))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"sym\",\"sym\",(-1444860305))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"s__62__auto__\",\"s__62__auto__\",(158399329),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"spec\",\"spec\",(347520401))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"spec__65__auto__\",\"spec__65__auto__\",(-1278658585),null))], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"args\",\"args\",(1315556576))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"spec__65__auto__\",\"spec__65__auto__\",(-1278658585),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"tcret__68__auto__\",\"tcret__68__auto__\",(530857230),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"quick-check\",\"cljs.spec.test.alpha/quick-check\",(101067110),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"f__67__auto__\",\"f__67__auto__\",(-52782781),null)),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"spec__65__auto__\",\"spec__65__auto__\",(-1278658585),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"opts__63__auto__\",\"opts__63__auto__\",(-306808634),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"make-check-result\",\"cljs.spec.test.alpha/make-check-result\",(-410209472),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"s__62__auto__\",\"s__62__auto__\",(158399329),null)),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"spec__65__auto__\",\"spec__65__auto__\",(-1278658585),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"tcret__68__auto__\",\"tcret__68__auto__\",(530857230),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"default\",\"default\",(-1987822328))),(function (){var x__20731__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"failure\",\"failure\",(720415879))),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"ex-info\",\"cljs.core/ex-info\",(-409744395),null)),cljs.core._conj(cljs.core.List.EMPTY,\"No :args spec\"),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(\"cljs.spec.alpha\",\"failure\",\"cljs.spec.alpha/failure\",(188258592))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"no-args-spec\",\"no-args-spec\",(-1769472786))))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"sym\",\"sym\",(-1444860305))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"s__62__auto__\",\"s__62__auto__\",(158399329),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"spec\",\"spec\",(347520401))),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"spec__65__auto__\",\"spec__65__auto__\",(-1278658585),null))], 0))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"finally\",\"finally\",(-1065347064),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",(120293186),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"re-inst?__66__auto__\",\"re-inst?__66__auto__\",(-1746606611),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"instrument\",\"cljs.spec.test.alpha/instrument\",(1447464690),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = name;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.check_1;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"check-1\",\"cljs.spec.test.alpha$macros/check-1\",(752532142),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"check-1\",\"check-1\",(897585468),null),\"cljs/spec/test/alpha.cljc\",(18),(1),(150),true,(150),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null),new cljs.core.Symbol(null,\"s\",\"s\",(-948495851),null),new cljs.core.Keyword(null,\"as\",\"as\",(1148689641)),new cljs.core.Symbol(null,\"qs\",\"qs\",(-260156164),null)], null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),null,(cljs.core.truth_(cljs.spec.test.alpha$macros.check_1)?cljs.spec.test.alpha$macros.check_1.cljs$lang$test:null)])));})()\n;\ncljs.spec.test.alpha$macros.check_1.cljs$lang$macro = true;\n\nvar ret__21071__auto___659 = (function (){\n/**\n * Runs generative tests for fn f using spec and opts. See\n * 'check' for options and return.\n */\n(function (){\ncljs.spec.test.alpha$macros.check_fn = (function cljs$spec$test$alpha$macros$check_fn(var_args){\nvar args656 = [];\nvar len__21020__auto___660 = arguments.length;\nvar i__21021__auto___661 = (0);\nwhile(true){\nif((i__21021__auto___661 < len__21020__auto___660)){\nargs656.push((arguments[i__21021__auto___661]));\n\nvar G__662 = (i__21021__auto___661 + (1));\ni__21021__auto___661 = G__662;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__658 = args656.length;\nswitch (G__658) {\ncase (4):\nreturn cljs.spec.test.alpha$macros.check_fn.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase (5):\nreturn cljs.spec.test.alpha$macros.check_fn.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((args656.length - (2)))].join('')));\n\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.check_fn;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"check-fn\",\"cljs.spec.test.alpha$macros/check-fn\",(-603303010),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"check-fn\",\"check-fn\",(-69866488),null),\"cljs/spec/test/alpha.cljc\",(19),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(5),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(175),true,(175),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Runs generative tests for fn f using spec and opts. See\\n'check' for options and return.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.check_fn)?cljs.spec.test.alpha$macros.check_fn.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.test.alpha$macros.check_fn.cljs$core$IFn$_invoke$arity$4 = (function (_AMPERSAND_form,_AMPERSAND_env,f,spec){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"check-fn\",\"cljs.spec.test.alpha/check-fn\",(-1852617833),null)),(function (){var x__20731__auto__ = f;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = spec;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n});\n\ncljs.spec.test.alpha$macros.check_fn.cljs$core$IFn$_invoke$arity$5 = (function (_AMPERSAND_form,_AMPERSAND_env,f,spec,opts){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"opts__69__auto__\",\"opts__69__auto__\",(-1941795230),null)),(function (){var x__20731__auto__ = opts;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"validate-check-opts\",\"cljs.spec.test.alpha/validate-check-opts\",(524905204),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"opts__69__auto__\",\"opts__69__auto__\",(-1941795230),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"check-1\",\"cljs.spec.test.alpha/check-1\",(-532434267),null)),cljs.core._conj(cljs.core.List.EMPTY,null),cljs.core.array_seq([(function (){var x__20731__auto__ = f;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = spec;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"opts__69__auto__\",\"opts__69__auto__\",(-1941795230),null))], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.test.alpha$macros.check_fn.cljs$lang$maxFixedArity = (5);\n\nreturn new cljs.core.Var(function(){return cljs.spec.test.alpha$macros.check_fn;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"check-fn\",\"cljs.spec.test.alpha$macros/check-fn\",(-603303010),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"check-fn\",\"check-fn\",(-69866488),null),\"cljs/spec/test/alpha.cljc\",(19),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(5),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(175),true,(175),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"f\",\"f\",(43394975),null),new cljs.core.Symbol(null,\"spec\",\"spec\",(1988051928),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Runs generative tests for fn f using spec and opts. See\\n'check' for options and return.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.check_fn)?cljs.spec.test.alpha$macros.check_fn.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.test.alpha$macros.check_fn.cljs$lang$macro = true;\n\n(function (){\ncljs.spec.test.alpha$macros.checkable_syms_STAR_ = (function cljs$spec$test$alpha$macros$checkable_syms_STAR_(var_args){\nvar args664 = [];\nvar len__21020__auto___667 = arguments.length;\nvar i__21021__auto___668 = (0);\nwhile(true){\nif((i__21021__auto___668 < len__21020__auto___667)){\nargs664.push((arguments[i__21021__auto___668]));\n\nvar G__669 = (i__21021__auto___668 + (1));\ni__21021__auto___668 = G__669;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__666 = args664.length;\nswitch (G__666) {\ncase (0):\nreturn cljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase (1):\nreturn cljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args664.length)].join('')));\n\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.checkable_syms_STAR_;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"checkable-syms*\",\"cljs.spec.test.alpha$macros/checkable-syms*\",(-1513590775),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"checkable-syms*\",\"checkable-syms*\",(-1139668037),null),\"cljs/spec/test/alpha.cljc\",(22),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(1),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(185),(185),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),null,(cljs.core.truth_(cljs.spec.test.alpha$macros.checkable_syms_STAR_)?cljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn cljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$core$IFn$_invoke$arity$1(null);\n});\n\ncljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$core$IFn$_invoke$arity$1 = (function (opts){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.into,cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.spec.test.alpha$macros.fn_spec_name_QMARK_,cljs.core.keys((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.registry_ref) : cljs.core.deref.call(null,cljs.spec.alpha.registry_ref)))),cljs.core.keys(new cljs.core.Keyword(null,\"spec\",\"spec\",(347520401)).cljs$core$IFn$_invoke$arity$1(opts))], null));\n});\n\ncljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$lang$maxFixedArity = (1);\n\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.checkable_syms_STAR_;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"checkable-syms*\",\"cljs.spec.test.alpha$macros/checkable-syms*\",(-1513590775),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"checkable-syms*\",\"checkable-syms*\",(-1139668037),null),\"cljs/spec/test/alpha.cljc\",(22),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(1),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(185),(185),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),null,(cljs.core.truth_(cljs.spec.test.alpha$macros.checkable_syms_STAR_)?cljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$lang$test:null)]));\nvar ret__21071__auto___674 = (function (){\n/**\n * Given an opts map as per check, returns the set of syms that\n * can be checked.\n */\n(function (){\ncljs.spec.test.alpha$macros.checkable_syms = (function cljs$spec$test$alpha$macros$checkable_syms(var_args){\nvar args671 = [];\nvar len__21020__auto___675 = arguments.length;\nvar i__21021__auto___676 = (0);\nwhile(true){\nif((i__21021__auto___676 < len__21020__auto___675)){\nargs671.push((arguments[i__21021__auto___676]));\n\nvar G__677 = (i__21021__auto___676 + (1));\ni__21021__auto___676 = G__677;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__673 = args671.length;\nswitch (G__673) {\ncase (2):\nreturn cljs.spec.test.alpha$macros.checkable_syms.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn cljs.spec.test.alpha$macros.checkable_syms.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((args671.length - (2)))].join('')));\n\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.checkable_syms;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"checkable-syms\",\"cljs.spec.test.alpha$macros/checkable-syms\",(-1162268083),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"checkable-syms\",\"checkable-syms\",(-2147427117),null),\"cljs/spec/test/alpha.cljc\",(25),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(193),true,(193),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Given an opts map as per check, returns the set of syms that\\ncan be checked.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.checkable_syms)?cljs.spec.test.alpha$macros.checkable_syms.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.test.alpha$macros.checkable_syms.cljs$core$IFn$_invoke$arity$2 = (function (_AMPERSAND_form,_AMPERSAND_env){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"checkable-syms\",\"cljs.spec.test.alpha/checkable-syms\",(-20825526),null)),cljs.core._conj(cljs.core.List.EMPTY,null)));\n});\n\ncljs.spec.test.alpha$macros.checkable_syms.cljs$core$IFn$_invoke$arity$3 = (function (_AMPERSAND_form,_AMPERSAND_env,opts){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"opts__70__auto__\",\"opts__70__auto__\",(420392719),null)),(function (){var x__20731__auto__ = opts;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"validate-check-opts\",\"cljs.spec.test.alpha/validate-check-opts\",(524905204),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"opts__70__auto__\",\"opts__70__auto__\",(420392719),null))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"reduce\",\"cljs.core/reduce\",(2025430439),null)),cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"conj\",\"cljs.core/conj\",(-460750931),null)),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_set,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.spec.test.alpha$macros.fn_spec_name_QMARK_,cljs.core.keys((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.registry_ref) : cljs.core.deref.call(null,cljs.spec.alpha.registry_ref)))),cljs.core.keys(new cljs.core.Keyword(null,\"spec\",\"spec\",(347520401)).cljs$core$IFn$_invoke$arity$1(opts)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.test.alpha$macros.checkable_syms.cljs$lang$maxFixedArity = (3);\n\nreturn new cljs.core.Var(function(){return cljs.spec.test.alpha$macros.checkable_syms;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"checkable-syms\",\"cljs.spec.test.alpha$macros/checkable-syms\",(-1162268083),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"checkable-syms\",\"checkable-syms\",(-2147427117),null),\"cljs/spec/test/alpha.cljc\",(25),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(3),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null)], null),(1),(193),true,(193),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Given an opts map as per check, returns the set of syms that\\ncan be checked.\",(cljs.core.truth_(cljs.spec.test.alpha$macros.checkable_syms)?cljs.spec.test.alpha$macros.checkable_syms.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.test.alpha$macros.checkable_syms.cljs$lang$macro = true;\n\nvar ret__21071__auto___682 = (function (){\n/**\n * Run generative tests for spec conformance on vars named by\n * sym-or-syms, a symbol or collection of symbols. If sym-or-syms\n * is not specified, check all checkable vars. If a symbol identifies a\n * namespace then all symbols in that namespace will be enumerated.\n * \n * The opts map includes the following optional keys, where stc\n * aliases clojure.test.check:\n * \n * ::stc/opts  opts to flow through test.check/quick-check\n * :gen        map from spec names to generator overrides\n * \n * The ::stc/opts include :num-tests in addition to the keys\n * documented by test.check. Generator overrides are passed to\n * spec/gen when generating function args.\n * \n * Returns a lazy sequence of check result maps with the following\n * keys\n * \n * :spec       the spec tested\n * :sym        optional symbol naming the var tested\n * :failure    optional test failure\n * ::stc/ret   optional value returned by test.check/quick-check\n * \n * The value for :failure can be any exception. Exceptions thrown by\n * spec itself will have an ::s/failure value in ex-data:\n * \n * :check-failed   at least one checked return did not conform\n * :no-args-spec   no :args spec provided\n * :no-fn          no fn provided\n * :no-fspec       no fspec provided\n * :no-gen         unable to generate :args\n * :instrument     invalid args detected by instrument\n */\n(function (){\ncljs.spec.test.alpha$macros.check = (function cljs$spec$test$alpha$macros$check(var_args){\nvar args679 = [];\nvar len__21020__auto___683 = arguments.length;\nvar i__21021__auto___684 = (0);\nwhile(true){\nif((i__21021__auto___684 < len__21020__auto___683)){\nargs679.push((arguments[i__21021__auto___684]));\n\nvar G__685 = (i__21021__auto___684 + (1));\ni__21021__auto___684 = G__685;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__681 = args679.length;\nswitch (G__681) {\ncase (2):\nreturn cljs.spec.test.alpha$macros.check.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase (3):\nreturn cljs.spec.test.alpha$macros.check.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase (4):\nreturn cljs.spec.test.alpha$macros.check.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1((args679.length - (2)))].join('')));\n\n}\n}); return (\nnew cljs.core.Var(function(){return cljs.spec.test.alpha$macros.check;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"check\",\"cljs.spec.test.alpha$macros/check\",(-1857135879),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"check\",\"check\",(-1428126865),null),\"cljs/spec/test/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null,null)], null),(1),(205),true,(205),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Run generative tests for spec conformance on vars named by\\nsym-or-syms, a symbol or collection of symbols. If sym-or-syms\\nis not specified, check all checkable vars. If a symbol identifies a\\nnamespace then all symbols in that namespace will be enumerated.\\n\\nThe opts map includes the following optional keys, where stc\\naliases clojure.test.check:\\n\\n::stc/opts  opts to flow through test.check/quick-check\\n:gen        map from spec names to generator overrides\\n\\nThe ::stc/opts include :num-tests in addition to the keys\\ndocumented by test.check. Generator overrides are passed to\\nspec/gen when generating function args.\\n\\nReturns a lazy sequence of check result maps with the following\\nkeys\\n\\n:spec       the spec tested\\n:sym        optional symbol naming the var tested\\n:failure    optional test failure\\n::stc/ret   optional value returned by test.check/quick-check\\n\\nThe value for :failure can be any exception. Exceptions thrown by\\nspec itself will have an ::s/failure value in ex-data:\\n\\n:check-failed   at least one checked return did not conform\\n:no-args-spec   no :args spec provided\\n:no-fn          no fn provided\\n:no-fspec       no fspec provided\\n:no-gen         unable to generate :args\\n:instrument     invalid args detected by instrument\\n\",(cljs.core.truth_(cljs.spec.test.alpha$macros.check)?cljs.spec.test.alpha$macros.check.cljs$lang$test:null)])));})()\n;\n\ncljs.spec.test.alpha$macros.check.cljs$core$IFn$_invoke$arity$2 = (function (_AMPERSAND_form,_AMPERSAND_env){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"check\",\"cljs.spec.test.alpha/check\",(1428644486),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = cljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$core$IFn$_invoke$arity$0();\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.spec.test.alpha$macros.check.cljs$core$IFn$_invoke$arity$3 = (function (_AMPERSAND_form,_AMPERSAND_env,sym_or_syms){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"check\",\"cljs.spec.test.alpha/check\",(1428644486),null)),(function (){var x__20731__auto__ = sym_or_syms;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,null)], 0)));\n});\n\ncljs.spec.test.alpha$macros.check.cljs$core$IFn$_invoke$arity$4 = (function (_AMPERSAND_form,_AMPERSAND_env,sym_or_syms,opts){\nvar syms = cljs.spec.test.alpha$macros.sym_or_syms__GT_syms((cljs.spec.test.alpha$macros.eval.cljs$core$IFn$_invoke$arity$1 ? cljs.spec.test.alpha$macros.eval.cljs$core$IFn$_invoke$arity$1(sym_or_syms) : cljs.spec.test.alpha$macros.eval.call(null,sym_or_syms)));\nvar opts_sym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"opts\");\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",(-308701135),null)),(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((function (){var x__20731__auto__ = opts_sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = opts;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})())));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([(function (){var x__20731__auto__ = cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (syms,opts_sym){\nreturn (function (sym){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.spec.test.alpha\",\"check-1\",\"cljs.spec.test.alpha/check-1\",(-532434267),null)),(function (){var x__20731__auto__ = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"quote\",\"quote\",(1377916282),null)),(function (){var x__20731__auto__ = sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})(),cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY,null),cljs.core._conj(cljs.core.List.EMPTY,null),(function (){var x__20731__auto__ = opts_sym;\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});})(syms,opts_sym))\n,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.spec.test.alpha$macros.checkable_syms_STAR_.cljs$core$IFn$_invoke$arity$1(opts),syms)))));\nreturn cljs.core._conj(cljs.core.List.EMPTY,x__20731__auto__);\n})()], 0)));\n});\n\ncljs.spec.test.alpha$macros.check.cljs$lang$maxFixedArity = (4);\n\nreturn new cljs.core.Var(function(){return cljs.spec.test.alpha$macros.check;},new cljs.core.Symbol(\"cljs.spec.test.alpha$macros\",\"check\",\"cljs.spec.test.alpha$macros/check\",(-1857135879),null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"ns\",\"ns\",(441598760)),new cljs.core.Keyword(null,\"name\",\"name\",(1843675177)),new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878)),new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514)),new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",(-2056129173)),new cljs.core.Keyword(null,\"column\",\"column\",(2078222095)),new cljs.core.Keyword(null,\"line\",\"line\",(212345235)),new cljs.core.Keyword(null,\"macro\",\"macro\",(-867863404)),new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),new cljs.core.Keyword(null,\"doc\",\"doc\",(1913296891)),new cljs.core.Keyword(null,\"test\",\"test\",(577538877))],[new cljs.core.Symbol(null,\"cljs.spec.test.alpha$macros\",\"cljs.spec.test.alpha$macros\",(-1739784120),null),new cljs.core.Symbol(null,\"check\",\"check\",(-1428126865),null),\"cljs/spec/test/alpha.cljc\",(16),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic\",\"variadic\",(882626057)),false,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",(-690205543)),(4),new cljs.core.Keyword(null,\"method-params\",\"method-params\",(-980792179)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists\",\"arglists\",(1661989754)),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",(1944829838)),cljs.core.list(null,null,null)], null),(1),(205),true,(205),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"&form\",\"&form\",(1482799337),null),new cljs.core.Symbol(null,\"&env\",\"&env\",(-919163083),null),new cljs.core.Symbol(null,\"sym-or-syms\",\"sym-or-syms\",(1701538801),null),new cljs.core.Symbol(null,\"opts\",\"opts\",(1795607228),null)], null)),\"Run generative tests for spec conformance on vars named by\\nsym-or-syms, a symbol or collection of symbols. If sym-or-syms\\nis not specified, check all checkable vars. If a symbol identifies a\\nnamespace then all symbols in that namespace will be enumerated.\\n\\nThe opts map includes the following optional keys, where stc\\naliases clojure.test.check:\\n\\n::stc/opts  opts to flow through test.check/quick-check\\n:gen        map from spec names to generator overrides\\n\\nThe ::stc/opts include :num-tests in addition to the keys\\ndocumented by test.check. Generator overrides are passed to\\nspec/gen when generating function args.\\n\\nReturns a lazy sequence of check result maps with the following\\nkeys\\n\\n:spec       the spec tested\\n:sym        optional symbol naming the var tested\\n:failure    optional test failure\\n::stc/ret   optional value returned by test.check/quick-check\\n\\nThe value for :failure can be any exception. Exceptions thrown by\\nspec itself will have an ::s/failure value in ex-data:\\n\\n:check-failed   at least one checked return did not conform\\n:no-args-spec   no :args spec provided\\n:no-fn          no fn provided\\n:no-fspec       no fspec provided\\n:no-gen         unable to generate :args\\n:instrument     invalid args detected by instrument\\n\",(cljs.core.truth_(cljs.spec.test.alpha$macros.check)?cljs.spec.test.alpha$macros.check.cljs$lang$test:null)]));\n})()\n;\ncljs.spec.test.alpha$macros.check.cljs$lang$macro = true;\n\n\n//# sourceURL=cljs/spec/test/alpha$macros.js?rel=1494623933756\n//# sourceMappingURL=data:application/json;base64,","clojure/set.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$clojure.set\",\"~:imports\",null,\"~:requires\",null,\"~:uses\",null,\"~:defs\",[\"^ \",\"~$union\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"~:line\",19,\"~:column\",7,\"~:end-line\",19,\"~:end-column\",12,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^F\",[[],[\"~$s1\"],[\"^H\",\"~$s2\"],[\"^H\",\"^I\",\"~$&\",\"~$sets\"]]]]],\"~:doc\",\"Return a set that is the union of the input sets\",\"~:top-fn\",[\"^ \",\"~:variadic\",true,\"~:max-fixed-arity\",2,\"~:method-params\",[\"^F\",[[],[\"^H\"],[\"^H\",\"^I\"]]],\"^E\",[\"^F\",[[],[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]],\"~:arglists-meta\",[\"^F\",[null,null,null,null]]]],\"^7\",\"~$clojure.set/union\",\"^M\",true,\"^@\",\"out/clojure/set.cljs\",\"^D\",12,\"^L\",[\"^ \",\"^M\",true,\"^N\",2,\"^O\",[\"^F\",[[],[\"^H\"],[\"^H\",\"^I\"]]],\"^E\",[\"^F\",[[],[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]],\"^P\",[\"^F\",[null,null,null,null]]],\"^O\",[\"^F\",[[],[\"^H\"],[\"^H\",\"^I\"]]],\"~:protocol-impl\",null,\"^P\",[\"^F\",[null,null,null,null]],\"^B\",1,\"^A\",19,\"^C\",19,\"^N\",2,\"~:fn-var\",true,\"^E\",[\"^F\",[[],[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]],\"^K\",\"Return a set that is the union of the input sets\"],\"~$map-invert\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",97,\"^B\",7,\"^C\",97,\"^D\",17,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"~$m\"]]]]],\"^K\",\"Returns the map with the vals mapped to the keys.\"],\"^7\",\"~$clojure.set/map-invert\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",17,\"^O\",[\"^F\",[[\"~$m\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",97,\"^C\",97,\"^N\",1,\"^S\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"~$m\"]]]]],\"^K\",\"Returns the map with the vals mapped to the keys.\"],\"~$join\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",101,\"^B\",7,\"^C\",101,\"^D\",11,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"~$xrel\",\"~$yrel\"],[\"^W\",\"^X\",\"~$km\"]]]]],\"^K\",\"When passed 2 rels, returns the rel corresponding to the natural\\n  join. When passed an additional keymap, joins on the corresponding\\n  keys.\",\"^L\",[\"^ \",\"^M\",false,\"^N\",3,\"^O\",[\"^F\",[[\"^W\",\"^X\"],[\"^W\",\"^X\",\"^Y\"]]],\"^E\",[\"^F\",[[\"^W\",\"^X\"],[\"^W\",\"^X\",\"^Y\"]]],\"^P\",[\"^F\",[null,null]]]],\"^7\",\"~$clojure.set/join\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",11,\"^L\",[\"^ \",\"^M\",false,\"^N\",3,\"^O\",[\"^F\",[[\"^W\",\"^X\"],[\"^W\",\"^X\",\"^Y\"]]],\"^E\",[\"^F\",[[\"^W\",\"^X\"],[\"^W\",\"^X\",\"^Y\"]]],\"^P\",[\"^F\",[null,null]]],\"^O\",[\"^F\",[[\"^W\",\"^X\"],[\"^W\",\"^X\",\"^Y\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",101,\"^C\",101,\"^N\",3,\"^S\",true,\"^E\",[\"^F\",[[\"^W\",\"^X\"],[\"^W\",\"^X\",\"^Y\"]]],\"^K\",\"When passed 2 rels, returns the rel corresponding to the natural\\n  join. When passed an additional keymap, joins on the corresponding\\n  keys.\"],\"~$select\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",61,\"^B\",7,\"^C\",61,\"^D\",13,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"~$pred\",\"~$xset\"]]]]],\"^K\",\"Returns a set of the elements for which pred is true\"],\"^7\",\"~$clojure.set/select\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",13,\"^O\",[\"^F\",[[\"^10\",\"^11\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",61,\"^C\",61,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^10\",\"^11\"]]]]],\"^K\",\"Returns a set of the elements for which pred is true\"],\"~$intersection\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",31,\"^B\",7,\"^C\",31,\"^D\",19,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]]]],\"^K\",\"Return a set that is the intersection of the input sets\",\"^L\",[\"^ \",\"^M\",true,\"^N\",2,\"^O\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"]]],\"^E\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]],\"^P\",[\"^F\",[null,null,null]]]],\"^7\",\"~$clojure.set/intersection\",\"^M\",true,\"^@\",\"out/clojure/set.cljs\",\"^D\",19,\"^L\",[\"^ \",\"^M\",true,\"^N\",2,\"^O\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"]]],\"^E\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]],\"^P\",[\"^F\",[null,null,null]]],\"^O\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null,null]],\"^B\",1,\"^A\",31,\"^C\",31,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]],\"^K\",\"Return a set that is the intersection of the input sets\"],\"~$superset?\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",137,\"^B\",7,\"^C\",137,\"^D\",16,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"~$set1\",\"~$set2\"]]]]],\"^K\",\"Is set1 a superset of set2?\"],\"^7\",\"~$clojure.set/superset?\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",16,\"^O\",[\"^F\",[[\"^16\",\"^17\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",137,\"^C\",137,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^16\",\"^17\"]]]]],\"^K\",\"Is set1 a superset of set2?\"],\"~$index\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",87,\"^B\",7,\"^C\",87,\"^D\",12,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^W\",\"~$ks\"]]]]],\"^K\",\"Returns a map of the distinct values of ks in the xrel mapped to a\\n  set of the maps in xrel with the corresponding values of ks.\"],\"^7\",\"~$clojure.set/index\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",12,\"^O\",[\"^F\",[[\"^W\",\"^1:\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",87,\"^C\",87,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^W\",\"^1:\"]]]]],\"^K\",\"Returns a map of the distinct values of ks in the xrel mapped to a\\n  set of the maps in xrel with the corresponding values of ks.\"],\"~$bubble-max-key\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",13,\"^B\",8,\"^C\",13,\"^D\",22,\"~:private\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"~$k\",\"~$coll\"]]]]]],\"^1=\",true,\"^7\",\"~$clojure.set/bubble-max-key\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",22,\"^O\",[\"^F\",[[\"~$k\",\"^1>\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",13,\"^C\",13,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"~$k\",\"^1>\"]]]]]],\"~$subset?\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",131,\"^B\",7,\"^C\",131,\"^D\",14,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^16\",\"^17\"]]]]],\"^K\",\"Is set1 a subset of set2?\"],\"^7\",\"~$clojure.set/subset?\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",14,\"^O\",[\"^F\",[[\"^16\",\"^17\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",131,\"^C\",131,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^16\",\"^17\"]]]]],\"^K\",\"Is set1 a subset of set2?\"],\"~$rename\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",82,\"^B\",7,\"^C\",82,\"^D\",13,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^W\",\"~$kmap\"]]]]],\"^K\",\"Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap\"],\"^7\",\"~$clojure.set/rename\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",13,\"^O\",[\"^F\",[[\"^W\",\"^1C\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",82,\"^C\",82,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^W\",\"^1C\"]]]]],\"^K\",\"Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap\"],\"~$rename-keys\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",72,\"^B\",7,\"^C\",72,\"^D\",18,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"~$map\",\"^1C\"]]]]],\"^K\",\"Returns the map with the keys in kmap renamed to the vals in kmap\"],\"^7\",\"~$clojure.set/rename-keys\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",18,\"^O\",[\"^F\",[[\"^1F\",\"^1C\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",72,\"^C\",72,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^1F\",\"^1C\"]]]]],\"^K\",\"Returns the map with the keys in kmap renamed to the vals in kmap\"],\"~$project\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",67,\"^B\",7,\"^C\",67,\"^D\",14,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^W\",\"^1:\"]]]]],\"^K\",\"Returns a rel of the elements of xrel with only the keys in ks\"],\"^7\",\"~$clojure.set/project\",\"^M\",false,\"^@\",\"out/clojure/set.cljs\",\"^D\",14,\"^O\",[\"^F\",[[\"^W\",\"^1:\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null]],\"^B\",1,\"^A\",67,\"^C\",67,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^W\",\"^1:\"]]]]],\"^K\",\"Returns a rel of the elements of xrel with only the keys in ks\"],\"~$difference\",[\"^ \",\"^>\",null,\"^?\",[\"^ \",\"^@\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/clojure/set.cljs\",\"^A\",46,\"^B\",7,\"^C\",46,\"^D\",17,\"^E\",[\"^F\",[\"^G\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]]]],\"^K\",\"Return a set that is the first set without elements of the remaining sets\",\"^L\",[\"^ \",\"^M\",true,\"^N\",2,\"^O\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"]]],\"^E\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]],\"^P\",[\"^F\",[null,null,null]]]],\"^7\",\"~$clojure.set/difference\",\"^M\",true,\"^@\",\"out/clojure/set.cljs\",\"^D\",17,\"^L\",[\"^ \",\"^M\",true,\"^N\",2,\"^O\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"]]],\"^E\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]],\"^P\",[\"^F\",[null,null,null]]],\"^O\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"]]],\"^R\",null,\"^P\",[\"^F\",[null,null,null]],\"^B\",1,\"^A\",46,\"^C\",46,\"^N\",2,\"^S\",true,\"^E\",[\"^F\",[[\"^H\"],[\"^H\",\"^I\"],[\"^H\",\"^I\",\"~$&\",\"^J\"]]],\"^K\",\"Return a set that is the first set without elements of the remaining sets\"]],\"~:require-macros\",null,\"^K\",\"Set operations such as union/intersection.\"]","clojure/test/check/rose_tree.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"],\"~$Infinity\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$filter\",\"~$remove\",\"~$seq\"]],\"~:name\",\"~$clojure.test.check.rose-tree\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$core\",\"~$cljs.core\",\"^@\",\"^@\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$bifurcate\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"^<\",\"~:line\",139,\"~:column\",17,\"~:end-line\",139,\"~:end-column\",26,\"~:private\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^M\",[[\"~$f\",\"~$roses\"]]]]],\"~:doc\",\"Returns a sequence of rose trees representing shrinks that discard\\n  half of the vector of roses.\"],\"^K\",true,\"^;\",\"~$clojure.test.check.rose-tree/bifurcate\",\"~:variadic\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",26,\"~:method-params\",[\"^M\",[[\"~$f\",\"^O\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^M\",[null,null]],\"^H\",1,\"^G\",139,\"^I\",139,\"~:max-fixed-arity\",2,\"~:fn-var\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^O\"]]]]],\"^P\",\"Returns a sequence of rose trees representing shrinks that discard\\n  half of the vector of roses.\"],\"^:\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",185,\"^H\",7,\"^I\",185,\"^J\",10,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$rose\"]]]]],\"^P\",\"Create a lazy-seq of all of the (unique) nodes in a shrink-tree.\\n  This assumes that two nodes with the same value have the same children.\\n  While it's not common, it's possible to create trees that don't\\n  fit that description. This function is significantly faster than\\n  brute-force enumerating all of the nodes in a tree, as there will\\n  be many duplicates.\"],\"^;\",\"~$clojure.test.check.rose-tree/seq\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",10,\"^S\",[\"^M\",[[\"^X\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",185,\"^I\",185,\"^V\",1,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^X\"]]]]],\"^P\",\"Create a lazy-seq of all of the (unique) nodes in a shrink-tree.\\n  This assumes that two nodes with the same value have the same children.\\n  While it's not common, it's possible to create trees that don't\\n  fit that description. This function is significantly faster than\\n  brute-force enumerating all of the nodes in a tree, as there will\\n  be many duplicates.\"],\"~$pure\",[\"^ \",\"~:no-doc\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",67,\"^H\",7,\"^I\",67,\"^J\",11,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$x\"]]]]],\"^P\",\"Puts a value `x` into a Rose tree, with no children.\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/pure\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",11,\"^S\",[\"^M\",[[\"~$x\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",67,\"^I\",67,\"^V\",1,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$x\"]]]]],\"^P\",\"Puts a value `x` into a Rose tree, with no children.\"],\"~$->RoseTree\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"~:protocols\",[\"^7\",[\"~$cljs.core/IIndexed\"]],\"^F\",\"^<\",\"^J\",18,\"^H\",10,\"~:factory\",\"~:positional\",\"^G\",15,\"^I\",15,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$root\",\"~$children\"]]]]],\"~:skip-protocol-flag\",[\"^7\",[\"^13\"]]],\"^12\",[\"^7\",[\"^13\"]],\"^;\",\"~$clojure.test.check.rose-tree/->RoseTree\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",18,\"^S\",[\"^M\",[[\"^16\",\"^17\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^14\",\"^15\",\"^G\",15,\"^I\",15,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^16\",\"^17\"]]]]],\"^18\",[\"^7\",[\"^13\"]]],\"~$make-stack\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",179,\"^H\",8,\"^I\",179,\"^J\",18,\"^K\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^17\",\"~$stack\"]]]]]],\"^K\",true,\"^;\",\"~$clojure.test.check.rose-tree/make-stack\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",18,\"^S\",[\"^M\",[[\"^17\",\"^1;\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",179,\"^I\",179,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^17\",\"^1;\"]]]]]],\"~$join\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",55,\"^H\",7,\"^I\",55,\"^J\",11,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^X\"]]]]],\"^P\",\"Turn a tree of trees into a single tree. Does this by concatenating\\n  children of the inner and outer trees.\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/join\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",11,\"^S\",[\"^M\",[[\"^X\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",55,\"^I\",55,\"^V\",1,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^X\"]]]]],\"^P\",\"Turn a tree of trees into a single tree. Does this by concatenating\\n  children of the inner and outer trees.\"],\"~$bind\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",79,\"^H\",7,\"^I\",79,\"^J\",11,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$m\",\"~$k\"]]]]],\"^P\",\"Takes a Rose tree (m) and a function (k) from\\n  values to Rose tree and returns a new Rose tree.\\n  This is the monadic bind (>>=) for Rose trees.\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/bind\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",11,\"^S\",[\"^M\",[[\"~$m\",\"~$k\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",79,\"^I\",79,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$m\",\"~$k\"]]]]],\"^P\",\"Takes a Rose tree (m) and a function (k) from\\n  values to Rose tree and returns a new Rose tree.\\n  This is the monadic bind (>>=) for Rose trees.\"],\"^17\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",35,\"^H\",7,\"^I\",35,\"^J\",15,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^X\"]]]]],\"^P\",\"Returns the children of the root of the Rose tree.\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/children\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",15,\"^S\",[\"^M\",[[\"^X\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",35,\"^I\",35,\"^V\",1,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^X\"]]]]],\"^P\",\"Returns the children of the root of the Rose tree.\"],\"~$exclude-nth\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",45,\"^H\",8,\"^I\",45,\"^J\",19,\"^K\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$n\",\"~$coll\"]]]]],\"^P\",\"Exclude the nth value in a collection.\"],\"^K\",true,\"^;\",\"~$clojure.test.check.rose-tree/exclude-nth\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",19,\"^S\",[\"^M\",[[\"~$n\",\"^1C\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",45,\"^I\",45,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$n\",\"^1C\"]]]]],\"^P\",\"Exclude the nth value in a collection.\"],\"^9\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",115,\"^H\",7,\"^I\",115,\"^J\",13,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^O\"]]]]],\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/remove\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",13,\"^S\",[\"^M\",[[\"^O\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",115,\"^I\",115,\"^V\",1,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^O\"]]]]]],\"~$permutations\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",97,\"^H\",7,\"^I\",97,\"^J\",19,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^O\"]]]]],\"^P\",\"Create a seq of vectors, where each rose in turn, has been replaced\\n  by its children.\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/permutations\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",19,\"^S\",[\"^M\",[[\"^O\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",97,\"^I\",97,\"^V\",1,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^O\"]]]]],\"^P\",\"Create a seq of vectors, where each rose in turn, has been replaced\\n  by its children.\"],\"~$RoseTree\",[\"^ \",\"~:num-fields\",2,\"^12\",[\"^7\",[\"^13\"]],\"^;\",\"~$clojure.test.check.rose-tree/RoseTree\",\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",18,\"~:type\",true,\"^H\",10,\"^G\",15,\"~:record\",false,\"^I\",15,\"^18\",[\"^7\",[\"^13\"]]],\"~$shrink\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",129,\"^H\",7,\"^I\",129,\"^J\",13,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^O\"]]]]],\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/shrink\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",13,\"^S\",[\"^M\",[[\"~$f\",\"^O\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",129,\"^I\",129,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^O\"]]]]]],\"~$shrink-vector*\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",151,\"^H\",17,\"^I\",151,\"^J\",31,\"^K\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^O\"]]]]]],\"^K\",true,\"^;\",\"~$clojure.test.check.rose-tree/shrink-vector*\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",31,\"^S\",[\"^M\",[[\"~$f\",\"^O\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",151,\"^I\",151,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^O\"]]]]]],\"~$make-rose\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",41,\"^H\",7,\"^I\",41,\"^J\",16,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^16\",\"^17\"]]]]]],\"^;\",\"~$clojure.test.check.rose-tree/make-rose\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",16,\"^S\",[\"^M\",[[\"^16\",\"^17\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",41,\"^I\",41,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^16\",\"^17\"]]]]]],\"^8\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",87,\"^H\",7,\"^I\",87,\"^J\",13,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$pred\",\"^X\"]]]]],\"^P\",\"Returns a new Rose tree whose values pass `pred`. Values who\\n  do not pass `pred` have their children cut out as well.\\n  Takes a list of roses, not a rose\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/filter\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",13,\"^S\",[\"^M\",[[\"^1S\",\"^X\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",87,\"^I\",87,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^1S\",\"^X\"]]]]],\"^P\",\"Returns a new Rose tree whose values pass `pred`. Values who\\n  do not pass `pred` have their children cut out as well.\\n  Takes a list of roses, not a rose\"],\"^16\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",29,\"^H\",7,\"^I\",29,\"^J\",11,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^X\"]]]]],\"^P\",\"Returns the root of a Rose tree.\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/root\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",11,\"^S\",[\"^M\",[[\"^X\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",29,\"^I\",29,\"^V\",1,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^X\"]]]]],\"^P\",\"Returns the root of a Rose tree.\"],\"~$shrink-vector\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",157,\"^H\",7,\"^I\",157,\"^J\",20,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^O\"]]]]]],\"^;\",\"~$clojure.test.check.rose-tree/shrink-vector\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",20,\"^S\",[\"^M\",[[\"~$f\",\"^O\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",157,\"^I\",157,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^O\"]]]]]],\"~$zip\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",106,\"^H\",7,\"^I\",106,\"^J\",10,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^O\"]]]]],\"^P\",\"Apply `f` to the sequence of Rose trees `roses`.\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/zip\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",10,\"^S\",[\"^M\",[[\"~$f\",\"^O\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",106,\"^I\",106,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^O\"]]]]],\"^P\",\"Apply `f` to the sequence of Rose trees `roses`.\"],\"~$fmap\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",73,\"^H\",7,\"^I\",73,\"^J\",11,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^X\"]]]]],\"^P\",\"Applies functions `f` to all values in the tree.\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/fmap\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",11,\"^S\",[\"^M\",[[\"~$f\",\"^X\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",73,\"^I\",73,\"^V\",2,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$f\",\"^X\"]]]]],\"^P\",\"Applies functions `f` to all values in the tree.\"],\"~$unchunk\",[\"^ \",\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",122,\"^H\",17,\"^I\",122,\"^J\",24,\"^K\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"~$a-lazy-seq\"]]]]],\"^P\",\"Returns an equivalent lazy seq that is not chunked.\"],\"^K\",true,\"^;\",\"~$clojure.test.check.rose-tree/unchunk\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",24,\"^S\",[\"^M\",[[\"^21\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",122,\"^I\",122,\"^V\",1,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^21\"]]]]],\"^P\",\"Returns an equivalent lazy seq that is not chunked.\"],\"~$collapse\",[\"^ \",\"^[\",true,\"^D\",null,\"^E\",[\"^ \",\"^F\",\"^<\",\"^G\",167,\"^H\",7,\"^I\",167,\"^J\",15,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^X\"]]]]],\"^P\",\"Return a new rose-tree whose depth-one children\\n  are the children from depth one _and_ two of the input\\n  tree.\",\"^[\",true],\"^;\",\"~$clojure.test.check.rose-tree/collapse\",\"^R\",false,\"^F\",\"clojure/test/check/rose_tree.cljc\",\"^J\",15,\"^S\",[\"^M\",[[\"^X\"]]],\"^T\",null,\"^U\",[\"^M\",[null,null]],\"^H\",1,\"^G\",167,\"^I\",167,\"^V\",1,\"^W\",true,\"^L\",[\"^M\",[\"^N\",[\"^M\",[[\"^X\"]]]]],\"^P\",\"Return a new rose-tree whose depth-one children\\n  are the children from depth one _and_ two of the input\\n  tree.\"]],\"~:require-macros\",[\"^ \"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^7\",[\"~:else\",\"^16\",\"^17\"]],\"~:order\",[\"^28\",\"^16\",\"^17\"]],\"^P\",\"A lazy tree data structure used for shrinking.\"]","cljs/tools/reader/reader_types$macros.js":"goog.provide('cljs.tools.reader.reader_types');\ngoog.require('cljs.core');\nvar ret__21071__auto___620 = (function (){\n/**\n * If reader is a SourceLoggingPushbackReader, execute body in a source\n *   logging context. Otherwise, execute body, returning the result.\n */\ncljs.tools.reader.reader_types.log_source = (function cljs$tools$reader$reader_types$log_source(var_args){\nvar args__21023__auto__ = [];\nvar len__21020__auto___621 = arguments.length;\nvar i__21021__auto___622 = (0);\nwhile(true){\nif((i__21021__auto___622 < len__21020__auto___621)){\nargs__21023__auto__.push((arguments[i__21021__auto___622]));\n\nvar G__623 = (i__21021__auto___622 + (1));\ni__21021__auto___622 = G__623;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__21024__auto__ = ((((3) < args__21023__auto__.length))?(new cljs.core.IndexedSeq(args__21023__auto__.slice((3)),(0),null)):null);\nreturn cljs.tools.reader.reader_types.log_source.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__21024__auto__);\n});\n\ncljs.tools.reader.reader_types.log_source.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,reader,body){\nreturn cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"if\",\"if\",(1181717262),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",(-6692549),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.tools.reader.reader-types\",\"source-logging-reader?\",\"cljs.tools.reader.reader-types/source-logging-reader?\",(-1520527434),null)),(function (){var x__20731__auto__ = reader;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.core\",\"not\",\"cljs.core/not\",(100665144),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.tools.reader.impl.utils\",\"whitespace?\",\"cljs.tools.reader.impl.utils/whitespace?\",(-2091653184),null)),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.tools.reader.reader-types\",\"peek-char\",\"cljs.tools.reader.reader-types/peek-char\",(692825686),null)),(function (){var x__20731__auto__ = reader;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(\"cljs.tools.reader.reader-types\",\"log-source*\",\"cljs.tools.reader.reader-types/log-source*\",(-827357451),null)),(function (){var x__20731__auto__ = reader;\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,(function (){var x__20731__auto__ = cljs.core.with_meta.call(null,cljs.core.with_meta(new cljs.core.Symbol(null,\"fn*\",\"fn*\",(-752876845),null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"once\",\"once\",(-262568523)),true], null)),cljs.core.apply.call(null,cljs.core.array_map,cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"file\",\"file\",(-1269645878))),cljs.core._conj.call(null,cljs.core.List.EMPTY,\"macro-compile-cljs.tools.reader.reader-types$macros\"),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"line\",\"line\",(212345235))),cljs.core._conj.call(null,cljs.core.List.EMPTY,(9)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"column\",\"column\",(2078222095))),cljs.core._conj.call(null,cljs.core.List.EMPTY,(35)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"end-line\",\"end-line\",(1837326455))),cljs.core._conj.call(null,cljs.core.List.EMPTY,(9)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"end-column\",\"end-column\",(1425389514))),cljs.core._conj.call(null,cljs.core.List.EMPTY,(38)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,\"once\",\"once\",(-262568523))),cljs.core._conj.call(null,cljs.core.List.EMPTY,true)))));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null)));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),body));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})(),(function (){var x__20731__auto__ = cljs.core.sequence.call(null,cljs.core.concat.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Symbol(null,\"do\",\"do\",(1686842252),null)),body));\nreturn cljs.core._conj.call(null,cljs.core.List.EMPTY,x__20731__auto__);\n})()));\n});\n\ncljs.tools.reader.reader_types.log_source.cljs$lang$maxFixedArity = (3);\n\ncljs.tools.reader.reader_types.log_source.cljs$lang$applyTo = (function (seq616){\nvar G__617 = cljs.core.first.call(null,seq616);\nvar seq616__$1 = cljs.core.next.call(null,seq616);\nvar G__618 = cljs.core.first.call(null,seq616__$1);\nvar seq616__$2 = cljs.core.next.call(null,seq616__$1);\nvar G__619 = cljs.core.first.call(null,seq616__$2);\nvar seq616__$3 = cljs.core.next.call(null,seq616__$2);\nreturn cljs.tools.reader.reader_types.log_source.cljs$core$IFn$_invoke$arity$variadic(G__617,G__618,G__619,seq616__$3);\n});\n\nreturn null;\n})()\n;\ncljs.tools.reader.reader_types.log_source.cljs$lang$macro = true;\n\n","cljs/tagged_literals.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[]],\"~:name\",\"~$cljs.tagged-literals\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$reader\",\"~$cljs.reader\",\"^<\",\"^<\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$read-queue\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tagged_literals.cljc\",\"~:line\",13,\"~:column\",7,\"~:end-line\",13,\"~:end-column\",17,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^H\",[[\"~$form\"]]]]]],\"^7\",\"~$cljs.tagged-literals/read-queue\",\"~:variadic\",false,\"^B\",\"out/cljs/tagged_literals.cljc\",\"^F\",17,\"~:method-params\",[\"^H\",[[\"^J\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^H\",[null,null]],\"^D\",1,\"^C\",13,\"^E\",13,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"^J\"]]]]]],\"~$read-uuid\",[\"^ \",\"^@\",null,\"^A\",[\"^ \",\"^B\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tagged_literals.cljc\",\"^C\",34,\"^D\",10,\"^E\",34,\"^F\",19,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"^J\"]]]]]],\"^7\",\"~$cljs.tagged-literals/read-uuid\",\"^L\",false,\"^B\",\"out/cljs/tagged_literals.cljc\",\"^F\",19,\"^M\",[\"^H\",[[\"^J\"]]],\"^N\",null,\"^O\",[\"^H\",[null,null]],\"^D\",4,\"^C\",34,\"^E\",34,\"^P\",1,\"^Q\",true,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"^J\"]]]]]],\"~$read-inst\",[\"^ \",\"^@\",null,\"^A\",[\"^ \",\"^B\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tagged_literals.cljc\",\"^C\",54,\"^D\",10,\"^E\",54,\"^F\",19,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"^J\"]]]]]],\"^7\",\"~$cljs.tagged-literals/read-inst\",\"^L\",false,\"^B\",\"out/cljs/tagged_literals.cljc\",\"^F\",19,\"^M\",[\"^H\",[[\"^J\"]]],\"^N\",null,\"^O\",[\"^H\",[null,null]],\"^D\",4,\"^C\",54,\"^E\",54,\"^P\",1,\"^Q\",true,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"^J\"]]]]]],\"~$valid-js-literal-key?\",[\"^ \",\"^@\",null,\"^A\",[\"^ \",\"^B\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tagged_literals.cljc\",\"^C\",63,\"^D\",7,\"^E\",63,\"^F\",28,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"~$k\"]]]]]],\"^7\",\"~$cljs.tagged-literals/valid-js-literal-key?\",\"^L\",false,\"^B\",\"out/cljs/tagged_literals.cljc\",\"^F\",28,\"^M\",[\"^H\",[[\"~$k\"]]],\"^N\",null,\"^O\",[\"^H\",[null,null]],\"^D\",1,\"^C\",63,\"^E\",63,\"^P\",1,\"^Q\",true,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"~$k\"]]]]]],\"~$JSValue\",[\"^ \",\"~:num-fields\",1,\"~:protocols\",[\"^6\",[]],\"^7\",\"~$cljs.tagged-literals/JSValue\",\"^B\",\"out/cljs/tagged_literals.cljc\",\"^F\",17,\"~:type\",true,\"^D\",10,\"^C\",68,\"~:record\",false,\"^E\",68,\"~:skip-protocol-flag\",null],\"~$->JSValue\",[\"^ \",\"^@\",null,\"^A\",[\"^ \",\"^Z\",[\"^6\",[]],\"^B\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tagged_literals.cljc\",\"^F\",17,\"^D\",10,\"~:factory\",\"~:positional\",\"^C\",68,\"^E\",68,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"~$val\"]]]]],\"^12\",null],\"^Z\",[\"^6\",[]],\"^7\",\"~$cljs.tagged-literals/->JSValue\",\"^L\",false,\"^B\",\"out/cljs/tagged_literals.cljc\",\"^F\",17,\"^M\",[\"^H\",[[\"^16\"]]],\"^N\",null,\"^O\",[\"^H\",[null,null]],\"^D\",1,\"^14\",\"^15\",\"^C\",68,\"^E\",68,\"^P\",1,\"^Q\",true,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"^16\"]]]]],\"^12\",null],\"~$read-js\",[\"^ \",\"^@\",null,\"^A\",[\"^ \",\"^B\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tagged_literals.cljc\",\"^C\",70,\"^D\",7,\"^E\",70,\"^F\",14,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"^J\"]]]]]],\"^7\",\"~$cljs.tagged-literals/read-js\",\"^L\",false,\"^B\",\"out/cljs/tagged_literals.cljc\",\"^F\",14,\"^M\",[\"^H\",[[\"^J\"]]],\"^N\",null,\"^O\",[\"^H\",[null,null]],\"^D\",1,\"^C\",70,\"^E\",70,\"^P\",1,\"^Q\",true,\"^G\",[\"^H\",[\"^I\",[\"^H\",[[\"^J\"]]]]]],\"~$*cljs-data-readers*\",[\"^ \",\"^A\",[\"^ \",\"^B\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tagged_literals.cljc\",\"^C\",87,\"^D\",16,\"^E\",87,\"^F\",35,\"~:dynamic\",true],\"^7\",\"~$cljs.tagged-literals/*cljs-data-readers*\",\"^B\",\"out/cljs/tagged_literals.cljc\",\"^F\",35,\"^D\",1,\"^1;\",true,\"^C\",87,\"^E\",87,\"~:tag\",\"~$any\"]],\"~:require-macros\",[\"^ \",\"^;\",\"^<\",\"^<\",\"^<\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^6\",[\"~$uuid\",\"~$cljs.core.PersistentQueue.EMPTY\",\"~$js\",\"~$inst\",\"~$cljs.core/into\",\"~$queue\",\"^16\"]],\"~:order\",[\"^1F\",\"^1C\",\"^16\",\"^1G\",\"^1B\",\"^1E\",\"^1D\"]],\"~:doc\",null]","provided":["cljs-live.compiler","cljs-live.eval","cljs-uuid-utils.core","cljs.analyzer","cljs.compiler","cljs.core","cljs.core.match","cljs.env","cljs.js","cljs.pprint","cljs.reader","cljs.source-map","cljs.source-map.base64","cljs.source-map.base64-vlq","cljs.spec.alpha","cljs.spec.gen.alpha","cljs.tagged-literals","cljs.test","cljs.tools.reader","cljs.tools.reader.edn","cljs.tools.reader.impl.commons","cljs.tools.reader.impl.utils","cljs.tools.reader.reader-types","cljsjs.codemirror","cljsjs.codemirror.addon.edit.closebrackets","cljsjs.codemirror.addon.search.searchcursor","cljsjs.codemirror.mode.clojure","cljsjs.react","cljsjs.react.dom","clojure.set","clojure.string","clojure.walk","cognitect.transit","com.cognitect.transit","com.cognitect.transit.caching","com.cognitect.transit.delimiters","com.cognitect.transit.eq","com.cognitect.transit.handlers","com.cognitect.transit.impl.decoder","com.cognitect.transit.impl.reader","com.cognitect.transit.impl.writer","com.cognitect.transit.types","com.cognitect.transit.util","fast-zip.core","goog.Disposable","goog.History","goog.Promise","goog.Thenable","goog.Timer","goog.Uri","goog.array","goog.asserts","goog.async.Deferred","goog.async.FreeList","goog.async.WorkQueue","goog.async.nextTick","goog.async.run","goog.async.throwException","goog.crypt","goog.crypt.base64","goog.debug","goog.debug.Error","goog.debug.LogBuffer","goog.debug.LogManager","goog.debug.LogRecord","goog.debug.Logger","goog.debug.entryPointRegistry","goog.disposable.IDisposable","goog.dom","goog.dom.AbstractMultiRange","goog.dom.AbstractRange","goog.dom.BrowserFeature","goog.dom.ControlRange","goog.dom.HtmlElement","goog.dom.InputType","goog.dom.MultiRange","goog.dom.NodeType","goog.dom.Range","goog.dom.RangeEndpoint","goog.dom.RangeIterator","goog.dom.RangeType","goog.dom.SavedCaretRange","goog.dom.SavedRange","goog.dom.TagIterator","goog.dom.TagName","goog.dom.TagWalkType","goog.dom.TextRange","goog.dom.TextRangeIterator","goog.dom.ViewportSizeMonitor","goog.dom.browserrange","goog.dom.browserrange.AbstractRange","goog.dom.browserrange.GeckoRange","goog.dom.browserrange.IeRange","goog.dom.browserrange.OperaRange","goog.dom.browserrange.W3cRange","goog.dom.browserrange.WebKitRange","goog.dom.classes","goog.dom.dataset","goog.dom.safe","goog.dom.tags","goog.dom.vendor","goog.events","goog.events.BrowserEvent","goog.events.BrowserFeature","goog.events.Event","goog.events.EventHandler","goog.events.EventId","goog.events.EventTarget","goog.events.EventType","goog.events.KeyCodes","goog.events.Listenable","goog.events.ListenableKey","goog.events.Listener","goog.events.ListenerMap","goog.fs.url","goog.functions","goog.history.Event","goog.history.EventType","goog.history.Html5History","goog.html.SafeHtml","goog.html.SafeScript","goog.html.SafeStyle","goog.html.SafeStyleSheet","goog.html.SafeUrl","goog.html.TrustedResourceUrl","goog.html.legacyconversions","goog.html.uncheckedconversions","goog.i18n.bidi.Dir","goog.i18n.bidi.DirectionalString","goog.iter","goog.iter.Iterator","goog.iter.StopIteration","goog.json","goog.labs.userAgent.browser","goog.labs.userAgent.device","goog.labs.userAgent.engine","goog.labs.userAgent.platform","goog.labs.userAgent.util","goog.log","goog.math","goog.math.Box","goog.math.Coordinate","goog.math.IRect","goog.math.Integer","goog.math.Long","goog.math.Rect","goog.math.Size","goog.memoize","goog.net.ErrorCode","goog.net.EventType","goog.net.HttpStatus","goog.net.WrapperXmlHttpFactory","goog.net.XhrIo","goog.net.XhrLike","goog.net.XmlHttp","goog.net.XmlHttpFactory","goog.net.jsloader","goog.object","goog.promise.Resolver","goog.reflect","goog.string","goog.string.Const","goog.string.StringBuffer","goog.string.TypedString","goog.string.Unicode","goog.structs","goog.structs.Map","goog.style","goog.uri.utils","goog.uri.utils.ComponentIndex","goog.uri.utils.StandardQueryParam","goog.userAgent","goog.userAgent.product","magic-tree-codemirror.addons","magic-tree-codemirror.edit","magic-tree-codemirror.util","magic-tree.core","magic-tree.emit","magic-tree.fn","magic-tree.nav","magic-tree.node","magic-tree.parse","magic-tree.range","magic-tree.reader","maria.codemirror.editor","maria.commands.commands","maria.commands.exec","maria.commands.registry","maria.commands.which-key","maria.curriculum","maria.eval","maria.frames.communication","maria.frames.user-actions","maria.html","maria.magic-tree","maria.messages","maria.ns-utils","maria.persistence.github","maria.persistence.local","maria.persistence.tokens","maria.persistence.transit","maria.pretty-comments","maria.repl-specials","maria.source-lookups","maria.user","maria.user.loaders","maria.user.shapes","maria.views.doc-toolbar","maria.views.pages.repl","maria.views.repl-specials","maria.views.repl-utils","maria.views.repl-values","maria.views.text","pack.mdc","re-db.core","re-db.d","re-db.patterns","re-view-hiccup.core","re-view-hiccup.react.attrs","re-view-material.core","re-view-material.ext","re-view-material.icons","re-view-material.mdc","re-view-material.util","re-view-routing.core","re-view.core","re-view.hoc","re-view.render-loop","re-view.util","re-view.view-spec"],"cljs/tools/reader/impl/commons.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$parseInt\",[\"^ \"],\"~$isNaN\",[\"^ \"],\"~$parseFloat\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$char\"]],\"~:name\",\"~$cljs.tools.reader.impl.commons\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$cljs.tools.reader.reader-types\",\"^>\",\"~$cljs.tools.reader.impl.utils\",\"^?\"],\"~:uses\",[\"^ \",\"^9\",\"^?\",\"~$numeric?\",\"^?\",\"~$reader-error\",\"^>\",\"~$peek-char\",\"^>\",\"~$read-char\",\"^>\",\"~$newline?\",\"^?\"],\"~:defs\",[\"^ \",\"~$match-number\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"~:line\",88,\"~:column\",7,\"~:end-line\",88,\"~:end-column\",19,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^P\",[[\"~$s\"]]]]]],\"^:\",\"~$cljs.tools.reader.impl.commons/match-number\",\"~:variadic\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",19,\"~:method-params\",[\"^P\",[[\"~$s\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^P\",[null,null]],\"^L\",1,\"^K\",88,\"^M\",88,\"~:max-fixed-arity\",1,\"~:fn-var\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"~$skip-line\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",35,\"^L\",7,\"^M\",35,\"^N\",16,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$reader\"]]]]],\"~:doc\",\"Advances the reader to the end of a line. Returns the reader\"],\"^:\",\"~$cljs.tools.reader.impl.commons/skip-line\",\"^S\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",16,\"^T\",[\"^P\",[[\"^Z\"]]],\"^U\",null,\"^V\",[\"^P\",[null,null]],\"^L\",1,\"^K\",35,\"^M\",35,\"^W\",1,\"^X\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^Z\"]]]]],\"^[\",\"Advances the reader to the end of a line. Returns the reader\"],\"~$int-pattern\",[\"^ \",\"^:\",\"~$cljs.tools.reader.impl.commons/int-pattern\",\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^K\",43,\"^L\",1,\"^M\",43,\"^N\",17,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",43,\"^L\",6,\"^M\",43,\"^N\",17],\"~:tag\",\"~$any\"],\"~$read-comment\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",123,\"^L\",7,\"^M\",123,\"^N\",19,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$rdr\",\"~$&\",\"~$_\"]]]]],\"~:top-fn\",[\"^ \",\"^S\",true,\"^W\",1,\"^T\",[[\"^P\",[\"^16\",\"~$_\"]]],\"^O\",[\"^P\",[[\"^16\",\"~$&\",\"~$_\"]]],\"^V\",[\"^P\",[null]]]],\"^:\",\"~$cljs.tools.reader.impl.commons/read-comment\",\"^S\",true,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",19,\"^17\",[\"^ \",\"^S\",true,\"^W\",1,\"^T\",[[\"^P\",[\"^16\",\"~$_\"]]],\"^O\",[\"^P\",[[\"^16\",\"~$&\",\"~$_\"]]],\"^V\",[\"^P\",[null]]],\"^T\",[[\"^P\",[\"^16\",\"~$_\"]]],\"^U\",null,\"^V\",[\"^P\",[null]],\"^L\",1,\"^K\",123,\"^M\",123,\"^W\",1,\"^X\",true,\"^O\",[\"^P\",[[\"^16\",\"~$&\",\"~$_\"]]]],\"~$match-ratio\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",66,\"^L\",8,\"^M\",66,\"^N\",19,\"~:private\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"^1:\",true,\"^:\",\"~$cljs.tools.reader.impl.commons/match-ratio\",\"^S\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",19,\"^T\",[\"^P\",[[\"~$s\"]]],\"^U\",null,\"^V\",[\"^P\",[null,null]],\"^L\",1,\"^K\",66,\"^M\",66,\"^W\",1,\"^X\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"~$match-int\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",47,\"^L\",8,\"^M\",47,\"^N\",17,\"^1:\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"^1:\",true,\"^:\",\"~$cljs.tools.reader.impl.commons/match-int\",\"^S\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",17,\"^T\",[\"^P\",[[\"~$s\"]]],\"^U\",null,\"^V\",[\"^P\",[null,null]],\"^L\",1,\"^K\",47,\"^M\",47,\"^W\",1,\"^X\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"~$parse-symbol\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",96,\"^L\",7,\"^M\",96,\"^N\",19,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$token\"]]]]],\"^[\",\"Parses a string into a vector of the namespace and symbol\"],\"^:\",\"~$cljs.tools.reader.impl.commons/parse-symbol\",\"^S\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",19,\"^T\",[\"^P\",[[\"^1?\"]]],\"^U\",null,\"^V\",[\"^P\",[null,null]],\"^L\",1,\"^K\",96,\"^M\",96,\"^W\",1,\"^X\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1?\"]]]]],\"^[\",\"Parses a string into a vector of the namespace and symbol\"],\"~$number-literal?\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",19,\"^L\",16,\"^M\",19,\"^N\",31,\"^13\",\"~$boolean\",\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^Z\",\"~$initch\"]]]]],\"^[\",\"Checks whether the reader is at the start of a number literal\"],\"^:\",\"~$cljs.tools.reader.impl.commons/number-literal?\",\"^S\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",31,\"^T\",[\"^P\",[[\"^Z\",\"^1C\"]]],\"^U\",null,\"^V\",[\"^P\",[null,null]],\"^L\",1,\"^K\",19,\"~:ret-tag\",\"^1B\",\"^M\",19,\"^W\",2,\"^13\",\"^1B\",\"^X\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^Z\",\"^1C\"]]]]],\"^[\",\"Checks whether the reader is at the start of a number literal\"],\"~$read-past\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",26,\"^L\",7,\"^M\",26,\"^N\",16,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$pred\",\"^16\"]]]]],\"^[\",\"Read until first character that doesn't match pred, returning\\n   char.\"],\"^:\",\"~$cljs.tools.reader.impl.commons/read-past\",\"^S\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",16,\"^T\",[\"^P\",[[\"^1G\",\"^16\"]]],\"^U\",null,\"^V\",[\"^P\",[null,null]],\"^L\",1,\"^K\",26,\"^M\",26,\"^W\",2,\"^X\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1G\",\"^16\"]]]]],\"^[\",\"Read until first character that doesn't match pred, returning\\n   char.\"],\"~$float-pattern\",[\"^ \",\"^:\",\"~$cljs.tools.reader.impl.commons/float-pattern\",\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^K\",45,\"^L\",1,\"^M\",45,\"^N\",19,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",45,\"^L\",6,\"^M\",45,\"^N\",19],\"^13\",\"^14\"],\"~$matches?\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",84,\"^L\",16,\"^M\",84,\"^N\",24,\"^13\",\"^1B\",\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$pattern\",\"~$s\"]]]]]],\"^:\",\"~$cljs.tools.reader.impl.commons/matches?\",\"^S\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",24,\"^T\",[\"^P\",[[\"^1L\",\"~$s\"]]],\"^U\",null,\"^V\",[\"^P\",[null,null]],\"^L\",1,\"^K\",84,\"^1E\",\"^1B\",\"^M\",84,\"^W\",2,\"^13\",\"^1B\",\"^X\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1L\",\"~$s\"]]]]]],\"~$throwing-reader\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",127,\"^L\",7,\"^M\",127,\"^N\",22,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$msg\"]]]]]],\"^:\",\"~$cljs.tools.reader.impl.commons/throwing-reader\",\"^S\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",22,\"^T\",[\"^P\",[[\"^1O\"]]],\"^U\",null,\"^V\",[\"^P\",[null,null]],\"^L\",1,\"^K\",127,\"^M\",127,\"^W\",1,\"^X\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"^1O\"]]]]]],\"~$match-float\",[\"^ \",\"^H\",null,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",77,\"^L\",8,\"^M\",77,\"^N\",19,\"^1:\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"^1:\",true,\"^:\",\"~$cljs.tools.reader.impl.commons/match-float\",\"^S\",false,\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^N\",19,\"^T\",[\"^P\",[[\"~$s\"]]],\"^U\",null,\"^V\",[\"^P\",[null,null]],\"^L\",1,\"^K\",77,\"^M\",77,\"^W\",1,\"^X\",true,\"^O\",[\"^P\",[\"^Q\",[\"^P\",[[\"~$s\"]]]]]],\"~$ratio-pattern\",[\"^ \",\"^:\",\"~$cljs.tools.reader.impl.commons/ratio-pattern\",\"^J\",\"out/cljs/tools/reader/impl/commons.cljs\",\"^K\",44,\"^L\",1,\"^M\",44,\"^N\",19,\"^I\",[\"^ \",\"^J\",\"/private/tmp/planck-20170512-22728-1sa5ynr/planck-2.4.0/planck-cljs/out/cljs/tools/reader/impl/commons.cljs\",\"^K\",44,\"^L\",6,\"^M\",44,\"^N\",19],\"^13\",\"^14\"]],\"~:require-macros\",null,\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^8\",[\"~:else\"]],\"~:order\",[\"^1X\"]],\"^[\",null]","clojure/test/check/random.js":"// Compiled by ClojureScript 1.9.542\ngoog.provide(\"clojure.test.check.random\");\n\n/**\n * @interface\n */\nclojure.test.check.random.IRandom = function(){};\n\n/**\n * Returns a random goog.math.Long based on the given immutable RNG.\n * \n *   Note: to maintain independence you should not call more than one\n *   function in the IRandom protocol with the same argument\n */\nclojure.test.check.random.rand_long = (function clojure$test$check$random$rand_long(rng){\nif((!((rng == null))) && (!((rng.clojure$test$check$random$IRandom$rand_long$arity$1 == null)))){\nreturn rng.clojure$test$check$random$IRandom$rand_long$arity$1(rng);\n} else {\nvar x__20376__auto__ = (((rng == null))?null:rng);\nvar m__20377__auto__ = (clojure.test.check.random.rand_long[goog.typeOf(x__20376__auto__)]);\nif(!((m__20377__auto__ == null))){\nreturn m__20377__auto__.call(null,rng);\n} else {\nvar m__20377__auto____$1 = (clojure.test.check.random.rand_long[\"_\"]);\nif(!((m__20377__auto____$1 == null))){\nreturn m__20377__auto____$1.call(null,rng);\n} else {\nthrow cljs.core.missing_protocol.call(null,\"IRandom.rand-long\",rng);\n}\n}\n}\n});\n\n/**\n * Returns a random double between 0.0 (inclusive) and 1.0 (exclusive)\n *   based on the given immutable RNG.\n * \n *   Note: to maintain independence you should not call more than one\n *   function in the IRandom protocol with the same argument\n */\nclojure.test.check.random.rand_double = (function clojure$test$check$random$rand_double(rng){\nif((!((rng == null))) && (!((rng.clojure$test$check$random$IRandom$rand_double$arity$1 == null)))){\nreturn rng.clojure$test$check$random$IRandom$rand_double$arity$1(rng);\n} else {\nvar x__20376__auto__ = (((rng == null))?null:rng);\nvar m__20377__auto__ = (clojure.test.check.random.rand_double[goog.typeOf(x__20376__auto__)]);\nif(!((m__20377__auto__ == null))){\nreturn m__20377__auto__.call(null,rng);\n} else {\nvar m__20377__auto____$1 = (clojure.test.check.random.rand_double[\"_\"]);\nif(!((m__20377__auto____$1 == null))){\nreturn m__20377__auto____$1.call(null,rng);\n} else {\nthrow cljs.core.missing_protocol.call(null,\"IRandom.rand-double\",rng);\n}\n}\n}\n});\n\n/**\n * Returns two new RNGs [rng1 rng2], which should generate\n *   sufficiently independent random data.\n * \n *   Note: to maintain independence you should not call more than one\n *   function in the IRandom protocol with the same argument\n */\nclojure.test.check.random.split = (function clojure$test$check$random$split(rng){\nif((!((rng == null))) && (!((rng.clojure$test$check$random$IRandom$split$arity$1 == null)))){\nreturn rng.clojure$test$check$random$IRandom$split$arity$1(rng);\n} else {\nvar x__20376__auto__ = (((rng == null))?null:rng);\nvar m__20377__auto__ = (clojure.test.check.random.split[goog.typeOf(x__20376__auto__)]);\nif(!((m__20377__auto__ == null))){\nreturn m__20377__auto__.call(null,rng);\n} else {\nvar m__20377__auto____$1 = (clojure.test.check.random.split[\"_\"]);\nif(!((m__20377__auto____$1 == null))){\nreturn m__20377__auto____$1.call(null,rng);\n} else {\nthrow cljs.core.missing_protocol.call(null,\"IRandom.split\",rng);\n}\n}\n}\n});\n\n/**\n * Returns a collection of `n` RNGs, which should generate\n *   sufficiently independent random data.\n * \n *   Note: to maintain independence you should not call more than one\n *   function in the IRandom protocol with the same argument\n */\nclojure.test.check.random.split_n = (function clojure$test$check$random$split_n(rng,n){\nif((!((rng == null))) && (!((rng.clojure$test$check$random$IRandom$split_n$arity$2 == null)))){\nreturn rng.clojure$test$check$random$IRandom$split_n$arity$2(rng,n);\n} else {\nvar x__20376__auto__ = (((rng == null))?null:rng);\nvar m__20377__auto__ = (clojure.test.check.random.split_n[goog.typeOf(x__20376__auto__)]);\nif(!((m__20377__auto__ == null))){\nreturn m__20377__auto__.call(null,rng,n);\n} else {\nvar m__20377__auto____$1 = (clojure.test.check.random.split_n[\"_\"]);\nif(!((m__20377__auto____$1 == null))){\nreturn m__20377__auto____$1.call(null,rng,n);\n} else {\nthrow cljs.core.missing_protocol.call(null,\"IRandom.split-n\",rng);\n}\n}\n}\n});\n\n/**\n * Helper for defining constants.\n */\nclojure.test.check.random.hex_long = (function clojure$test$check$random$hex_long(s){\nreturn clojure.test.check.random.longs.from_string.call(null,s,(16));\n});\n/**\n * Performs (-> x (unsigned-bit-shift-right n) (bit-xor x)).\n */\nclojure.test.check.random.bxoubsr = (function clojure$test$check$random$bxoubsr(x,n){\nreturn clojure.test.check.random.longs.bit_xor.call(null,clojure.test.check.random.longs.unsigned_bit_shift_right.call(null,x,n),x);\n});\nclojure.test.check.random.mix_64_const_1 = clojure.test.check.random.hex_long.call(null,\"bf58476d1ce4e5b9\");\nclojure.test.check.random.mix_64_const_2 = clojure.test.check.random.hex_long.call(null,\"94d049bb133111eb\");\nclojure.test.check.random.mix_64 = (function clojure$test$check$random$mix_64(n){\nreturn clojure.test.check.random.bxoubsr.call(null,clojure.test.check.random.longs._STAR_.call(null,clojure.test.check.random.bxoubsr.call(null,clojure.test.check.random.longs._STAR_.call(null,clojure.test.check.random.bxoubsr.call(null,n,(30)),clojure.test.check.random.mix_64_const_1),(27)),clojure.test.check.random.mix_64_const_2),(31));\n});\nclojure.test.check.random.mix_gamma_const_1 = clojure.test.check.random.hex_long.call(null,\"ff51afd7ed558ccd\");\nclojure.test.check.random.mix_gamma_const_2 = clojure.test.check.random.hex_long.call(null,\"c4ceb9fe1a85ec53\");\nclojure.test.check.random.mix_gamma_const_3 = clojure.test.check.random.hex_long.call(null,\"aaaaaaaaaaaaaaaa\");\nclojure.test.check.random.mix_gamma = (function clojure$test$check$random$mix_gamma(n){\nvar z = clojure.test.check.random.longs.bit_or.call(null,clojure.test.check.random.bxoubsr.call(null,clojure.test.check.random.longs._STAR_.call(null,clojure.test.check.random.bxoubsr.call(null,clojure.test.check.random.longs._STAR_.call(null,clojure.test.check.random.bxoubsr.call(null,n,(33)),clojure.test.check.random.mix_gamma_const_1),(33)),clojure.test.check.random.mix_gamma_const_2),(33)),clojure.test.check.random.longs.ONE);\nvar z__$1 = (function (){var G__31 = z;\nvar G__31__$1 = ((((24) > clojure.test.check.random.longs.bit_count.call(null,clojure.test.check.random.bxoubsr.call(null,z,(1)))))?clojure.test.check.random.longs.bit_xor.call(null,G__31,clojure.test.check.random.mix_gamma_const_3):G__31);\nreturn G__31__$1;\n})();\nreturn z__$1;\n});\n\n/**\n* @constructor\n * @implements {clojure.test.check.random.IRandom}\n*/\nclojure.test.check.random.JavaUtilSplittableRandom = (function (gamma,state){\nthis.gamma = gamma;\nthis.state = state;\n})\nclojure.test.check.random.JavaUtilSplittableRandom.prototype.clojure$test$check$random$IRandom$ = cljs.core.PROTOCOL_SENTINEL;\n\nclojure.test.check.random.JavaUtilSplittableRandom.prototype.clojure$test$check$random$IRandom$rand_long$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn clojure.test.check.random.mix_64.call(null,clojure.test.check.random.longs._PLUS_.call(null,self__.state,self__.gamma));\n});\n\nclojure.test.check.random.JavaUtilSplittableRandom.prototype.clojure$test$check$random$IRandom$rand_double$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn clojure.test.check.random.doubles.rand_long__GT_rand_double.call(null,clojure.test.check.random.rand_long.call(null,this$__$1));\n});\n\nclojure.test.check.random.JavaUtilSplittableRandom.prototype.clojure$test$check$random$IRandom$split$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar state_SINGLEQUOTE_ = clojure.test.check.random.longs._PLUS_.call(null,self__.gamma,self__.state);\nvar state_SINGLEQUOTE__SINGLEQUOTE_ = clojure.test.check.random.longs._PLUS_.call(null,self__.gamma,state_SINGLEQUOTE_);\nvar gamma_SINGLEQUOTE_ = clojure.test.check.random.mix_gamma.call(null,state_SINGLEQUOTE__SINGLEQUOTE_);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new clojure.test.check.random.JavaUtilSplittableRandom(self__.gamma,state_SINGLEQUOTE__SINGLEQUOTE_)),(new clojure.test.check.random.JavaUtilSplittableRandom(gamma_SINGLEQUOTE_,clojure.test.check.random.mix_64.call(null,state_SINGLEQUOTE_)))], null);\n});\n\nclojure.test.check.random.JavaUtilSplittableRandom.prototype.clojure$test$check$random$IRandom$split_n$arity$2 = (function (this$,n){\nvar self__ = this;\nvar this$__$1 = this;\nvar G__32 = n;\nswitch (G__32) {\ncase (0):\nreturn cljs.core.PersistentVector.EMPTY;\n\nbreak;\ncase (1):\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$__$1], null);\n\nbreak;\ndefault:\nvar n_dec = (n - (1));\nvar state__$1 = self__.state;\nvar ret = cljs.core.transient$.call(null,cljs.core.PersistentVector.EMPTY);\nwhile(true){\nif(cljs.core._EQ_.call(null,n_dec,cljs.core.count.call(null,ret))){\nreturn cljs.core.persistent_BANG_.call(null,cljs.core.conj_BANG_.call(null,ret,(new clojure.test.check.random.JavaUtilSplittableRandom(self__.gamma,state__$1))));\n} else {\nvar state_SINGLEQUOTE_ = clojure.test.check.random.longs._PLUS_.call(null,self__.gamma,state__$1);\nvar state_SINGLEQUOTE__SINGLEQUOTE_ = clojure.test.check.random.longs._PLUS_.call(null,self__.gamma,state_SINGLEQUOTE_);\nvar gamma_SINGLEQUOTE_ = clojure.test.check.random.mix_gamma.call(null,state_SINGLEQUOTE__SINGLEQUOTE_);\nvar new_rng = (new clojure.test.check.random.JavaUtilSplittableRandom(gamma_SINGLEQUOTE_,clojure.test.check.random.mix_64.call(null,state_SINGLEQUOTE_)));\nvar G__34 = state_SINGLEQUOTE__SINGLEQUOTE_;\nvar G__35 = cljs.core.conj_BANG_.call(null,ret,new_rng);\nstate__$1 = G__34;\nret = G__35;\ncontinue;\n}\nbreak;\n}\n\n}\n});\n\nclojure.test.check.random.JavaUtilSplittableRandom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"gamma\",\"gamma\",(-770466082),null),new cljs.core.Symbol(null,\"state\",\"state\",(-348086572),null)], null);\n});\n\nclojure.test.check.random.JavaUtilSplittableRandom.cljs$lang$type = true;\n\nclojure.test.check.random.JavaUtilSplittableRandom.cljs$lang$ctorStr = \"clojure.test.check.random/JavaUtilSplittableRandom\";\n\nclojure.test.check.random.JavaUtilSplittableRandom.cljs$lang$ctorPrWriter = (function (this__20318__auto__,writer__20319__auto__,opt__20320__auto__){\nreturn cljs.core._write.call(null,writer__20319__auto__,\"clojure.test.check.random/JavaUtilSplittableRandom\");\n});\n\nclojure.test.check.random.__GT_JavaUtilSplittableRandom = (function clojure$test$check$random$__GT_JavaUtilSplittableRandom(gamma,state){\nreturn (new clojure.test.check.random.JavaUtilSplittableRandom(gamma,state));\n});\n\nclojure.test.check.random.golden_gamma = clojure.test.check.random.hex_long.call(null,\"9e3779b97f4a7c15\");\nclojure.test.check.random.make_java_util_splittable_random = (function clojure$test$check$random$make_java_util_splittable_random(seed){\nreturn (new clojure.test.check.random.JavaUtilSplittableRandom(clojure.test.check.random.golden_gamma,(function (){var or__19662__auto__ = clojure.test.check.random.longs.__GT_long.call(null,seed);\nif(cljs.core.truth_(or__19662__auto__)){\nreturn or__19662__auto__;\n} else {\nthrow cljs.core.ex_info.call(null,\"Bad random seed!\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"seed\",\"seed\",(68613327)),seed], null));\n}\n})()));\n});\nclojure.test.check.random.next_rng = (function (){var a = cljs.core.atom.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"state\",\"state\",(-1988618099)),clojure.test.check.random.make_java_util_splittable_random.call(null,(new Date()).valueOf())], null));\nreturn ((function (a){\nreturn (function (){\nreturn new cljs.core.Keyword(null,\"returned\",\"returned\",(-2020439163)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null,a,((function (a){\nreturn (function (p__36){\nvar map__37 = p__36;\nvar map__37__$1 = ((((!((map__37 == null)))?((((map__37.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__37.cljs$core$ISeq$)))?true:false):false))?cljs.core.apply.call(null,cljs.core.hash_map,map__37):map__37);\nvar state = cljs.core.get.call(null,map__37__$1,new cljs.core.Keyword(null,\"state\",\"state\",(-1988618099)));\nvar vec__39 = clojure.test.check.random.split.call(null,state);\nvar r1 = cljs.core.nth.call(null,vec__39,(0),null);\nvar r2 = cljs.core.nth.call(null,vec__39,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"state\",\"state\",(-1988618099)),r1,new cljs.core.Keyword(null,\"returned\",\"returned\",(-2020439163)),r2], null);\n});})(a))\n));\n});\n;})(a))\n})();\n/**\n * Given an optional integer (or goog.math.Long) seed, returns an\n *   implementation of the IRandom protocol.\n */\nclojure.test.check.random.make_random = (function clojure$test$check$random$make_random(var_args){\nvar args42 = [];\nvar len__21020__auto___45 = arguments.length;\nvar i__21021__auto___46 = (0);\nwhile(true){\nif((i__21021__auto___46 < len__21020__auto___45)){\nargs42.push((arguments[i__21021__auto___46]));\n\nvar G__47 = (i__21021__auto___46 + (1));\ni__21021__auto___46 = G__47;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar G__44 = args42.length;\nswitch (G__44) {\ncase (0):\nreturn clojure.test.check.random.make_random.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase (1):\nreturn clojure.test.check.random.make_random.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(\"Invalid arity: \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args42.length)].join('')));\n\n}\n});\n\nclojure.test.check.random.make_random.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn clojure.test.check.random.next_rng.call(null);\n});\n\nclojure.test.check.random.make_random.cljs$core$IFn$_invoke$arity$1 = (function (seed){\nreturn clojure.test.check.random.make_java_util_splittable_random.call(null,seed);\n});\n\nclojure.test.check.random.make_random.cljs$lang$maxFixedArity = (1);\n\n","clojure/test/check/generators.cache.json":"[\"^ \",\"~:rename-macros\",[\"^ \"],\"~:renames\",[\"^ \"],\"~:externs\",[\"^ \",\"~$Error\",[\"^ \"],\"~$Number\",[\"^ \",\"~$POSITIVE_INFINITY\",[\"^ \"],\"~$NEGATIVE_INFINITY\",[\"^ \"],\"~$MAX_VALUE\",[\"^ \"],\"~$NaN\",[\"^ \"]],\"~$Math\",[\"^ \",\"~$pow\",[\"^ \"],\"~$LOG2E\",[\"^ \"]],\"~$isNaN\",[\"^ \"]],\"~:use-macros\",[\"^ \"],\"~:excludes\",[\"~#set\",[\"~$uuid\",\"~$set\",\"~$namespace\",\"~$boolean\",\"~$map\",\"~$char\",\"~$shuffle\",\"~$let\",\"~$double\",\"~$int\",\"~$symbol\",\"~$sorted-set\",\"~$vector\",\"~$not-empty\",\"~$list\",\"~$keyword\",\"~$hash-map\",\"~$byte\",\"~$sequence\",\"~$bytes\"]],\"~:name\",\"~$clojure.test.check.generators\",\"~:imports\",null,\"~:requires\",[\"^ \",\"~$gstring\",\"~$goog.string\",\"~$rose\",\"~$clojure.test.check.rose-tree\",\"^[\",\"^[\",\"^Y\",\"^Y\",\"~$cljs.core\",\"^10\",\"~$clojure.test.check.random\",\"^11\",\"~$clojure.string\",\"^12\",\"~$random\",\"^11\",\"~$core\",\"^10\"],\"~:uses\",null,\"~:defs\",[\"^ \",\"~$coll-distinct-by*\",[\"^ \",\"~:protocol-inline\",null,\"~:meta\",[\"^ \",\"~:file\",\"^U\",\"~:line\",660,\"~:column\",17,\"~:end-line\",660,\"~:end-column\",34,\"~:private\",true,\"~:arglists\",[\"~#list\",[\"~$quote\",[\"^1A\",[[\"~$empty-coll\",\"~$key-fn\",\"~$shuffle-fn\",\"~$gen\",\"~$rng\",\"~$size\",\"~$num-elements\",\"~$min-elements\",\"~$max-tries\",\"~$ex-fn\"]]]]],\"~:doc\",\"Returns a rose tree.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/coll-distinct-by*\",\"~:variadic\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",34,\"~:method-params\",[\"^1A\",[[\"^1C\",\"^1D\",\"^1E\",\"^1F\",\"^1G\",\"^1H\",\"^1I\",\"^1J\",\"^1K\",\"^1L\"]]],\"~:protocol-impl\",null,\"~:arglists-meta\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",660,\"^1=\",660,\"~:max-fixed-arity\",10,\"~:fn-var\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1C\",\"^1D\",\"^1E\",\"^1F\",\"^1G\",\"^1H\",\"^1I\",\"^1J\",\"^1K\",\"^1L\"]]]]],\"^1M\",\"Returns a rose tree.\"],\"~$gen-fmap\",[\"^ \",\"~:no-doc\",true,\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",51,\"^1<\",7,\"^1=\",51,\"^1>\",15,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$k\",[\"^ \",\"~$h\",\"~:gen\"]]]]]],\"^1M\",\"Internal function.\",\"^1V\",true],\"^T\",\"~$clojure.test.check.generators/gen-fmap\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^1P\",[\"^1A\",[[\"~$k\",\"~$p__88\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",51,\"^1=\",51,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$k\",[\"^ \",\"~$h\",\"^1W\"]]]]]],\"^1M\",\"Internal function.\"],\"^@\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1419,\"^1<\",24,\"^1=\",1419,\"^1>\",28,\"~:added\",\"0.9.0\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/uuid\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",28,\"^1<\",1,\"^1;\",1419,\"^1=\",1419,\"~:tag\",\"~$any\",\"^1M\",\"Generates a random type-4 UUID. Does not shrink.\"],\"^A\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1Z\",\"0.9.0\",\"^1:\",\"^U\",\"^1>\",10,\"~:top-fn\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"~$opts\"]]],\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1<\",7,\"^1;\",873,\"^1=\",873,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]]]],\"^1M\",\"Generates a set of elements from the given generator.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated set\\n    :min-elements  the min size of generated set\\n    :max-elements  the max size of generated set\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/set\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",10,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",873,\"^1=\",873,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1M\",\"Generates a set of elements from the given generator.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated set\\n    :min-elements  the min size of generated set\\n    :max-elements  the max size of generated set\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"~$one-of\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",325,\"^1<\",7,\"^1=\",325,\"^1>\",13,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$generators\"]]]]],\"^1M\",\"Create a generator that randomly chooses a value from the list of\\n  provided generators. Shrinks toward choosing an earlier generator,\\n  as well as shrinking the value generated by the chosen generator.\\n\\n      (gen/sample (gen/one-of [gen/int gen/boolean (gen/vector gen/int)]))\\n      => (true [] -1 [0] [1 -4 -4 1] true 4 [] 6 true)\"],\"^T\",\"~$clojure.test.check.generators/one-of\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1P\",[\"^1A\",[[\"^26\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",325,\"^1=\",325,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^26\"]]]]],\"^1M\",\"Create a generator that randomly chooses a value from the list of\\n  provided generators. Shrinks toward choosing an earlier generator,\\n  as well as shrinking the value generated by the chosen generator.\\n\\n      (gen/sample (gen/one-of [gen/int gen/boolean (gen/vector gen/int)]))\\n      => (true [] -1 [0] [1 -4 -4 1] true 4 [] 6 true)\"],\"~$uniform-integer\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1056,\"^1<\",17,\"^1=\",1056,\"^1>\",32,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$bit-count\"]]]]],\"^1M\",\"Generates an integer uniformly in the range 0..(2^bit-count-1).\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/uniform-integer\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",32,\"^1P\",[\"^1A\",[[\"^29\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1056,\"^1=\",1056,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^29\"]]]]],\"^1M\",\"Generates an integer uniformly in the range 0..(2^bit-count-1).\"],\"~$char-keyword-first\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1298,\"^1<\",16,\"^1=\",1298,\"^1>\",34,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/char-keyword-first\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",34,\"^1<\",1,\"^1;\",1298,\"^1=\",1298,\"^20\",\"^21\",\"^1M\",\"Generate characters that can be the first char of a keyword.\"],\"~$any-printable\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1584,\"^1<\",6,\"^1=\",1584,\"^1>\",19],\"^T\",\"~$clojure.test.check.generators/any-printable\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",19,\"^1<\",1,\"^1;\",1584,\"^1=\",1584,\"^20\",\"^21\",\"^1M\",\"Like any, but avoids characters that the shell will interpret as actions,\\n  like 7 and 14 (bell and alternate character set command)\"],\"~$char-keyword-rest\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1293,\"^1<\",16,\"^1=\",1293,\"^1>\",33,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/char-keyword-rest\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",33,\"^1<\",1,\"^1;\",1293,\"^1=\",1293,\"^20\",\"^21\",\"^1M\",\"Generate characters that can be the char following first of a keyword.\"],\"~$large-integer**\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",985,\"^1<\",17,\"^1=\",985,\"^1>\",32,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$min\",\"~$max\"]]]]],\"^1M\",\"Like large-integer*, but assumes range includes zero.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/large-integer**\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",32,\"^1P\",[\"^1A\",[[\"^2B\",\"^2C\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",985,\"^1=\",985,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^2B\",\"^2C\"]]]]],\"^1M\",\"Like large-integer*, but assumes range includes zero.\"],\"~$MIN_NEG_VALUE\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1053,\"^1<\",16,\"^1=\",1053,\"^1>\",29,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/MIN_NEG_VALUE\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",29,\"^1<\",1,\"^1;\",1053,\"^1=\",1053,\"^20\",\"~$number\"],\"~$calc-long\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",219,\"^1<\",8,\"^1=\",219,\"^1>\",17,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$factor\",\"~$lower\",\"~$upper\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/calc-long\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",17,\"^1P\",[\"^1A\",[[\"^2I\",\"^2J\",\"^2K\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",219,\"^1=\",219,\"^1S\",3,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^2I\",\"^2J\",\"^2K\"]]]]]],\"~$vector-distinct\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1Z\",\"0.9.0\",\"^1:\",\"^U\",\"^1>\",22,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1<\",7,\"^1;\",773,\"^1=\",773,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]]]],\"^1M\",\"Generates a vector of elements from the given generator, with the\\n  guarantee that the elements will be distinct.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated vectors\\n    :min-elements  the min size of generated vectors\\n    :max-elements  the max size of generated vectors\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/vector-distinct\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",22,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",773,\"^1=\",773,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1M\",\"Generates a vector of elements from the given generator, with the\\n  guarantee that the elements will be distinct.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated vectors\\n    :min-elements  the min size of generated vectors\\n    :max-elements  the max size of generated vectors\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"~$double-exp-and-sign\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1123,\"^1<\",17,\"^1=\",1123,\"^1>\",36,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$lower-bound\",\"~$upper-bound\"]]]]],\"^1M\",\"Generates [exp sign], where exp is in [-1023, 1023] and sign is 1\\n  or -1. Only generates values for exp and sign for which there are\\n  doubles within the given bounds.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/double-exp-and-sign\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",36,\"^1P\",[\"^1A\",[[\"^2P\",\"^2Q\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1123,\"^1=\",1123,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^2P\",\"^2Q\"]]]]],\"^1M\",\"Generates [exp sign], where exp is in [-1023, 1023] and sign is 1\\n  or -1. Only generates values for exp and sign for which there are\\n  doubles within the given bounds.\"],\"~$MIN_INTEGER\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",957,\"^1<\",16,\"^1=\",957,\"^1>\",27,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/MIN_INTEGER\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",27,\"^1<\",1,\"^1;\",957,\"^1=\",957,\"^20\",\"^2G\"],\"^B\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1344,\"^1<\",16,\"^1=\",1344,\"^1>\",25,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/namespace\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",25,\"^1<\",1,\"^1;\",1344,\"^1=\",1344,\"^20\",\"^21\",\"^1M\",\"Generate a namespace (or nil for no namespace).\"],\"^C\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",497,\"^1<\",6,\"^1=\",497,\"^1>\",13],\"^T\",\"~$clojure.test.check.generators/boolean\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1<\",1,\"^1;\",497,\"^1=\",497,\"^20\",\"^21\",\"^1M\",\"Generates one of `true` or `false`. Shrinks to `false`.\"],\"~$list-distinct\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1Z\",\"0.9.0\",\"^1:\",\"^U\",\"^1>\",20,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1<\",7,\"^1;\",798,\"^1=\",798,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]]]],\"^1M\",\"Generates a list of elements from the given generator, with the\\n  guarantee that the elements will be distinct.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated list\\n    :min-elements  the min size of generated list\\n    :max-elements  the max size of generated list\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/list-distinct\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",20,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",798,\"^1=\",798,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1M\",\"Generates a list of elements from the given generator, with the\\n  guarantee that the elements will be distinct.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated list\\n    :min-elements  the min size of generated list\\n    :max-elements  the max size of generated list\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"~$string-alphanumeric\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1311,\"^1<\",6,\"^1=\",1311,\"^1>\",25],\"^T\",\"~$clojure.test.check.generators/string-alphanumeric\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",25,\"^1<\",1,\"^1;\",1311,\"^1=\",1311,\"^20\",\"^21\",\"^1M\",\"Generate alphanumeric strings.\"],\"^D\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",921,\"^1<\",7,\"^1=\",921,\"^1>\",10,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$key-gen\",\"~$val-gen\"],[\"^2[\",\"^30\",\"^23\"]]]]],\"^1M\",\"Create a generator that generates maps, with keys chosen from\\n  `key-gen` and values chosen from `val-gen`.\\n\\n  If the key generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated maps\\n    :min-elements  the min size of generated maps\\n    :max-elements  the max size of generated maps\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct keys; it will be passed a map with\\n                   `:gen` (the key-gen), `:num-elements`, and `:max-tries` and\\n                   should return an exception\",\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^2[\",\"^30\"],[\"^2[\",\"^30\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^2[\",\"^30\"],[\"^2[\",\"^30\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]]],\"^T\",\"~$clojure.test.check.generators/map\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",10,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^2[\",\"^30\"],[\"^2[\",\"^30\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^2[\",\"^30\"],[\"^2[\",\"^30\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^2[\",\"^30\"],[\"^2[\",\"^30\",\"^23\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",921,\"^1=\",921,\"^1S\",3,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^2[\",\"^30\"],[\"^2[\",\"^30\",\"^23\"]]],\"^1M\",\"Create a generator that generates maps, with keys chosen from\\n  `key-gen` and values chosen from `val-gen`.\\n\\n  If the key generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated maps\\n    :min-elements  the min size of generated maps\\n    :max-elements  the max size of generated maps\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct keys; it will be passed a map with\\n                   `:gen` (the key-gen), `:num-elements`, and `:max-tries` and\\n                   should return an exception\"],\"~$keyword-segment-rest\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1350,\"^1<\",16,\"^1=\",1350,\"^1>\",36,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/keyword-segment-rest\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",36,\"^1<\",1,\"^1;\",1350,\"^1=\",1350,\"^20\",\"^21\",\"^1M\",\"Generate segments of a keyword (between \\\\:)\"],\"~$simple-type\",[\"^ \",\"^T\",\"~$clojure.test.check.generators/simple-type\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1;\",1454,\"^1<\",1,\"^1=\",1454,\"^1>\",17,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1454,\"^1<\",6,\"^1=\",1454,\"^1>\",17],\"^20\",\"^21\"],\"^E\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1261,\"^1<\",6,\"^1=\",1261,\"^1>\",10],\"^T\",\"~$clojure.test.check.generators/char\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",10,\"^1<\",1,\"^1;\",1261,\"^1=\",1261,\"^20\",\"^21\",\"^1M\",\"Generates character from 0-255.\"],\"~$pos-int\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",529,\"^1<\",6,\"^1=\",529,\"^1>\",13],\"^T\",\"~$clojure.test.check.generators/pos-int\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1<\",1,\"^1;\",529,\"^1=\",529,\"^20\",\"^21\",\"^1M\",\"Generate positive integers bounded by the generator's `size` parameter.\"],\"~$bind\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",122,\"^1<\",7,\"^1=\",122,\"^1>\",11,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$generator\",\"~$f\"]]]]],\"^1M\",\"Create a new generator that passes the result of `gen` into function\\n  `f`. `f` should return a new generator. This allows you to create new\\n  generators that depend on the value of other generators. For example,\\n  to create a generator of permutations which first generates a\\n  `num-elements` and then generates a shuffling of `(range num-elements)`:\\n\\n      (gen/bind gen/nat\\n                ;; this function takes a value generated by\\n                ;; the generator above and returns a new generator\\n                ;; which shuffles the collection returned by `range`\\n                (fn [num-elements]\\n                  (gen/shuffle (range num-elements))))\\n\\n  Also see gen/let for a macro with similar functionality.\"],\"^T\",\"~$clojure.test.check.generators/bind\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",11,\"^1P\",[\"^1A\",[[\"^3:\",\"~$f\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",122,\"^1=\",122,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3:\",\"~$f\"]]]]],\"^1M\",\"Create a new generator that passes the result of `gen` into function\\n  `f`. `f` should return a new generator. This allows you to create new\\n  generators that depend on the value of other generators. For example,\\n  to create a generator of permutations which first generates a\\n  `num-elements` and then generates a shuffling of `(range num-elements)`:\\n\\n      (gen/bind gen/nat\\n                ;; this function takes a value generated by\\n                ;; the generator above and returns a new generator\\n                ;; which shuffles the collection returned by `range`\\n                (fn [num-elements]\\n                  (gen/shuffle (range num-elements))))\\n\\n  Also see gen/let for a macro with similar functionality.\"],\"~$symbol-ns\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1403,\"^1<\",3,\"^1=\",1403,\"^1>\",12,\"^1Z\",\"0.5.9\"],\"^1Z\",\"0.5.9\",\"^T\",\"~$clojure.test.check.generators/symbol-ns\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",12,\"^1<\",1,\"^1;\",1401,\"^1=\",1403,\"^20\",\"^21\",\"^1M\",\"Generate symbols with optional namespaces.\"],\"^21\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1580,\"^1<\",6,\"^1=\",1580,\"^1>\",9],\"^T\",\"~$clojure.test.check.generators/any\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",9,\"^1<\",1,\"^1;\",1580,\"^1=\",1580,\"^20\",\"^21\",\"^1M\",\"A recursive generator that will generate many different, often nested, values\"],\"~$hashable?\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1464,\"^1<\",20,\"^1=\",1464,\"^1>\",29,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/hashable?\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",29,\"^1P\",[\"^1A\",[[\"~$x\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",4,\"^1;\",1464,\"^1=\",1464,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\"]]]]]],\"^F\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",596,\"^1<\",3,\"^1=\",596,\"^1>\",10,\"^1Z\",\"0.6.0\",\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$coll\"]]]]],\"^1M\",\"Create a generator that generates random permutations of\\n  `coll`. Shrinks toward the original collection: `coll`. `coll` will\\n  be coerced to a vector.\"],\"^1Z\",\"0.6.0\",\"^T\",\"~$clojure.test.check.generators/shuffle\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",10,\"^1P\",[\"^1A\",[[\"^3A\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",594,\"^1=\",596,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3A\"]]]]],\"^1M\",\"Create a generator that generates random permutations of\\n  `coll`. Shrinks toward the original collection: `coll`. `coll` will\\n  be coerced to a vector.\"],\"~$container-type\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1472,\"^1<\",7,\"^1=\",1472,\"^1>\",21,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$inner-type\"]]]]]],\"^T\",\"~$clojure.test.check.generators/container-type\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",21,\"^1P\",[\"^1A\",[[\"^3D\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1472,\"^1=\",1472,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3D\"]]]]]],\"~$char-symbol-rest\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1388,\"^1<\",16,\"^1=\",1388,\"^1>\",32,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/char-symbol-rest\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",32,\"^1<\",1,\"^1;\",1388,\"^1=\",1388,\"^20\",\"^21\"],\"~$long->large-integer\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",964,\"^1<\",17,\"^1=\",964,\"^1>\",36,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^29\",\"~$x\",\"^2B\",\"^2C\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/long->large-integer\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",36,\"^1P\",[\"^1A\",[[\"^29\",\"~$x\",\"^2B\",\"^2C\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",964,\"^1=\",964,\"^1S\",4,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^29\",\"~$x\",\"^2B\",\"^2C\"]]]]]],\"~$s-pos-int\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",537,\"^1<\",6,\"^1=\",537,\"^1>\",15],\"^T\",\"~$clojure.test.check.generators/s-pos-int\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^1<\",1,\"^1;\",537,\"^1=\",537,\"^20\",\"^21\",\"^1M\",\"Generate strictly positive integers bounded by the generator's `size` + 1\"],\"~$get-exponent\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1105,\"^1<\",17,\"^1=\",1105,\"^1>\",29,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/get-exponent\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",29,\"^1P\",[\"^1A\",[[\"~$x\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1105,\"^1=\",1105,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\"]]]]]],\"^G\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1Z\",\"0.9.0\",\"^1:\",\"^U\",\"^1>\",14,\"^22\",[\"^ \",\"^1O\",true,\"^1S\",3,\"^1P\",[[\"^1A\",[\"~$&form\",\"~$&env\",\"~$bindings\",\"~$body\"]]],\"^1@\",[\"^1A\",[[\"^3N\",\"^3O\",\"^3P\",\"~$&\",\"^3Q\"]]],\"^1R\",[\"^1A\",[null]]],\"^1<\",11,\"^1;\",1592,\"~:macro\",true,\"^1=\",1592,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3P\",\"~$&\",\"^3Q\"]]]]],\"^1M\",\"Macro for building generators using values from other generators.\\n  Uses a binding vector with the same syntax as clojure.core/let,\\n  where the right-hand side of the binding pairs are generators, and\\n  the left-hand side are names (or destructuring forms) for generated\\n  values.\\n\\n  Subsequent generator expressions can refer to the previously bound\\n  values, in the same way as clojure.core/let.\\n\\n  Alternately, when the clauses are all independent, you can use a\\n  map instead of a vector for the bindings. This will expand to\\n  `tuple` instead of `bind`, which allows more effective shrinking.\\n\\n  The body of the let can be either a value or a generator, and does\\n  the expected thing in either case. In this way let provides the\\n  functionality of both `bind` and `fmap`.\\n\\n  Examples:\\n\\n    (gen/let [strs (gen/not-empty (gen/list gen/string))\\n              s (gen/elements strs)]\\n      {:some-strings strs\\n       :one-of-those-strings s})\\n\\n    ;; map bindings for independent generators:\\n    (gen/let {a gen/large-integer\\n              b gen/large-integer}\\n      (+' a b))\\n\\n    ;; generates collections of \\\"users\\\" that have integer IDs\\n    ;; from 0...N-1, but are in a random order\\n    (gen/let [users (gen/list (gen/hash-map :name gen/string-ascii\\n                                            :age gen/nat))]\\n      (->> users\\n           (map #(assoc %2 :id %1) (range))\\n           (gen/shuffle)))\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/let\",\"^1O\",true,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",14,\"^22\",[\"^ \",\"^1O\",true,\"^1S\",3,\"^1P\",[[\"^1A\",[\"^3N\",\"^3O\",\"^3P\",\"^3Q\"]]],\"^1@\",[\"^1A\",[[\"^3N\",\"^3O\",\"^3P\",\"~$&\",\"^3Q\"]]],\"^1R\",[\"^1A\",[null]]],\"^1P\",[[\"^1A\",[\"^3N\",\"^3O\",\"^3P\",\"^3Q\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null]],\"^1<\",1,\"^1;\",1592,\"^3R\",true,\"^1=\",1592,\"^1S\",3,\"^1T\",false,\"^1@\",[\"^1A\",[[\"^3N\",\"^3O\",\"^3P\",\"~$&\",\"^3Q\"]]],\"^1M\",\"Macro for building generators using values from other generators.\\n  Uses a binding vector with the same syntax as clojure.core/let,\\n  where the right-hand side of the binding pairs are generators, and\\n  the left-hand side are names (or destructuring forms) for generated\\n  values.\\n\\n  Subsequent generator expressions can refer to the previously bound\\n  values, in the same way as clojure.core/let.\\n\\n  Alternately, when the clauses are all independent, you can use a\\n  map instead of a vector for the bindings. This will expand to\\n  `tuple` instead of `bind`, which allows more effective shrinking.\\n\\n  The body of the let can be either a value or a generator, and does\\n  the expected thing in either case. In this way let provides the\\n  functionality of both `bind` and `fmap`.\\n\\n  Examples:\\n\\n    (gen/let [strs (gen/not-empty (gen/list gen/string))\\n              s (gen/elements strs)]\\n      {:some-strings strs\\n       :one-of-those-strings s})\\n\\n    ;; map bindings for independent generators:\\n    (gen/let {a gen/large-integer\\n              b gen/large-integer}\\n      (+' a b))\\n\\n    ;; generates collections of \\\"users\\\" that have integer IDs\\n    ;; from 0...N-1, but are in a random order\\n    (gen/let [users (gen/list (gen/hash-map :name gen/string-ascii\\n                                            :age gen/nat))]\\n      (->> users\\n           (map #(assoc %2 :id %1) (range))\\n           (gen/shuffle)))\"],\"^H\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1253,\"^1<\",24,\"^1=\",1253,\"^1>\",30,\"^1Z\",\"0.9.0\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/double\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",30,\"^1<\",1,\"^1;\",1253,\"^1=\",1253,\"^20\",\"^21\",\"^1M\",\"Generates 64-bit floating point numbers from the entire range,\\n  including +/- infinity and NaN. Use double* for more control.\"],\"~$MAX_POS_VALUE\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1052,\"^1<\",16,\"^1=\",1052,\"^1>\",29,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/MAX_POS_VALUE\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",29,\"^1<\",1,\"^1;\",1052,\"^1=\",1052,\"^20\",\"~$js\"],\"~$list-distinct-by\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1Z\",\"0.9.0\",\"^1:\",\"^U\",\"^1>\",23,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1<\",7,\"^1;\",848,\"^1=\",848,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]]]],\"^1M\",\"Generates a list of elements from the given generator, with the\\n  guarantee that (map key-fn the-list) will be distinct.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated list\\n    :min-elements  the min size of generated list\\n    :max-elements  the max size of generated list\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/list-distinct-by\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",23,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",848,\"^1=\",848,\"^1S\",3,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1M\",\"Generates a list of elements from the given generator, with the\\n  guarantee that (map key-fn the-list) will be distinct.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated list\\n    :min-elements  the min size of generated list\\n    :max-elements  the max size of generated list\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"~$block-bounds\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1165,\"^1<\",17,\"^1=\",1165,\"^1>\",29,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$exp\",\"~$sign\"]]]]],\"^1M\",\"Returns [low high], the smallest and largest numbers in the given\\n  range.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/block-bounds\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",29,\"^1P\",[\"^1A\",[[\"^3[\",\"^40\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1165,\"^1=\",1165,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3[\",\"^40\"]]]]],\"^1M\",\"Returns [low high], the smallest and largest numbers in the given\\n  range.\"],\"~$char-alpha\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1283,\"^1<\",6,\"^1=\",1283,\"^1>\",16],\"^T\",\"~$clojure.test.check.generators/char-alpha\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",16,\"^1<\",1,\"^1;\",1283,\"^1=\",1283,\"^20\",\"^21\",\"^1M\",\"Generate alpha characters.\"],\"~$generator?\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",28,\"^1<\",7,\"^1=\",28,\"^1>\",17,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\"]]]]],\"^1M\",\"Test if `x` is a generator. Generators should be treated as opaque values.\"],\"^T\",\"~$clojure.test.check.generators/generator?\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",17,\"^1P\",[\"^1A\",[[\"~$x\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",28,\"^1=\",28,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\"]]]]],\"^1M\",\"Test if `x` is a generator. Generators should be treated as opaque values.\"],\"~$char-symbol-special\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1289,\"^1<\",16,\"^1=\",1289,\"^1>\",35,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/char-symbol-special\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",35,\"^1<\",1,\"^1;\",1289,\"^1=\",1289,\"^20\",\"^21\",\"^1M\",\"Generate non-alphanumeric characters that can be in a symbol.\"],\"~$sample-seq\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",150,\"^1<\",7,\"^1=\",150,\"^1>\",17,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"~$max-size\"]]]]],\"^1M\",\"Return a sequence of realized values from `generator`.\",\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^49\"]]],\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^49\"]]],\"^1R\",[\"^1A\",[null,null]]]],\"^T\",\"~$clojure.test.check.generators/sample-seq\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",17,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^49\"]]],\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^49\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^49\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",150,\"^1=\",150,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^49\"]]],\"^1M\",\"Return a sequence of realized values from `generator`.\"],\"^I\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",519,\"^1<\",6,\"^1=\",519,\"^1>\",9],\"^T\",\"~$clojure.test.check.generators/int\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",9,\"^1<\",1,\"^1;\",519,\"^1=\",519,\"^20\",\"^21\",\"^1M\",\"Generates a positive or negative integer bounded by the generator's\\n  `size` parameter.\"],\"~$gen-pure\",[\"^ \",\"^1V\",true,\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",43,\"^1<\",7,\"^1=\",43,\"^1>\",15,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$value\"]]]]],\"^1M\",\"Internal function.\",\"^1V\",true],\"^T\",\"~$clojure.test.check.generators/gen-pure\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^1P\",[\"^1A\",[[\"^4=\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",43,\"^1=\",43,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^4=\"]]]]],\"^1M\",\"Internal function.\"],\"~$recursive-gen\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1525,\"^1<\",3,\"^1=\",1525,\"^1>\",16,\"^1Z\",\"0.5.9\",\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$container-gen-fn\",\"~$scalar-gen\"]]]]],\"^1M\",\"This is a helper for writing recursive (tree-shaped) generators. The first\\n  argument should be a function that takes a generator as an argument, and\\n  produces another generator that 'contains' that generator. The vector function\\n  in this namespace is a simple example. The second argument is a scalar\\n  generator, like boolean. For example, to produce a tree of booleans:\\n\\n    (gen/recursive-gen gen/vector gen/boolean)\\n\\n  Vectors or maps either recurring or containing booleans or integers:\\n\\n    (gen/recursive-gen (fn [inner] (gen/one-of [(gen/vector inner)\\n                                                (gen/map inner inner)]))\\n                       (gen/one-of [gen/boolean gen/int]))\\n\\n  Note that raw scalar values will be generated as well. To prevent this, you\\n  can wrap the returned generator with the function passed as the first arg,\\n  e.g.:\\n\\n    (gen/vector (gen/recursive-gen gen/vector gen/boolean))\"],\"^1Z\",\"0.5.9\",\"^T\",\"~$clojure.test.check.generators/recursive-gen\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",16,\"^1P\",[\"^1A\",[[\"^4@\",\"^4A\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1523,\"^1=\",1525,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^4@\",\"^4A\"]]]]],\"^1M\",\"This is a helper for writing recursive (tree-shaped) generators. The first\\n  argument should be a function that takes a generator as an argument, and\\n  produces another generator that 'contains' that generator. The vector function\\n  in this namespace is a simple example. The second argument is a scalar\\n  generator, like boolean. For example, to produce a tree of booleans:\\n\\n    (gen/recursive-gen gen/vector gen/boolean)\\n\\n  Vectors or maps either recurring or containing booleans or integers:\\n\\n    (gen/recursive-gen (fn [inner] (gen/one-of [(gen/vector inner)\\n                                                (gen/map inner inner)]))\\n                       (gen/one-of [gen/boolean gen/int]))\\n\\n  Note that raw scalar values will be generated as well. To prevent this, you\\n  can wrap the returned generator with the function passed as the first arg,\\n  e.g.:\\n\\n    (gen/vector (gen/recursive-gen gen/vector gen/boolean))\"],\"~$char-alpha-numeric\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1277,\"^1<\",3,\"^1=\",1277,\"^1>\",21,\"~:deprecated\",\"0.6.0\"],\"^T\",\"~$clojure.test.check.generators/char-alpha-numeric\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",21,\"^1<\",1,\"^1;\",1276,\"^4D\",\"0.6.0\",\"^1=\",1277,\"^20\",\"^21\",\"^1M\",\"Deprecated - use char-alphanumeric instead.\\n\\n  Generate alphanumeric characters.\"],\"~$backwards-shrinking-significand\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1096,\"^1<\",16,\"^1=\",1096,\"^1>\",47,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/backwards-shrinking-significand\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",47,\"^1<\",1,\"^1;\",1096,\"^1=\",1096,\"^20\",\"^21\",\"^1M\",\"Generates a 52-bit non-negative integer that shrinks toward having\\n  fewer lower-order bits (and shrinks to 0 if possible).\"],\"~$return\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",103,\"^1<\",7,\"^1=\",103,\"^1>\",13,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^4=\"]]]]],\"^1M\",\"Create a generator that always returns `value`,\\n  and never shrinks. You can think of this as\\n  the `constantly` of generators. E.g.:\\n\\n      (gen/sample (gen/return 42))\\n      => (42 42 42 42 42 42 42 42 42 42)\"],\"^T\",\"~$clojure.test.check.generators/return\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1P\",[\"^1A\",[[\"^4=\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",103,\"^1=\",103,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^4=\"]]]]],\"^1M\",\"Create a generator that always returns `value`,\\n  and never shrinks. You can think of this as\\n  the `constantly` of generators. E.g.:\\n\\n      (gen/sample (gen/return 42))\\n      => (42 42 42 42 42 42 42 42 42 42)\"],\"~$gen-bind\",[\"^ \",\"^1V\",true,\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",59,\"^1<\",7,\"^1=\",59,\"^1>\",15,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[[\"^ \",\"~$h\",\"^1W\"],\"~$k\"]]]]],\"^1M\",\"Internal function.\",\"^1V\",true],\"^T\",\"~$clojure.test.check.generators/gen-bind\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^1P\",[\"^1A\",[[\"~$p__93\",\"~$k\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",59,\"^1=\",59,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[[\"^ \",\"~$h\",\"^1W\"],\"~$k\"]]]]],\"^1M\",\"Internal function.\"],\"~$scale\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",282,\"^1<\",7,\"^1=\",282,\"^1>\",12,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$f\",\"^3:\"]]]]],\"^1M\",\"Create a new generator that modifies the size parameter by the\\n  given function. Intended to support generators with sizes that need\\n  to grow at different rates compared to the normal linear scaling.\\n\\n      (gen/sample (gen/tuple (gen/scale #(/ % 10) gen/nat)\\n                             gen/nat\\n                             (gen/scale #(* % 10) gen/nat)))\\n      => ([0 0 0]  [0 1 2]  [0 2 13] [0 1 6]  [0 1 23]\\n          [0 2 42] [0 1 26] [0 1 12] [0 1 12] [0 0 3])\",\"^1Z\",\"0.8.0\"],\"^1Z\",\"0.8.0\",\"^T\",\"~$clojure.test.check.generators/scale\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",12,\"^1P\",[\"^1A\",[[\"~$f\",\"^3:\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",282,\"^1=\",282,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$f\",\"^3:\"]]]]],\"^1M\",\"Create a new generator that modifies the size parameter by the\\n  given function. Intended to support generators with sizes that need\\n  to grow at different rates compared to the normal linear scaling.\\n\\n      (gen/sample (gen/tuple (gen/scale #(/ % 10) gen/nat)\\n                             gen/nat\\n                             (gen/scale #(* % 10) gen/nat)))\\n      => ([0 0 0]  [0 1 2]  [0 2 13] [0 1 6]  [0 1 23]\\n          [0 2 42] [0 1 26] [0 1 12] [0 1 12] [0 0 3])\"],\"~$+-or---digit?\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1327,\"^1<\",8,\"^1=\",1327,\"^1>\",21,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$c\",\"~$d\"]]]]],\"^1M\",\"Returns true if c is \\\\+ or \\\\- and d is non-nil and a digit.\\n\\n  Symbols that start with +3 or -2 are not readable because they look\\n  like numbers.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/+-or---digit?\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",21,\"^1P\",[\"^1A\",[[\"~$c\",\"~$d\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1327,\"^1=\",1327,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$c\",\"~$d\"]]]]],\"^1M\",\"Returns true if c is \\\\+ or \\\\- and d is non-nil and a digit.\\n\\n  Symbols that start with +3 or -2 are not readable because they look\\n  like numbers.\"],\"^J\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1393,\"^1<\",6,\"^1=\",1393,\"^1>\",12],\"^T\",\"~$clojure.test.check.generators/symbol\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",12,\"^1<\",1,\"^1;\",1393,\"^1=\",1393,\"^20\",\"^21\",\"^1M\",\"Generate symbols without namespaces.\"],\"~$such-that-helper\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",398,\"^1<\",8,\"^1=\",398,\"^1>\",24,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$pred\",\"^1F\",[\"^ \",\"~:keys\",[\"^1L\",\"^1K\"]],\"^1G\",\"^1H\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/such-that-helper\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",24,\"^1P\",[\"^1A\",[[\"^4S\",\"^1F\",\"~$p__156\",\"^1G\",\"^1H\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",398,\"^1=\",398,\"^1S\",5,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^4S\",\"^1F\",[\"^ \",\"^4T\",[\"^1L\",\"^1K\"]],\"^1G\",\"^1H\"]]]]]],\"~$double-finite\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1177,\"^1<\",17,\"^1=\",1177,\"^1>\",30,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^2P\",\"^2Q\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/double-finite\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",30,\"^1P\",[\"^1A\",[[\"^2P\",\"^2Q\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1177,\"^1=\",1177,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^2P\",\"^2Q\"]]]]]],\"~$pick\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",340,\"^1<\",8,\"^1=\",340,\"^1>\",12,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$likelihoods\",\"~$n\"]]]]],\"^1M\",\"Returns an index into the `likelihoods` sequence.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/pick\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",12,\"^1P\",[\"^1A\",[[\"^4Z\",\"~$n\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",340,\"^1=\",340,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^4Z\",\"~$n\"]]]]],\"^1M\",\"Returns an index into the `likelihoods` sequence.\"],\"~$char-alphanumeric\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1269,\"^1<\",6,\"^1=\",1269,\"^1>\",23],\"^T\",\"~$clojure.test.check.generators/char-alphanumeric\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",23,\"^1<\",1,\"^1;\",1269,\"^1=\",1269,\"^20\",\"^21\",\"^1M\",\"Generate alphanumeric characters.\"],\"~$make-size-range-seq\",[\"^ \",\"^1V\",true,\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",144,\"^1<\",7,\"^1=\",144,\"^1>\",26,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^49\"]]]]],\"^1M\",\"Internal function.\",\"^1V\",true],\"^T\",\"~$clojure.test.check.generators/make-size-range-seq\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",26,\"^1P\",[\"^1A\",[[\"^49\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",144,\"^1=\",144,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^49\"]]]]],\"^1M\",\"Internal function.\"],\"~$choose\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",296,\"^1<\",7,\"^1=\",296,\"^1>\",13,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^2J\",\"^2K\"]]]]],\"^1M\",\"Create a generator that returns integer numbers in the range\\n     `lower` to `upper`, inclusive.\\n\\n         (gen/sample (gen/choose 200 800))\\n         => (331 241 593 339 643 718 688 473 247 694)\"],\"^T\",\"~$clojure.test.check.generators/choose\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1P\",[\"^1A\",[[\"^2J\",\"^2K\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",296,\"^1=\",296,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^2J\",\"^2K\"]]]]],\"^1M\",\"Create a generator that returns integer numbers in the range\\n     `lower` to `upper`, inclusive.\\n\\n         (gen/sample (gen/choose 200 800))\\n         => (331 241 593 339 643 718 688 473 247 694)\"],\"~$string-ascii\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1307,\"^1<\",6,\"^1=\",1307,\"^1>\",18],\"^T\",\"~$clojure.test.check.generators/string-ascii\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",18,\"^1<\",1,\"^1;\",1307,\"^1=\",1307,\"^20\",\"^21\",\"^1M\",\"Generate ascii strings.\"],\"^K\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1Z\",\"0.9.0\",\"^1:\",\"^U\",\"^1>\",17,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1<\",7,\"^1;\",897,\"^1=\",897,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]]]],\"^1M\",\"Generates a sorted set of elements from the given generator.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated set\\n    :min-elements  the min size of generated set\\n    :max-elements  the max size of generated set\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/sorted-set\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",17,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",897,\"^1=\",897,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^1F\"],[\"^1F\",\"^23\"]]],\"^1M\",\"Generates a sorted set of elements from the given generator.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated set\\n    :min-elements  the min size of generated set\\n    :max-elements  the max size of generated set\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"~$make-gen\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",33,\"^1<\",8,\"^1=\",33,\"^1>\",16,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$generator-fn\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/make-gen\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",16,\"^1P\",[\"^1A\",[[\"^5:\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",33,\"^1=\",33,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^5:\"]]]]]],\"~$Generator\",[\"^ \",\"~:num-fields\",1,\"~:protocols\",[\"^?\",[\"~$cljs.core/IRecord\",\"~$cljs.core/IEquiv\",\"~$cljs.core/IHash\",\"~$cljs.core/ICollection\",\"~$cljs.core/ICounted\",\"~$cljs.core/ISeqable\",\"~$cljs.core/IMeta\",\"~$cljs.core/ICloneable\",\"~$cljs.core/IPrintWithWriter\",\"~$cljs.core/IIterable\",\"~$cljs.core/IWithMeta\",\"~$cljs.core/IAssociative\",\"~$cljs.core/IMap\",\"~$cljs.core/ILookup\"]],\"^T\",\"~$clojure.test.check.generators/Generator\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",21,\"~:type\",true,\"^1<\",12,\"~:internal-ctor\",true,\"^1;\",26,\"~:record\",true,\"^1=\",26,\"~:skip-protocol-flag\",[\"^?\",[\"^5?\",\"^5@\",\"^5A\",\"^5B\",\"^5C\",\"^5D\",\"^5E\",\"^5F\",\"^5G\",\"^5I\",\"^5J\",\"^5K\",\"^5L\"]]],\"~$frequency\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",349,\"^1<\",7,\"^1=\",349,\"^1>\",16,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$pairs\"]]]]],\"^1M\",\"Create a generator that chooses a generator from `pairs` based on the\\n  provided likelihoods. The likelihood of a given generator being chosen is\\n  its likelihood divided by the sum of all likelihoods. Shrinks toward\\n  choosing an earlier generator, as well as shrinking the value generated\\n  by the chosen generator.\\n\\n  Examples:\\n\\n      (gen/sample (gen/frequency [[5 gen/int] [3 (gen/vector gen/int)] [2 gen/boolean]]))\\n      => (true [] -1 [0] [1 -4 -4 1] true 4 [] 6 true)\"],\"^T\",\"~$clojure.test.check.generators/frequency\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",16,\"^1P\",[\"^1A\",[[\"^5S\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",349,\"^1=\",349,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^5S\"]]]]],\"^1M\",\"Create a generator that chooses a generator from `pairs` based on the\\n  provided likelihoods. The likelihood of a given generator being chosen is\\n  its likelihood divided by the sum of all likelihoods. Shrinks toward\\n  choosing an earlier generator, as well as shrinking the value generated\\n  by the chosen generator.\\n\\n  Examples:\\n\\n      (gen/sample (gen/frequency [[5 gen/int] [3 (gen/vector gen/int)] [2 gen/boolean]]))\\n      => (true [] -1 [0] [1 -4 -4 1] true 4 [] 6 true)\"],\"~$double*\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1211,\"^1<\",7,\"^1=\",1211,\"^1>\",14,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[[\"^ \",\"^4T\",[\"~$infinite?\",\"~$NaN?\",\"^2B\",\"^2C\"],\"~:or\",[\"^ \",\"^5V\",true,\"^5W\",true]]]]]]],\"^1M\",\"Generates a 64-bit floating point number. Options:\\n\\n    :infinite? - whether +/- infinity can be generated (default true)\\n    :NaN?      - whether NaN can be generated (default true)\\n    :min       - minimum value (inclusive, default none)\\n    :max       - maximum value (inclusive, default none)\\n\\n  Note that the min/max options must be finite numbers. Supplying a\\n  min precludes -Infinity, and supplying a max precludes +Infinity.\",\"^1Z\",\"0.9.0\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/double*\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",14,\"^1P\",[\"^1A\",[[\"~$p__359\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1211,\"^1=\",1211,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[[\"^ \",\"^4T\",[\"^5V\",\"^5W\",\"^2B\",\"^2C\"],\"^5X\",[\"^ \",\"^5V\",true,\"^5W\",true]]]]]]],\"^1M\",\"Generates a 64-bit floating point number. Options:\\n\\n    :infinite? - whether +/- infinity can be generated (default true)\\n    :NaN?      - whether NaN can be generated (default true)\\n    :min       - minimum value (inclusive, default none)\\n    :max       - maximum value (inclusive, default none)\\n\\n  Note that the min/max options must be finite numbers. Supplying a\\n  min precludes -Infinity, and supplying a max precludes +Infinity.\"],\"~$generate\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1Z\",\"0.8.0\",\"^1:\",\"^U\",\"^1>\",15,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1H\"],[\"^3:\",\"^1H\",\"~$seed\"]]],\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1H\"],[\"^3:\",\"^1H\",\"^60\"]]],\"^1R\",[\"^1A\",[null,null,null]]],\"^1<\",7,\"^1;\",176,\"^1=\",176,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1H\"],[\"^3:\",\"^1H\",\"^60\"]]]]],\"^1M\",\"Returns a single sample value from the generator.\\n\\n  Note that this function is a dev helper and is not meant to be used\\n  to build other generators.\\n\\n  Optional args:\\n\\n  - size: the abstract size parameter, defaults to 30\\n  - seed: the seed for the random number generator, an integer\"],\"^1Z\",\"0.8.0\",\"^T\",\"~$clojure.test.check.generators/generate\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1H\"],[\"^3:\",\"^1H\",\"^60\"]]],\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1H\"],[\"^3:\",\"^1H\",\"^60\"]]],\"^1R\",[\"^1A\",[null,null,null]]],\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1H\"],[\"^3:\",\"^1H\",\"^60\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null,null]],\"^1<\",1,\"^1;\",176,\"^1=\",176,\"^1S\",3,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1H\"],[\"^3:\",\"^1H\",\"^60\"]]],\"^1M\",\"Returns a single sample value from the generator.\\n\\n  Note that this function is a dev helper and is not meant to be used\\n  to build other generators.\\n\\n  Optional args:\\n\\n  - size: the abstract size parameter, defaults to 30\\n  - seed: the seed for the random number generator, an integer\"],\"~$distinct-by?\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",702,\"^1<\",17,\"^1=\",702,\"^1>\",29,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$f\",\"^3A\"]]]]],\"^1M\",\"Like clojure.core/distinct? but takes a collection instead of varargs,\\n  and returns true for empty collections.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/distinct-by?\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",29,\"^1P\",[\"^1A\",[[\"~$f\",\"^3A\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",702,\"^1=\",702,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$f\",\"^3A\"]]]]],\"^1M\",\"Like clojure.core/distinct? but takes a collection instead of varargs,\\n  and returns true for empty collections.\"],\"~$sized\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",245,\"^1<\",7,\"^1=\",245,\"^1>\",12,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$sized-gen\"]]]]],\"^1M\",\"Create a generator that depends on the size parameter.\\n  `sized-gen` is a function that takes an integer and returns\\n  a generator.\\n\\n      TODO: example\"],\"^T\",\"~$clojure.test.check.generators/sized\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",12,\"^1P\",[\"^1A\",[[\"^65\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",245,\"^1=\",245,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^65\"]]]]],\"^1M\",\"Create a generator that depends on the size parameter.\\n  `sized-gen` is a function that takes an integer and returns\\n  a generator.\\n\\n      TODO: example\"],\"~$s-neg-int\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",541,\"^1<\",6,\"^1=\",541,\"^1>\",15],\"^T\",\"~$clojure.test.check.generators/s-neg-int\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^1<\",1,\"^1;\",541,\"^1=\",541,\"^20\",\"^21\",\"^1M\",\"Generate strictly negative integers bounded by the generator's `size` + 1\"],\"~$nat\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",524,\"^1<\",6,\"^1=\",524,\"^1>\",9],\"^T\",\"~$clojure.test.check.generators/nat\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",9,\"^1<\",1,\"^1;\",524,\"^1=\",524,\"^20\",\"^21\",\"^1M\",\"Generates non-negative integers bounded by the generator's `size`\\n  parameter. Shrinks to zero.\"],\"~$coll-distinct-by\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",727,\"^1<\",17,\"^1=\",727,\"^1>\",33,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1C\",\"^1D\",\"~$allows-dupes?\",\"~$ordered?\",\"^1F\",[\"^ \",\"^4T\",[\"^1I\",\"^1J\",\"~$max-elements\",\"^1K\",\"^1L\"],\"^5X\",[\"^ \",\"^1K\",10,\"^1L\",[\"^1A\",[\"~$fn*\",[\"~$p1__26#\"],[\"^1A\",[\"~$ex-info\",\"Couldn't generate enough distinct elements!\",\"^6@\"]]]]]]]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/coll-distinct-by\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",33,\"^1P\",[\"^1A\",[[\"^1C\",\"^1D\",\"^6<\",\"^6=\",\"^1F\",\"~$p__235\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",727,\"^1=\",727,\"^1S\",6,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1C\",\"^1D\",\"^6<\",\"^6=\",\"^1F\",[\"^ \",\"^4T\",[\"^1I\",\"^1J\",\"^6>\",\"^1K\",\"^1L\"],\"^5X\",[\"^ \",\"^1K\",10,\"^1L\",[\"^1A\",[\"^6?\",[\"^6@\"],[\"^1A\",[\"^6A\",\"Couldn't generate enough distinct elements!\",\"^6@\"]]]]]]]]]]]],\"~$resize-symbolish-generator\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1360,\"^1<\",17,\"^1=\",1360,\"^1>\",43,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$g\"]]]]],\"^1M\",\"Scales the sizing down on a keyword or symbol generator so as to\\n  make it reasonable.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/resize-symbolish-generator\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",43,\"^1P\",[\"^1A\",[[\"~$g\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1360,\"^1=\",1360,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$g\"]]]]],\"^1M\",\"Scales the sizing down on a keyword or symbol generator so as to\\n  make it reasonable.\"],\"~$namespace-segment\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1338,\"^1<\",16,\"^1=\",1338,\"^1>\",33,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/namespace-segment\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",33,\"^1<\",1,\"^1;\",1338,\"^1=\",1338,\"^20\",\"^21\",\"^1M\",\"Generate the segment of a namespace.\"],\"~$the-shuffle-fn\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",709,\"^1<\",17,\"^1=\",709,\"^1>\",31,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1G\",\"^3A\"]]]]],\"^1M\",\"Returns a shuffled version of coll according to the rng.\\n\\n  Note that this is not a generator, it is just a utility function.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/the-shuffle-fn\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",31,\"^1P\",[\"^1A\",[[\"^1G\",\"^3A\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",709,\"^1=\",709,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1G\",\"^3A\"]]]]],\"^1M\",\"Returns a shuffled version of coll according to the rng.\\n\\n  Note that this is not a generator, it is just a utility function.\"],\"~$tuple\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",501,\"^1<\",7,\"^1=\",501,\"^1>\",12,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$&\",\"^26\"]]]]],\"^1M\",\"Create a generator that returns a vector, whose elements are chosen\\n  from the generators in the same position. The individual elements shrink\\n  according to their generator, but the value will never shrink in count.\\n\\n  Examples:\\n\\n      (def t (tuple gen/int gen/boolean))\\n      (sample t)\\n      ;; => ([1 true] [2 true] [2 false] [1 false] [0 true] [-2 false] [-6 false]\\n      ;; =>  [3 true] [-4 false] [9 true]))\",\"^22\",[\"^ \",\"^1O\",true,\"^1S\",0,\"^1P\",[[\"^1A\",[\"^26\"]]],\"^1@\",[\"^1A\",[[\"~$&\",\"^26\"]]],\"^1R\",[\"^1A\",[null]]]],\"^T\",\"~$clojure.test.check.generators/tuple\",\"^1O\",true,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",12,\"^22\",[\"^ \",\"^1O\",true,\"^1S\",0,\"^1P\",[[\"^1A\",[\"^26\"]]],\"^1@\",[\"^1A\",[[\"~$&\",\"^26\"]]],\"^1R\",[\"^1A\",[null]]],\"^1P\",[[\"^1A\",[\"^26\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null]],\"^1<\",1,\"^1;\",501,\"^1=\",501,\"^1S\",0,\"^1T\",true,\"^1@\",[\"^1A\",[[\"~$&\",\"^26\"]]],\"^1M\",\"Create a generator that returns a vector, whose elements are chosen\\n  from the generators in the same position. The individual elements shrink\\n  according to their generator, but the value will never shrink in count.\\n\\n  Examples:\\n\\n      (def t (tuple gen/int gen/boolean))\\n      (sample t)\\n      ;; => ([1 true] [2 true] [2 false] [1 false] [0 true] [-2 false] [-6 false]\\n      ;; =>  [3 true] [-4 false] [9 true]))\"],\"~$lazy-random-states\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",70,\"^1<\",7,\"^1=\",70,\"^1>\",25,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$rr\"]]]]],\"^1M\",\"Internal function.\\n\\n  Given a random number generator, returns an infinite lazy sequence\\n  of random number generators.\"],\"^T\",\"~$clojure.test.check.generators/lazy-random-states\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",25,\"^1P\",[\"^1A\",[[\"^6M\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",70,\"^1=\",70,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^6M\"]]]]],\"^1M\",\"Internal function.\\n\\n  Given a random number generator, returns an infinite lazy sequence\\n  of random number generators.\"],\"~$map->Generator\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",26,\"^1<\",12,\"^1=\",26,\"^1>\",21,\"^5O\",true,\"~:factory\",\"~:map\",\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$G__77\"]]]]]],\"^T\",\"~$clojure.test.check.generators/map->Generator\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",21,\"^1P\",[\"^1A\",[[\"^6R\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^5O\",true,\"^6P\",\"^6Q\",\"^1;\",26,\"^1=\",26,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^6R\"]]]]]],\"~$shrink-2\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",490,\"^1<\",7,\"^1=\",490,\"^1>\",15,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"]]]]],\"^1M\",\"Create a new generator like `gen`, but will consider nodes for shrinking\\n  even if their parent passes the test (up to one additional level).\"],\"^T\",\"~$clojure.test.check.generators/shrink-2\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^1P\",[\"^1A\",[[\"^1F\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",490,\"^1=\",490,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"]]]]],\"^1M\",\"Create a new generator like `gen`, but will consider nodes for shrinking\\n  even if their parent passes the test (up to one additional level).\"],\"~$string-alpha-numeric\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1316,\"^1<\",3,\"^1=\",1316,\"^1>\",23,\"^4D\",\"0.6.0\"],\"^T\",\"~$clojure.test.check.generators/string-alpha-numeric\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",23,\"^1<\",1,\"^1;\",1315,\"^4D\",\"0.6.0\",\"^1=\",1316,\"^20\",\"^21\",\"^1M\",\"Deprecated - use string-alphanumeric instead.\\n\\n  Generate alphanumeric strings.\"],\"~$resize\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",260,\"^1<\",7,\"^1=\",260,\"^1>\",13,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$n\",\"^3:\"]]]]],\"^1M\",\"Create a new generator with `size` always bound to `n`.\\n\\n      (gen/sample (gen/set (gen/resize 200 gen/double)))\\n      => (#{}\\n          #{-4.994772362980037E147}\\n          #{-4.234418056487335E-146}\\n          #{}\\n          #{}\\n          #{}\\n          #{NaN}\\n          #{8.142414100982609E-63}\\n          #{-3.58429955903876E-159 2.8563794617604296E-154\\n            4.1021360195776005E-100 1.9084564045332549E-38}\\n          #{-2.1582818131881376E83 -5.8460065493236117E48 9.729260993803226E166})\"],\"^T\",\"~$clojure.test.check.generators/resize\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1P\",[\"^1A\",[[\"~$n\",\"^3:\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",260,\"^1=\",260,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$n\",\"^3:\"]]]]],\"^1M\",\"Create a new generator with `size` always bound to `n`.\\n\\n      (gen/sample (gen/set (gen/resize 200 gen/double)))\\n      => (#{}\\n          #{-4.994772362980037E147}\\n          #{-4.234418056487335E-146}\\n          #{}\\n          #{}\\n          #{}\\n          #{NaN}\\n          #{8.142414100982609E-63}\\n          #{-3.58429955903876E-159 2.8563794617604296E-154\\n            4.1021360195776005E-100 1.9084564045332549E-38}\\n          #{-2.1582818131881376E83 -5.8460065493236117E48 9.729260993803226E166})\"],\"~$digit?\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1322,\"^1<\",8,\"^1=\",1322,\"^1>\",14,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$d\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/digit?\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",14,\"^1P\",[\"^1A\",[[\"~$d\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1322,\"^1=\",1322,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$d\"]]]]]],\"~$scalb\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1075,\"^1<\",17,\"^1=\",1075,\"^1>\",22,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\",\"^3[\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/scalb\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",22,\"^1P\",[\"^1A\",[[\"~$x\",\"^3[\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1075,\"^1=\",1075,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\",\"^3[\"]]]]]],\"~$neg-int\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",533,\"^1<\",6,\"^1=\",533,\"^1>\",13],\"^T\",\"~$clojure.test.check.generators/neg-int\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1<\",1,\"^1;\",533,\"^1=\",533,\"^20\",\"^21\",\"^1M\",\"Generate negative integers bounded by the generator's `size` parameter.\"],\"~$string\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1303,\"^1<\",6,\"^1=\",1303,\"^1>\",12],\"^T\",\"~$clojure.test.check.generators/string\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",12,\"^1<\",1,\"^1;\",1303,\"^1=\",1303,\"^20\",\"^21\",\"^1M\",\"Generate strings. May generate unprintable characters.\"],\"^L\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",545,\"^1<\",7,\"^1=\",545,\"^1>\",13,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1I\"],[\"^3:\",\"^1J\",\"^6>\"]]]]],\"^1M\",\"Create a generator of vectors whose elements are chosen from\\n  `generator`. The count of the vector will be bounded by the `size`\\n  generator parameter.\",\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1I\"],[\"^3:\",\"^1J\",\"^6>\"]]],\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1I\"],[\"^3:\",\"^1J\",\"^6>\"]]],\"^1R\",[\"^1A\",[null,null,null]]]],\"^T\",\"~$clojure.test.check.generators/vector\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1I\"],[\"^3:\",\"^1J\",\"^6>\"]]],\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1I\"],[\"^3:\",\"^1J\",\"^6>\"]]],\"^1R\",[\"^1A\",[null,null,null]]],\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1I\"],[\"^3:\",\"^1J\",\"^6>\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null,null]],\"^1<\",1,\"^1;\",545,\"^1=\",545,\"^1S\",3,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^1I\"],[\"^3:\",\"^1J\",\"^6>\"]]],\"^1M\",\"Create a generator of vectors whose elements are chosen from\\n  `generator`. The count of the vector will be bounded by the `size`\\n  generator parameter.\"],\"~$large-integer\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1019,\"^1<\",24,\"^1=\",1019,\"^1>\",37,\"^1Z\",\"0.9.0\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/large-integer\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",37,\"^1<\",1,\"^1;\",1019,\"^1=\",1019,\"^20\",\"^21\",\"^1M\",\"Generates a platform-native integer from the full available range\\n  (in clj, 64-bit Longs, and in cljs, numbers between -(2^53 - 1) and\\n  (2^53 - 1)).\\n\\n  Use large-integer* for more control.\"],\"~$keyword-ns\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1376,\"^1<\",3,\"^1=\",1376,\"^1>\",13,\"^1Z\",\"0.5.9\"],\"^1Z\",\"0.5.9\",\"^T\",\"~$clojure.test.check.generators/keyword-ns\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1<\",1,\"^1;\",1374,\"^1=\",1376,\"^20\",\"^21\",\"^1M\",\"Generate keywords with optional namespaces.\"],\"^M\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",459,\"^1<\",7,\"^1=\",459,\"^1>\",16,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"]]]]],\"^1M\",\"Modifies a generator so that it doesn't generate empty collections.\\n\\n  Examples:\\n\\n      ;; generate a vector of booleans, but never the empty vector\\n      (gen/sample (gen/not-empty (gen/vector gen/boolean)))\\n      => ([false]\\n          [false false]\\n          [false false]\\n          [false false false]\\n          [false false false false]\\n          [false true true]\\n          [true false false false]\\n          [true]\\n          [true true true false false true false]\\n          [false true true true false true true true false])\"],\"^T\",\"~$clojure.test.check.generators/not-empty\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",16,\"^1P\",[\"^1A\",[[\"^1F\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",459,\"^1=\",459,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"]]]]],\"^1M\",\"Modifies a generator so that it doesn't generate empty collections.\\n\\n  Examples:\\n\\n      ;; generate a vector of booleans, but never the empty vector\\n      (gen/sample (gen/not-empty (gen/vector gen/boolean)))\\n      => ([false]\\n          [false false]\\n          [false false]\\n          [false false false]\\n          [false false false false]\\n          [false true true]\\n          [true false false false]\\n          [true]\\n          [true true true false false true false]\\n          [false true true true false true true true false])\"],\"~$char-symbol-first\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1383,\"^1<\",16,\"^1=\",1383,\"^1>\",33,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/char-symbol-first\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",33,\"^1<\",1,\"^1;\",1383,\"^1=\",1383,\"^20\",\"^21\"],\"~$gen-raw-long\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",950,\"^1<\",16,\"^1=\",950,\"^1>\",28,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/gen-raw-long\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",28,\"^1<\",1,\"^1;\",950,\"^1=\",950,\"^20\",\"^21\",\"^1M\",\"Generates a single uniformly random long, does not shrink.\"],\"~$NAN\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1054,\"^1<\",16,\"^1=\",1054,\"^1>\",19,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/NAN\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",19,\"^1<\",1,\"^1;\",1054,\"^1=\",1054,\"^20\",\"^3W\"],\"~$elements\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",387,\"^1<\",7,\"^1=\",387,\"^1>\",15,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3A\"]]]]],\"^1M\",\"Create a generator that randomly chooses an element from `coll`.\\n\\n      (gen/sample (gen/elements [:foo :bar :baz]))\\n      => (:foo :baz :baz :bar :foo :foo :bar :bar :foo :bar)\"],\"^T\",\"~$clojure.test.check.generators/elements\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^1P\",[\"^1A\",[[\"^3A\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",387,\"^1=\",387,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3A\"]]]]],\"^1M\",\"Create a generator that randomly chooses an element from `coll`.\\n\\n      (gen/sample (gen/elements [:foo :bar :baz]))\\n      => (:foo :baz :baz :bar :foo :foo :bar :bar :foo :bar)\"],\"~$default-such-that-opts\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",412,\"^1<\",3,\"^1=\",412,\"^1>\",25,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/default-such-that-opts\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",25,\"^1<\",1,\"^1;\",411,\"^1=\",412,\"^20\",\"^5K\"],\"~$fifty-two-bit-reverse\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1080,\"^1<\",17,\"^1=\",1080,\"^1>\",38,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$n\"]]]]],\"^1M\",\"Bit-reverses an integer in the range [0, 2^52).\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/fifty-two-bit-reverse\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",38,\"^1P\",[\"^1A\",[[\"~$n\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1080,\"^1=\",1080,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$n\"]]]]],\"^1M\",\"Bit-reverses an integer in the range [0, 2^52).\"],\"~$POS_INFINITY\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1050,\"^1<\",16,\"^1=\",1050,\"^1>\",28,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/POS_INFINITY\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",28,\"^1<\",1,\"^1;\",1050,\"^1=\",1050,\"^20\",\"^3W\"],\"~$sample\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",160,\"^1<\",7,\"^1=\",160,\"^1>\",13,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"~$num-samples\"]]]]],\"^1M\",\"Return a sequence of `num-samples` (default 10)\\n  realized values from `generator`.\\n\\n  The sequence starts with small values from the generator, which\\n  probably do not reflect the variety of values that will be generated\\n  during a longer test run.\\n\\n  Note that this function is a dev helper and is not meant to be used\\n  to build other generators.\",\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^7K\"]]],\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^7K\"]]],\"^1R\",[\"^1A\",[null,null]]]],\"^T\",\"~$clojure.test.check.generators/sample\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",2,\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^7K\"]]],\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^7K\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^7K\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",160,\"^1=\",160,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^3:\"],[\"^3:\",\"^7K\"]]],\"^1M\",\"Return a sequence of `num-samples` (default 10)\\n  realized values from `generator`.\\n\\n  The sequence starts with small values from the generator, which\\n  probably do not reflect the variety of values that will be generated\\n  during a longer test run.\\n\\n  Note that this function is a dev helper and is not meant to be used\\n  to build other generators.\"],\"~$randomized\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1513,\"^1<\",17,\"^1=\",1513,\"^1>\",27,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$func\"]]]]],\"^1M\",\"Like sized, but passes an rng instead of a size.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/randomized\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",27,\"^1P\",[\"^1A\",[[\"^7N\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1513,\"^1=\",1513,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^7N\"]]]]],\"^1M\",\"Like sized, but passes an rng instead of a size.\"],\"~$NEG_INFINITY\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1051,\"^1<\",16,\"^1=\",1051,\"^1>\",28,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/NEG_INFINITY\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",28,\"^1<\",1,\"^1;\",1051,\"^1=\",1051,\"^20\",\"^3W\"],\"^N\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",578,\"^1<\",7,\"^1=\",578,\"^1>\",11,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3:\"]]]]],\"^1M\",\"Like `vector`, but generates lists.\"],\"^T\",\"~$clojure.test.check.generators/list\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",11,\"^1P\",[\"^1A\",[[\"^3:\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",578,\"^1=\",578,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3:\"]]]]],\"^1M\",\"Like `vector`, but generates lists.\"],\"~$large-integer*\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",997,\"^1<\",7,\"^1=\",997,\"^1>\",21,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[[\"^ \",\"^4T\",[\"^2B\",\"^2C\"]]]]]]],\"^1M\",\"Like large-integer, but accepts options:\\n\\n    :min  the minimum integer (inclusive)\\n    :max  the maximum integer (inclusive)\\n\\n  Both :min and :max are optional.\\n\\n      (gen/sample (gen/large-integer* {:min 9000 :max 10000}))\\n      => (9000 9001 9001 9002 9000 9003 9006 9030 9005 9044)\",\"^1Z\",\"0.9.0\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/large-integer*\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",21,\"^1P\",[\"^1A\",[[\"~$p__300\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",997,\"^1=\",997,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[[\"^ \",\"^4T\",[\"^2B\",\"^2C\"]]]]]]],\"^1M\",\"Like large-integer, but accepts options:\\n\\n    :min  the minimum integer (inclusive)\\n    :max  the maximum integer (inclusive)\\n\\n  Both :min and :max are optional.\\n\\n      (gen/sample (gen/large-integer* {:min 9000 :max 10000}))\\n      => (9000 9001 9001 9002 9000 9003 9006 9030 9005 9044)\"],\"~$abs\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",960,\"^1<\",17,\"^1=\",960,\"^1>\",20,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/abs\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",20,\"^1P\",[\"^1A\",[[\"~$x\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",960,\"^1=\",960,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$x\"]]]]]],\"^O\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1367,\"^1<\",6,\"^1=\",1367,\"^1>\",13],\"^T\",\"~$clojure.test.check.generators/keyword\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1<\",1,\"^1;\",1367,\"^1=\",1367,\"^20\",\"^21\",\"^1M\",\"Generate keywords without namespaces.\"],\"~$gen-tuple\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",81,\"^1<\",8,\"^1=\",81,\"^1>\",17,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$gens\"]]]]],\"^1M\",\"Takes a collection of generators and returns a generator of vectors.\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/gen-tuple\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",17,\"^1P\",[\"^1A\",[[\"^7Z\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",81,\"^1=\",81,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^7Z\"]]]]],\"^1M\",\"Takes a collection of generators and returns a generator of vectors.\"],\"~$bind-helper\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",113,\"^1<\",8,\"^1=\",113,\"^1>\",19,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$f\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/bind-helper\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",19,\"^1P\",[\"^1A\",[[\"~$f\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",113,\"^1=\",113,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$f\"]]]]]],\"^P\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",623,\"^1<\",7,\"^1=\",623,\"^1>\",15,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$&\",\"~$kvs\"]]]]],\"^1M\",\"Like clojure.core/hash-map, except the values are generators.\\n   Returns a generator that makes maps with the supplied keys and\\n   values generated using the supplied generators.\\n\\n       (gen/sample (gen/hash-map :a gen/boolean :b gen/nat))\\n       => ({:a false, :b 0}\\n           {:a true,  :b 1}\\n           {:a false, :b 2}\\n           {:a true,  :b 2}\\n           {:a false, :b 4}\\n           {:a false, :b 2}\\n           {:a true,  :b 3}\\n           {:a true,  :b 4}\\n           {:a false, :b 1}\\n           {:a false, :b 0})\",\"^22\",[\"^ \",\"^1O\",true,\"^1S\",0,\"^1P\",[[\"^1A\",[\"^82\"]]],\"^1@\",[\"^1A\",[[\"~$&\",\"^82\"]]],\"^1R\",[\"^1A\",[null]]]],\"^T\",\"~$clojure.test.check.generators/hash-map\",\"^1O\",true,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^22\",[\"^ \",\"^1O\",true,\"^1S\",0,\"^1P\",[[\"^1A\",[\"^82\"]]],\"^1@\",[\"^1A\",[[\"~$&\",\"^82\"]]],\"^1R\",[\"^1A\",[null]]],\"^1P\",[[\"^1A\",[\"^82\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null]],\"^1<\",1,\"^1;\",623,\"^1=\",623,\"^1S\",0,\"^1T\",true,\"^1@\",[\"^1A\",[[\"~$&\",\"^82\"]]],\"^1M\",\"Like clojure.core/hash-map, except the values are generators.\\n   Returns a generator that makes maps with the supplied keys and\\n   values generated using the supplied generators.\\n\\n       (gen/sample (gen/hash-map :a gen/boolean :b gen/nat))\\n       => ({:a false, :b 0}\\n           {:a true,  :b 1}\\n           {:a false, :b 2}\\n           {:a true,  :b 2}\\n           {:a false, :b 4}\\n           {:a false, :b 2}\\n           {:a true,  :b 3}\\n           {:a true,  :b 4}\\n           {:a false, :b 1}\\n           {:a false, :b 0})\"],\"~$call-gen\",[\"^ \",\"^1V\",true,\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",37,\"^1<\",7,\"^1=\",37,\"^1>\",15,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[[\"^ \",\"^5:\",\"^1W\"],\"~$rnd\",\"^1H\"]]]]],\"^1M\",\"Internal function.\",\"^1V\",true],\"^T\",\"~$clojure.test.check.generators/call-gen\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",15,\"^1P\",[\"^1A\",[[\"~$p__83\",\"^85\",\"^1H\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",37,\"^1=\",37,\"^1S\",3,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[[\"^ \",\"^5:\",\"^1W\"],\"^85\",\"^1H\"]]]]],\"^1M\",\"Internal function.\"],\"~$rand-range\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",240,\"^1<\",8,\"^1=\",240,\"^1>\",18,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^85\",\"^2J\",\"^2K\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/rand-range\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",18,\"^1P\",[\"^1A\",[[\"^85\",\"^2J\",\"^2K\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",240,\"^1=\",240,\"^1S\",3,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^85\",\"^2J\",\"^2K\"]]]]]],\"~$ratio\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1411,\"^1<\",6,\"^1=\",1411,\"^1>\",11],\"^T\",\"~$clojure.test.check.generators/ratio\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",11,\"^1<\",1,\"^1;\",1411,\"^1=\",1411,\"^20\",\"^21\",\"^1M\",\"Generates a `clojure.lang.Ratio`. Shrinks toward 0. Not all values generated\\n  will be ratios, as many values returned by `/` are not ratios.\"],\"~$transient-set-contains?\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",653,\"^1<\",17,\"^1=\",653,\"^1>\",40,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$s\",\"~$k\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/transient-set-contains?\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",40,\"^1P\",[\"^1A\",[[\"~$s\",\"~$k\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",653,\"^1=\",653,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$s\",\"~$k\"]]]]]],\"~$such-that\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",419,\"^1<\",7,\"^1=\",419,\"^1>\",16,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^4S\",\"^1F\"],[\"^4S\",\"^1F\",\"~$max-tries-or-opts\"]]]]],\"^1M\",\"Create a generator that generates values from `gen` that satisfy predicate\\n  `pred`. Care is needed to ensure there is a high chance `gen` will satisfy\\n  `pred`. By default, `such-that` will try 10 times to generate a value that\\n  satisfies the predicate. If no value passes this predicate after this number\\n  of iterations, a runtime exception will be thrown. Note also that each\\n  time such-that retries, it will increase the size parameter.\\n\\n  Examples:\\n\\n      ;; generate non-empty vectors of integers\\n      ;; (note, gen/not-empty does exactly this)\\n      (gen/such-that not-empty (gen/vector gen/int))\\n\\n  You can customize `such-that` by passing an optional third argument, which can\\n  either be an integer representing the maximum number of times test.check\\n  will try to generate a value matching the predicate, or a map:\\n\\n      :max-tries  positive integer, the maximum number of tries (default 10)\\n      :ex-fn      a function of one arg that will be called if test.check cannot\\n                  generate a matching value; it will be passed a map with `:gen`,\\n                  `:pred`, and `:max-tries` and should return an exception\",\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^4S\",\"^1F\"],[\"^4S\",\"^1F\",\"^8?\"]]],\"^1@\",[\"^1A\",[[\"^4S\",\"^1F\"],[\"^4S\",\"^1F\",\"^8?\"]]],\"^1R\",[\"^1A\",[null,null]]]],\"^T\",\"~$clojure.test.check.generators/such-that\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",16,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^4S\",\"^1F\"],[\"^4S\",\"^1F\",\"^8?\"]]],\"^1@\",[\"^1A\",[[\"^4S\",\"^1F\"],[\"^4S\",\"^1F\",\"^8?\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^4S\",\"^1F\"],[\"^4S\",\"^1F\",\"^8?\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",419,\"^1=\",419,\"^1S\",3,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^4S\",\"^1F\"],[\"^4S\",\"^1F\",\"^8?\"]]],\"^1M\",\"Create a generator that generates values from `gen` that satisfy predicate\\n  `pred`. Care is needed to ensure there is a high chance `gen` will satisfy\\n  `pred`. By default, `such-that` will try 10 times to generate a value that\\n  satisfies the predicate. If no value passes this predicate after this number\\n  of iterations, a runtime exception will be thrown. Note also that each\\n  time such-that retries, it will increase the size parameter.\\n\\n  Examples:\\n\\n      ;; generate non-empty vectors of integers\\n      ;; (note, gen/not-empty does exactly this)\\n      (gen/such-that not-empty (gen/vector gen/int))\\n\\n  You can customize `such-that` by passing an optional third argument, which can\\n  either be an integer representing the maximum number of times test.check\\n  will try to generate a value matching the predicate, or a map:\\n\\n      :max-tries  positive integer, the maximum number of tries (default 10)\\n      :ex-fn      a function of one arg that will be called if test.check cannot\\n                  generate a matching value; it will be passed a map with `:gen`,\\n                  `:pred`, and `:max-tries` and should return an exception\"],\"~$shrink-int\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",203,\"^1<\",8,\"^1=\",203,\"^1>\",18,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$integer\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/shrink-int\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",18,\"^1P\",[\"^1A\",[[\"^8B\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",203,\"^1=\",203,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^8B\"]]]]]],\"~$random-pseudofactoring\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1495,\"^1<\",19,\"^1=\",1495,\"^1>\",41,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$n\",\"^1G\"]]]]],\"^1M\",\"Returns (not generates) a random collection of integers `xs`\\n  greater than 1 such that (<= (apply * xs) n).\"],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/random-pseudofactoring\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",41,\"^1P\",[\"^1A\",[[\"~$n\",\"^1G\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",3,\"^1;\",1495,\"^1=\",1495,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$n\",\"^1G\"]]]]],\"^1M\",\"Returns (not generates) a random collection of integers `xs`\\n  greater than 1 such that (<= (apply * xs) n).\"],\"~$vector-distinct-by\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1Z\",\"0.9.0\",\"^1:\",\"^U\",\"^1>\",25,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1<\",7,\"^1;\",823,\"^1=\",823,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]]]],\"^1M\",\"Generates a vector of elements from the given generator, with the\\n  guarantee that (map key-fn the-vector) will be distinct.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated vectors\\n    :min-elements  the min size of generated vectors\\n    :max-elements  the max size of generated vectors\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"^1Z\",\"0.9.0\",\"^T\",\"~$clojure.test.check.generators/vector-distinct-by\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",25,\"^22\",[\"^ \",\"^1O\",false,\"^1S\",3,\"^1P\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1@\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1R\",[\"^1A\",[null,null]]],\"^1P\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",823,\"^1=\",823,\"^1S\",3,\"^1T\",true,\"^1@\",[\"^1A\",[[\"^1D\",\"^1F\"],[\"^1D\",\"^1F\",\"^23\"]]],\"^1M\",\"Generates a vector of elements from the given generator, with the\\n  guarantee that (map key-fn the-vector) will be distinct.\\n\\n  If the generator cannot or is unlikely to produce enough distinct\\n  elements, this generator will fail in the same way as `such-that`.\\n\\n  Available options:\\n\\n    :num-elements  the fixed size of generated vectors\\n    :min-elements  the min size of generated vectors\\n    :max-elements  the max size of generated vectors\\n    :max-tries     the number of times the generator will be tried before\\n                   failing when it does not produce distinct elements\\n                   (default 10)\\n    :ex-fn         a function of one arg that will be called if test.check cannot\\n                   generate enough distinct values; it will be passed a map with\\n                   `:gen`, `:num-elements`, and `:max-tries` and should return an\\n                   exception\"],\"~$swap\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",590,\"^1<\",8,\"^1=\",590,\"^1>\",12,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3A\",[\"~$i1\",\"~$i2\"]]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/swap\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",12,\"^1P\",[\"^1A\",[[\"^3A\",\"~$p__191\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",590,\"^1=\",590,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^3A\",[\"^8I\",\"^8J\"]]]]]]],\"~$size->max-leaf-count\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1487,\"^1<\",17,\"^1=\",1487,\"^1>\",37,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1H\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/size->max-leaf-count\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",37,\"^1P\",[\"^1A\",[[\"^1H\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",1487,\"^1=\",1487,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1H\"]]]]]],\"~$int-rose-tree\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",207,\"^1<\",8,\"^1=\",207,\"^1>\",21,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^4=\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/int-rose-tree\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",21,\"^1P\",[\"^1A\",[[\"^4=\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",207,\"^1=\",207,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^4=\"]]]]]],\"~$fmap\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",91,\"^1<\",7,\"^1=\",91,\"^1>\",11,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$f\",\"^1F\"]]]]],\"^1M\",\"Returns a generator like `gen` but with values transformed by `f`.\\n  E.g.:\\n\\n      (gen/sample (gen/fmap str gen/nat))\\n      => (\\\"0\\\" \\\"1\\\" \\\"0\\\" \\\"1\\\" \\\"4\\\" \\\"3\\\" \\\"6\\\" \\\"6\\\" \\\"4\\\" \\\"2\\\")\\n\\n  Also see gen/let for a macro with similar functionality.\"],\"^T\",\"~$clojure.test.check.generators/fmap\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",11,\"^1P\",[\"^1A\",[[\"~$f\",\"^1F\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",91,\"^1=\",91,\"^1S\",2,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$f\",\"^1F\"]]]]],\"^1M\",\"Returns a generator like `gen` but with values transformed by `f`.\\n  E.g.:\\n\\n      (gen/sample (gen/fmap str gen/nat))\\n      => (\\\"0\\\" \\\"1\\\" \\\"0\\\" \\\"1\\\" \\\"4\\\" \\\"3\\\" \\\"6\\\" \\\"6\\\" \\\"4\\\" \\\"2\\\")\\n\\n  Also see gen/let for a macro with similar functionality.\"],\"~$MAX_INTEGER\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",955,\"^1<\",16,\"^1=\",955,\"^1>\",27,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/MAX_INTEGER\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",27,\"^1<\",1,\"^1;\",955,\"^1=\",955,\"^20\",\"^2G\"],\"~$->Generator\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",26,\"^1<\",12,\"^1=\",26,\"^1>\",21,\"^5O\",true,\"^6P\",\"~:positional\",\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"]]]]]],\"^T\",\"~$clojure.test.check.generators/->Generator\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",21,\"^1P\",[\"^1A\",[[\"^1F\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^5O\",true,\"^6P\",\"^8V\",\"^1;\",26,\"^1=\",26,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"]]]]]],\"~$no-shrink\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",480,\"^1<\",7,\"^1=\",480,\"^1>\",16,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"]]]]],\"^1M\",\"Create a new generator that is just like `gen`, except does not shrink\\n  at all. This can be useful when shrinking is taking a long time or is not\\n  applicable to the domain.\"],\"^T\",\"~$clojure.test.check.generators/no-shrink\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",16,\"^1P\",[\"^1A\",[[\"^1F\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",480,\"^1=\",480,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"^1F\"]]]]],\"^1M\",\"Create a new generator that is just like `gen`, except does not shrink\\n  at all. This can be useful when shrinking is taking a long time or is not\\n  applicable to the domain.\"],\"~$char-ascii\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1265,\"^1<\",6,\"^1=\",1265,\"^1>\",16],\"^T\",\"~$clojure.test.check.generators/char-ascii\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",16,\"^1<\",1,\"^1;\",1265,\"^1=\",1265,\"^20\",\"^21\",\"^1M\",\"Generate only ascii character.\"],\"~$keyword-segment-first\",[\"^ \",\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1355,\"^1<\",16,\"^1=\",1355,\"^1>\",37,\"^1?\",true],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/keyword-segment-first\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",37,\"^1<\",1,\"^1;\",1355,\"^1=\",1355,\"^20\",\"^21\",\"^1M\",\"Generate segments of a keyword that can be first (between \\\\:)\"],\"~$simple-type-printable\",[\"^ \",\"^T\",\"~$clojure.test.check.generators/simple-type-printable\",\"^1:\",\"clojure/test/check/generators.cljc\",\"^1;\",1458,\"^1<\",1,\"^1=\",1458,\"^1>\",27,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",1458,\"^1<\",6,\"^1=\",1458,\"^1>\",27],\"^20\",\"^21\"],\"~$halfs\",[\"^ \",\"^18\",null,\"^19\",[\"^ \",\"^1:\",\"^U\",\"^1;\",199,\"^1<\",8,\"^1=\",199,\"^1>\",13,\"^1?\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$n\"]]]]]],\"^1?\",true,\"^T\",\"~$clojure.test.check.generators/halfs\",\"^1O\",false,\"^1:\",\"clojure/test/check/generators.cljc\",\"^1>\",13,\"^1P\",[\"^1A\",[[\"~$n\"]]],\"^1Q\",null,\"^1R\",[\"^1A\",[null,null]],\"^1<\",1,\"^1;\",199,\"^1=\",199,\"^1S\",1,\"^1T\",true,\"^1@\",[\"^1A\",[\"^1B\",[\"^1A\",[[\"~$n\"]]]]]]],\"~:require-macros\",[\"^ \",\"^14\",\"^10\",\"^10\",\"^10\"],\"~:cljs.analyzer/constants\",[\"^ \",\"~:seen\",[\"^?\",[\"~:max-tries\",\"~:min\",\"^45\",\"~:max-tries-or-opts\",\"~:pred\",\"~:else\",\"^1W\",\"~$do\",\"^1F\",\"^3;\",\"~$if\",\"~:infinite?\",\"~$cljs.core/let\",\"^3S\",\"~:arg\",\"~:max\",\"~$/\",\"~$cljs.core/fn\",\"^4I\",\"~$val__41__auto__\",\"~:max-elements\",\"~:ex-fn\",\"^6K\",\"~:num-elements\",\"~:min-elements\",\"~:NaN?\"]],\"~:order\",[\"^1W\",\"^1F\",\"^9G\",\"^99\",\"^9<\",\"^9=\",\"^9;\",\"^9H\",\"^9I\",\"^9F\",\"^9:\",\"^9C\",\"^9@\",\"^9J\",\"~$/\",\"^9A\",\"^9E\",\"^9>\",\"^9?\",\"^45\",\"^4I\",\"^3;\",\"^9D\",\"^3S\",\"^6K\",\"^9B\"]],\"^1M\",null]"}